<template>
  <div class="center-flex-box">
    <div class="card-box" style="width: 300px">
      <div class="box-title">报表信息</div>

      <div class="box-content">
        <div class="card">
          <div class="card-item">
            <div class="label">时间:</div>
            <div class="text">{{ headVersion.createTime }}</div>
          </div>
          <div class="card-item">
            <div class="label">报告类型：</div>
            <div class="text">{{ headVersion.reportFormName }}</div>
          </div>
          <div class="card-item">
            <div class="label">报表模板：</div>
            <div class="text">{{ headVersion.businessType }}</div>
          </div>
          <div class="card-item">
            <div class="label">席位：</div>
            <div class="text">{{ headVersion.sysOrgCodeName }}</div>
          </div>
        </div>
      </div>
    </div>

    <div class="card-box" style="flex: 1; padding-left: 20px">
      <div class="box-title">数据展示</div>
      <div class="box-content">
        <div>
          <div v-if="headVersion.reportFormType != 'DutyData'">
            <a-table
              ref="table"
              size="default"
              :columns="columns"
              :dataSource="dataSource"
            >
            </a-table>
          </div>

          <div v-if="headVersion.reportFormType == 'DutyData'">
            <a-tabs>
              <a-tab-pane v-for="tab in tabs" :key="tab.key" :tab="tab.title">
                <a-table
                  ref="table"
                  size="default"
                  :columns="tab.columns"
                  :dataSource="tab.dataSource"
                  :pagination="false"
                >
                </a-table>
              </a-tab-pane>
            </a-tabs>
          </div>

          <div class="tbottom">
            <div class="bi">协调席：马化腾</div>
            <div class="bi">海上席：张一鸣</div>
            <div class="bi">防空席：李彦宏</div>
            <div class="bi">陆上席：马云</div>
            <div class="bi">防务席：黄峥</div>
            <div class="bi">防务席：黄兴</div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import STable from "@/components/table/";
import { getAction } from "@/api/manage";
import { JVXETypes } from "@comp/jeecg/JVxeTable";

export default {
  name: "cblbdetail",
  components: {
    STable,
  },
  data() {
    return {
      id: this.$route.params.id,
      indexStyle: 1,
      istable: true,
      columns: [],
      columnss: [],
      tabs: [],
      url: {
        list: "/reportFormModel/queryReportFormData",
        details: "/reportFormModel/queryReportFormData",
        structure: "/southTable/queryTableStructure", //结构
      },
      dataSource: [],
      headVersion: {},
    };
  },
  created() {
    this.getDeptHeadDetails();
  },
  mounted() {},
  methods: {
    //  版本详情
    getDeptHeadDetails() {
      getAction(this.url.details + "?id=" + this.id, {}).then((res) => {
        if (res.code == 200) {
          this.dataSource = res.result.data;
          this.headVersion = res.result.headVersion;
          this.getStructure();
        } else {
          this.$message.error(res.message);
        }
      });
    },
    // 查询结构（table的头部）
    getStructure() {
      // 封装查询条件
      let formData = {
        reportFromType: this.headVersion.reportFormType,
        templateType: this.headVersion.businessTypeId,
      };
      // 调用查询数据接口
      this.loading = true;
      getAction(this.url.structure, formData)
        .then((res) => {
          if (res.success) {
            if (formData.reportFromType != "DutyData") {
              var result = res.result;
              // 将查询的数据赋值给 dataSource
              var arr = [];
              for (var i = 0; i < result.length; i++) {
                if (result[i].isShowForm == 1) {
                  arr.push({
                    dataIndex: result[i].dbFieldName,
                    title: result[i].dbFieldTxt,
                  });
                }
              }
              this.jdemoshow = true;
              this.columns = arr;
              this.columnss = [];
            } else {
              //执勤数据
              var result = res.result;
              var columns = [];
              for (var i = 0; i < result.length; i++) {
                var arr = [];
                var obj = {
                  name: result[i].sheetName,
                  dataSource: [],
                };
                var results = result[i].fields;
                for (var j = 0; j < results.length; j++) {
                  if (results[j].isShowForm == 1) {
                    arr.push({
                      dataIndex: results[j].dbFieldName,
                      title: results[j].dbFieldTxt,
                    });
                  }
                }
                obj.columns = arr;
                columns.push(obj);
                this.tabs.push({
                  title: result[i].sheetName,
                  columns: arr,
                  dataSource: this.dataSource[i],
                  key: i,
                });
              }
              this.columnss = columns;
              this.jdemoshow = false;
            }
          } else {
            this.$error({ title: "主表查询失败", content: res.message });
          }
        })
        .finally(() => {
          // 这里是无论成功或失败都会执行的方法，在这里关闭loading
          this.loading = false;
        });
    },
  },
  watch: {
    "$route.params.id": function (newVal, oldVal) {
      if (typeof newVal != "undefined") {
        this.getDeptHeadDetails();
      }
    },
  },
};
</script>
<style lang="less" scoped>
.center-flex-box {
  display: flex;
  height: calc(100vh - 160px);
  justify-content: space-between;
  .card-box {
    height: 100%;
    box-sizing: border-box;
    background: #fff;
    overflow-y: auto;
    border: 1px solid #ddd;
  }
}
.box-title {
  background: rgba(0, 121, 254, 1);
  line-height: 2.6rem;
  color: #fff;
  font-size: 1.2rem;
  padding-left: 20px;
}
.box-content {
  padding: 1.3rem;
}
.card-item {
  display: flex;
  margin: 10px 0;
}
.card-item .label {
  width: 100px;
}
.tbottom {
  display: flex;
}
.bi {
  flex: 1;
  text-align: center;
}
</style>