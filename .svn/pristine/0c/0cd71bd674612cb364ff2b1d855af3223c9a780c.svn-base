<template>
  <a-card :bordered="false">
    <div class="table-page-search-wrapper">
      <a-form layout="inline" @keyup.enter.native="searchQuery">
        <a-row :gutter="48">
          <a-col :xl="5" :lg="6" :md="8" :sm="24">
            <a-form-item label="报表类型">
              <j-dict-select-tag
                @input="changeType"
                v-model="queryParam.reportFromType"
                :moren="false"
                placeholder="请选择采报类型"
                dictCode="ReportType"
              />
            </a-form-item>
          </a-col>

          <a-col :xl="5" :lg="6" :md="8" :sm="24">
            <a-form-item label="业务类型">
              <a-select
                @change="templateChange"
                v-model="queryParam.templateType"
                :disabled="istype"
                placeholder="请选择采报模型"
              >
                <a-select-option
                  :value="item.headId"
                  :key="index"
                  v-for="(item, index) in templateList"
                >
                  {{ item.headName }}
                </a-select-option>
              </a-select>
            </a-form-item>
          </a-col>

          <a-col :xl="5" :lg="6" :md="8" :sm="24">
            <a-form-item label="报表日期">
              <a-date-picker
                v-model="queryParam.reportTime"
                :valueFormat="format"
                style="width: 100%"
                placeholder="请输入更新日期"
              />
            </a-form-item>
          </a-col>
          <a-col :xl="4" :lg="6" :md="(!advanced && 8) || 24" :sm="24">
            <a-button type="primary" @click="searchQuery">查询</a-button>
          </a-col>
        </a-row>
      </a-form>
    </div>

    <div class="table-operator">
      <a-dropdown v-if="selectedRowKeys.length > 0">
        <a-menu slot="overlay">
          <a-menu-item key="1"><a-icon type="delete" />删除</a-menu-item>
          <!-- lock | unlock -->
          <a-menu-item key="2"><a-icon type="lock" />锁定</a-menu-item>
        </a-menu>
        <a-button style="margin-left: 8px">
          批量操作 <a-icon type="down" />
        </a-button>
      </a-dropdown>
    </div>

    <a-table
      ref="table"
      size="middle"
      rowKey="id"
      :columns="columns"
      :dataSource="dataSource"
      :pagination="ipagination"
      :loading="loading"
      :rowSelection="{
        selectedRowKeys: selectedRowKeys,
        onChange: onSelectChange,
      }"
      class="j-table-force-nowrap"
      @change="handleTableChange"
    >
      <template slot="htmlSlot" slot-scope="text">
        <div v-html="text"></div>
      </template>
      <template slot="imgSlot" slot-scope="text">
        <span v-if="!text" style="font-size: 12px; font-style: italic"
          >无图片</span
        >
        <img
          v-else
          :src="getImgView(text)"
          height="25px"
          alt=""
          style="max-width: 80px; font-size: 12px; font-style: italic"
        />
      </template>
      <template slot="fileSlot" slot-scope="text">
        <span v-if="!text" style="font-size: 12px; font-style: italic"
          >无文件</span
        >
        <a-button
          v-else
          :ghost="true"
          type="primary"
          icon="download"
          size="small"
          @click="uploadFile(text)"
        >
          下载
        </a-button>
      </template>

      <span slot="action" slot-scope="text, record">
        <!--        <a @click="handleEdit(record)">编辑</a>-->
        <a-popconfirm
          title="确定删除吗?"
          @confirm="() => handleDelete(record.id)"
        >
          <a>删除</a>
        </a-popconfirm>
        <a-divider type="vertical" />
        <a @click="look(record)">查看</a>
        <a-divider type="vertical" />
        <a href="javascript:;">导出</a>
      </span>
    </a-table>

    <a-modal title="操作" :width="800" v-model="visible" @ok="handleOk">
      <a-form
        :autoFormCreate="
          (form) => {
            this.form = form;
          }
        "
      >
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="规则编号"
          hasFeedback
          validateStatus="success"
        >
          <a-input placeholder="规则编号" v-model="mdl.no" id="no" />
        </a-form-item>

        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="服务调用次数"
          hasFeedback
          validateStatus="success"
        >
          <a-input-number
            :min="1"
            id="callNo"
            v-model="mdl.callNo"
            style="width: 100%"
          />
        </a-form-item>

        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="状态"
          hasFeedback
          validateStatus="warning"
        >
          <a-select defaultValue="1" v-model="mdl.status">
            <a-select-option value="1">Option 1</a-select-option>
            <a-select-option value="2">Option 2</a-select-option>
            <a-select-option value="3">Option 3</a-select-option>
          </a-select>
        </a-form-item>

        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="描述"
          hasFeedback
          help="请填写一段描述"
        >
          <a-textarea
            :rows="5"
            v-model="mdl.description"
            placeholder="..."
            id="description"
          />
        </a-form-item>

        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="更新时间"
          hasFeedback
          validateStatus="error"
        >
          <a-date-picker
            style="width: 100%"
            showTime
            format="YYYY-MM-DD HH:mm:ss"
            placeholder="Select Time"
          />
        </a-form-item>
      </a-form>
    </a-modal>

    <a-modal
      title="新建规则"
      destroyOnClose
      :visible="visibleCreateModal"
      @ok="handleCreateModalOk"
      @cancel="handleCreateModalCancel"
    >
      <!---->
      <a-form
        style="margin-top: 8px"
        :autoFormCreate="
          (form) => {
            this.createForm = form;
          }
        "
      >
        <a-form-item
          :labelCol="{ span: 5 }"
          :wrapperCol="{ span: 15 }"
          label="描述"
          fieldDecoratorId="description"
          :fieldDecoratorOptions="{
            rules: [
              {
                required: true,
                message: '请输入至少五个字符的规则描述！',
                min: 5,
              },
            ],
          }"
        >
          <a-input placeholder="请输入" />
        </a-form-item>
      </a-form>
    </a-modal>
  </a-card>
</template>

<script>
import STable from "@/components/table/";
import ATextarea from "ant-design-vue/es/input/TextArea";
import AInput from "ant-design-vue/es/input/Input";
import { JeecgListMixin } from "@/mixins/JeecgListMixin";
import { mixinDevice } from "@/utils/mixin";
import moment from "moment";
import axios from "axios";
import JDictSelectTag from "@/components/dict/JDictSelectTag.vue";
import { getAction, getRoleList, getServiceList } from "@/api/manage";
var date = new Date();
var seperator1 = "-";
var year = date.getFullYear();
var month = date.getMonth() + 1;
var strDate = date.getDate();
if (month >= 1 && month <= 9) {
  month = "0" + month;
}
if (strDate >= 0 && strDate <= 9) {
  strDate = "0" + strDate;
}
var currentdate = year + seperator1 + month + seperator1 + strDate;
export default {
  name: "cblb",
  components: {
    AInput,
    ATextarea,
    STable,
    JDictSelectTag,
  },
  mixins: [JeecgListMixin, mixinDevice],
  data() {
    return {
      format: "YYYY-MM-DD",
      queryParam: {
        reportTime: currentdate,
      },
      // 采包模板
      istype: true,
      templateList: [],
      visibleCreateModal: false,
      visible: false,
      labelCol: {
        xs: { span: 24 },
        sm: { span: 5 },
      },
      wrapperCol: {
        xs: { span: 24 },
        sm: { span: 12 },
      },
      form: null,
      mdl: {},
      url: {
        list: "/reportFormModel/queryReportFormList", //数据
        structure: "/southTable/queryTableStructure", //结构
        delete: "/reportFormModel/deleteDeptHead",
        deleteBatch: "/reportFormModel/deleteDeptHeadBatch",
        exportXlsUrl: "/reportFormModel/exportXls",
        details: "/reportFormModel/queryReportFormData",
        templateUrl: "/reportFormModel/queryAllModel",
        userInfo: "/southTable/queryUserInfo", //基本信息
      },
      // 高级搜索 展开/关闭
      advanced: true,
      // 查询参数
      // 表头
      columns: [
        {
          title: "报告编号",
          dataIndex: "reportNumber",
          align: "center",
          width: "200px",
        },
        {
          title: "席位",
          dataIndex: "sysOrgCodeName",
          align: "center",
          width: "200px",
        },
        {
          title: "报表时间",
          dataIndex: "createTime",
          align: "center",
          width: "200px",
        },
        {
          title: "报告类型",
          dataIndex: "reportFormName",
          align: "center",
          width: "200px",
        },
        {
          title: "业务类型",
          dataIndex: "businessType",
          align: "center",
          width: "200px",
        },
        {
          title: "操作",
          dataIndex: "action",
          width: "250px",
          scopedSlots: { customRender: "action" },
        },
      ],
      selectedRowKeys: [],
      selectedRows: [],
    };
  },
  created() {
    getRoleList({ t: new Date() });
    this.getTemplateList();
  },
  methods: {
    // 获取模板类型
    getTemplateList() {
      var formData = {};
      getAction(this.url.templateUrl, formData)
        .then((res) => {
          if (res.success) {
            // 将查询的数据赋值给 dataSource
            this.templateList = res.result;
            // 重置选择
          } else {
            this.$error({ title: "主表查询失败", content: res.message });
          }
        })
        .finally(() => {
          // 这里是无论成功或失败都会执行的方法，在这里关闭loading
          this.loading = false;
        });
      getAction(this.url.userInfo, formData)
        .then((res) => {
          if (res.success) {
            // 将查询的数据赋值给 dataSource
            this.userInfo = res.result;
            // 重置选择
          } else {
            this.$error({ title: "主表查询失败", content: res.message });
          }
        })
        .finally(() => {
          // 这里是无论成功或失败都会执行的方法，在这里关闭loading
          this.loading = false;
        });
    },
    // 报表类型选择
    changeType(e) {
      console.log(e);
      if (e == "DutyData") {
        this.istype = false;
        this.queryParam.templateType = this.templateList[0].headId;
      } else {
        this.istype = true;
        this.queryParam.templateType = "";
      }
    },
    // 业务类型选择
    templateChange(e) {
      console.log(e);
      this.queryParam.templateType = e;
    },
    // 查看
    look(records) {
      this.$router.push(`/zbtest/cblbdetail/` + records.id);
    },
    handleEdit(record) {
      this.mdl = Object.assign({}, record);
      console.log(this.mdl);
      this.visible = true;
    },
    handleOk() {},

    //添加逻辑
    handleModalVisible(isVisible) {
      this.visibleCreateModal = isVisible;
    },
    handleCreateModalOk() {
      this.createForm.validateFields((err, fieldsValue) => {
        if (err) {
          return;
        }
        const description = this.createForm.getFieldValue("description");
        axios
          .post("/saveRule", {
            desc: description,
          })
          .then((res) => {
            this.createForm.resetFields();
            this.visibleCreateModal = false;
            this.loadRuleData();
          });
      });
    },
    handleCreateModalCancel() {
      this.visibleCreateModal = false;
    },

    onChange(row) {
      this.selectedRowKeys = row.selectedRowKeys;
      this.selectedRows = row.selectedRows;

      console.log(this.$refs.table);
    },
    toggleAdvanced() {
      this.advanced = !this.advanced;
    },

    resetSearchForm() {
      this.queryParam = {
        date: moment(new Date()),
      };
    },
  },
  watch: {
    /*
    'selectedRows': function (selectedRows) {
      this.needTotalList = this.needTotalList.map(item => {
        return {
          ...item,
          total: selectedRows.reduce( (sum, val) => {
            return sum + val[item.dataIndex]
          }, 0)
        }
      })
    }
    */
  },
};
</script>