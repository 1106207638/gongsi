{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\jeecgbiz\\JSelectBizComponent\\JSelectBizComponentModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\jeecgbiz\\JSelectBizComponent\\JSelectBizComponentModal.vue","mtime":1615948815780},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["JSelectBizComponentModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <j-modal\r\n    centered\r\n    :title=\"name + '选择'\"\r\n    :width=\"width\"\r\n    :visible=\"visible\"\r\n    switchFullscreen\r\n    @ok=\"handleOk\"\r\n    @cancel=\"close\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-row :gutter=\"18\">\r\n      <a-col :span=\"16\">\r\n        <!-- 查询区域 -->\r\n        <a-form layout=\"inline\" class=\"j-inline-form\">\r\n          <!-- 固定条件 -->\r\n          <a-form-item :label=\"(queryParamText||name)\">\r\n            <j-input v-model=\"queryParam[queryParamCode||valueKey]\" :placeholder=\"'请输入' + (queryParamText||name)\" @pressEnter=\"searchQuery\"/>\r\n          </a-form-item>\r\n          <!-- 动态生成的查询条件 -->\r\n          <j-select-biz-query-item v-if=\"queryConfig.length>0\" v-show=\"showMoreQueryItems\" :queryParam=\"queryParam\" :queryConfig=\"queryConfig\" @pressEnter=\"searchQuery\"/>\r\n          <!-- 按钮 -->\r\n          <a-button type=\"primary\" @click=\"searchQuery\" icon=\"search\">查询</a-button>\r\n          <a-button type=\"primary\" @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\r\n          <a v-if=\"queryConfig.length>0\" @click=\"showMoreQueryItems=!showMoreQueryItems\" style=\"margin-left: 8px\">\r\n            {{ showMoreQueryItems ? '收起' : '展开' }}\r\n            <a-icon :type=\"showMoreQueryItems ? 'up' : 'down'\"/>\r\n          </a>\r\n        </a-form>\r\n\r\n        <a-table\r\n          size=\"middle\"\r\n          bordered\r\n          :rowKey=\"rowKey\"\r\n          :columns=\"innerColumns\"\r\n          :dataSource=\"dataSource\"\r\n          :pagination=\"ipagination\"\r\n          :loading=\"loading\"\r\n          :scroll=\"{ y: 240 }\"\r\n          :rowSelection=\"{selectedRowKeys, onChange: onSelectChange, type: multiple ? 'checkbox':'radio'}\"\r\n          :customRow=\"customRowFn\"\r\n          @change=\"handleTableChange\">\r\n        </a-table>\r\n\r\n      </a-col>\r\n      <a-col :span=\"8\">\r\n        <a-card :title=\"'已选' + name\" :bordered=\"false\" :head-style=\"{padding:0}\" :body-style=\"{padding:0}\">\r\n\r\n          <a-table size=\"middle\" :rowKey=\"rowKey\" bordered v-bind=\"selectedTable\">\r\n              <span slot=\"action\" slot-scope=\"text, record, index\">\r\n                <a @click=\"handleDeleteSelected(record, index)\">删除</a>\r\n              </span>\r\n          </a-table>\r\n\r\n        </a-card>\r\n      </a-col>\r\n    </a-row>\r\n  </j-modal>\r\n</template>\r\n\r\n<script>\r\n  import { getAction } from '@/api/manage'\r\n  import Ellipsis from '@/components/Ellipsis'\r\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\r\n  import { cloneObject, pushIfNotExist } from '@/utils/util'\r\n  import JSelectBizQueryItem from './JSelectBizQueryItem'\r\n\r\n  export default {\r\n    name: 'JSelectBizComponentModal',\r\n    mixins: [JeecgListMixin],\r\n    components: {Ellipsis, JSelectBizQueryItem},\r\n    props: {\r\n      value: {\r\n        type: Array,\r\n        default: () => []\r\n      },\r\n      visible: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      valueKey: {\r\n        type: String,\r\n        required: true\r\n      },\r\n      multiple: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      width: {\r\n        type: Number,\r\n        default: 900\r\n      },\r\n\r\n      name: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      listUrl: {\r\n        type: String,\r\n        required: true,\r\n        default: ''\r\n      },\r\n      // 根据 value 获取显示文本的地址，例如存的是 username，可以通过该地址获取到 realname\r\n      valueUrl: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      displayKey: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      columns: {\r\n        type: Array,\r\n        required: true,\r\n        default: () => []\r\n      },\r\n      // 查询条件Code\r\n      queryParamCode: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      // 查询条件文字\r\n      queryParamText: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      // 查询配置\r\n      queryConfig: {\r\n        type: Array,\r\n        default: () => []\r\n      },\r\n      rowKey: {\r\n        type: String,\r\n        default: 'id'\r\n      },\r\n      // 过长裁剪长度，设置为 -1 代表不裁剪\r\n      ellipsisLength: {\r\n        type: Number,\r\n        default: 12\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        innerValue: [],\r\n        // 已选择列表\r\n        selectedTable: {\r\n          pagination: false,\r\n          scroll: { y: 240 },\r\n          columns: [\r\n            {\r\n              ...this.columns[0],\r\n              width: this.columns[0].widthRight || this.columns[0].width,\r\n            },\r\n            { title: '操作', dataIndex: 'action', align: 'center', width: 60, scopedSlots: { customRender: 'action' }, }\r\n          ],\r\n          dataSource: [],\r\n        },\r\n        renderEllipsis: (value) => (<ellipsis length={this.ellipsisLength}>{value}</ellipsis>),\r\n        url: { list: this.listUrl },\r\n        /* 分页参数 */\r\n        ipagination: {\r\n          current: 1,\r\n          pageSize: 5,\r\n          pageSizeOptions: ['5', '10', '20', '30'],\r\n          showTotal: (total, range) => {\r\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\r\n          },\r\n          showQuickJumper: true,\r\n          showSizeChanger: true,\r\n          total: 0\r\n        },\r\n        options: [],\r\n        dataSourceMap: {},\r\n        showMoreQueryItems: false,\r\n      }\r\n    },\r\n    computed: {\r\n      // 表头\r\n      innerColumns() {\r\n        let columns = cloneObject(this.columns)\r\n        columns.forEach(column => {\r\n          // 给所有的列加上过长裁剪\r\n          if (this.ellipsisLength !== -1) {\r\n            column.customRender = (text) => this.renderEllipsis(text)\r\n          }\r\n        })\r\n        return columns\r\n      },\r\n    },\r\n    watch: {\r\n      value: {\r\n        deep: true,\r\n        immediate: true,\r\n        handler(val) {\r\n          this.innerValue = cloneObject(val)\r\n          this.selectedRowKeys = []\r\n          this.valueWatchHandler(val)\r\n          this.queryOptionsByValue(val)\r\n        }\r\n      },\r\n      dataSource: {\r\n        deep: true,\r\n        handler(val) {\r\n          this.emitOptions(val)\r\n          this.valueWatchHandler(this.innerValue)\r\n        }\r\n      },\r\n      selectedRowKeys: {\r\n        immediate: true,\r\n        deep: true,\r\n        handler(val) {\r\n          //update--begin--autor:scott-----date:20200927------for：选取职务名称出现全选 #1753-----\r\n          if(this.innerValue){\r\n            this.innerValue.length=0;\r\n          }\r\n          //update--end--autor:scott-----date:20200927------for：选取职务名称出现全选 #1753-----\r\n          this.selectedTable.dataSource = val.map(key => {\r\n            for (let data of this.dataSource) {\r\n              if (data[this.rowKey] === key) {\r\n                pushIfNotExist(this.innerValue, data[this.valueKey])\r\n                return data\r\n              }\r\n            }\r\n            for (let data of this.selectedTable.dataSource) {\r\n              if (data[this.rowKey] === key) {\r\n                pushIfNotExist(this.innerValue, data[this.valueKey])\r\n                return data\r\n              }\r\n            }\r\n            console.warn('未找到选择的行信息，key：' + key)\r\n            return {}\r\n          })\r\n        },\r\n      }\r\n    },\r\n\r\n    methods: {\r\n\r\n      /** 关闭弹窗 */\r\n      close() {\r\n        this.$emit('update:visible', false)\r\n      },\r\n\r\n      valueWatchHandler(val) {\r\n        val.forEach(item => {\r\n          this.dataSource.concat(this.selectedTable.dataSource).forEach(data => {\r\n            if (data[this.valueKey] === item) {\r\n              pushIfNotExist(this.selectedRowKeys, data[this.rowKey])\r\n            }\r\n          })\r\n        })\r\n      },\r\n\r\n      queryOptionsByValue(value) {\r\n        if (!value || value.length === 0) {\r\n          return\r\n        }\r\n        // 判断options是否存在value，如果已存在数据就不再请求后台了\r\n        let notExist = false\r\n        for (let val of value) {\r\n          let find = false\r\n          for (let option of this.options) {\r\n            if (val === option.value) {\r\n              find = true\r\n              break\r\n            }\r\n          }\r\n          if (!find) {\r\n            notExist = true\r\n            break\r\n          }\r\n        }\r\n        if (!notExist) return\r\n        getAction(this.valueUrl || this.listUrl, {\r\n          // 这里最后加一个 , 的原因是因为无论如何都要使用 in 查询，防止后台进行了模糊匹配，导致查询结果不准确\r\n          [this.valueKey]: value.join(',') + ',',\r\n          pageNo: 1,\r\n          pageSize: value.length\r\n        }).then((res) => {\r\n          if (res.success) {\r\n            let dataSource = res.result\r\n            if (!(dataSource instanceof Array)) {\r\n              dataSource = res.result.records\r\n            }\r\n            this.emitOptions(dataSource, (data) => {\r\n              pushIfNotExist(this.innerValue, data[this.valueKey])\r\n              pushIfNotExist(this.selectedRowKeys, data[this.rowKey])\r\n              pushIfNotExist(this.selectedTable.dataSource, data, this.rowKey)\r\n            })\r\n          }\r\n        })\r\n      },\r\n\r\n      emitOptions(dataSource, callback) {\r\n        dataSource.forEach(data => {\r\n          let key = data[this.valueKey]\r\n          this.dataSourceMap[key] = data\r\n          pushIfNotExist(this.options, { label: data[this.displayKey || this.valueKey], value: key }, 'value')\r\n          typeof callback === 'function' ? callback(data) : ''\r\n        })\r\n        this.$emit('options', this.options, this.dataSourceMap)\r\n      },\r\n\r\n      /** 完成选择 */\r\n      handleOk() {\r\n        let value = this.selectedTable.dataSource.map(data => data[this.valueKey])\r\n        this.$emit('input', value)\r\n        this.close()\r\n      },\r\n      /** 删除已选择的 */\r\n      handleDeleteSelected(record, index) {\r\n        this.selectedRowKeys.splice(this.selectedRowKeys.indexOf(record[this.rowKey]), 1)\r\n        //update--begin--autor:wangshuai-----date:20200722------for：JSelectBizComponent组件切换页数值问题------\r\n        this.selectedTable.dataSource.splice(this.selectedTable.dataSource.indexOf(record), 1)\r\n        this.innerValue.splice(this.innerValue.indexOf(record[this.valueKey]), 1)\r\n        console.log(\"this.selectedRowKeys:\",this.selectedRowKeys)\r\n        console.log(\"this.selectedTable.dataSource:\",this.selectedTable.dataSource)\r\n        //update--begin--autor:wangshuai-----date:20200722------for：JSelectBizComponent组件切换页数值问题------\r\n      },\r\n\r\n      customRowFn(record) {\r\n        return {\r\n          on: {\r\n            click: () => {\r\n              let key = record[this.rowKey]\r\n              if (!this.multiple) {\r\n                this.selectedRowKeys = [key]\r\n                this.selectedTable.dataSource = [record]\r\n              } else {\r\n                let index = this.selectedRowKeys.indexOf(key)\r\n                if (index === -1) {\r\n                  this.selectedRowKeys.push(key)\r\n                  this.selectedTable.dataSource.push(record)\r\n                } else {\r\n                  this.handleDeleteSelected(record, index)\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"less\" scoped>\r\n  .full-form-item {\r\n    display: flex;\r\n    margin-right: 0;\r\n\r\n    /deep/ .ant-form-item-control-wrapper {\r\n      flex: 1 1;\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n  .j-inline-form {\r\n    /deep/ .ant-form-item {\r\n      margin-bottom: 12px;\r\n    }\r\n\r\n    /deep/ .ant-form-item-label {\r\n      line-height: 32px;\r\n      width: auto;\r\n    }\r\n\r\n    /deep/ .ant-form-item-control {\r\n      height: 32px;\r\n      line-height: 32px;\r\n    }\r\n  }\r\n</style>"],"sourceRoot":"src/components/jeecgbiz/JSelectBizComponent"}]}