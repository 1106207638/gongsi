{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\modules\\monitor\\SystemInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\modules\\monitor\\SystemInfo.vue","mtime":1615948820454},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICdAL2FwaS9tYW5hZ2UnOwptb21lbnQubG9jYWxlKCd6aC1jbicpOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpbWU6ICcnLAogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICB0YWJsZUxvYWRpbmc6IHRydWUsCiAgICAgIGNvbHVtbnM6IFt7CiAgICAgICAgdGl0bGU6ICflj4LmlbAnLAogICAgICAgIHdpZHRoOiAnMzAlJywKICAgICAgICBkYXRhSW5kZXg6ICdwYXJhbScsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsKICAgICAgICAgIGN1c3RvbVJlbmRlcjogJ3BhcmFtJwogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIHRpdGxlOiAn5o+P6L+wJywKICAgICAgICB3aWR0aDogJzQwJScsCiAgICAgICAgZGF0YUluZGV4OiAndGV4dCcsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsKICAgICAgICAgIGN1c3RvbVJlbmRlcjogJ3RleHQnCiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICflvZPliY3lgLwnLAogICAgICAgIHdpZHRoOiAnMzAlJywKICAgICAgICBkYXRhSW5kZXg6ICd2YWx1ZScsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsKICAgICAgICAgIGN1c3RvbVJlbmRlcjogJ3ZhbHVlJwogICAgICAgIH0KICAgICAgfV0sCiAgICAgIGRhdGFTb3VyY2U6IFtdLAogICAgICAvLyDliJfooajpgJrov4cgdGV4dEluZm8g5riy5p+T5Ye66aKc6Imy44CB5o+P6L+w5ZKM5Y2V5L2NCiAgICAgIHRleHRJbmZvOiB7CiAgICAgICAgJ3N5c3RlbS5jcHUuY291bnQnOiB7CiAgICAgICAgICBjb2xvcjogJ2dyZWVuJywKICAgICAgICAgIHRleHQ6ICdDUFUg5pWw6YePJywKICAgICAgICAgIHVuaXQ6ICfmoLgnCiAgICAgICAgfSwKICAgICAgICAnc3lzdGVtLmNwdS51c2FnZSc6IHsKICAgICAgICAgIGNvbG9yOiAnZ3JlZW4nLAogICAgICAgICAgdGV4dDogJ+ezu+e7nyBDUFUg5L2/55So546HJywKICAgICAgICAgIHVuaXQ6ICclJwogICAgICAgIH0sCiAgICAgICAgJ3Byb2Nlc3Muc3RhcnQudGltZSc6IHsKICAgICAgICAgIGNvbG9yOiAncHVycGxlJywKICAgICAgICAgIHRleHQ6ICflupTnlKjlkK/liqjml7bpl7TngrknLAogICAgICAgICAgdW5pdDogJycKICAgICAgICB9LAogICAgICAgICdwcm9jZXNzLnVwdGltZSc6IHsKICAgICAgICAgIGNvbG9yOiAncHVycGxlJywKICAgICAgICAgIHRleHQ6ICflupTnlKjlt7Lov5DooYzml7bpl7QnLAogICAgICAgICAgdW5pdDogJ+enkicKICAgICAgICB9LAogICAgICAgICdwcm9jZXNzLmNwdS51c2FnZSc6IHsKICAgICAgICAgIGNvbG9yOiAncHVycGxlJywKICAgICAgICAgIHRleHQ6ICflvZPliY3lupTnlKggQ1BVIOS9v+eUqOeOhycsCiAgICAgICAgICB1bml0OiAnJScKICAgICAgICB9CiAgICAgIH0sCiAgICAgIC8vIOW9k+S4gOadoeiusOW9leS4remcgOimgeWPluWHuuWkmuadoeaVsOaNrueahOaXtuWAmemcgOimgemFjee9ruivpeWtl+autQogICAgICBtb3JlSW5mbzoge30KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5sb2FkVG9tY2F0SW5mbygpOwogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlQ2xpY2tVcGRhdGU6IGZ1bmN0aW9uIGhhbmRsZUNsaWNrVXBkYXRlKCkgewogICAgICB0aGlzLmxvYWRUb21jYXRJbmZvKCk7CiAgICB9LAogICAgbG9hZFRvbWNhdEluZm86IGZ1bmN0aW9uIGxvYWRUb21jYXRJbmZvKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy50YWJsZUxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLnRpbWUgPSBtb21lbnQoKS5mb3JtYXQoJ1lZWVnlubRNTeaciERE5pelIEhI5pe2bW3liIZzc+enkicpOwogICAgICBQcm9taXNlLmFsbChbZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL3N5c3RlbS5jcHUuY291bnQnKSwgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL3N5c3RlbS5jcHUudXNhZ2UnKSwgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL3Byb2Nlc3Muc3RhcnQudGltZScpLCBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvcHJvY2Vzcy51cHRpbWUnKSwgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL3Byb2Nlc3MuY3B1LnVzYWdlJyldKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgaW5mbyA9IFtdOwogICAgICAgIHJlcy5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwgaWQpIHsKICAgICAgICAgIHZhciBtb3JlID0gX3RoaXMubW9yZUluZm9bdmFsdWUubmFtZV07CgogICAgICAgICAgaWYgKCEobW9yZSBpbnN0YW5jZW9mIEFycmF5KSkgewogICAgICAgICAgICBtb3JlID0gWycnXTsKICAgICAgICAgIH0KCiAgICAgICAgICBtb3JlLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0sIGlkeCkgewogICAgICAgICAgICB2YXIgcGFyYW0gPSB2YWx1ZS5uYW1lICsgaXRlbTsKICAgICAgICAgICAgdmFyIHZhbCA9IHZhbHVlLm1lYXN1cmVtZW50c1tpZHhdLnZhbHVlOwoKICAgICAgICAgICAgaWYgKHBhcmFtID09PSAnc3lzdGVtLmNwdS51c2FnZScgfHwgcGFyYW0gPT09ICdwcm9jZXNzLmNwdS51c2FnZScpIHsKICAgICAgICAgICAgICB2YWwgPSBfdGhpcy5jb252ZXJ0KHZhbCwgTnVtYmVyKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHBhcmFtID09PSAncHJvY2Vzcy5zdGFydC50aW1lJykgewogICAgICAgICAgICAgIHZhbCA9IF90aGlzLmNvbnZlcnQodmFsLCBEYXRlKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaW5mby5wdXNoKHsKICAgICAgICAgICAgICBpZDogcGFyYW0gKyBpZCwKICAgICAgICAgICAgICBwYXJhbTogcGFyYW0sCiAgICAgICAgICAgICAgdGV4dDogJ2ZhbHNlIHZhbHVlJywKICAgICAgICAgICAgICB2YWx1ZTogdmFsCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgICAgX3RoaXMuZGF0YVNvdXJjZSA9IGluZm87CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlKTsKCiAgICAgICAgX3RoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluacjeWKoeWZqOS/oeaBr+Wksei0pScpOwogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgX3RoaXMudGFibGVMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGNvbnZlcnQ6IGZ1bmN0aW9uIGNvbnZlcnQodmFsdWUsIHR5cGUpIHsKICAgICAgaWYgKHR5cGUgPT09IE51bWJlcikgewogICAgICAgIHJldHVybiBOdW1iZXIodmFsdWUgKiAxMDApLnRvRml4ZWQoMik7CiAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gRGF0ZSkgewogICAgICAgIHJldHVybiBtb21lbnQodmFsdWUgKiAxMDAwKS5mb3JtYXQoJ1lZWVktTU0tREQgSEg6bW06c3MnKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHZhbHVlOwogICAgfQogIH0KfTs="},{"version":3,"sources":["SystemInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-skeleton active :loading=\"loading\" :paragraph=\"{rows: 17}\">\r\n    <a-card :bordered=\"false\">\r\n\r\n      <a-alert type=\"info\" :showIcon=\"true\">\r\n        <div slot=\"message\">\r\n          上次更新时间：{{ this.time }}\r\n          <a-divider type=\"vertical\"/>\r\n          <a @click=\"handleClickUpdate\">立即更新</a>\r\n        </div>\r\n      </a-alert>\r\n\r\n      <a-table\r\n        rowKey=\"id\"\r\n        size=\"middle\"\r\n        :columns=\"columns\"\r\n        :dataSource=\"dataSource\"\r\n        :pagination=\"false\"\r\n        :loading=\"tableLoading\"\r\n        style=\"margin-top: 20px;\">\r\n\r\n        <template slot=\"param\" slot-scope=\"text, record\">\r\n          <a-tag :color=\"textInfo[record.param].color\">{{ text }}</a-tag>\r\n        </template>\r\n\r\n        <template slot=\"text\" slot-scope=\"text, record\">\r\n          {{ textInfo[record.param].text }}\r\n        </template>\r\n\r\n        <template slot=\"value\" slot-scope=\"text, record\">\r\n          {{ text }} {{ textInfo[record.param].unit }}\r\n        </template>\r\n\r\n      </a-table>\r\n    </a-card>\r\n  </a-skeleton>\r\n</template>\r\n<script>\r\n  import moment from 'moment'\r\n  import { getAction } from '@/api/manage'\r\n\r\n  moment.locale('zh-cn')\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        time: '',\r\n        loading: true,\r\n        tableLoading: true,\r\n        columns: [{\r\n          title: '参数',\r\n          width: '30%',\r\n          dataIndex: 'param',\r\n          scopedSlots: { customRender: 'param' }\r\n        }, {\r\n          title: '描述',\r\n          width: '40%',\r\n          dataIndex: 'text',\r\n          scopedSlots: { customRender: 'text' }\r\n        }, {\r\n          title: '当前值',\r\n          width: '30%',\r\n          dataIndex: 'value',\r\n          scopedSlots: { customRender: 'value' }\r\n        }],\r\n        dataSource: [],\r\n        // 列表通过 textInfo 渲染出颜色、描述和单位\r\n        textInfo: {\r\n          'system.cpu.count': { color: 'green', text: 'CPU 数量', unit: '核' },\r\n          'system.cpu.usage': { color: 'green', text: '系统 CPU 使用率', unit: '%' },\r\n          'process.start.time': { color: 'purple', text: '应用启动时间点', unit: '' },\r\n          'process.uptime': { color: 'purple', text: '应用已运行时间', unit: '秒' },\r\n          'process.cpu.usage': { color: 'purple', text: '当前应用 CPU 使用率', unit: '%' }\r\n        },\r\n        // 当一条记录中需要取出多条数据的时候需要配置该字段\r\n        moreInfo: {}\r\n      }\r\n    },\r\n    mounted() {\r\n      this.loadTomcatInfo()\r\n    },\r\n    methods: {\r\n\r\n      handleClickUpdate() {\r\n        this.loadTomcatInfo()\r\n      },\r\n\r\n      loadTomcatInfo() {\r\n        this.tableLoading = true\r\n        this.time = moment().format('YYYY年MM月DD日 HH时mm分ss秒')\r\n        Promise.all([\r\n          getAction('actuator/metrics/system.cpu.count'),\r\n          getAction('actuator/metrics/system.cpu.usage'),\r\n          getAction('actuator/metrics/process.start.time'),\r\n          getAction('actuator/metrics/process.uptime'),\r\n          getAction('actuator/metrics/process.cpu.usage')\r\n        ]).then((res) => {\r\n          let info = []\r\n          res.forEach((value, id) => {\r\n            let more = this.moreInfo[value.name]\r\n            if (!(more instanceof Array)) {\r\n              more = ['']\r\n            }\r\n            more.forEach((item, idx) => {\r\n              let param = value.name + item\r\n              let val = value.measurements[idx].value\r\n              if (param === 'system.cpu.usage' || param === 'process.cpu.usage') {\r\n                val = this.convert(val, Number)\r\n              }\r\n              if (param === 'process.start.time') {\r\n                val = this.convert(val, Date)\r\n              }\r\n              info.push({ id: param + id, param, text: 'false value', value: val })\r\n            })\r\n          })\r\n          this.dataSource = info\r\n        }).catch((e) => {\r\n          console.error(e)\r\n          this.$message.error('获取服务器信息失败')\r\n        }).finally(() => {\r\n          this.loading = false\r\n          this.tableLoading = false\r\n        })\r\n      },\r\n\r\n      convert(value, type) {\r\n        if (type === Number) {\r\n          return Number(value * 100).toFixed(2)\r\n        } else if (type === Date) {\r\n          return moment(value * 1000).format('YYYY-MM-DD HH:mm:ss')\r\n        }\r\n        return value\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style></style>\r\n"],"sourceRoot":"src/views/modules/monitor"}]}