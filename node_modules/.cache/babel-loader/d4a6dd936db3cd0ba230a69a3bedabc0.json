{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\src\\utils\\encryption\\aesEncrypt.js","dependencies":[{"path":"D:\\vue\\src\\utils\\encryption\\aesEncrypt.js","mtime":1615948817517},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/vue/src/utils/encryption/aesEncrypt.js"],"names":["getAction","ENCRYPTED_STRING","Vue","getEncryptedString","then","res","encryptedString","key","result","iv","ls","set","encryption","word","keyStr","ivStr","CryptoJS","enc","Utf8","parse","srcs","encrypted","AES","encrypt","mode","CBC","padding","pad","ZeroPadding","Base64","stringify","ciphertext","Math","undefined","create","Object","F","obj","subtype","prototype","C","C_lib","lib","Base","extend","overrides","mixIn","hasOwnProperty","init","$super","apply","arguments","instance","properties","propertyName","toString","clone","WordArray","words","sigBytes","length","encoder","Hex","concat","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","i","thatByte","ceil","call","slice","random","nBytes","r","m_w","m_z","mask","rcache","_r","push","C_enc","hexChars","bite","join","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","decodeURIComponent","escape","e","Error","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","data","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","max","_minBufferSize","nWordsReady","nBytesReady","min","offset","_doProcessBlock","processedWords","splice","Hasher","cfg","_doReset","update","messageUpdate","finalize","hash","_doFinalize","_createHelper","hasher","message","_createHmacHelper","C_algo","HMAC","algo","map","_map","base64Chars","byte1","byte2","byte3","triplet","j","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","indexOf","parseLoop","bits1","bits2","T","abs","sin","MD5","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","a","b","c","d","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","floor","nBitsTotalL","H_i","x","s","t","n","HmacMD5","W","SHA1","HmacSHA1","K","isPrime","sqrtN","sqrt","factor","getFractionalBits","nPrime","pow","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","HmacSHA256","Utf16BE","Utf16","utf16Chars","codePoint","utf16Str","utf16StrLength","Utf16LE","swapEndian","ArrayBuffer","superInit","subInit","typedArray","Uint8Array","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","buffer","byteOffset","byteLength","typedArrayByteLength","_zl","_zr","_sl","_sr","_hl","_hr","RIPEMD160","hl","hr","zl","zr","sl","sr","al","bl","cl","dl","el","ar","br","cr","dr","er","f1","f2","f3","f4","f5","rotl","y","z","HmacRIPEMD160","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","hmac","PBKDF2","keySize","iterations","compute","password","salt","derivedKey","blockIndex","derivedKeyWords","blockIndexWords","block","blockWords","blockWordsLength","intermediate","intermediateWords","EvpKDF","SHA224","HmacSHA224","X32WordArray","C_x64","x64","X64Word","Word","high","low","X64WordArray","toX32","x64Words","x64WordsLength","x32Words","x64Word","wordsLength","RHO_OFFSETS","PI_INDEXES","ROUND_CONSTANTS","newX","newY","LFSR","roundConstantMsw","roundConstantLsw","bitPosition","SHA3","outputLength","state","_state","nBlockSizeLanes","M2i","M2i1","lane","round","tMsw","tLsw","Tx","Tx4","Tx1","Tx1Msw","Tx1Lsw","laneIndex","laneMsw","laneLsw","rhoOffset","TPiLane","T0","state0","TLane","Tx1Lane","Tx2Lane","roundConstant","blockSizeBits","outputLengthBytes","outputLengthLanes","hashWords","HmacSHA3","X64Word_create","SHA512","H0","H1","H2","H3","H4","H5","H6","H7","H0h","H0l","H1h","H1l","H2h","H2l","H3h","H3l","H4h","H4l","H5h","H5l","H6h","H6l","H7h","H7l","ah","bh","dh","eh","fh","fl","gh","gl","hh","Wi","Wih","Wil","gamma0xh","gamma0xl","gamma0h","gamma0l","gamma1xh","gamma1xl","gamma1h","gamma1l","Wi7","Wi7h","Wi7l","Wi16","Wi16h","Wi16l","chh","chl","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Ki","Kih","Kil","t1l","t1h","t2l","t2h","HmacSHA512","SHA384","HmacSHA384","Cipher","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","xformMode","_xformMode","_key","process","dataUpdate","finalProcessedData","ivSize","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","cipher","decrypt","StreamCipher","finalProcessedBlocks","C_mode","BlockCipherMode","Encryptor","Decryptor","_cipher","_iv","processBlock","xorBlock","encryptBlock","_prevBlock","thisBlock","decryptBlock","C_pad","Pkcs7","nPaddingBytes","paddingWord","paddingWords","unpad","BlockCipher","modeCreator","_mode","__creator","CipherParams","cipherParams","formatter","C_format","format","OpenSSLFormatter","OpenSSL","openSSLStr","ciphertextWords","encryptor","cipherCfg","algorithm","_parse","plaintext","C_kdf","kdf","OpenSSLKdf","execute","derivedParams","CFB","generateKeystreamAndEncrypt","keystream","ECB","AnsiX923","lastBytePos","Iso10126","Iso97971","OFB","_keystream","NoPadding","HexFormatter","input","SBOX","INV_SBOX","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","_nRounds","_keyPriorReset","keyWords","nRounds","ksRows","keySchedule","_keySchedule","ksRow","invKeySchedule","_invKeySchedule","invKsRow","_doCryptBlock","s0","s1","s2","s3","t0","t3","PC1","PC2","BIT_SHIFTS","SBOX_P","SBOX_MASK","DES","keyBits","keyBitPos","subKeys","_subKeys","nSubKey","subKey","bitShift","invSubKeys","_invSubKeys","_lBlock","_rBlock","exchangeLR","exchangeRL","lBlock","rBlock","TripleDES","_des1","_des2","_des3","RC4","keySigBytes","S","_S","keyByteIndex","keyByte","_i","_j","generateKeystreamWord","keystreamWord","RC4Drop","drop","CTRGladman","incWord","b1","b2","b3","incCounter","counter","_counter","C_","G","Rabbit","X","_X","_C","_b","nextState","IV","IV_0","IV_1","i0","i2","i1","i3","gx","ga","gb","CTR","RabbitLegacy"],"mappings":"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","sourcesContent":["import { getAction } from '@/api/manage'\r\nimport { ENCRYPTED_STRING } from \"@/store/mutation-types\"\r\nimport Vue from 'vue'\r\n\r\n/**\r\n * 获取加密字符串，并对结果进行缓存\r\n */\r\nexport function getEncryptedString() {\r\n  return getAction(\"/sys/getEncryptedString\",{}).then((res)=>{\r\n    let encryptedString = {};\r\n    encryptedString.key = res.result.key;\r\n    encryptedString.iv = res.result.iv;\r\n    Vue.ls.set(ENCRYPTED_STRING, encryptedString, 7 * 24 * 60 * 60 * 1000);\r\n    return encryptedString;\r\n  });\r\n}\r\n\r\n/**\r\n * AES加密 ：字符串 key iv  返回base64\r\n */\r\nexport function encryption(word, keyStr, ivStr) {\r\n\r\n  let key = CryptoJS.enc.Utf8.parse(keyStr)\r\n  let iv = CryptoJS.enc.Utf8.parse(ivStr)\r\n\r\n  let srcs = CryptoJS.enc.Utf8.parse(word);\r\n  var encrypted = CryptoJS.AES.encrypt(srcs, key, {\r\n    iv: iv,\r\n    mode: CryptoJS.mode.CBC,\r\n    padding: CryptoJS.pad.ZeroPadding\r\n  });\r\n  // console.log(\"-=-=-=-\", encrypted.ciphertext)\r\n  return CryptoJS.enc.Base64.stringify(encrypted.ciphertext);\r\n\r\n}\r\n\r\n\r\nvar CryptoJS = CryptoJS || (function (Math, undefined) {\r\n  /*\r\n\t     * Local polyfil of Object.create\r\n\t     */\r\n  var create = Object.create || (function () {\r\n    function F() {};\r\n\r\n    return function (obj) {\r\n      var subtype;\r\n\r\n      F.prototype = obj;\r\n\r\n      subtype = new F();\r\n\r\n      F.prototype = null;\r\n\r\n      return subtype;\r\n    };\r\n  }())\r\n\r\n  /**\r\n   * CryptoJS namespace.\r\n   */\r\n  var C = {};\r\n\r\n  /**\r\n   * Library namespace.\r\n   */\r\n  var C_lib = C.lib = {};\r\n\r\n  /**\r\n   * Base object for prototypal inheritance.\r\n   */\r\n  var Base = C_lib.Base = (function () {\r\n\r\n\r\n    return {\r\n      /**\r\n       * Creates a new object that inherits from this object.\r\n       *\r\n       * @param {Object} overrides Properties to copy into the new object.\r\n       *\r\n       * @return {Object} The new object.\r\n       *\r\n       * @static\r\n       *\r\n       * @example\r\n       *\r\n       *     var MyType = CryptoJS.lib.Base.extend({\r\n\t             *         field: 'value',\r\n\t             *\r\n\t             *         method: function () {\r\n\t             *         }\r\n\t             *     });\r\n       */\r\n      extend: function (overrides) {\r\n        // Spawn\r\n        var subtype = create(this);\r\n\r\n        // Augment\r\n        if (overrides) {\r\n          subtype.mixIn(overrides);\r\n        }\r\n\r\n        // Create default initializer\r\n        if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\r\n          subtype.init = function () {\r\n            subtype.$super.init.apply(this, arguments);\r\n          };\r\n        }\r\n\r\n        // Initializer's prototype is the subtype object\r\n        subtype.init.prototype = subtype;\r\n\r\n        // Reference supertype\r\n        subtype.$super = this;\r\n\r\n        return subtype;\r\n      },\r\n\r\n      /**\r\n       * Extends this object and runs the init method.\r\n       * Arguments to create() will be passed to init().\r\n       *\r\n       * @return {Object} The new object.\r\n       *\r\n       * @static\r\n       *\r\n       * @example\r\n       *\r\n       *     var instance = MyType.create();\r\n       */\r\n      create: function () {\r\n        var instance = this.extend();\r\n        instance.init.apply(instance, arguments);\r\n\r\n        return instance;\r\n      },\r\n\r\n      /**\r\n       * Initializes a newly created object.\r\n       * Override this method to add some logic when your objects are created.\r\n       *\r\n       * @example\r\n       *\r\n       *     var MyType = CryptoJS.lib.Base.extend({\r\n\t             *         init: function () {\r\n\t             *             // ...\r\n\t             *         }\r\n\t             *     });\r\n       */\r\n      init: function () {\r\n      },\r\n\r\n      /**\r\n       * Copies properties into this object.\r\n       *\r\n       * @param {Object} properties The properties to mix in.\r\n       *\r\n       * @example\r\n       *\r\n       *     MyType.mixIn({\r\n\t             *         field: 'value'\r\n\t             *     });\r\n       */\r\n      mixIn: function (properties) {\r\n        for (var propertyName in properties) {\r\n          if (properties.hasOwnProperty(propertyName)) {\r\n            this[propertyName] = properties[propertyName];\r\n          }\r\n        }\r\n\r\n        // IE won't copy toString using the loop above\r\n        if (properties.hasOwnProperty('toString')) {\r\n          this.toString = properties.toString;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Creates a copy of this object.\r\n       *\r\n       * @return {Object} The clone.\r\n       *\r\n       * @example\r\n       *\r\n       *     var clone = instance.clone();\r\n       */\r\n      clone: function () {\r\n        return this.init.prototype.extend(this);\r\n      }\r\n    };\r\n  }());\r\n\r\n  /**\r\n   * An array of 32-bit words.\r\n   *\r\n   * @property {Array} words The array of 32-bit words.\r\n   * @property {number} sigBytes The number of significant bytes in this word array.\r\n   */\r\n  var WordArray = C_lib.WordArray = Base.extend({\r\n    /**\r\n     * Initializes a newly created word array.\r\n     *\r\n     * @param {Array} words (Optional) An array of 32-bit words.\r\n     * @param {number} sigBytes (Optional) The number of significant bytes in the words.\r\n     *\r\n     * @example\r\n     *\r\n     *     var wordArray = CryptoJS.lib.WordArray.create();\r\n     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\r\n     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\r\n     */\r\n    init: function (words, sigBytes) {\r\n      words = this.words = words || [];\r\n\r\n      if (sigBytes != undefined) {\r\n        this.sigBytes = sigBytes;\r\n      } else {\r\n        this.sigBytes = words.length * 4;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Converts this word array to a string.\r\n     *\r\n     * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\r\n     *\r\n     * @return {string} The stringified word array.\r\n     *\r\n     * @example\r\n     *\r\n     *     var string = wordArray + '';\r\n     *     var string = wordArray.toString();\r\n     *     var string = wordArray.toString(CryptoJS.enc.Utf8);\r\n     */\r\n    toString: function (encoder) {\r\n      return (encoder || Hex).stringify(this);\r\n    },\r\n\r\n    /**\r\n     * Concatenates a word array to this word array.\r\n     *\r\n     * @param {WordArray} wordArray The word array to append.\r\n     *\r\n     * @return {WordArray} This word array.\r\n     *\r\n     * @example\r\n     *\r\n     *     wordArray1.concat(wordArray2);\r\n     */\r\n    concat: function (wordArray) {\r\n      // Shortcuts\r\n      var thisWords = this.words;\r\n      var thatWords = wordArray.words;\r\n      var thisSigBytes = this.sigBytes;\r\n      var thatSigBytes = wordArray.sigBytes;\r\n\r\n      // Clamp excess bits\r\n      this.clamp();\r\n\r\n      // Concat\r\n      if (thisSigBytes % 4) {\r\n        // Copy one byte at a time\r\n        for (var i = 0; i < thatSigBytes; i++) {\r\n          var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n          thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\r\n        }\r\n      } else {\r\n        // Copy one word at a time\r\n        for (var i = 0; i < thatSigBytes; i += 4) {\r\n          thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\r\n        }\r\n      }\r\n      this.sigBytes += thatSigBytes;\r\n\r\n      // Chainable\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Removes insignificant bits.\r\n     *\r\n     * @example\r\n     *\r\n     *     wordArray.clamp();\r\n     */\r\n    clamp: function () {\r\n      // Shortcuts\r\n      var words = this.words;\r\n      var sigBytes = this.sigBytes;\r\n\r\n      // Clamp\r\n      words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\r\n      words.length = Math.ceil(sigBytes / 4);\r\n    },\r\n\r\n    /**\r\n     * Creates a copy of this word array.\r\n     *\r\n     * @return {WordArray} The clone.\r\n     *\r\n     * @example\r\n     *\r\n     *     var clone = wordArray.clone();\r\n     */\r\n    clone: function () {\r\n      var clone = Base.clone.call(this);\r\n      clone.words = this.words.slice(0);\r\n\r\n      return clone;\r\n    },\r\n\r\n    /**\r\n     * Creates a word array filled with random bytes.\r\n     *\r\n     * @param {number} nBytes The number of random bytes to generate.\r\n     *\r\n     * @return {WordArray} The random word array.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var wordArray = CryptoJS.lib.WordArray.random(16);\r\n     */\r\n    random: function (nBytes) {\r\n      var words = [];\r\n\r\n      var r = (function (m_w) {\r\n        var m_w = m_w;\r\n        var m_z = 0x3ade68b1;\r\n        var mask = 0xffffffff;\r\n\r\n        return function () {\r\n          m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\r\n          m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\r\n          var result = ((m_z << 0x10) + m_w) & mask;\r\n          result /= 0x100000000;\r\n          result += 0.5;\r\n          return result * (Math.random() > .5 ? 1 : -1);\r\n        }\r\n      });\r\n\r\n      for (var i = 0, rcache; i < nBytes; i += 4) {\r\n        var _r = r((rcache || Math.random()) * 0x100000000);\r\n\r\n        rcache = _r() * 0x3ade67b7;\r\n        words.push((_r() * 0x100000000) | 0);\r\n      }\r\n\r\n      return new WordArray.init(words, nBytes);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Encoder namespace.\r\n   */\r\n  var C_enc = C.enc = {};\r\n\r\n  /**\r\n   * Hex encoding strategy.\r\n   */\r\n  var Hex = C_enc.Hex = {\r\n    /**\r\n     * Converts a word array to a hex string.\r\n     *\r\n     * @param {WordArray} wordArray The word array.\r\n     *\r\n     * @return {string} The hex string.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\r\n     */\r\n    stringify: function (wordArray) {\r\n      // Shortcuts\r\n      var words = wordArray.words;\r\n      var sigBytes = wordArray.sigBytes;\r\n\r\n      // Convert\r\n      var hexChars = [];\r\n      for (var i = 0; i < sigBytes; i++) {\r\n        var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n        hexChars.push((bite >>> 4).toString(16));\r\n        hexChars.push((bite & 0x0f).toString(16));\r\n      }\r\n\r\n      return hexChars.join('');\r\n    },\r\n\r\n    /**\r\n     * Converts a hex string to a word array.\r\n     *\r\n     * @param {string} hexStr The hex string.\r\n     *\r\n     * @return {WordArray} The word array.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\r\n     */\r\n    parse: function (hexStr) {\r\n      // Shortcut\r\n      var hexStrLength = hexStr.length;\r\n\r\n      // Convert\r\n      var words = [];\r\n      for (var i = 0; i < hexStrLength; i += 2) {\r\n        words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\r\n      }\r\n\r\n      return new WordArray.init(words, hexStrLength / 2);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Latin1 encoding strategy.\r\n   */\r\n  var Latin1 = C_enc.Latin1 = {\r\n    /**\r\n     * Converts a word array to a Latin1 string.\r\n     *\r\n     * @param {WordArray} wordArray The word array.\r\n     *\r\n     * @return {string} The Latin1 string.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\r\n     */\r\n    stringify: function (wordArray) {\r\n      // Shortcuts\r\n      var words = wordArray.words;\r\n      var sigBytes = wordArray.sigBytes;\r\n\r\n      // Convert\r\n      var latin1Chars = [];\r\n      for (var i = 0; i < sigBytes; i++) {\r\n        var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n        latin1Chars.push(String.fromCharCode(bite));\r\n      }\r\n\r\n      return latin1Chars.join('');\r\n    },\r\n\r\n    /**\r\n     * Converts a Latin1 string to a word array.\r\n     *\r\n     * @param {string} latin1Str The Latin1 string.\r\n     *\r\n     * @return {WordArray} The word array.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\r\n     */\r\n    parse: function (latin1Str) {\r\n      // Shortcut\r\n      var latin1StrLength = latin1Str.length;\r\n\r\n      // Convert\r\n      var words = [];\r\n      for (var i = 0; i < latin1StrLength; i++) {\r\n        words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\r\n      }\r\n\r\n      return new WordArray.init(words, latin1StrLength);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * UTF-8 encoding strategy.\r\n   */\r\n  var Utf8 = C_enc.Utf8 = {\r\n    /**\r\n     * Converts a word array to a UTF-8 string.\r\n     *\r\n     * @param {WordArray} wordArray The word array.\r\n     *\r\n     * @return {string} The UTF-8 string.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\r\n     */\r\n    stringify: function (wordArray) {\r\n      try {\r\n        return decodeURIComponent(escape(Latin1.stringify(wordArray)));\r\n      } catch (e) {\r\n        throw new Error('Malformed UTF-8 data');\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Converts a UTF-8 string to a word array.\r\n     *\r\n     * @param {string} utf8Str The UTF-8 string.\r\n     *\r\n     * @return {WordArray} The word array.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\r\n     */\r\n    parse: function (utf8Str) {\r\n      return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Abstract buffered block algorithm template.\r\n   *\r\n   * The property blockSize must be implemented in a concrete subtype.\r\n   *\r\n   * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\r\n   */\r\n  var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\r\n    /**\r\n     * Resets this block algorithm's data buffer to its initial state.\r\n     *\r\n     * @example\r\n     *\r\n     *     bufferedBlockAlgorithm.reset();\r\n     */\r\n    reset: function () {\r\n      // Initial values\r\n      this._data = new WordArray.init();\r\n      this._nDataBytes = 0;\r\n    },\r\n\r\n    /**\r\n     * Adds new data to this block algorithm's buffer.\r\n     *\r\n     * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\r\n     *\r\n     * @example\r\n     *\r\n     *     bufferedBlockAlgorithm._append('data');\r\n     *     bufferedBlockAlgorithm._append(wordArray);\r\n     */\r\n    _append: function (data) {\r\n      // Convert string to WordArray, else assume WordArray already\r\n      if (typeof data == 'string') {\r\n        data = Utf8.parse(data);\r\n      }\r\n\r\n      // Append\r\n      this._data.concat(data);\r\n      this._nDataBytes += data.sigBytes;\r\n    },\r\n\r\n    /**\r\n     * Processes available data blocks.\r\n     *\r\n     * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\r\n     *\r\n     * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\r\n     *\r\n     * @return {WordArray} The processed data.\r\n     *\r\n     * @example\r\n     *\r\n     *     var processedData = bufferedBlockAlgorithm._process();\r\n     *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\r\n     */\r\n    _process: function (doFlush) {\r\n      // Shortcuts\r\n      var data = this._data;\r\n      var dataWords = data.words;\r\n      var dataSigBytes = data.sigBytes;\r\n      var blockSize = this.blockSize;\r\n      var blockSizeBytes = blockSize * 4;\r\n\r\n      // Count blocks ready\r\n      var nBlocksReady = dataSigBytes / blockSizeBytes;\r\n      if (doFlush) {\r\n        // Round up to include partial blocks\r\n        nBlocksReady = Math.ceil(nBlocksReady);\r\n      } else {\r\n        // Round down to include only full blocks,\r\n        // less the number of blocks that must remain in the buffer\r\n        nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\r\n      }\r\n\r\n      // Count words ready\r\n      var nWordsReady = nBlocksReady * blockSize;\r\n\r\n      // Count bytes ready\r\n      var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\r\n\r\n      // Process blocks\r\n      if (nWordsReady) {\r\n        for (var offset = 0; offset < nWordsReady; offset += blockSize) {\r\n          // Perform concrete-algorithm logic\r\n          this._doProcessBlock(dataWords, offset);\r\n        }\r\n\r\n        // Remove processed words\r\n        var processedWords = dataWords.splice(0, nWordsReady);\r\n        data.sigBytes -= nBytesReady;\r\n      }\r\n\r\n      // Return processed words\r\n      return new WordArray.init(processedWords, nBytesReady);\r\n    },\r\n\r\n    /**\r\n     * Creates a copy of this object.\r\n     *\r\n     * @return {Object} The clone.\r\n     *\r\n     * @example\r\n     *\r\n     *     var clone = bufferedBlockAlgorithm.clone();\r\n     */\r\n    clone: function () {\r\n      var clone = Base.clone.call(this);\r\n      clone._data = this._data.clone();\r\n\r\n      return clone;\r\n    },\r\n\r\n    _minBufferSize: 0\r\n  });\r\n\r\n  /**\r\n   * Abstract hasher template.\r\n   *\r\n   * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\r\n   */\r\n  var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\r\n    /**\r\n     * Configuration options.\r\n     */\r\n    cfg: Base.extend(),\r\n\r\n    /**\r\n     * Initializes a newly created hasher.\r\n     *\r\n     * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\r\n     *\r\n     * @example\r\n     *\r\n     *     var hasher = CryptoJS.algo.SHA256.create();\r\n     */\r\n    init: function (cfg) {\r\n      // Apply config defaults\r\n      this.cfg = this.cfg.extend(cfg);\r\n\r\n      // Set initial values\r\n      this.reset();\r\n    },\r\n\r\n    /**\r\n     * Resets this hasher to its initial state.\r\n     *\r\n     * @example\r\n     *\r\n     *     hasher.reset();\r\n     */\r\n    reset: function () {\r\n      // Reset data buffer\r\n      BufferedBlockAlgorithm.reset.call(this);\r\n\r\n      // Perform concrete-hasher logic\r\n      this._doReset();\r\n    },\r\n\r\n    /**\r\n     * Updates this hasher with a message.\r\n     *\r\n     * @param {WordArray|string} messageUpdate The message to append.\r\n     *\r\n     * @return {Hasher} This hasher.\r\n     *\r\n     * @example\r\n     *\r\n     *     hasher.update('message');\r\n     *     hasher.update(wordArray);\r\n     */\r\n    update: function (messageUpdate) {\r\n      // Append\r\n      this._append(messageUpdate);\r\n\r\n      // Update the hash\r\n      this._process();\r\n\r\n      // Chainable\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Finalizes the hash computation.\r\n     * Note that the finalize operation is effectively a destructive, read-once operation.\r\n     *\r\n     * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = hasher.finalize();\r\n     *     var hash = hasher.finalize('message');\r\n     *     var hash = hasher.finalize(wordArray);\r\n     */\r\n    finalize: function (messageUpdate) {\r\n      // Final message update\r\n      if (messageUpdate) {\r\n        this._append(messageUpdate);\r\n      }\r\n\r\n      // Perform concrete-hasher logic\r\n      var hash = this._doFinalize();\r\n\r\n      return hash;\r\n    },\r\n\r\n    blockSize: 512/32,\r\n\r\n    /**\r\n     * Creates a shortcut function to a hasher's object interface.\r\n     *\r\n     * @param {Hasher} hasher The hasher to create a helper for.\r\n     *\r\n     * @return {Function} The shortcut function.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\r\n     */\r\n    _createHelper: function (hasher) {\r\n      return function (message, cfg) {\r\n        return new hasher.init(cfg).finalize(message);\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Creates a shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {Hasher} hasher The hasher to use in this HMAC helper.\r\n     *\r\n     * @return {Function} The shortcut function.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\r\n     */\r\n    _createHmacHelper: function (hasher) {\r\n      return function (message, key) {\r\n        return new C_algo.HMAC.init(hasher, key).finalize(message);\r\n      };\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Algorithm namespace.\r\n   */\r\n  var C_algo = C.algo = {};\r\n\r\n  return C;\r\n}(Math));\r\n\r\n\r\n(function () {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var WordArray = C_lib.WordArray;\r\n  var C_enc = C.enc;\r\n\r\n  /**\r\n   * Base64 encoding strategy.\r\n   */\r\n  var Base64 = C_enc.Base64 = {\r\n    /**\r\n     * Converts a word array to a Base64 string.\r\n     *\r\n     * @param {WordArray} wordArray The word array.\r\n     *\r\n     * @return {string} The Base64 string.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\r\n     */\r\n    stringify: function (wordArray) {\r\n      // Shortcuts\r\n      var words = wordArray.words;\r\n      var sigBytes = wordArray.sigBytes;\r\n      var map = this._map;\r\n\r\n      // Clamp excess bits\r\n      wordArray.clamp();\r\n\r\n      // Convert\r\n      var base64Chars = [];\r\n      for (var i = 0; i < sigBytes; i += 3) {\r\n        var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\r\n        var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\r\n        var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\r\n\r\n        var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\r\n\r\n        for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\r\n          base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\r\n        }\r\n      }\r\n\r\n      // Add padding\r\n      var paddingChar = map.charAt(64);\r\n      if (paddingChar) {\r\n        while (base64Chars.length % 4) {\r\n          base64Chars.push(paddingChar);\r\n        }\r\n      }\r\n\r\n      return base64Chars.join('');\r\n    },\r\n\r\n    /**\r\n     * Converts a Base64 string to a word array.\r\n     *\r\n     * @param {string} base64Str The Base64 string.\r\n     *\r\n     * @return {WordArray} The word array.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\r\n     */\r\n    parse: function (base64Str) {\r\n      // Shortcuts\r\n      var base64StrLength = base64Str.length;\r\n      var map = this._map;\r\n      var reverseMap = this._reverseMap;\r\n\r\n      if (!reverseMap) {\r\n        reverseMap = this._reverseMap = [];\r\n        for (var j = 0; j < map.length; j++) {\r\n          reverseMap[map.charCodeAt(j)] = j;\r\n        }\r\n      }\r\n\r\n      // Ignore padding\r\n      var paddingChar = map.charAt(64);\r\n      if (paddingChar) {\r\n        var paddingIndex = base64Str.indexOf(paddingChar);\r\n        if (paddingIndex !== -1) {\r\n          base64StrLength = paddingIndex;\r\n        }\r\n      }\r\n\r\n      // Convert\r\n      return parseLoop(base64Str, base64StrLength, reverseMap);\r\n\r\n    },\r\n\r\n    _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\r\n  };\r\n\r\n  function parseLoop(base64Str, base64StrLength, reverseMap) {\r\n    var words = [];\r\n    var nBytes = 0;\r\n    for (var i = 0; i < base64StrLength; i++) {\r\n      if (i % 4) {\r\n        var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\r\n        var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\r\n        words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\r\n        nBytes++;\r\n      }\r\n    }\r\n    return WordArray.create(words, nBytes);\r\n  }\r\n}());\r\n\r\n\r\n(function (Math) {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var WordArray = C_lib.WordArray;\r\n  var Hasher = C_lib.Hasher;\r\n  var C_algo = C.algo;\r\n\r\n  // Constants table\r\n  var T = [];\r\n\r\n  // Compute constants\r\n  (function () {\r\n    for (var i = 0; i < 64; i++) {\r\n      T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\r\n    }\r\n  }());\r\n\r\n  /**\r\n   * MD5 hash algorithm.\r\n   */\r\n  var MD5 = C_algo.MD5 = Hasher.extend({\r\n    _doReset: function () {\r\n      this._hash = new WordArray.init([\r\n        0x67452301, 0xefcdab89,\r\n        0x98badcfe, 0x10325476\r\n      ]);\r\n    },\r\n\r\n    _doProcessBlock: function (M, offset) {\r\n      // Swap endian\r\n      for (var i = 0; i < 16; i++) {\r\n        // Shortcuts\r\n        var offset_i = offset + i;\r\n        var M_offset_i = M[offset_i];\r\n\r\n        M[offset_i] = (\r\n          (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\r\n          (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\r\n        );\r\n      }\r\n\r\n      // Shortcuts\r\n      var H = this._hash.words;\r\n\r\n      var M_offset_0  = M[offset + 0];\r\n      var M_offset_1  = M[offset + 1];\r\n      var M_offset_2  = M[offset + 2];\r\n      var M_offset_3  = M[offset + 3];\r\n      var M_offset_4  = M[offset + 4];\r\n      var M_offset_5  = M[offset + 5];\r\n      var M_offset_6  = M[offset + 6];\r\n      var M_offset_7  = M[offset + 7];\r\n      var M_offset_8  = M[offset + 8];\r\n      var M_offset_9  = M[offset + 9];\r\n      var M_offset_10 = M[offset + 10];\r\n      var M_offset_11 = M[offset + 11];\r\n      var M_offset_12 = M[offset + 12];\r\n      var M_offset_13 = M[offset + 13];\r\n      var M_offset_14 = M[offset + 14];\r\n      var M_offset_15 = M[offset + 15];\r\n\r\n      // Working varialbes\r\n      var a = H[0];\r\n      var b = H[1];\r\n      var c = H[2];\r\n      var d = H[3];\r\n\r\n      // Computation\r\n      a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\r\n      d = FF(d, a, b, c, M_offset_1,  12, T[1]);\r\n      c = FF(c, d, a, b, M_offset_2,  17, T[2]);\r\n      b = FF(b, c, d, a, M_offset_3,  22, T[3]);\r\n      a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\r\n      d = FF(d, a, b, c, M_offset_5,  12, T[5]);\r\n      c = FF(c, d, a, b, M_offset_6,  17, T[6]);\r\n      b = FF(b, c, d, a, M_offset_7,  22, T[7]);\r\n      a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\r\n      d = FF(d, a, b, c, M_offset_9,  12, T[9]);\r\n      c = FF(c, d, a, b, M_offset_10, 17, T[10]);\r\n      b = FF(b, c, d, a, M_offset_11, 22, T[11]);\r\n      a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\r\n      d = FF(d, a, b, c, M_offset_13, 12, T[13]);\r\n      c = FF(c, d, a, b, M_offset_14, 17, T[14]);\r\n      b = FF(b, c, d, a, M_offset_15, 22, T[15]);\r\n\r\n      a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\r\n      d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\r\n      c = GG(c, d, a, b, M_offset_11, 14, T[18]);\r\n      b = GG(b, c, d, a, M_offset_0,  20, T[19]);\r\n      a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\r\n      d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\r\n      c = GG(c, d, a, b, M_offset_15, 14, T[22]);\r\n      b = GG(b, c, d, a, M_offset_4,  20, T[23]);\r\n      a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\r\n      d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\r\n      c = GG(c, d, a, b, M_offset_3,  14, T[26]);\r\n      b = GG(b, c, d, a, M_offset_8,  20, T[27]);\r\n      a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\r\n      d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\r\n      c = GG(c, d, a, b, M_offset_7,  14, T[30]);\r\n      b = GG(b, c, d, a, M_offset_12, 20, T[31]);\r\n\r\n      a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\r\n      d = HH(d, a, b, c, M_offset_8,  11, T[33]);\r\n      c = HH(c, d, a, b, M_offset_11, 16, T[34]);\r\n      b = HH(b, c, d, a, M_offset_14, 23, T[35]);\r\n      a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\r\n      d = HH(d, a, b, c, M_offset_4,  11, T[37]);\r\n      c = HH(c, d, a, b, M_offset_7,  16, T[38]);\r\n      b = HH(b, c, d, a, M_offset_10, 23, T[39]);\r\n      a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\r\n      d = HH(d, a, b, c, M_offset_0,  11, T[41]);\r\n      c = HH(c, d, a, b, M_offset_3,  16, T[42]);\r\n      b = HH(b, c, d, a, M_offset_6,  23, T[43]);\r\n      a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\r\n      d = HH(d, a, b, c, M_offset_12, 11, T[45]);\r\n      c = HH(c, d, a, b, M_offset_15, 16, T[46]);\r\n      b = HH(b, c, d, a, M_offset_2,  23, T[47]);\r\n\r\n      a = II(a, b, c, d, M_offset_0,  6,  T[48]);\r\n      d = II(d, a, b, c, M_offset_7,  10, T[49]);\r\n      c = II(c, d, a, b, M_offset_14, 15, T[50]);\r\n      b = II(b, c, d, a, M_offset_5,  21, T[51]);\r\n      a = II(a, b, c, d, M_offset_12, 6,  T[52]);\r\n      d = II(d, a, b, c, M_offset_3,  10, T[53]);\r\n      c = II(c, d, a, b, M_offset_10, 15, T[54]);\r\n      b = II(b, c, d, a, M_offset_1,  21, T[55]);\r\n      a = II(a, b, c, d, M_offset_8,  6,  T[56]);\r\n      d = II(d, a, b, c, M_offset_15, 10, T[57]);\r\n      c = II(c, d, a, b, M_offset_6,  15, T[58]);\r\n      b = II(b, c, d, a, M_offset_13, 21, T[59]);\r\n      a = II(a, b, c, d, M_offset_4,  6,  T[60]);\r\n      d = II(d, a, b, c, M_offset_11, 10, T[61]);\r\n      c = II(c, d, a, b, M_offset_2,  15, T[62]);\r\n      b = II(b, c, d, a, M_offset_9,  21, T[63]);\r\n\r\n      // Intermediate hash value\r\n      H[0] = (H[0] + a) | 0;\r\n      H[1] = (H[1] + b) | 0;\r\n      H[2] = (H[2] + c) | 0;\r\n      H[3] = (H[3] + d) | 0;\r\n    },\r\n\r\n    _doFinalize: function () {\r\n      // Shortcuts\r\n      var data = this._data;\r\n      var dataWords = data.words;\r\n\r\n      var nBitsTotal = this._nDataBytes * 8;\r\n      var nBitsLeft = data.sigBytes * 8;\r\n\r\n      // Add padding\r\n      dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n\r\n      var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\r\n      var nBitsTotalL = nBitsTotal;\r\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\r\n        (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\r\n        (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\r\n      );\r\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\r\n        (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\r\n        (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\r\n      );\r\n\r\n      data.sigBytes = (dataWords.length + 1) * 4;\r\n\r\n      // Hash final blocks\r\n      this._process();\r\n\r\n      // Shortcuts\r\n      var hash = this._hash;\r\n      var H = hash.words;\r\n\r\n      // Swap endian\r\n      for (var i = 0; i < 4; i++) {\r\n        // Shortcut\r\n        var H_i = H[i];\r\n\r\n        H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\r\n          (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\r\n      }\r\n\r\n      // Return final computed hash\r\n      return hash;\r\n    },\r\n\r\n    clone: function () {\r\n      var clone = Hasher.clone.call(this);\r\n      clone._hash = this._hash.clone();\r\n\r\n      return clone;\r\n    }\r\n  });\r\n\r\n  function FF(a, b, c, d, x, s, t) {\r\n    var n = a + ((b & c) | (~b & d)) + x + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  }\r\n\r\n  function GG(a, b, c, d, x, s, t) {\r\n    var n = a + ((b & d) | (c & ~d)) + x + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  }\r\n\r\n  function HH(a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + x + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  }\r\n\r\n  function II(a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + x + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  }\r\n\r\n  /**\r\n   * Shortcut function to the hasher's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   *\r\n   * @return {WordArray} The hash.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hash = CryptoJS.MD5('message');\r\n   *     var hash = CryptoJS.MD5(wordArray);\r\n   */\r\n  C.MD5 = Hasher._createHelper(MD5);\r\n\r\n  /**\r\n   * Shortcut function to the HMAC's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   * @param {WordArray|string} key The secret key.\r\n   *\r\n   * @return {WordArray} The HMAC.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hmac = CryptoJS.HmacMD5(message, key);\r\n   */\r\n  C.HmacMD5 = Hasher._createHmacHelper(MD5);\r\n}(Math));\r\n\r\n\r\n(function () {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var WordArray = C_lib.WordArray;\r\n  var Hasher = C_lib.Hasher;\r\n  var C_algo = C.algo;\r\n\r\n  // Reusable object\r\n  var W = [];\r\n\r\n  /**\r\n   * SHA-1 hash algorithm.\r\n   */\r\n  var SHA1 = C_algo.SHA1 = Hasher.extend({\r\n    _doReset: function () {\r\n      this._hash = new WordArray.init([\r\n        0x67452301, 0xefcdab89,\r\n        0x98badcfe, 0x10325476,\r\n        0xc3d2e1f0\r\n      ]);\r\n    },\r\n\r\n    _doProcessBlock: function (M, offset) {\r\n      // Shortcut\r\n      var H = this._hash.words;\r\n\r\n      // Working variables\r\n      var a = H[0];\r\n      var b = H[1];\r\n      var c = H[2];\r\n      var d = H[3];\r\n      var e = H[4];\r\n\r\n      // Computation\r\n      for (var i = 0; i < 80; i++) {\r\n        if (i < 16) {\r\n          W[i] = M[offset + i] | 0;\r\n        } else {\r\n          var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n          W[i] = (n << 1) | (n >>> 31);\r\n        }\r\n\r\n        var t = ((a << 5) | (a >>> 27)) + e + W[i];\r\n        if (i < 20) {\r\n          t += ((b & c) | (~b & d)) + 0x5a827999;\r\n        } else if (i < 40) {\r\n          t += (b ^ c ^ d) + 0x6ed9eba1;\r\n        } else if (i < 60) {\r\n          t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\r\n        } else /* if (i < 80) */ {\r\n          t += (b ^ c ^ d) - 0x359d3e2a;\r\n        }\r\n\r\n        e = d;\r\n        d = c;\r\n        c = (b << 30) | (b >>> 2);\r\n        b = a;\r\n        a = t;\r\n      }\r\n\r\n      // Intermediate hash value\r\n      H[0] = (H[0] + a) | 0;\r\n      H[1] = (H[1] + b) | 0;\r\n      H[2] = (H[2] + c) | 0;\r\n      H[3] = (H[3] + d) | 0;\r\n      H[4] = (H[4] + e) | 0;\r\n    },\r\n\r\n    _doFinalize: function () {\r\n      // Shortcuts\r\n      var data = this._data;\r\n      var dataWords = data.words;\r\n\r\n      var nBitsTotal = this._nDataBytes * 8;\r\n      var nBitsLeft = data.sigBytes * 8;\r\n\r\n      // Add padding\r\n      dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n      data.sigBytes = dataWords.length * 4;\r\n\r\n      // Hash final blocks\r\n      this._process();\r\n\r\n      // Return final computed hash\r\n      return this._hash;\r\n    },\r\n\r\n    clone: function () {\r\n      var clone = Hasher.clone.call(this);\r\n      clone._hash = this._hash.clone();\r\n\r\n      return clone;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Shortcut function to the hasher's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   *\r\n   * @return {WordArray} The hash.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hash = CryptoJS.SHA1('message');\r\n   *     var hash = CryptoJS.SHA1(wordArray);\r\n   */\r\n  C.SHA1 = Hasher._createHelper(SHA1);\r\n\r\n  /**\r\n   * Shortcut function to the HMAC's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   * @param {WordArray|string} key The secret key.\r\n   *\r\n   * @return {WordArray} The HMAC.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hmac = CryptoJS.HmacSHA1(message, key);\r\n   */\r\n  C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\r\n}());\r\n\r\n\r\n(function (Math) {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var WordArray = C_lib.WordArray;\r\n  var Hasher = C_lib.Hasher;\r\n  var C_algo = C.algo;\r\n\r\n  // Initialization and round constants tables\r\n  var H = [];\r\n  var K = [];\r\n\r\n  // Compute constants\r\n  (function () {\r\n    function isPrime(n) {\r\n      var sqrtN = Math.sqrt(n);\r\n      for (var factor = 2; factor <= sqrtN; factor++) {\r\n        if (!(n % factor)) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    function getFractionalBits(n) {\r\n      return ((n - (n | 0)) * 0x100000000) | 0;\r\n    }\r\n\r\n    var n = 2;\r\n    var nPrime = 0;\r\n    while (nPrime < 64) {\r\n      if (isPrime(n)) {\r\n        if (nPrime < 8) {\r\n          H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\r\n        }\r\n        K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\r\n\r\n        nPrime++;\r\n      }\r\n\r\n      n++;\r\n    }\r\n  }());\r\n\r\n  // Reusable object\r\n  var W = [];\r\n\r\n  /**\r\n   * SHA-256 hash algorithm.\r\n   */\r\n  var SHA256 = C_algo.SHA256 = Hasher.extend({\r\n    _doReset: function () {\r\n      this._hash = new WordArray.init(H.slice(0));\r\n    },\r\n\r\n    _doProcessBlock: function (M, offset) {\r\n      // Shortcut\r\n      var H = this._hash.words;\r\n\r\n      // Working variables\r\n      var a = H[0];\r\n      var b = H[1];\r\n      var c = H[2];\r\n      var d = H[3];\r\n      var e = H[4];\r\n      var f = H[5];\r\n      var g = H[6];\r\n      var h = H[7];\r\n\r\n      // Computation\r\n      for (var i = 0; i < 64; i++) {\r\n        if (i < 16) {\r\n          W[i] = M[offset + i] | 0;\r\n        } else {\r\n          var gamma0x = W[i - 15];\r\n          var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\r\n            ((gamma0x << 14) | (gamma0x >>> 18)) ^\r\n            (gamma0x >>> 3);\r\n\r\n          var gamma1x = W[i - 2];\r\n          var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\r\n            ((gamma1x << 13) | (gamma1x >>> 19)) ^\r\n            (gamma1x >>> 10);\r\n\r\n          W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\r\n        }\r\n\r\n        var ch  = (e & f) ^ (~e & g);\r\n        var maj = (a & b) ^ (a & c) ^ (b & c);\r\n\r\n        var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\r\n        var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\r\n\r\n        var t1 = h + sigma1 + ch + K[i] + W[i];\r\n        var t2 = sigma0 + maj;\r\n\r\n        h = g;\r\n        g = f;\r\n        f = e;\r\n        e = (d + t1) | 0;\r\n        d = c;\r\n        c = b;\r\n        b = a;\r\n        a = (t1 + t2) | 0;\r\n      }\r\n\r\n      // Intermediate hash value\r\n      H[0] = (H[0] + a) | 0;\r\n      H[1] = (H[1] + b) | 0;\r\n      H[2] = (H[2] + c) | 0;\r\n      H[3] = (H[3] + d) | 0;\r\n      H[4] = (H[4] + e) | 0;\r\n      H[5] = (H[5] + f) | 0;\r\n      H[6] = (H[6] + g) | 0;\r\n      H[7] = (H[7] + h) | 0;\r\n    },\r\n\r\n    _doFinalize: function () {\r\n      // Shortcuts\r\n      var data = this._data;\r\n      var dataWords = data.words;\r\n\r\n      var nBitsTotal = this._nDataBytes * 8;\r\n      var nBitsLeft = data.sigBytes * 8;\r\n\r\n      // Add padding\r\n      dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n      data.sigBytes = dataWords.length * 4;\r\n\r\n      // Hash final blocks\r\n      this._process();\r\n\r\n      // Return final computed hash\r\n      return this._hash;\r\n    },\r\n\r\n    clone: function () {\r\n      var clone = Hasher.clone.call(this);\r\n      clone._hash = this._hash.clone();\r\n\r\n      return clone;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Shortcut function to the hasher's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   *\r\n   * @return {WordArray} The hash.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hash = CryptoJS.SHA256('message');\r\n   *     var hash = CryptoJS.SHA256(wordArray);\r\n   */\r\n  C.SHA256 = Hasher._createHelper(SHA256);\r\n\r\n  /**\r\n   * Shortcut function to the HMAC's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   * @param {WordArray|string} key The secret key.\r\n   *\r\n   * @return {WordArray} The HMAC.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hmac = CryptoJS.HmacSHA256(message, key);\r\n   */\r\n  C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\r\n}(Math));\r\n\r\n\r\n(function () {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var WordArray = C_lib.WordArray;\r\n  var C_enc = C.enc;\r\n\r\n  /**\r\n   * UTF-16 BE encoding strategy.\r\n   */\r\n  var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\r\n    /**\r\n     * Converts a word array to a UTF-16 BE string.\r\n     *\r\n     * @param {WordArray} wordArray The word array.\r\n     *\r\n     * @return {string} The UTF-16 BE string.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\r\n     */\r\n    stringify: function (wordArray) {\r\n      // Shortcuts\r\n      var words = wordArray.words;\r\n      var sigBytes = wordArray.sigBytes;\r\n\r\n      // Convert\r\n      var utf16Chars = [];\r\n      for (var i = 0; i < sigBytes; i += 2) {\r\n        var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\r\n        utf16Chars.push(String.fromCharCode(codePoint));\r\n      }\r\n\r\n      return utf16Chars.join('');\r\n    },\r\n\r\n    /**\r\n     * Converts a UTF-16 BE string to a word array.\r\n     *\r\n     * @param {string} utf16Str The UTF-16 BE string.\r\n     *\r\n     * @return {WordArray} The word array.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\r\n     */\r\n    parse: function (utf16Str) {\r\n      // Shortcut\r\n      var utf16StrLength = utf16Str.length;\r\n\r\n      // Convert\r\n      var words = [];\r\n      for (var i = 0; i < utf16StrLength; i++) {\r\n        words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\r\n      }\r\n\r\n      return WordArray.create(words, utf16StrLength * 2);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * UTF-16 LE encoding strategy.\r\n   */\r\n  C_enc.Utf16LE = {\r\n    /**\r\n     * Converts a word array to a UTF-16 LE string.\r\n     *\r\n     * @param {WordArray} wordArray The word array.\r\n     *\r\n     * @return {string} The UTF-16 LE string.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\r\n     */\r\n    stringify: function (wordArray) {\r\n      // Shortcuts\r\n      var words = wordArray.words;\r\n      var sigBytes = wordArray.sigBytes;\r\n\r\n      // Convert\r\n      var utf16Chars = [];\r\n      for (var i = 0; i < sigBytes; i += 2) {\r\n        var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\r\n        utf16Chars.push(String.fromCharCode(codePoint));\r\n      }\r\n\r\n      return utf16Chars.join('');\r\n    },\r\n\r\n    /**\r\n     * Converts a UTF-16 LE string to a word array.\r\n     *\r\n     * @param {string} utf16Str The UTF-16 LE string.\r\n     *\r\n     * @return {WordArray} The word array.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\r\n     */\r\n    parse: function (utf16Str) {\r\n      // Shortcut\r\n      var utf16StrLength = utf16Str.length;\r\n\r\n      // Convert\r\n      var words = [];\r\n      for (var i = 0; i < utf16StrLength; i++) {\r\n        words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\r\n      }\r\n\r\n      return WordArray.create(words, utf16StrLength * 2);\r\n    }\r\n  };\r\n\r\n  function swapEndian(word) {\r\n    return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\r\n  }\r\n}());\r\n\r\n\r\n(function () {\r\n  // Check if typed arrays are supported\r\n  if (typeof ArrayBuffer != 'function') {\r\n    return;\r\n  }\r\n\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var WordArray = C_lib.WordArray;\r\n\r\n  // Reference original init\r\n  var superInit = WordArray.init;\r\n\r\n  // Augment WordArray.init to handle typed arrays\r\n  var subInit = WordArray.init = function (typedArray) {\r\n    // Convert buffers to uint8\r\n    if (typedArray instanceof ArrayBuffer) {\r\n      typedArray = new Uint8Array(typedArray);\r\n    }\r\n\r\n    // Convert other array views to uint8\r\n    if (\r\n      typedArray instanceof Int8Array ||\r\n      (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\r\n      typedArray instanceof Int16Array ||\r\n      typedArray instanceof Uint16Array ||\r\n      typedArray instanceof Int32Array ||\r\n      typedArray instanceof Uint32Array ||\r\n      typedArray instanceof Float32Array ||\r\n      typedArray instanceof Float64Array\r\n    ) {\r\n      typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\r\n    }\r\n\r\n    // Handle Uint8Array\r\n    if (typedArray instanceof Uint8Array) {\r\n      // Shortcut\r\n      var typedArrayByteLength = typedArray.byteLength;\r\n\r\n      // Extract bytes\r\n      var words = [];\r\n      for (var i = 0; i < typedArrayByteLength; i++) {\r\n        words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\r\n      }\r\n\r\n      // Initialize this word array\r\n      superInit.call(this, words, typedArrayByteLength);\r\n    } else {\r\n      // Else call normal init\r\n      superInit.apply(this, arguments);\r\n    }\r\n  };\r\n\r\n  subInit.prototype = WordArray;\r\n}());\r\n\r\n\r\n/** @preserve\r\n (c) 2012 by Cédric Mesnil. All rights reserved.\r\n\r\n Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n\r\n - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n\r\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n(function (Math) {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var WordArray = C_lib.WordArray;\r\n  var Hasher = C_lib.Hasher;\r\n  var C_algo = C.algo;\r\n\r\n  // Constants table\r\n  var _zl = WordArray.create([\r\n    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\r\n    7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\r\n    3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\r\n    1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\r\n    4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\r\n  var _zr = WordArray.create([\r\n    5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\r\n    6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\r\n    15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\r\n    8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\r\n    12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\r\n  var _sl = WordArray.create([\r\n    11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\r\n    7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\r\n    11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\r\n    11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\r\n    9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\r\n  var _sr = WordArray.create([\r\n    8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\r\n    9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\r\n    9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\r\n    15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\r\n    8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\r\n\r\n  var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\r\n  var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\r\n\r\n  /**\r\n   * RIPEMD160 hash algorithm.\r\n   */\r\n  var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\r\n    _doReset: function () {\r\n      this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\r\n    },\r\n\r\n    _doProcessBlock: function (M, offset) {\r\n\r\n      // Swap endian\r\n      for (var i = 0; i < 16; i++) {\r\n        // Shortcuts\r\n        var offset_i = offset + i;\r\n        var M_offset_i = M[offset_i];\r\n\r\n        // Swap\r\n        M[offset_i] = (\r\n          (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\r\n          (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\r\n        );\r\n      }\r\n      // Shortcut\r\n      var H  = this._hash.words;\r\n      var hl = _hl.words;\r\n      var hr = _hr.words;\r\n      var zl = _zl.words;\r\n      var zr = _zr.words;\r\n      var sl = _sl.words;\r\n      var sr = _sr.words;\r\n\r\n      // Working variables\r\n      var al, bl, cl, dl, el;\r\n      var ar, br, cr, dr, er;\r\n\r\n      ar = al = H[0];\r\n      br = bl = H[1];\r\n      cr = cl = H[2];\r\n      dr = dl = H[3];\r\n      er = el = H[4];\r\n      // Computation\r\n      var t;\r\n      for (var i = 0; i < 80; i += 1) {\r\n        t = (al +  M[offset+zl[i]])|0;\r\n        if (i<16){\r\n          t +=  f1(bl,cl,dl) + hl[0];\r\n        } else if (i<32) {\r\n          t +=  f2(bl,cl,dl) + hl[1];\r\n        } else if (i<48) {\r\n          t +=  f3(bl,cl,dl) + hl[2];\r\n        } else if (i<64) {\r\n          t +=  f4(bl,cl,dl) + hl[3];\r\n        } else {// if (i<80) {\r\n          t +=  f5(bl,cl,dl) + hl[4];\r\n        }\r\n        t = t|0;\r\n        t =  rotl(t,sl[i]);\r\n        t = (t+el)|0;\r\n        al = el;\r\n        el = dl;\r\n        dl = rotl(cl, 10);\r\n        cl = bl;\r\n        bl = t;\r\n\r\n        t = (ar + M[offset+zr[i]])|0;\r\n        if (i<16){\r\n          t +=  f5(br,cr,dr) + hr[0];\r\n        } else if (i<32) {\r\n          t +=  f4(br,cr,dr) + hr[1];\r\n        } else if (i<48) {\r\n          t +=  f3(br,cr,dr) + hr[2];\r\n        } else if (i<64) {\r\n          t +=  f2(br,cr,dr) + hr[3];\r\n        } else {// if (i<80) {\r\n          t +=  f1(br,cr,dr) + hr[4];\r\n        }\r\n        t = t|0;\r\n        t =  rotl(t,sr[i]) ;\r\n        t = (t+er)|0;\r\n        ar = er;\r\n        er = dr;\r\n        dr = rotl(cr, 10);\r\n        cr = br;\r\n        br = t;\r\n      }\r\n      // Intermediate hash value\r\n      t    = (H[1] + cl + dr)|0;\r\n      H[1] = (H[2] + dl + er)|0;\r\n      H[2] = (H[3] + el + ar)|0;\r\n      H[3] = (H[4] + al + br)|0;\r\n      H[4] = (H[0] + bl + cr)|0;\r\n      H[0] =  t;\r\n    },\r\n\r\n    _doFinalize: function () {\r\n      // Shortcuts\r\n      var data = this._data;\r\n      var dataWords = data.words;\r\n\r\n      var nBitsTotal = this._nDataBytes * 8;\r\n      var nBitsLeft = data.sigBytes * 8;\r\n\r\n      // Add padding\r\n      dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\r\n        (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\r\n        (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\r\n      );\r\n      data.sigBytes = (dataWords.length + 1) * 4;\r\n\r\n      // Hash final blocks\r\n      this._process();\r\n\r\n      // Shortcuts\r\n      var hash = this._hash;\r\n      var H = hash.words;\r\n\r\n      // Swap endian\r\n      for (var i = 0; i < 5; i++) {\r\n        // Shortcut\r\n        var H_i = H[i];\r\n\r\n        // Swap\r\n        H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\r\n          (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\r\n      }\r\n\r\n      // Return final computed hash\r\n      return hash;\r\n    },\r\n\r\n    clone: function () {\r\n      var clone = Hasher.clone.call(this);\r\n      clone._hash = this._hash.clone();\r\n\r\n      return clone;\r\n    }\r\n  });\r\n\r\n\r\n  function f1(x, y, z) {\r\n    return ((x) ^ (y) ^ (z));\r\n\r\n  }\r\n\r\n  function f2(x, y, z) {\r\n    return (((x)&(y)) | ((~x)&(z)));\r\n  }\r\n\r\n  function f3(x, y, z) {\r\n    return (((x) | (~(y))) ^ (z));\r\n  }\r\n\r\n  function f4(x, y, z) {\r\n    return (((x) & (z)) | ((y)&(~(z))));\r\n  }\r\n\r\n  function f5(x, y, z) {\r\n    return ((x) ^ ((y) |(~(z))));\r\n\r\n  }\r\n\r\n  function rotl(x,n) {\r\n    return (x<<n) | (x>>>(32-n));\r\n  }\r\n\r\n\r\n  /**\r\n   * Shortcut function to the hasher's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   *\r\n   * @return {WordArray} The hash.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hash = CryptoJS.RIPEMD160('message');\r\n   *     var hash = CryptoJS.RIPEMD160(wordArray);\r\n   */\r\n  C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\r\n\r\n  /**\r\n   * Shortcut function to the HMAC's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   * @param {WordArray|string} key The secret key.\r\n   *\r\n   * @return {WordArray} The HMAC.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\r\n   */\r\n  C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\r\n}(Math));\r\n\r\n\r\n(function () {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var Base = C_lib.Base;\r\n  var C_enc = C.enc;\r\n  var Utf8 = C_enc.Utf8;\r\n  var C_algo = C.algo;\r\n\r\n  /**\r\n   * HMAC algorithm.\r\n   */\r\n  var HMAC = C_algo.HMAC = Base.extend({\r\n    /**\r\n     * Initializes a newly created HMAC.\r\n     *\r\n     * @param {Hasher} hasher The hash algorithm to use.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\r\n     */\r\n    init: function (hasher, key) {\r\n      // Init hasher\r\n      hasher = this._hasher = new hasher.init();\r\n\r\n      // Convert string to WordArray, else assume WordArray already\r\n      if (typeof key == 'string') {\r\n        key = Utf8.parse(key);\r\n      }\r\n\r\n      // Shortcuts\r\n      var hasherBlockSize = hasher.blockSize;\r\n      var hasherBlockSizeBytes = hasherBlockSize * 4;\r\n\r\n      // Allow arbitrary length keys\r\n      if (key.sigBytes > hasherBlockSizeBytes) {\r\n        key = hasher.finalize(key);\r\n      }\r\n\r\n      // Clamp excess bits\r\n      key.clamp();\r\n\r\n      // Clone key for inner and outer pads\r\n      var oKey = this._oKey = key.clone();\r\n      var iKey = this._iKey = key.clone();\r\n\r\n      // Shortcuts\r\n      var oKeyWords = oKey.words;\r\n      var iKeyWords = iKey.words;\r\n\r\n      // XOR keys with pad constants\r\n      for (var i = 0; i < hasherBlockSize; i++) {\r\n        oKeyWords[i] ^= 0x5c5c5c5c;\r\n        iKeyWords[i] ^= 0x36363636;\r\n      }\r\n      oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\r\n\r\n      // Set initial values\r\n      this.reset();\r\n    },\r\n\r\n    /**\r\n     * Resets this HMAC to its initial state.\r\n     *\r\n     * @example\r\n     *\r\n     *     hmacHasher.reset();\r\n     */\r\n    reset: function () {\r\n      // Shortcut\r\n      var hasher = this._hasher;\r\n\r\n      // Reset\r\n      hasher.reset();\r\n      hasher.update(this._iKey);\r\n    },\r\n\r\n    /**\r\n     * Updates this HMAC with a message.\r\n     *\r\n     * @param {WordArray|string} messageUpdate The message to append.\r\n     *\r\n     * @return {HMAC} This HMAC instance.\r\n     *\r\n     * @example\r\n     *\r\n     *     hmacHasher.update('message');\r\n     *     hmacHasher.update(wordArray);\r\n     */\r\n    update: function (messageUpdate) {\r\n      this._hasher.update(messageUpdate);\r\n\r\n      // Chainable\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Finalizes the HMAC computation.\r\n     * Note that the finalize operation is effectively a destructive, read-once operation.\r\n     *\r\n     * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = hmacHasher.finalize();\r\n     *     var hmac = hmacHasher.finalize('message');\r\n     *     var hmac = hmacHasher.finalize(wordArray);\r\n     */\r\n    finalize: function (messageUpdate) {\r\n      // Shortcut\r\n      var hasher = this._hasher;\r\n\r\n      // Compute HMAC\r\n      var innerHash = hasher.finalize(messageUpdate);\r\n      hasher.reset();\r\n      var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\r\n\r\n      return hmac;\r\n    }\r\n  });\r\n}());\r\n\r\n\r\n(function () {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var Base = C_lib.Base;\r\n  var WordArray = C_lib.WordArray;\r\n  var C_algo = C.algo;\r\n  var SHA1 = C_algo.SHA1;\r\n  var HMAC = C_algo.HMAC;\r\n\r\n  /**\r\n   * Password-Based Key Derivation Function 2 algorithm.\r\n   */\r\n  var PBKDF2 = C_algo.PBKDF2 = Base.extend({\r\n    /**\r\n     * Configuration options.\r\n     *\r\n     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\r\n     * @property {Hasher} hasher The hasher to use. Default: SHA1\r\n     * @property {number} iterations The number of iterations to perform. Default: 1\r\n     */\r\n    cfg: Base.extend({\r\n      keySize: 128/32,\r\n      hasher: SHA1,\r\n      iterations: 1\r\n    }),\r\n\r\n    /**\r\n     * Initializes a newly created key derivation function.\r\n     *\r\n     * @param {Object} cfg (Optional) The configuration options to use for the derivation.\r\n     *\r\n     * @example\r\n     *\r\n     *     var kdf = CryptoJS.algo.PBKDF2.create();\r\n     *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\r\n     *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\r\n     */\r\n    init: function (cfg) {\r\n      this.cfg = this.cfg.extend(cfg);\r\n    },\r\n\r\n    /**\r\n     * Computes the Password-Based Key Derivation Function 2.\r\n     *\r\n     * @param {WordArray|string} password The password.\r\n     * @param {WordArray|string} salt A salt.\r\n     *\r\n     * @return {WordArray} The derived key.\r\n     *\r\n     * @example\r\n     *\r\n     *     var key = kdf.compute(password, salt);\r\n     */\r\n    compute: function (password, salt) {\r\n      // Shortcut\r\n      var cfg = this.cfg;\r\n\r\n      // Init HMAC\r\n      var hmac = HMAC.create(cfg.hasher, password);\r\n\r\n      // Initial values\r\n      var derivedKey = WordArray.create();\r\n      var blockIndex = WordArray.create([0x00000001]);\r\n\r\n      // Shortcuts\r\n      var derivedKeyWords = derivedKey.words;\r\n      var blockIndexWords = blockIndex.words;\r\n      var keySize = cfg.keySize;\r\n      var iterations = cfg.iterations;\r\n\r\n      // Generate key\r\n      while (derivedKeyWords.length < keySize) {\r\n        var block = hmac.update(salt).finalize(blockIndex);\r\n        hmac.reset();\r\n\r\n        // Shortcuts\r\n        var blockWords = block.words;\r\n        var blockWordsLength = blockWords.length;\r\n\r\n        // Iterations\r\n        var intermediate = block;\r\n        for (var i = 1; i < iterations; i++) {\r\n          intermediate = hmac.finalize(intermediate);\r\n          hmac.reset();\r\n\r\n          // Shortcut\r\n          var intermediateWords = intermediate.words;\r\n\r\n          // XOR intermediate with block\r\n          for (var j = 0; j < blockWordsLength; j++) {\r\n            blockWords[j] ^= intermediateWords[j];\r\n          }\r\n        }\r\n\r\n        derivedKey.concat(block);\r\n        blockIndexWords[0]++;\r\n      }\r\n      derivedKey.sigBytes = keySize * 4;\r\n\r\n      return derivedKey;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Computes the Password-Based Key Derivation Function 2.\r\n   *\r\n   * @param {WordArray|string} password The password.\r\n   * @param {WordArray|string} salt A salt.\r\n   * @param {Object} cfg (Optional) The configuration options to use for this computation.\r\n   *\r\n   * @return {WordArray} The derived key.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var key = CryptoJS.PBKDF2(password, salt);\r\n   *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\r\n   *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\r\n   */\r\n  C.PBKDF2 = function (password, salt, cfg) {\r\n    return PBKDF2.create(cfg).compute(password, salt);\r\n  };\r\n}());\r\n\r\n\r\n(function () {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var Base = C_lib.Base;\r\n  var WordArray = C_lib.WordArray;\r\n  var C_algo = C.algo;\r\n  var MD5 = C_algo.MD5;\r\n\r\n  /**\r\n   * This key derivation function is meant to conform with EVP_BytesToKey.\r\n   * www.openssl.org/docs/crypto/EVP_BytesToKey.html\r\n   */\r\n  var EvpKDF = C_algo.EvpKDF = Base.extend({\r\n    /**\r\n     * Configuration options.\r\n     *\r\n     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\r\n     * @property {Hasher} hasher The hash algorithm to use. Default: MD5\r\n     * @property {number} iterations The number of iterations to perform. Default: 1\r\n     */\r\n    cfg: Base.extend({\r\n      keySize: 128/32,\r\n      hasher: MD5,\r\n      iterations: 1\r\n    }),\r\n\r\n    /**\r\n     * Initializes a newly created key derivation function.\r\n     *\r\n     * @param {Object} cfg (Optional) The configuration options to use for the derivation.\r\n     *\r\n     * @example\r\n     *\r\n     *     var kdf = CryptoJS.algo.EvpKDF.create();\r\n     *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\r\n     *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\r\n     */\r\n    init: function (cfg) {\r\n      this.cfg = this.cfg.extend(cfg);\r\n    },\r\n\r\n    /**\r\n     * Derives a key from a password.\r\n     *\r\n     * @param {WordArray|string} password The password.\r\n     * @param {WordArray|string} salt A salt.\r\n     *\r\n     * @return {WordArray} The derived key.\r\n     *\r\n     * @example\r\n     *\r\n     *     var key = kdf.compute(password, salt);\r\n     */\r\n    compute: function (password, salt) {\r\n      // Shortcut\r\n      var cfg = this.cfg;\r\n\r\n      // Init hasher\r\n      var hasher = cfg.hasher.create();\r\n\r\n      // Initial values\r\n      var derivedKey = WordArray.create();\r\n\r\n      // Shortcuts\r\n      var derivedKeyWords = derivedKey.words;\r\n      var keySize = cfg.keySize;\r\n      var iterations = cfg.iterations;\r\n\r\n      // Generate key\r\n      while (derivedKeyWords.length < keySize) {\r\n        if (block) {\r\n          hasher.update(block);\r\n        }\r\n        var block = hasher.update(password).finalize(salt);\r\n        hasher.reset();\r\n\r\n        // Iterations\r\n        for (var i = 1; i < iterations; i++) {\r\n          block = hasher.finalize(block);\r\n          hasher.reset();\r\n        }\r\n\r\n        derivedKey.concat(block);\r\n      }\r\n      derivedKey.sigBytes = keySize * 4;\r\n\r\n      return derivedKey;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Derives a key from a password.\r\n   *\r\n   * @param {WordArray|string} password The password.\r\n   * @param {WordArray|string} salt A salt.\r\n   * @param {Object} cfg (Optional) The configuration options to use for this computation.\r\n   *\r\n   * @return {WordArray} The derived key.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var key = CryptoJS.EvpKDF(password, salt);\r\n   *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\r\n   *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\r\n   */\r\n  C.EvpKDF = function (password, salt, cfg) {\r\n    return EvpKDF.create(cfg).compute(password, salt);\r\n  };\r\n}());\r\n\r\n\r\n(function () {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var WordArray = C_lib.WordArray;\r\n  var C_algo = C.algo;\r\n  var SHA256 = C_algo.SHA256;\r\n\r\n  /**\r\n   * SHA-224 hash algorithm.\r\n   */\r\n  var SHA224 = C_algo.SHA224 = SHA256.extend({\r\n    _doReset: function () {\r\n      this._hash = new WordArray.init([\r\n        0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\r\n        0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\r\n      ]);\r\n    },\r\n\r\n    _doFinalize: function () {\r\n      var hash = SHA256._doFinalize.call(this);\r\n\r\n      hash.sigBytes -= 4;\r\n\r\n      return hash;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Shortcut function to the hasher's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   *\r\n   * @return {WordArray} The hash.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hash = CryptoJS.SHA224('message');\r\n   *     var hash = CryptoJS.SHA224(wordArray);\r\n   */\r\n  C.SHA224 = SHA256._createHelper(SHA224);\r\n\r\n  /**\r\n   * Shortcut function to the HMAC's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   * @param {WordArray|string} key The secret key.\r\n   *\r\n   * @return {WordArray} The HMAC.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hmac = CryptoJS.HmacSHA224(message, key);\r\n   */\r\n  C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\r\n}());\r\n\r\n\r\n(function (undefined) {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var Base = C_lib.Base;\r\n  var X32WordArray = C_lib.WordArray;\r\n\r\n  /**\r\n   * x64 namespace.\r\n   */\r\n  var C_x64 = C.x64 = {};\r\n\r\n  /**\r\n   * A 64-bit word.\r\n   */\r\n  var X64Word = C_x64.Word = Base.extend({\r\n    /**\r\n     * Initializes a newly created 64-bit word.\r\n     *\r\n     * @param {number} high The high 32 bits.\r\n     * @param {number} low The low 32 bits.\r\n     *\r\n     * @example\r\n     *\r\n     *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\r\n     */\r\n    init: function (high, low) {\r\n      this.high = high;\r\n      this.low = low;\r\n    }\r\n\r\n    /**\r\n     * Bitwise NOTs this word.\r\n     *\r\n     * @return {X64Word} A new x64-Word object after negating.\r\n     *\r\n     * @example\r\n     *\r\n     *     var negated = x64Word.not();\r\n     */\r\n    // not: function () {\r\n    // var high = ~this.high;\r\n    // var low = ~this.low;\r\n\r\n    // return X64Word.create(high, low);\r\n    // },\r\n\r\n    /**\r\n     * Bitwise ANDs this word with the passed word.\r\n     *\r\n     * @param {X64Word} word The x64-Word to AND with this word.\r\n     *\r\n     * @return {X64Word} A new x64-Word object after ANDing.\r\n     *\r\n     * @example\r\n     *\r\n     *     var anded = x64Word.and(anotherX64Word);\r\n     */\r\n    // and: function (word) {\r\n    // var high = this.high & word.high;\r\n    // var low = this.low & word.low;\r\n\r\n    // return X64Word.create(high, low);\r\n    // },\r\n\r\n    /**\r\n     * Bitwise ORs this word with the passed word.\r\n     *\r\n     * @param {X64Word} word The x64-Word to OR with this word.\r\n     *\r\n     * @return {X64Word} A new x64-Word object after ORing.\r\n     *\r\n     * @example\r\n     *\r\n     *     var ored = x64Word.or(anotherX64Word);\r\n     */\r\n    // or: function (word) {\r\n    // var high = this.high | word.high;\r\n    // var low = this.low | word.low;\r\n\r\n    // return X64Word.create(high, low);\r\n    // },\r\n\r\n    /**\r\n     * Bitwise XORs this word with the passed word.\r\n     *\r\n     * @param {X64Word} word The x64-Word to XOR with this word.\r\n     *\r\n     * @return {X64Word} A new x64-Word object after XORing.\r\n     *\r\n     * @example\r\n     *\r\n     *     var xored = x64Word.xor(anotherX64Word);\r\n     */\r\n    // xor: function (word) {\r\n    // var high = this.high ^ word.high;\r\n    // var low = this.low ^ word.low;\r\n\r\n    // return X64Word.create(high, low);\r\n    // },\r\n\r\n    /**\r\n     * Shifts this word n bits to the left.\r\n     *\r\n     * @param {number} n The number of bits to shift.\r\n     *\r\n     * @return {X64Word} A new x64-Word object after shifting.\r\n     *\r\n     * @example\r\n     *\r\n     *     var shifted = x64Word.shiftL(25);\r\n     */\r\n    // shiftL: function (n) {\r\n    // if (n < 32) {\r\n    // var high = (this.high << n) | (this.low >>> (32 - n));\r\n    // var low = this.low << n;\r\n    // } else {\r\n    // var high = this.low << (n - 32);\r\n    // var low = 0;\r\n    // }\r\n\r\n    // return X64Word.create(high, low);\r\n    // },\r\n\r\n    /**\r\n     * Shifts this word n bits to the right.\r\n     *\r\n     * @param {number} n The number of bits to shift.\r\n     *\r\n     * @return {X64Word} A new x64-Word object after shifting.\r\n     *\r\n     * @example\r\n     *\r\n     *     var shifted = x64Word.shiftR(7);\r\n     */\r\n    // shiftR: function (n) {\r\n    // if (n < 32) {\r\n    // var low = (this.low >>> n) | (this.high << (32 - n));\r\n    // var high = this.high >>> n;\r\n    // } else {\r\n    // var low = this.high >>> (n - 32);\r\n    // var high = 0;\r\n    // }\r\n\r\n    // return X64Word.create(high, low);\r\n    // },\r\n\r\n    /**\r\n     * Rotates this word n bits to the left.\r\n     *\r\n     * @param {number} n The number of bits to rotate.\r\n     *\r\n     * @return {X64Word} A new x64-Word object after rotating.\r\n     *\r\n     * @example\r\n     *\r\n     *     var rotated = x64Word.rotL(25);\r\n     */\r\n    // rotL: function (n) {\r\n    // return this.shiftL(n).or(this.shiftR(64 - n));\r\n    // },\r\n\r\n    /**\r\n     * Rotates this word n bits to the right.\r\n     *\r\n     * @param {number} n The number of bits to rotate.\r\n     *\r\n     * @return {X64Word} A new x64-Word object after rotating.\r\n     *\r\n     * @example\r\n     *\r\n     *     var rotated = x64Word.rotR(7);\r\n     */\r\n    // rotR: function (n) {\r\n    // return this.shiftR(n).or(this.shiftL(64 - n));\r\n    // },\r\n\r\n    /**\r\n     * Adds this word with the passed word.\r\n     *\r\n     * @param {X64Word} word The x64-Word to add with this word.\r\n     *\r\n     * @return {X64Word} A new x64-Word object after adding.\r\n     *\r\n     * @example\r\n     *\r\n     *     var added = x64Word.add(anotherX64Word);\r\n     */\r\n    // add: function (word) {\r\n    // var low = (this.low + word.low) | 0;\r\n    // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\r\n    // var high = (this.high + word.high + carry) | 0;\r\n\r\n    // return X64Word.create(high, low);\r\n    // }\r\n  });\r\n\r\n  /**\r\n   * An array of 64-bit words.\r\n   *\r\n   * @property {Array} words The array of CryptoJS.x64.Word objects.\r\n   * @property {number} sigBytes The number of significant bytes in this word array.\r\n   */\r\n  var X64WordArray = C_x64.WordArray = Base.extend({\r\n    /**\r\n     * Initializes a newly created word array.\r\n     *\r\n     * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\r\n     * @param {number} sigBytes (Optional) The number of significant bytes in the words.\r\n     *\r\n     * @example\r\n     *\r\n     *     var wordArray = CryptoJS.x64.WordArray.create();\r\n     *\r\n     *     var wordArray = CryptoJS.x64.WordArray.create([\r\n     *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\r\n     *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\r\n     *     ]);\r\n     *\r\n     *     var wordArray = CryptoJS.x64.WordArray.create([\r\n     *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\r\n     *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\r\n     *     ], 10);\r\n     */\r\n    init: function (words, sigBytes) {\r\n      words = this.words = words || [];\r\n\r\n      if (sigBytes != undefined) {\r\n        this.sigBytes = sigBytes;\r\n      } else {\r\n        this.sigBytes = words.length * 8;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Converts this 64-bit word array to a 32-bit word array.\r\n     *\r\n     * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\r\n     *\r\n     * @example\r\n     *\r\n     *     var x32WordArray = x64WordArray.toX32();\r\n     */\r\n    toX32: function () {\r\n      // Shortcuts\r\n      var x64Words = this.words;\r\n      var x64WordsLength = x64Words.length;\r\n\r\n      // Convert\r\n      var x32Words = [];\r\n      for (var i = 0; i < x64WordsLength; i++) {\r\n        var x64Word = x64Words[i];\r\n        x32Words.push(x64Word.high);\r\n        x32Words.push(x64Word.low);\r\n      }\r\n\r\n      return X32WordArray.create(x32Words, this.sigBytes);\r\n    },\r\n\r\n    /**\r\n     * Creates a copy of this word array.\r\n     *\r\n     * @return {X64WordArray} The clone.\r\n     *\r\n     * @example\r\n     *\r\n     *     var clone = x64WordArray.clone();\r\n     */\r\n    clone: function () {\r\n      var clone = Base.clone.call(this);\r\n\r\n      // Clone \"words\" array\r\n      var words = clone.words = this.words.slice(0);\r\n\r\n      // Clone each X64Word object\r\n      var wordsLength = words.length;\r\n      for (var i = 0; i < wordsLength; i++) {\r\n        words[i] = words[i].clone();\r\n      }\r\n\r\n      return clone;\r\n    }\r\n  });\r\n}());\r\n\r\n\r\n(function (Math) {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var WordArray = C_lib.WordArray;\r\n  var Hasher = C_lib.Hasher;\r\n  var C_x64 = C.x64;\r\n  var X64Word = C_x64.Word;\r\n  var C_algo = C.algo;\r\n\r\n  // Constants tables\r\n  var RHO_OFFSETS = [];\r\n  var PI_INDEXES  = [];\r\n  var ROUND_CONSTANTS = [];\r\n\r\n  // Compute Constants\r\n  (function () {\r\n    // Compute rho offset constants\r\n    var x = 1, y = 0;\r\n    for (var t = 0; t < 24; t++) {\r\n      RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\r\n\r\n      var newX = y % 5;\r\n      var newY = (2 * x + 3 * y) % 5;\r\n      x = newX;\r\n      y = newY;\r\n    }\r\n\r\n    // Compute pi index constants\r\n    for (var x = 0; x < 5; x++) {\r\n      for (var y = 0; y < 5; y++) {\r\n        PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\r\n      }\r\n    }\r\n\r\n    // Compute round constants\r\n    var LFSR = 0x01;\r\n    for (var i = 0; i < 24; i++) {\r\n      var roundConstantMsw = 0;\r\n      var roundConstantLsw = 0;\r\n\r\n      for (var j = 0; j < 7; j++) {\r\n        if (LFSR & 0x01) {\r\n          var bitPosition = (1 << j) - 1;\r\n          if (bitPosition < 32) {\r\n            roundConstantLsw ^= 1 << bitPosition;\r\n          } else /* if (bitPosition >= 32) */ {\r\n            roundConstantMsw ^= 1 << (bitPosition - 32);\r\n          }\r\n        }\r\n\r\n        // Compute next LFSR\r\n        if (LFSR & 0x80) {\r\n          // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\r\n          LFSR = (LFSR << 1) ^ 0x71;\r\n        } else {\r\n          LFSR <<= 1;\r\n        }\r\n      }\r\n\r\n      ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\r\n    }\r\n  }());\r\n\r\n  // Reusable objects for temporary values\r\n  var T = [];\r\n  (function () {\r\n    for (var i = 0; i < 25; i++) {\r\n      T[i] = X64Word.create();\r\n    }\r\n  }());\r\n\r\n  /**\r\n   * SHA-3 hash algorithm.\r\n   */\r\n  var SHA3 = C_algo.SHA3 = Hasher.extend({\r\n    /**\r\n     * Configuration options.\r\n     *\r\n     * @property {number} outputLength\r\n     *   The desired number of bits in the output hash.\r\n     *   Only values permitted are: 224, 256, 384, 512.\r\n     *   Default: 512\r\n     */\r\n    cfg: Hasher.cfg.extend({\r\n      outputLength: 512\r\n    }),\r\n\r\n    _doReset: function () {\r\n      var state = this._state = []\r\n      for (var i = 0; i < 25; i++) {\r\n        state[i] = new X64Word.init();\r\n      }\r\n\r\n      this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\r\n    },\r\n\r\n    _doProcessBlock: function (M, offset) {\r\n      // Shortcuts\r\n      var state = this._state;\r\n      var nBlockSizeLanes = this.blockSize / 2;\r\n\r\n      // Absorb\r\n      for (var i = 0; i < nBlockSizeLanes; i++) {\r\n        // Shortcuts\r\n        var M2i  = M[offset + 2 * i];\r\n        var M2i1 = M[offset + 2 * i + 1];\r\n\r\n        // Swap endian\r\n        M2i = (\r\n          (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\r\n          (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\r\n        );\r\n        M2i1 = (\r\n          (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\r\n          (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\r\n        );\r\n\r\n        // Absorb message into state\r\n        var lane = state[i];\r\n        lane.high ^= M2i1;\r\n        lane.low  ^= M2i;\r\n      }\r\n\r\n      // Rounds\r\n      for (var round = 0; round < 24; round++) {\r\n        // Theta\r\n        for (var x = 0; x < 5; x++) {\r\n          // Mix column lanes\r\n          var tMsw = 0, tLsw = 0;\r\n          for (var y = 0; y < 5; y++) {\r\n            var lane = state[x + 5 * y];\r\n            tMsw ^= lane.high;\r\n            tLsw ^= lane.low;\r\n          }\r\n\r\n          // Temporary values\r\n          var Tx = T[x];\r\n          Tx.high = tMsw;\r\n          Tx.low  = tLsw;\r\n        }\r\n        for (var x = 0; x < 5; x++) {\r\n          // Shortcuts\r\n          var Tx4 = T[(x + 4) % 5];\r\n          var Tx1 = T[(x + 1) % 5];\r\n          var Tx1Msw = Tx1.high;\r\n          var Tx1Lsw = Tx1.low;\r\n\r\n          // Mix surrounding columns\r\n          var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\r\n          var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\r\n          for (var y = 0; y < 5; y++) {\r\n            var lane = state[x + 5 * y];\r\n            lane.high ^= tMsw;\r\n            lane.low  ^= tLsw;\r\n          }\r\n        }\r\n\r\n        // Rho Pi\r\n        for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\r\n          // Shortcuts\r\n          var lane = state[laneIndex];\r\n          var laneMsw = lane.high;\r\n          var laneLsw = lane.low;\r\n          var rhoOffset = RHO_OFFSETS[laneIndex];\r\n\r\n          // Rotate lanes\r\n          if (rhoOffset < 32) {\r\n            var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\r\n            var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\r\n          } else /* if (rhoOffset >= 32) */ {\r\n            var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\r\n            var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\r\n          }\r\n\r\n          // Transpose lanes\r\n          var TPiLane = T[PI_INDEXES[laneIndex]];\r\n          TPiLane.high = tMsw;\r\n          TPiLane.low  = tLsw;\r\n        }\r\n\r\n        // Rho pi at x = y = 0\r\n        var T0 = T[0];\r\n        var state0 = state[0];\r\n        T0.high = state0.high;\r\n        T0.low  = state0.low;\r\n\r\n        // Chi\r\n        for (var x = 0; x < 5; x++) {\r\n          for (var y = 0; y < 5; y++) {\r\n            // Shortcuts\r\n            var laneIndex = x + 5 * y;\r\n            var lane = state[laneIndex];\r\n            var TLane = T[laneIndex];\r\n            var Tx1Lane = T[((x + 1) % 5) + 5 * y];\r\n            var Tx2Lane = T[((x + 2) % 5) + 5 * y];\r\n\r\n            // Mix rows\r\n            lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\r\n            lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\r\n          }\r\n        }\r\n\r\n        // Iota\r\n        var lane = state[0];\r\n        var roundConstant = ROUND_CONSTANTS[round];\r\n        lane.high ^= roundConstant.high;\r\n        lane.low  ^= roundConstant.low;;\r\n      }\r\n    },\r\n\r\n    _doFinalize: function () {\r\n      // Shortcuts\r\n      var data = this._data;\r\n      var dataWords = data.words;\r\n      var nBitsTotal = this._nDataBytes * 8;\r\n      var nBitsLeft = data.sigBytes * 8;\r\n      var blockSizeBits = this.blockSize * 32;\r\n\r\n      // Add padding\r\n      dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\r\n      dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\r\n      data.sigBytes = dataWords.length * 4;\r\n\r\n      // Hash final blocks\r\n      this._process();\r\n\r\n      // Shortcuts\r\n      var state = this._state;\r\n      var outputLengthBytes = this.cfg.outputLength / 8;\r\n      var outputLengthLanes = outputLengthBytes / 8;\r\n\r\n      // Squeeze\r\n      var hashWords = [];\r\n      for (var i = 0; i < outputLengthLanes; i++) {\r\n        // Shortcuts\r\n        var lane = state[i];\r\n        var laneMsw = lane.high;\r\n        var laneLsw = lane.low;\r\n\r\n        // Swap endian\r\n        laneMsw = (\r\n          (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\r\n          (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\r\n        );\r\n        laneLsw = (\r\n          (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\r\n          (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\r\n        );\r\n\r\n        // Squeeze state to retrieve hash\r\n        hashWords.push(laneLsw);\r\n        hashWords.push(laneMsw);\r\n      }\r\n\r\n      // Return final computed hash\r\n      return new WordArray.init(hashWords, outputLengthBytes);\r\n    },\r\n\r\n    clone: function () {\r\n      var clone = Hasher.clone.call(this);\r\n\r\n      var state = clone._state = this._state.slice(0);\r\n      for (var i = 0; i < 25; i++) {\r\n        state[i] = state[i].clone();\r\n      }\r\n\r\n      return clone;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Shortcut function to the hasher's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   *\r\n   * @return {WordArray} The hash.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hash = CryptoJS.SHA3('message');\r\n   *     var hash = CryptoJS.SHA3(wordArray);\r\n   */\r\n  C.SHA3 = Hasher._createHelper(SHA3);\r\n\r\n  /**\r\n   * Shortcut function to the HMAC's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   * @param {WordArray|string} key The secret key.\r\n   *\r\n   * @return {WordArray} The HMAC.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hmac = CryptoJS.HmacSHA3(message, key);\r\n   */\r\n  C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\r\n}(Math));\r\n\r\n\r\n(function () {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var Hasher = C_lib.Hasher;\r\n  var C_x64 = C.x64;\r\n  var X64Word = C_x64.Word;\r\n  var X64WordArray = C_x64.WordArray;\r\n  var C_algo = C.algo;\r\n\r\n  function X64Word_create() {\r\n    return X64Word.create.apply(X64Word, arguments);\r\n  }\r\n\r\n  // Constants\r\n  var K = [\r\n    X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\r\n    X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\r\n    X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\r\n    X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\r\n    X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\r\n    X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\r\n    X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\r\n    X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\r\n    X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\r\n    X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\r\n    X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\r\n    X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\r\n    X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\r\n    X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\r\n    X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\r\n    X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\r\n    X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\r\n    X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\r\n    X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\r\n    X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\r\n    X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\r\n    X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\r\n    X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\r\n    X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\r\n    X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\r\n    X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\r\n    X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\r\n    X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\r\n    X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\r\n    X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\r\n    X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\r\n    X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\r\n    X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\r\n    X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\r\n    X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\r\n    X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\r\n    X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\r\n    X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\r\n    X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\r\n    X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\r\n  ];\r\n\r\n  // Reusable objects\r\n  var W = [];\r\n  (function () {\r\n    for (var i = 0; i < 80; i++) {\r\n      W[i] = X64Word_create();\r\n    }\r\n  }());\r\n\r\n  /**\r\n   * SHA-512 hash algorithm.\r\n   */\r\n  var SHA512 = C_algo.SHA512 = Hasher.extend({\r\n    _doReset: function () {\r\n      this._hash = new X64WordArray.init([\r\n        new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\r\n        new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\r\n        new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\r\n        new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\r\n      ]);\r\n    },\r\n\r\n    _doProcessBlock: function (M, offset) {\r\n      // Shortcuts\r\n      var H = this._hash.words;\r\n\r\n      var H0 = H[0];\r\n      var H1 = H[1];\r\n      var H2 = H[2];\r\n      var H3 = H[3];\r\n      var H4 = H[4];\r\n      var H5 = H[5];\r\n      var H6 = H[6];\r\n      var H7 = H[7];\r\n\r\n      var H0h = H0.high;\r\n      var H0l = H0.low;\r\n      var H1h = H1.high;\r\n      var H1l = H1.low;\r\n      var H2h = H2.high;\r\n      var H2l = H2.low;\r\n      var H3h = H3.high;\r\n      var H3l = H3.low;\r\n      var H4h = H4.high;\r\n      var H4l = H4.low;\r\n      var H5h = H5.high;\r\n      var H5l = H5.low;\r\n      var H6h = H6.high;\r\n      var H6l = H6.low;\r\n      var H7h = H7.high;\r\n      var H7l = H7.low;\r\n\r\n      // Working variables\r\n      var ah = H0h;\r\n      var al = H0l;\r\n      var bh = H1h;\r\n      var bl = H1l;\r\n      var ch = H2h;\r\n      var cl = H2l;\r\n      var dh = H3h;\r\n      var dl = H3l;\r\n      var eh = H4h;\r\n      var el = H4l;\r\n      var fh = H5h;\r\n      var fl = H5l;\r\n      var gh = H6h;\r\n      var gl = H6l;\r\n      var hh = H7h;\r\n      var hl = H7l;\r\n\r\n      // Rounds\r\n      for (var i = 0; i < 80; i++) {\r\n        // Shortcut\r\n        var Wi = W[i];\r\n\r\n        // Extend message\r\n        if (i < 16) {\r\n          var Wih = Wi.high = M[offset + i * 2]     | 0;\r\n          var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\r\n        } else {\r\n          // Gamma0\r\n          var gamma0x  = W[i - 15];\r\n          var gamma0xh = gamma0x.high;\r\n          var gamma0xl = gamma0x.low;\r\n          var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\r\n          var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\r\n\r\n          // Gamma1\r\n          var gamma1x  = W[i - 2];\r\n          var gamma1xh = gamma1x.high;\r\n          var gamma1xl = gamma1x.low;\r\n          var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\r\n          var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\r\n\r\n          // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\r\n          var Wi7  = W[i - 7];\r\n          var Wi7h = Wi7.high;\r\n          var Wi7l = Wi7.low;\r\n\r\n          var Wi16  = W[i - 16];\r\n          var Wi16h = Wi16.high;\r\n          var Wi16l = Wi16.low;\r\n\r\n          var Wil = gamma0l + Wi7l;\r\n          var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\r\n          var Wil = Wil + gamma1l;\r\n          var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\r\n          var Wil = Wil + Wi16l;\r\n          var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\r\n\r\n          Wi.high = Wih;\r\n          Wi.low  = Wil;\r\n        }\r\n\r\n        var chh  = (eh & fh) ^ (~eh & gh);\r\n        var chl  = (el & fl) ^ (~el & gl);\r\n        var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\r\n        var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\r\n\r\n        var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\r\n        var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\r\n        var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\r\n        var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\r\n\r\n        // t1 = h + sigma1 + ch + K[i] + W[i]\r\n        var Ki  = K[i];\r\n        var Kih = Ki.high;\r\n        var Kil = Ki.low;\r\n\r\n        var t1l = hl + sigma1l;\r\n        var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\r\n        var t1l = t1l + chl;\r\n        var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\r\n        var t1l = t1l + Kil;\r\n        var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\r\n        var t1l = t1l + Wil;\r\n        var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\r\n\r\n        // t2 = sigma0 + maj\r\n        var t2l = sigma0l + majl;\r\n        var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\r\n\r\n        // Update working variables\r\n        hh = gh;\r\n        hl = gl;\r\n        gh = fh;\r\n        gl = fl;\r\n        fh = eh;\r\n        fl = el;\r\n        el = (dl + t1l) | 0;\r\n        eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\r\n        dh = ch;\r\n        dl = cl;\r\n        ch = bh;\r\n        cl = bl;\r\n        bh = ah;\r\n        bl = al;\r\n        al = (t1l + t2l) | 0;\r\n        ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\r\n      }\r\n\r\n      // Intermediate hash value\r\n      H0l = H0.low  = (H0l + al);\r\n      H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\r\n      H1l = H1.low  = (H1l + bl);\r\n      H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\r\n      H2l = H2.low  = (H2l + cl);\r\n      H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\r\n      H3l = H3.low  = (H3l + dl);\r\n      H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\r\n      H4l = H4.low  = (H4l + el);\r\n      H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\r\n      H5l = H5.low  = (H5l + fl);\r\n      H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\r\n      H6l = H6.low  = (H6l + gl);\r\n      H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\r\n      H7l = H7.low  = (H7l + hl);\r\n      H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\r\n    },\r\n\r\n    _doFinalize: function () {\r\n      // Shortcuts\r\n      var data = this._data;\r\n      var dataWords = data.words;\r\n\r\n      var nBitsTotal = this._nDataBytes * 8;\r\n      var nBitsLeft = data.sigBytes * 8;\r\n\r\n      // Add padding\r\n      dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n      dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\r\n      dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\r\n      data.sigBytes = dataWords.length * 4;\r\n\r\n      // Hash final blocks\r\n      this._process();\r\n\r\n      // Convert hash to 32-bit word array before returning\r\n      var hash = this._hash.toX32();\r\n\r\n      // Return final computed hash\r\n      return hash;\r\n    },\r\n\r\n    clone: function () {\r\n      var clone = Hasher.clone.call(this);\r\n      clone._hash = this._hash.clone();\r\n\r\n      return clone;\r\n    },\r\n\r\n    blockSize: 1024/32\r\n  });\r\n\r\n  /**\r\n   * Shortcut function to the hasher's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   *\r\n   * @return {WordArray} The hash.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hash = CryptoJS.SHA512('message');\r\n   *     var hash = CryptoJS.SHA512(wordArray);\r\n   */\r\n  C.SHA512 = Hasher._createHelper(SHA512);\r\n\r\n  /**\r\n   * Shortcut function to the HMAC's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   * @param {WordArray|string} key The secret key.\r\n   *\r\n   * @return {WordArray} The HMAC.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hmac = CryptoJS.HmacSHA512(message, key);\r\n   */\r\n  C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\r\n}());\r\n\r\n\r\n(function () {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_x64 = C.x64;\r\n  var X64Word = C_x64.Word;\r\n  var X64WordArray = C_x64.WordArray;\r\n  var C_algo = C.algo;\r\n  var SHA512 = C_algo.SHA512;\r\n\r\n  /**\r\n   * SHA-384 hash algorithm.\r\n   */\r\n  var SHA384 = C_algo.SHA384 = SHA512.extend({\r\n    _doReset: function () {\r\n      this._hash = new X64WordArray.init([\r\n        new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\r\n        new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\r\n        new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\r\n        new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\r\n      ]);\r\n    },\r\n\r\n    _doFinalize: function () {\r\n      var hash = SHA512._doFinalize.call(this);\r\n\r\n      hash.sigBytes -= 16;\r\n\r\n      return hash;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Shortcut function to the hasher's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   *\r\n   * @return {WordArray} The hash.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hash = CryptoJS.SHA384('message');\r\n   *     var hash = CryptoJS.SHA384(wordArray);\r\n   */\r\n  C.SHA384 = SHA512._createHelper(SHA384);\r\n\r\n  /**\r\n   * Shortcut function to the HMAC's object interface.\r\n   *\r\n   * @param {WordArray|string} message The message to hash.\r\n   * @param {WordArray|string} key The secret key.\r\n   *\r\n   * @return {WordArray} The HMAC.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hmac = CryptoJS.HmacSHA384(message, key);\r\n   */\r\n  C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\r\n}());\r\n\r\n\r\n/**\r\n * Cipher core components.\r\n */\r\nCryptoJS.lib.Cipher || (function (undefined) {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var Base = C_lib.Base;\r\n  var WordArray = C_lib.WordArray;\r\n  var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\r\n  var C_enc = C.enc;\r\n  var Utf8 = C_enc.Utf8;\r\n  var Base64 = C_enc.Base64;\r\n  var C_algo = C.algo;\r\n  var EvpKDF = C_algo.EvpKDF;\r\n\r\n  /**\r\n   * Abstract base cipher template.\r\n   *\r\n   * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\r\n   * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\r\n   * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\r\n   * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\r\n   */\r\n  var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\r\n    /**\r\n     * Configuration options.\r\n     *\r\n     * @property {WordArray} iv The IV to use for this operation.\r\n     */\r\n    cfg: Base.extend(),\r\n\r\n    /**\r\n     * Creates this cipher in encryption mode.\r\n     *\r\n     * @param {WordArray} key The key.\r\n     * @param {Object} cfg (Optional) The configuration options to use for this operation.\r\n     *\r\n     * @return {Cipher} A cipher instance.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\r\n     */\r\n    createEncryptor: function (key, cfg) {\r\n      return this.create(this._ENC_XFORM_MODE, key, cfg);\r\n    },\r\n\r\n    /**\r\n     * Creates this cipher in decryption mode.\r\n     *\r\n     * @param {WordArray} key The key.\r\n     * @param {Object} cfg (Optional) The configuration options to use for this operation.\r\n     *\r\n     * @return {Cipher} A cipher instance.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\r\n     */\r\n    createDecryptor: function (key, cfg) {\r\n      return this.create(this._DEC_XFORM_MODE, key, cfg);\r\n    },\r\n\r\n    /**\r\n     * Initializes a newly created cipher.\r\n     *\r\n     * @param {number} xformMode Either the encryption or decryption transormation mode constant.\r\n     * @param {WordArray} key The key.\r\n     * @param {Object} cfg (Optional) The configuration options to use for this operation.\r\n     *\r\n     * @example\r\n     *\r\n     *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\r\n     */\r\n    init: function (xformMode, key, cfg) {\r\n      // Apply config defaults\r\n      this.cfg = this.cfg.extend(cfg);\r\n\r\n      // Store transform mode and key\r\n      this._xformMode = xformMode;\r\n      this._key = key;\r\n\r\n      // Set initial values\r\n      this.reset();\r\n    },\r\n\r\n    /**\r\n     * Resets this cipher to its initial state.\r\n     *\r\n     * @example\r\n     *\r\n     *     cipher.reset();\r\n     */\r\n    reset: function () {\r\n      // Reset data buffer\r\n      BufferedBlockAlgorithm.reset.call(this);\r\n\r\n      // Perform concrete-cipher logic\r\n      this._doReset();\r\n    },\r\n\r\n    /**\r\n     * Adds data to be encrypted or decrypted.\r\n     *\r\n     * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\r\n     *\r\n     * @return {WordArray} The data after processing.\r\n     *\r\n     * @example\r\n     *\r\n     *     var encrypted = cipher.process('data');\r\n     *     var encrypted = cipher.process(wordArray);\r\n     */\r\n    process: function (dataUpdate) {\r\n      // Append\r\n      this._append(dataUpdate);\r\n\r\n      // Process available blocks\r\n      return this._process();\r\n    },\r\n\r\n    /**\r\n     * Finalizes the encryption or decryption process.\r\n     * Note that the finalize operation is effectively a destructive, read-once operation.\r\n     *\r\n     * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\r\n     *\r\n     * @return {WordArray} The data after final processing.\r\n     *\r\n     * @example\r\n     *\r\n     *     var encrypted = cipher.finalize();\r\n     *     var encrypted = cipher.finalize('data');\r\n     *     var encrypted = cipher.finalize(wordArray);\r\n     */\r\n    finalize: function (dataUpdate) {\r\n      // Final data update\r\n      if (dataUpdate) {\r\n        this._append(dataUpdate);\r\n      }\r\n\r\n      // Perform concrete-cipher logic\r\n      var finalProcessedData = this._doFinalize();\r\n\r\n      return finalProcessedData;\r\n    },\r\n\r\n    keySize: 128/32,\r\n\r\n    ivSize: 128/32,\r\n\r\n    _ENC_XFORM_MODE: 1,\r\n\r\n    _DEC_XFORM_MODE: 2,\r\n\r\n    /**\r\n     * Creates shortcut functions to a cipher's object interface.\r\n     *\r\n     * @param {Cipher} cipher The cipher to create a helper for.\r\n     *\r\n     * @return {Object} An object with encrypt and decrypt shortcut functions.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\r\n     */\r\n    _createHelper: (function () {\r\n      function selectCipherStrategy(key) {\r\n        if (typeof key == 'string') {\r\n          return PasswordBasedCipher;\r\n        } else {\r\n          return SerializableCipher;\r\n        }\r\n      }\r\n\r\n      return function (cipher) {\r\n        return {\r\n          encrypt: function (message, key, cfg) {\r\n            return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\r\n          },\r\n\r\n          decrypt: function (ciphertext, key, cfg) {\r\n            return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\r\n          }\r\n        };\r\n      };\r\n    }())\r\n  });\r\n\r\n  /**\r\n   * Abstract base stream cipher template.\r\n   *\r\n   * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\r\n   */\r\n  var StreamCipher = C_lib.StreamCipher = Cipher.extend({\r\n    _doFinalize: function () {\r\n      // Process partial blocks\r\n      var finalProcessedBlocks = this._process(!!'flush');\r\n\r\n      return finalProcessedBlocks;\r\n    },\r\n\r\n    blockSize: 1\r\n  });\r\n\r\n  /**\r\n   * Mode namespace.\r\n   */\r\n  var C_mode = C.mode = {};\r\n\r\n  /**\r\n   * Abstract base block cipher mode template.\r\n   */\r\n  var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\r\n    /**\r\n     * Creates this mode for encryption.\r\n     *\r\n     * @param {Cipher} cipher A block cipher instance.\r\n     * @param {Array} iv The IV words.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\r\n     */\r\n    createEncryptor: function (cipher, iv) {\r\n      return this.Encryptor.create(cipher, iv);\r\n    },\r\n\r\n    /**\r\n     * Creates this mode for decryption.\r\n     *\r\n     * @param {Cipher} cipher A block cipher instance.\r\n     * @param {Array} iv The IV words.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\r\n     */\r\n    createDecryptor: function (cipher, iv) {\r\n      return this.Decryptor.create(cipher, iv);\r\n    },\r\n\r\n    /**\r\n     * Initializes a newly created mode.\r\n     *\r\n     * @param {Cipher} cipher A block cipher instance.\r\n     * @param {Array} iv The IV words.\r\n     *\r\n     * @example\r\n     *\r\n     *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\r\n     */\r\n    init: function (cipher, iv) {\r\n      this._cipher = cipher;\r\n      this._iv = iv;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Cipher Block Chaining mode.\r\n   */\r\n  var CBC = C_mode.CBC = (function () {\r\n    /**\r\n     * Abstract base CBC mode.\r\n     */\r\n    var CBC = BlockCipherMode.extend();\r\n\r\n    /**\r\n     * CBC encryptor.\r\n     */\r\n    CBC.Encryptor = CBC.extend({\r\n      /**\r\n       * Processes the data block at offset.\r\n       *\r\n       * @param {Array} words The data words to operate on.\r\n       * @param {number} offset The offset where the block starts.\r\n       *\r\n       * @example\r\n       *\r\n       *     mode.processBlock(data.words, offset);\r\n       */\r\n      processBlock: function (words, offset) {\r\n        // Shortcuts\r\n        var cipher = this._cipher;\r\n        var blockSize = cipher.blockSize;\r\n\r\n        // XOR and encrypt\r\n        xorBlock.call(this, words, offset, blockSize);\r\n        cipher.encryptBlock(words, offset);\r\n\r\n        // Remember this block to use with next block\r\n        this._prevBlock = words.slice(offset, offset + blockSize);\r\n      }\r\n    });\r\n\r\n    /**\r\n     * CBC decryptor.\r\n     */\r\n    CBC.Decryptor = CBC.extend({\r\n      /**\r\n       * Processes the data block at offset.\r\n       *\r\n       * @param {Array} words The data words to operate on.\r\n       * @param {number} offset The offset where the block starts.\r\n       *\r\n       * @example\r\n       *\r\n       *     mode.processBlock(data.words, offset);\r\n       */\r\n      processBlock: function (words, offset) {\r\n        // Shortcuts\r\n        var cipher = this._cipher;\r\n        var blockSize = cipher.blockSize;\r\n\r\n        // Remember this block to use with next block\r\n        var thisBlock = words.slice(offset, offset + blockSize);\r\n\r\n        // Decrypt and XOR\r\n        cipher.decryptBlock(words, offset);\r\n        xorBlock.call(this, words, offset, blockSize);\r\n\r\n        // This block becomes the previous block\r\n        this._prevBlock = thisBlock;\r\n      }\r\n    });\r\n\r\n    function xorBlock(words, offset, blockSize) {\r\n      // Shortcut\r\n      var iv = this._iv;\r\n\r\n      // Choose mixing block\r\n      if (iv) {\r\n        var block = iv;\r\n\r\n        // Remove IV for subsequent blocks\r\n        this._iv = undefined;\r\n      } else {\r\n        var block = this._prevBlock;\r\n      }\r\n\r\n      // XOR blocks\r\n      for (var i = 0; i < blockSize; i++) {\r\n        words[offset + i] ^= block[i];\r\n      }\r\n    }\r\n\r\n    return CBC;\r\n  }());\r\n\r\n  /**\r\n   * Padding namespace.\r\n   */\r\n  var C_pad = C.pad = {};\r\n\r\n  /**\r\n   * PKCS #5/7 padding strategy.\r\n   */\r\n  var Pkcs7 = C_pad.Pkcs7 = {\r\n    /**\r\n     * Pads data using the algorithm defined in PKCS #5/7.\r\n     *\r\n     * @param {WordArray} data The data to pad.\r\n     * @param {number} blockSize The multiple that the data should be padded to.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\r\n     */\r\n    pad: function (data, blockSize) {\r\n      // Shortcut\r\n      var blockSizeBytes = blockSize * 4;\r\n\r\n      // Count padding bytes\r\n      var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\r\n\r\n      // Create padding word\r\n      var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\r\n\r\n      // Create padding\r\n      var paddingWords = [];\r\n      for (var i = 0; i < nPaddingBytes; i += 4) {\r\n        paddingWords.push(paddingWord);\r\n      }\r\n      var padding = WordArray.create(paddingWords, nPaddingBytes);\r\n\r\n      // Add padding\r\n      data.concat(padding);\r\n    },\r\n\r\n    /**\r\n     * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\r\n     *\r\n     * @param {WordArray} data The data to unpad.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     CryptoJS.pad.Pkcs7.unpad(wordArray);\r\n     */\r\n    unpad: function (data) {\r\n      // Get number of padding bytes from last byte\r\n      var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\r\n\r\n      // Remove padding\r\n      data.sigBytes -= nPaddingBytes;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Abstract base block cipher template.\r\n   *\r\n   * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\r\n   */\r\n  var BlockCipher = C_lib.BlockCipher = Cipher.extend({\r\n    /**\r\n     * Configuration options.\r\n     *\r\n     * @property {Mode} mode The block mode to use. Default: CBC\r\n     * @property {Padding} padding The padding strategy to use. Default: Pkcs7\r\n     */\r\n    cfg: Cipher.cfg.extend({\r\n      mode: CBC,\r\n      padding: Pkcs7\r\n    }),\r\n\r\n    reset: function () {\r\n      // Reset cipher\r\n      Cipher.reset.call(this);\r\n\r\n      // Shortcuts\r\n      var cfg = this.cfg;\r\n      var iv = cfg.iv;\r\n      var mode = cfg.mode;\r\n\r\n      // Reset block mode\r\n      if (this._xformMode == this._ENC_XFORM_MODE) {\r\n        var modeCreator = mode.createEncryptor;\r\n      } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\r\n        var modeCreator = mode.createDecryptor;\r\n        // Keep at least one block in the buffer for unpadding\r\n        this._minBufferSize = 1;\r\n      }\r\n\r\n      if (this._mode && this._mode.__creator == modeCreator) {\r\n        this._mode.init(this, iv && iv.words);\r\n      } else {\r\n        this._mode = modeCreator.call(mode, this, iv && iv.words);\r\n        this._mode.__creator = modeCreator;\r\n      }\r\n    },\r\n\r\n    _doProcessBlock: function (words, offset) {\r\n      this._mode.processBlock(words, offset);\r\n    },\r\n\r\n    _doFinalize: function () {\r\n      // Shortcut\r\n      var padding = this.cfg.padding;\r\n\r\n      // Finalize\r\n      if (this._xformMode == this._ENC_XFORM_MODE) {\r\n        // Pad data\r\n        padding.pad(this._data, this.blockSize);\r\n\r\n        // Process final blocks\r\n        var finalProcessedBlocks = this._process(!!'flush');\r\n      } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\r\n        // Process final blocks\r\n        var finalProcessedBlocks = this._process(!!'flush');\r\n\r\n        // Unpad data\r\n        padding.unpad(finalProcessedBlocks);\r\n      }\r\n\r\n      return finalProcessedBlocks;\r\n    },\r\n\r\n    blockSize: 128/32\r\n  });\r\n\r\n  /**\r\n   * A collection of cipher parameters.\r\n   *\r\n   * @property {WordArray} ciphertext The raw ciphertext.\r\n   * @property {WordArray} key The key to this ciphertext.\r\n   * @property {WordArray} iv The IV used in the ciphering operation.\r\n   * @property {WordArray} salt The salt used with a key derivation function.\r\n   * @property {Cipher} algorithm The cipher algorithm.\r\n   * @property {Mode} mode The block mode used in the ciphering operation.\r\n   * @property {Padding} padding The padding scheme used in the ciphering operation.\r\n   * @property {number} blockSize The block size of the cipher.\r\n   * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\r\n   */\r\n  var CipherParams = C_lib.CipherParams = Base.extend({\r\n    /**\r\n     * Initializes a newly created cipher params object.\r\n     *\r\n     * @param {Object} cipherParams An object with any of the possible cipher parameters.\r\n     *\r\n     * @example\r\n     *\r\n     *     var cipherParams = CryptoJS.lib.CipherParams.create({\r\n\t         *         ciphertext: ciphertextWordArray,\r\n\t         *         key: keyWordArray,\r\n\t         *         iv: ivWordArray,\r\n\t         *         salt: saltWordArray,\r\n\t         *         algorithm: CryptoJS.algo.AES,\r\n\t         *         mode: CryptoJS.mode.CBC,\r\n\t         *         padding: CryptoJS.pad.PKCS7,\r\n\t         *         blockSize: 4,\r\n\t         *         formatter: CryptoJS.format.OpenSSL\r\n\t         *     });\r\n     */\r\n    init: function (cipherParams) {\r\n      this.mixIn(cipherParams);\r\n    },\r\n\r\n    /**\r\n     * Converts this cipher params object to a string.\r\n     *\r\n     * @param {Format} formatter (Optional) The formatting strategy to use.\r\n     *\r\n     * @return {string} The stringified cipher params.\r\n     *\r\n     * @throws Error If neither the formatter nor the default formatter is set.\r\n     *\r\n     * @example\r\n     *\r\n     *     var string = cipherParams + '';\r\n     *     var string = cipherParams.toString();\r\n     *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\r\n     */\r\n    toString: function (formatter) {\r\n      return (formatter || this.formatter).stringify(this);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Format namespace.\r\n   */\r\n  var C_format = C.format = {};\r\n\r\n  /**\r\n   * OpenSSL formatting strategy.\r\n   */\r\n  var OpenSSLFormatter = C_format.OpenSSL = {\r\n    /**\r\n     * Converts a cipher params object to an OpenSSL-compatible string.\r\n     *\r\n     * @param {CipherParams} cipherParams The cipher params object.\r\n     *\r\n     * @return {string} The OpenSSL-compatible string.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\r\n     */\r\n    stringify: function (cipherParams) {\r\n      // Shortcuts\r\n      var ciphertext = cipherParams.ciphertext;\r\n      var salt = cipherParams.salt;\r\n\r\n      // Format\r\n      if (salt) {\r\n        var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\r\n      } else {\r\n        var wordArray = ciphertext;\r\n      }\r\n\r\n      return wordArray.toString(Base64);\r\n    },\r\n\r\n    /**\r\n     * Converts an OpenSSL-compatible string to a cipher params object.\r\n     *\r\n     * @param {string} openSSLStr The OpenSSL-compatible string.\r\n     *\r\n     * @return {CipherParams} The cipher params object.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\r\n     */\r\n    parse: function (openSSLStr) {\r\n      // Parse base64\r\n      var ciphertext = Base64.parse(openSSLStr);\r\n\r\n      // Shortcut\r\n      var ciphertextWords = ciphertext.words;\r\n\r\n      // Test for salt\r\n      if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\r\n        // Extract salt\r\n        var salt = WordArray.create(ciphertextWords.slice(2, 4));\r\n\r\n        // Remove salt from ciphertext\r\n        ciphertextWords.splice(0, 4);\r\n        ciphertext.sigBytes -= 16;\r\n      }\r\n\r\n      return CipherParams.create({ ciphertext: ciphertext, salt: salt });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * A cipher wrapper that returns ciphertext as a serializable cipher params object.\r\n   */\r\n  var SerializableCipher = C_lib.SerializableCipher = Base.extend({\r\n    /**\r\n     * Configuration options.\r\n     *\r\n     * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\r\n     */\r\n    cfg: Base.extend({\r\n      format: OpenSSLFormatter\r\n    }),\r\n\r\n    /**\r\n     * Encrypts a message.\r\n     *\r\n     * @param {Cipher} cipher The cipher algorithm to use.\r\n     * @param {WordArray|string} message The message to encrypt.\r\n     * @param {WordArray} key The key.\r\n     * @param {Object} cfg (Optional) The configuration options to use for this operation.\r\n     *\r\n     * @return {CipherParams} A cipher params object.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\r\n     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\r\n     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\r\n     */\r\n    encrypt: function (cipher, message, key, cfg) {\r\n      // Apply config defaults\r\n      cfg = this.cfg.extend(cfg);\r\n\r\n      // Encrypt\r\n      var encryptor = cipher.createEncryptor(key, cfg);\r\n      var ciphertext = encryptor.finalize(message);\r\n\r\n      // Shortcut\r\n      var cipherCfg = encryptor.cfg;\r\n\r\n      // Create and return serializable cipher params\r\n      return CipherParams.create({\r\n        ciphertext: ciphertext,\r\n        key: key,\r\n        iv: cipherCfg.iv,\r\n        algorithm: cipher,\r\n        mode: cipherCfg.mode,\r\n        padding: cipherCfg.padding,\r\n        blockSize: cipher.blockSize,\r\n        formatter: cfg.format\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Decrypts serialized ciphertext.\r\n     *\r\n     * @param {Cipher} cipher The cipher algorithm to use.\r\n     * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\r\n     * @param {WordArray} key The key.\r\n     * @param {Object} cfg (Optional) The configuration options to use for this operation.\r\n     *\r\n     * @return {WordArray} The plaintext.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\r\n     *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\r\n     */\r\n    decrypt: function (cipher, ciphertext, key, cfg) {\r\n      // Apply config defaults\r\n      cfg = this.cfg.extend(cfg);\r\n\r\n      // Convert string to CipherParams\r\n      ciphertext = this._parse(ciphertext, cfg.format);\r\n\r\n      // Decrypt\r\n      var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\r\n\r\n      return plaintext;\r\n    },\r\n\r\n    /**\r\n     * Converts serialized ciphertext to CipherParams,\r\n     * else assumed CipherParams already and returns ciphertext unchanged.\r\n     *\r\n     * @param {CipherParams|string} ciphertext The ciphertext.\r\n     * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\r\n     *\r\n     * @return {CipherParams} The unserialized ciphertext.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\r\n     */\r\n    _parse: function (ciphertext, format) {\r\n      if (typeof ciphertext == 'string') {\r\n        return format.parse(ciphertext, this);\r\n      } else {\r\n        return ciphertext;\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Key derivation function namespace.\r\n   */\r\n  var C_kdf = C.kdf = {};\r\n\r\n  /**\r\n   * OpenSSL key derivation function.\r\n   */\r\n  var OpenSSLKdf = C_kdf.OpenSSL = {\r\n    /**\r\n     * Derives a key and IV from a password.\r\n     *\r\n     * @param {string} password The password to derive from.\r\n     * @param {number} keySize The size in words of the key to generate.\r\n     * @param {number} ivSize The size in words of the IV to generate.\r\n     * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\r\n     *\r\n     * @return {CipherParams} A cipher params object with the key, IV, and salt.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\r\n     *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\r\n     */\r\n    execute: function (password, keySize, ivSize, salt) {\r\n      // Generate random salt\r\n      if (!salt) {\r\n        salt = WordArray.random(64/8);\r\n      }\r\n\r\n      // Derive key and IV\r\n      var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\r\n\r\n      // Separate key and IV\r\n      var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\r\n      key.sigBytes = keySize * 4;\r\n\r\n      // Return params\r\n      return CipherParams.create({ key: key, iv: iv, salt: salt });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * A serializable cipher wrapper that derives the key from a password,\r\n   * and returns ciphertext as a serializable cipher params object.\r\n   */\r\n  var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\r\n    /**\r\n     * Configuration options.\r\n     *\r\n     * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\r\n     */\r\n    cfg: SerializableCipher.cfg.extend({\r\n      kdf: OpenSSLKdf\r\n    }),\r\n\r\n    /**\r\n     * Encrypts a message using a password.\r\n     *\r\n     * @param {Cipher} cipher The cipher algorithm to use.\r\n     * @param {WordArray|string} message The message to encrypt.\r\n     * @param {string} password The password.\r\n     * @param {Object} cfg (Optional) The configuration options to use for this operation.\r\n     *\r\n     * @return {CipherParams} A cipher params object.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\r\n     *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\r\n     */\r\n    encrypt: function (cipher, message, password, cfg) {\r\n      // Apply config defaults\r\n      cfg = this.cfg.extend(cfg);\r\n\r\n      // Derive key and other params\r\n      var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\r\n\r\n      // Add IV to config\r\n      cfg.iv = derivedParams.iv;\r\n\r\n      // Encrypt\r\n      var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\r\n\r\n      // Mix in derived params\r\n      ciphertext.mixIn(derivedParams);\r\n\r\n      return ciphertext;\r\n    },\r\n\r\n    /**\r\n     * Decrypts serialized ciphertext using a password.\r\n     *\r\n     * @param {Cipher} cipher The cipher algorithm to use.\r\n     * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\r\n     * @param {string} password The password.\r\n     * @param {Object} cfg (Optional) The configuration options to use for this operation.\r\n     *\r\n     * @return {WordArray} The plaintext.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\r\n     *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\r\n     */\r\n    decrypt: function (cipher, ciphertext, password, cfg) {\r\n      // Apply config defaults\r\n      cfg = this.cfg.extend(cfg);\r\n\r\n      // Convert string to CipherParams\r\n      ciphertext = this._parse(ciphertext, cfg.format);\r\n\r\n      // Derive key and other params\r\n      var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\r\n\r\n      // Add IV to config\r\n      cfg.iv = derivedParams.iv;\r\n\r\n      // Decrypt\r\n      var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\r\n\r\n      return plaintext;\r\n    }\r\n  });\r\n}());\r\n\r\n\r\n/**\r\n * Cipher Feedback block mode.\r\n */\r\nCryptoJS.mode.CFB = (function () {\r\n  var CFB = CryptoJS.lib.BlockCipherMode.extend();\r\n\r\n  CFB.Encryptor = CFB.extend({\r\n    processBlock: function (words, offset) {\r\n      // Shortcuts\r\n      var cipher = this._cipher;\r\n      var blockSize = cipher.blockSize;\r\n\r\n      generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\r\n\r\n      // Remember this block to use with next block\r\n      this._prevBlock = words.slice(offset, offset + blockSize);\r\n    }\r\n  });\r\n\r\n  CFB.Decryptor = CFB.extend({\r\n    processBlock: function (words, offset) {\r\n      // Shortcuts\r\n      var cipher = this._cipher;\r\n      var blockSize = cipher.blockSize;\r\n\r\n      // Remember this block to use with next block\r\n      var thisBlock = words.slice(offset, offset + blockSize);\r\n\r\n      generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\r\n\r\n      // This block becomes the previous block\r\n      this._prevBlock = thisBlock;\r\n    }\r\n  });\r\n\r\n  function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\r\n    // Shortcut\r\n    var iv = this._iv;\r\n\r\n    // Generate keystream\r\n    if (iv) {\r\n      var keystream = iv.slice(0);\r\n\r\n      // Remove IV for subsequent blocks\r\n      this._iv = undefined;\r\n    } else {\r\n      var keystream = this._prevBlock;\r\n    }\r\n    cipher.encryptBlock(keystream, 0);\r\n\r\n    // Encrypt\r\n    for (var i = 0; i < blockSize; i++) {\r\n      words[offset + i] ^= keystream[i];\r\n    }\r\n  }\r\n\r\n  return CFB;\r\n}());\r\n\r\n\r\n/**\r\n * Electronic Codebook block mode.\r\n */\r\nCryptoJS.mode.ECB = (function () {\r\n  var ECB = CryptoJS.lib.BlockCipherMode.extend();\r\n\r\n  ECB.Encryptor = ECB.extend({\r\n    processBlock: function (words, offset) {\r\n      this._cipher.encryptBlock(words, offset);\r\n    }\r\n  });\r\n\r\n  ECB.Decryptor = ECB.extend({\r\n    processBlock: function (words, offset) {\r\n      this._cipher.decryptBlock(words, offset);\r\n    }\r\n  });\r\n\r\n  return ECB;\r\n}());\r\n\r\n\r\n/**\r\n * ANSI X.923 padding strategy.\r\n */\r\nCryptoJS.pad.AnsiX923 = {\r\n  pad: function (data, blockSize) {\r\n    // Shortcuts\r\n    var dataSigBytes = data.sigBytes;\r\n    var blockSizeBytes = blockSize * 4;\r\n\r\n    // Count padding bytes\r\n    var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\r\n\r\n    // Compute last byte position\r\n    var lastBytePos = dataSigBytes + nPaddingBytes - 1;\r\n\r\n    // Pad\r\n    data.clamp();\r\n    data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\r\n    data.sigBytes += nPaddingBytes;\r\n  },\r\n\r\n  unpad: function (data) {\r\n    // Get number of padding bytes from last byte\r\n    var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\r\n\r\n    // Remove padding\r\n    data.sigBytes -= nPaddingBytes;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * ISO 10126 padding strategy.\r\n */\r\nCryptoJS.pad.Iso10126 = {\r\n  pad: function (data, blockSize) {\r\n    // Shortcut\r\n    var blockSizeBytes = blockSize * 4;\r\n\r\n    // Count padding bytes\r\n    var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\r\n\r\n    // Pad\r\n    data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\r\n    concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\r\n  },\r\n\r\n  unpad: function (data) {\r\n    // Get number of padding bytes from last byte\r\n    var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\r\n\r\n    // Remove padding\r\n    data.sigBytes -= nPaddingBytes;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * ISO/IEC 9797-1 Padding Method 2.\r\n */\r\nCryptoJS.pad.Iso97971 = {\r\n  pad: function (data, blockSize) {\r\n    // Add 0x80 byte\r\n    data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\r\n\r\n    // Zero pad the rest\r\n    CryptoJS.pad.ZeroPadding.pad(data, blockSize);\r\n  },\r\n\r\n  unpad: function (data) {\r\n    // Remove zero padding\r\n    CryptoJS.pad.ZeroPadding.unpad(data);\r\n\r\n    // Remove one more byte -- the 0x80 byte\r\n    data.sigBytes--;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Output Feedback block mode.\r\n */\r\nCryptoJS.mode.OFB = (function () {\r\n  var OFB = CryptoJS.lib.BlockCipherMode.extend();\r\n\r\n  var Encryptor = OFB.Encryptor = OFB.extend({\r\n    processBlock: function (words, offset) {\r\n      // Shortcuts\r\n      var cipher = this._cipher\r\n      var blockSize = cipher.blockSize;\r\n      var iv = this._iv;\r\n      var keystream = this._keystream;\r\n\r\n      // Generate keystream\r\n      if (iv) {\r\n        keystream = this._keystream = iv.slice(0);\r\n\r\n        // Remove IV for subsequent blocks\r\n        this._iv = undefined;\r\n      }\r\n      cipher.encryptBlock(keystream, 0);\r\n\r\n      // Encrypt\r\n      for (var i = 0; i < blockSize; i++) {\r\n        words[offset + i] ^= keystream[i];\r\n      }\r\n    }\r\n  });\r\n\r\n  OFB.Decryptor = Encryptor;\r\n\r\n  return OFB;\r\n}());\r\n\r\n\r\n/**\r\n * A noop padding strategy.\r\n */\r\nCryptoJS.pad.NoPadding = {\r\n  pad: function () {\r\n  },\r\n\r\n  unpad: function () {\r\n  }\r\n};\r\n\r\n\r\n(function (undefined) {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var CipherParams = C_lib.CipherParams;\r\n  var C_enc = C.enc;\r\n  var Hex = C_enc.Hex;\r\n  var C_format = C.format;\r\n\r\n  var HexFormatter = C_format.Hex = {\r\n    /**\r\n     * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\r\n     *\r\n     * @param {CipherParams} cipherParams The cipher params object.\r\n     *\r\n     * @return {string} The hexadecimally encoded string.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\r\n     */\r\n    stringify: function (cipherParams) {\r\n      return cipherParams.ciphertext.toString(Hex);\r\n    },\r\n\r\n    /**\r\n     * Converts a hexadecimally encoded ciphertext string to a cipher params object.\r\n     *\r\n     * @param {string} input The hexadecimally encoded string.\r\n     *\r\n     * @return {CipherParams} The cipher params object.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\r\n     */\r\n    parse: function (input) {\r\n      var ciphertext = Hex.parse(input);\r\n      return CipherParams.create({ ciphertext: ciphertext });\r\n    }\r\n  };\r\n}());\r\n\r\n\r\n(function () {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var BlockCipher = C_lib.BlockCipher;\r\n  var C_algo = C.algo;\r\n\r\n  // Lookup tables\r\n  var SBOX = [];\r\n  var INV_SBOX = [];\r\n  var SUB_MIX_0 = [];\r\n  var SUB_MIX_1 = [];\r\n  var SUB_MIX_2 = [];\r\n  var SUB_MIX_3 = [];\r\n  var INV_SUB_MIX_0 = [];\r\n  var INV_SUB_MIX_1 = [];\r\n  var INV_SUB_MIX_2 = [];\r\n  var INV_SUB_MIX_3 = [];\r\n\r\n  // Compute lookup tables\r\n  (function () {\r\n    // Compute double table\r\n    var d = [];\r\n    for (var i = 0; i < 256; i++) {\r\n      if (i < 128) {\r\n        d[i] = i << 1;\r\n      } else {\r\n        d[i] = (i << 1) ^ 0x11b;\r\n      }\r\n    }\r\n\r\n    // Walk GF(2^8)\r\n    var x = 0;\r\n    var xi = 0;\r\n    for (var i = 0; i < 256; i++) {\r\n      // Compute sbox\r\n      var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\r\n      sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\r\n      SBOX[x] = sx;\r\n      INV_SBOX[sx] = x;\r\n\r\n      // Compute multiplication\r\n      var x2 = d[x];\r\n      var x4 = d[x2];\r\n      var x8 = d[x4];\r\n\r\n      // Compute sub bytes, mix columns tables\r\n      var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\r\n      SUB_MIX_0[x] = (t << 24) | (t >>> 8);\r\n      SUB_MIX_1[x] = (t << 16) | (t >>> 16);\r\n      SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\r\n      SUB_MIX_3[x] = t;\r\n\r\n      // Compute inv sub bytes, inv mix columns tables\r\n      var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\r\n      INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\r\n      INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\r\n      INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\r\n      INV_SUB_MIX_3[sx] = t;\r\n\r\n      // Compute next counter\r\n      if (!x) {\r\n        x = xi = 1;\r\n      } else {\r\n        x = x2 ^ d[d[d[x8 ^ x2]]];\r\n        xi ^= d[d[xi]];\r\n      }\r\n    }\r\n  }());\r\n\r\n  // Precomputed Rcon lookup\r\n  var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\r\n\r\n  /**\r\n   * AES block cipher algorithm.\r\n   */\r\n  var AES = C_algo.AES = BlockCipher.extend({\r\n    _doReset: function () {\r\n      // Skip reset of nRounds has been set before and key did not change\r\n      if (this._nRounds && this._keyPriorReset === this._key) {\r\n        return;\r\n      }\r\n\r\n      // Shortcuts\r\n      var key = this._keyPriorReset = this._key;\r\n      var keyWords = key.words;\r\n      var keySize = key.sigBytes / 4;\r\n\r\n      // Compute number of rounds\r\n      var nRounds = this._nRounds = keySize + 6;\r\n\r\n      // Compute number of key schedule rows\r\n      var ksRows = (nRounds + 1) * 4;\r\n\r\n      // Compute key schedule\r\n      var keySchedule = this._keySchedule = [];\r\n      for (var ksRow = 0; ksRow < ksRows; ksRow++) {\r\n        if (ksRow < keySize) {\r\n          keySchedule[ksRow] = keyWords[ksRow];\r\n        } else {\r\n          var t = keySchedule[ksRow - 1];\r\n\r\n          if (!(ksRow % keySize)) {\r\n            // Rot word\r\n            t = (t << 8) | (t >>> 24);\r\n\r\n            // Sub word\r\n            t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\r\n\r\n            // Mix Rcon\r\n            t ^= RCON[(ksRow / keySize) | 0] << 24;\r\n          } else if (keySize > 6 && ksRow % keySize == 4) {\r\n            // Sub word\r\n            t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\r\n          }\r\n\r\n          keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\r\n        }\r\n      }\r\n\r\n      // Compute inv key schedule\r\n      var invKeySchedule = this._invKeySchedule = [];\r\n      for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\r\n        var ksRow = ksRows - invKsRow;\r\n\r\n        if (invKsRow % 4) {\r\n          var t = keySchedule[ksRow];\r\n        } else {\r\n          var t = keySchedule[ksRow - 4];\r\n        }\r\n\r\n        if (invKsRow < 4 || ksRow <= 4) {\r\n          invKeySchedule[invKsRow] = t;\r\n        } else {\r\n          invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\r\n            INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\r\n        }\r\n      }\r\n    },\r\n\r\n    encryptBlock: function (M, offset) {\r\n      this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\r\n    },\r\n\r\n    decryptBlock: function (M, offset) {\r\n      // Swap 2nd and 4th rows\r\n      var t = M[offset + 1];\r\n      M[offset + 1] = M[offset + 3];\r\n      M[offset + 3] = t;\r\n\r\n      this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\r\n\r\n      // Inv swap 2nd and 4th rows\r\n      var t = M[offset + 1];\r\n      M[offset + 1] = M[offset + 3];\r\n      M[offset + 3] = t;\r\n    },\r\n\r\n    _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\r\n      // Shortcut\r\n      var nRounds = this._nRounds;\r\n\r\n      // Get input, add round key\r\n      var s0 = M[offset]     ^ keySchedule[0];\r\n      var s1 = M[offset + 1] ^ keySchedule[1];\r\n      var s2 = M[offset + 2] ^ keySchedule[2];\r\n      var s3 = M[offset + 3] ^ keySchedule[3];\r\n\r\n      // Key schedule row counter\r\n      var ksRow = 4;\r\n\r\n      // Rounds\r\n      for (var round = 1; round < nRounds; round++) {\r\n        // Shift rows, sub bytes, mix columns, add round key\r\n        var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\r\n        var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\r\n        var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\r\n        var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\r\n\r\n        // Update state\r\n        s0 = t0;\r\n        s1 = t1;\r\n        s2 = t2;\r\n        s3 = t3;\r\n      }\r\n\r\n      // Shift rows, sub bytes, add round key\r\n      var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\r\n      var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\r\n      var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\r\n      var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\r\n\r\n      // Set output\r\n      M[offset]     = t0;\r\n      M[offset + 1] = t1;\r\n      M[offset + 2] = t2;\r\n      M[offset + 3] = t3;\r\n    },\r\n\r\n    keySize: 256/32\r\n  });\r\n\r\n  /**\r\n   * Shortcut functions to the cipher's object interface.\r\n   *\r\n   * @example\r\n   *\r\n   *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\r\n   *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\r\n   */\r\n  C.AES = BlockCipher._createHelper(AES);\r\n}());\r\n\r\n\r\n(function () {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var WordArray = C_lib.WordArray;\r\n  var BlockCipher = C_lib.BlockCipher;\r\n  var C_algo = C.algo;\r\n\r\n  // Permuted Choice 1 constants\r\n  var PC1 = [\r\n    57, 49, 41, 33, 25, 17, 9,  1,\r\n    58, 50, 42, 34, 26, 18, 10, 2,\r\n    59, 51, 43, 35, 27, 19, 11, 3,\r\n    60, 52, 44, 36, 63, 55, 47, 39,\r\n    31, 23, 15, 7,  62, 54, 46, 38,\r\n    30, 22, 14, 6,  61, 53, 45, 37,\r\n    29, 21, 13, 5,  28, 20, 12, 4\r\n  ];\r\n\r\n  // Permuted Choice 2 constants\r\n  var PC2 = [\r\n    14, 17, 11, 24, 1,  5,\r\n    3,  28, 15, 6,  21, 10,\r\n    23, 19, 12, 4,  26, 8,\r\n    16, 7,  27, 20, 13, 2,\r\n    41, 52, 31, 37, 47, 55,\r\n    30, 40, 51, 45, 33, 48,\r\n    44, 49, 39, 56, 34, 53,\r\n    46, 42, 50, 36, 29, 32\r\n  ];\r\n\r\n  // Cumulative bit shift constants\r\n  var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\r\n\r\n  // SBOXes and round permutation constants\r\n  var SBOX_P = [\r\n    {\r\n      0x0: 0x808200,\r\n      0x10000000: 0x8000,\r\n      0x20000000: 0x808002,\r\n      0x30000000: 0x2,\r\n      0x40000000: 0x200,\r\n      0x50000000: 0x808202,\r\n      0x60000000: 0x800202,\r\n      0x70000000: 0x800000,\r\n      0x80000000: 0x202,\r\n      0x90000000: 0x800200,\r\n      0xa0000000: 0x8200,\r\n      0xb0000000: 0x808000,\r\n      0xc0000000: 0x8002,\r\n      0xd0000000: 0x800002,\r\n      0xe0000000: 0x0,\r\n      0xf0000000: 0x8202,\r\n      0x8000000: 0x0,\r\n      0x18000000: 0x808202,\r\n      0x28000000: 0x8202,\r\n      0x38000000: 0x8000,\r\n      0x48000000: 0x808200,\r\n      0x58000000: 0x200,\r\n      0x68000000: 0x808002,\r\n      0x78000000: 0x2,\r\n      0x88000000: 0x800200,\r\n      0x98000000: 0x8200,\r\n      0xa8000000: 0x808000,\r\n      0xb8000000: 0x800202,\r\n      0xc8000000: 0x800002,\r\n      0xd8000000: 0x8002,\r\n      0xe8000000: 0x202,\r\n      0xf8000000: 0x800000,\r\n      0x1: 0x8000,\r\n      0x10000001: 0x2,\r\n      0x20000001: 0x808200,\r\n      0x30000001: 0x800000,\r\n      0x40000001: 0x808002,\r\n      0x50000001: 0x8200,\r\n      0x60000001: 0x200,\r\n      0x70000001: 0x800202,\r\n      0x80000001: 0x808202,\r\n      0x90000001: 0x808000,\r\n      0xa0000001: 0x800002,\r\n      0xb0000001: 0x8202,\r\n      0xc0000001: 0x202,\r\n      0xd0000001: 0x800200,\r\n      0xe0000001: 0x8002,\r\n      0xf0000001: 0x0,\r\n      0x8000001: 0x808202,\r\n      0x18000001: 0x808000,\r\n      0x28000001: 0x800000,\r\n      0x38000001: 0x200,\r\n      0x48000001: 0x8000,\r\n      0x58000001: 0x800002,\r\n      0x68000001: 0x2,\r\n      0x78000001: 0x8202,\r\n      0x88000001: 0x8002,\r\n      0x98000001: 0x800202,\r\n      0xa8000001: 0x202,\r\n      0xb8000001: 0x808200,\r\n      0xc8000001: 0x800200,\r\n      0xd8000001: 0x0,\r\n      0xe8000001: 0x8200,\r\n      0xf8000001: 0x808002\r\n    },\r\n    {\r\n      0x0: 0x40084010,\r\n      0x1000000: 0x4000,\r\n      0x2000000: 0x80000,\r\n      0x3000000: 0x40080010,\r\n      0x4000000: 0x40000010,\r\n      0x5000000: 0x40084000,\r\n      0x6000000: 0x40004000,\r\n      0x7000000: 0x10,\r\n      0x8000000: 0x84000,\r\n      0x9000000: 0x40004010,\r\n      0xa000000: 0x40000000,\r\n      0xb000000: 0x84010,\r\n      0xc000000: 0x80010,\r\n      0xd000000: 0x0,\r\n      0xe000000: 0x4010,\r\n      0xf000000: 0x40080000,\r\n      0x800000: 0x40004000,\r\n      0x1800000: 0x84010,\r\n      0x2800000: 0x10,\r\n      0x3800000: 0x40004010,\r\n      0x4800000: 0x40084010,\r\n      0x5800000: 0x40000000,\r\n      0x6800000: 0x80000,\r\n      0x7800000: 0x40080010,\r\n      0x8800000: 0x80010,\r\n      0x9800000: 0x0,\r\n      0xa800000: 0x4000,\r\n      0xb800000: 0x40080000,\r\n      0xc800000: 0x40000010,\r\n      0xd800000: 0x84000,\r\n      0xe800000: 0x40084000,\r\n      0xf800000: 0x4010,\r\n      0x10000000: 0x0,\r\n      0x11000000: 0x40080010,\r\n      0x12000000: 0x40004010,\r\n      0x13000000: 0x40084000,\r\n      0x14000000: 0x40080000,\r\n      0x15000000: 0x10,\r\n      0x16000000: 0x84010,\r\n      0x17000000: 0x4000,\r\n      0x18000000: 0x4010,\r\n      0x19000000: 0x80000,\r\n      0x1a000000: 0x80010,\r\n      0x1b000000: 0x40000010,\r\n      0x1c000000: 0x84000,\r\n      0x1d000000: 0x40004000,\r\n      0x1e000000: 0x40000000,\r\n      0x1f000000: 0x40084010,\r\n      0x10800000: 0x84010,\r\n      0x11800000: 0x80000,\r\n      0x12800000: 0x40080000,\r\n      0x13800000: 0x4000,\r\n      0x14800000: 0x40004000,\r\n      0x15800000: 0x40084010,\r\n      0x16800000: 0x10,\r\n      0x17800000: 0x40000000,\r\n      0x18800000: 0x40084000,\r\n      0x19800000: 0x40000010,\r\n      0x1a800000: 0x40004010,\r\n      0x1b800000: 0x80010,\r\n      0x1c800000: 0x0,\r\n      0x1d800000: 0x4010,\r\n      0x1e800000: 0x40080010,\r\n      0x1f800000: 0x84000\r\n    },\r\n    {\r\n      0x0: 0x104,\r\n      0x100000: 0x0,\r\n      0x200000: 0x4000100,\r\n      0x300000: 0x10104,\r\n      0x400000: 0x10004,\r\n      0x500000: 0x4000004,\r\n      0x600000: 0x4010104,\r\n      0x700000: 0x4010000,\r\n      0x800000: 0x4000000,\r\n      0x900000: 0x4010100,\r\n      0xa00000: 0x10100,\r\n      0xb00000: 0x4010004,\r\n      0xc00000: 0x4000104,\r\n      0xd00000: 0x10000,\r\n      0xe00000: 0x4,\r\n      0xf00000: 0x100,\r\n      0x80000: 0x4010100,\r\n      0x180000: 0x4010004,\r\n      0x280000: 0x0,\r\n      0x380000: 0x4000100,\r\n      0x480000: 0x4000004,\r\n      0x580000: 0x10000,\r\n      0x680000: 0x10004,\r\n      0x780000: 0x104,\r\n      0x880000: 0x4,\r\n      0x980000: 0x100,\r\n      0xa80000: 0x4010000,\r\n      0xb80000: 0x10104,\r\n      0xc80000: 0x10100,\r\n      0xd80000: 0x4000104,\r\n      0xe80000: 0x4010104,\r\n      0xf80000: 0x4000000,\r\n      0x1000000: 0x4010100,\r\n      0x1100000: 0x10004,\r\n      0x1200000: 0x10000,\r\n      0x1300000: 0x4000100,\r\n      0x1400000: 0x100,\r\n      0x1500000: 0x4010104,\r\n      0x1600000: 0x4000004,\r\n      0x1700000: 0x0,\r\n      0x1800000: 0x4000104,\r\n      0x1900000: 0x4000000,\r\n      0x1a00000: 0x4,\r\n      0x1b00000: 0x10100,\r\n      0x1c00000: 0x4010000,\r\n      0x1d00000: 0x104,\r\n      0x1e00000: 0x10104,\r\n      0x1f00000: 0x4010004,\r\n      0x1080000: 0x4000000,\r\n      0x1180000: 0x104,\r\n      0x1280000: 0x4010100,\r\n      0x1380000: 0x0,\r\n      0x1480000: 0x10004,\r\n      0x1580000: 0x4000100,\r\n      0x1680000: 0x100,\r\n      0x1780000: 0x4010004,\r\n      0x1880000: 0x10000,\r\n      0x1980000: 0x4010104,\r\n      0x1a80000: 0x10104,\r\n      0x1b80000: 0x4000004,\r\n      0x1c80000: 0x4000104,\r\n      0x1d80000: 0x4010000,\r\n      0x1e80000: 0x4,\r\n      0x1f80000: 0x10100\r\n    },\r\n    {\r\n      0x0: 0x80401000,\r\n      0x10000: 0x80001040,\r\n      0x20000: 0x401040,\r\n      0x30000: 0x80400000,\r\n      0x40000: 0x0,\r\n      0x50000: 0x401000,\r\n      0x60000: 0x80000040,\r\n      0x70000: 0x400040,\r\n      0x80000: 0x80000000,\r\n      0x90000: 0x400000,\r\n      0xa0000: 0x40,\r\n      0xb0000: 0x80001000,\r\n      0xc0000: 0x80400040,\r\n      0xd0000: 0x1040,\r\n      0xe0000: 0x1000,\r\n      0xf0000: 0x80401040,\r\n      0x8000: 0x80001040,\r\n      0x18000: 0x40,\r\n      0x28000: 0x80400040,\r\n      0x38000: 0x80001000,\r\n      0x48000: 0x401000,\r\n      0x58000: 0x80401040,\r\n      0x68000: 0x0,\r\n      0x78000: 0x80400000,\r\n      0x88000: 0x1000,\r\n      0x98000: 0x80401000,\r\n      0xa8000: 0x400000,\r\n      0xb8000: 0x1040,\r\n      0xc8000: 0x80000000,\r\n      0xd8000: 0x400040,\r\n      0xe8000: 0x401040,\r\n      0xf8000: 0x80000040,\r\n      0x100000: 0x400040,\r\n      0x110000: 0x401000,\r\n      0x120000: 0x80000040,\r\n      0x130000: 0x0,\r\n      0x140000: 0x1040,\r\n      0x150000: 0x80400040,\r\n      0x160000: 0x80401000,\r\n      0x170000: 0x80001040,\r\n      0x180000: 0x80401040,\r\n      0x190000: 0x80000000,\r\n      0x1a0000: 0x80400000,\r\n      0x1b0000: 0x401040,\r\n      0x1c0000: 0x80001000,\r\n      0x1d0000: 0x400000,\r\n      0x1e0000: 0x40,\r\n      0x1f0000: 0x1000,\r\n      0x108000: 0x80400000,\r\n      0x118000: 0x80401040,\r\n      0x128000: 0x0,\r\n      0x138000: 0x401000,\r\n      0x148000: 0x400040,\r\n      0x158000: 0x80000000,\r\n      0x168000: 0x80001040,\r\n      0x178000: 0x40,\r\n      0x188000: 0x80000040,\r\n      0x198000: 0x1000,\r\n      0x1a8000: 0x80001000,\r\n      0x1b8000: 0x80400040,\r\n      0x1c8000: 0x1040,\r\n      0x1d8000: 0x80401000,\r\n      0x1e8000: 0x400000,\r\n      0x1f8000: 0x401040\r\n    },\r\n    {\r\n      0x0: 0x80,\r\n      0x1000: 0x1040000,\r\n      0x2000: 0x40000,\r\n      0x3000: 0x20000000,\r\n      0x4000: 0x20040080,\r\n      0x5000: 0x1000080,\r\n      0x6000: 0x21000080,\r\n      0x7000: 0x40080,\r\n      0x8000: 0x1000000,\r\n      0x9000: 0x20040000,\r\n      0xa000: 0x20000080,\r\n      0xb000: 0x21040080,\r\n      0xc000: 0x21040000,\r\n      0xd000: 0x0,\r\n      0xe000: 0x1040080,\r\n      0xf000: 0x21000000,\r\n      0x800: 0x1040080,\r\n      0x1800: 0x21000080,\r\n      0x2800: 0x80,\r\n      0x3800: 0x1040000,\r\n      0x4800: 0x40000,\r\n      0x5800: 0x20040080,\r\n      0x6800: 0x21040000,\r\n      0x7800: 0x20000000,\r\n      0x8800: 0x20040000,\r\n      0x9800: 0x0,\r\n      0xa800: 0x21040080,\r\n      0xb800: 0x1000080,\r\n      0xc800: 0x20000080,\r\n      0xd800: 0x21000000,\r\n      0xe800: 0x1000000,\r\n      0xf800: 0x40080,\r\n      0x10000: 0x40000,\r\n      0x11000: 0x80,\r\n      0x12000: 0x20000000,\r\n      0x13000: 0x21000080,\r\n      0x14000: 0x1000080,\r\n      0x15000: 0x21040000,\r\n      0x16000: 0x20040080,\r\n      0x17000: 0x1000000,\r\n      0x18000: 0x21040080,\r\n      0x19000: 0x21000000,\r\n      0x1a000: 0x1040000,\r\n      0x1b000: 0x20040000,\r\n      0x1c000: 0x40080,\r\n      0x1d000: 0x20000080,\r\n      0x1e000: 0x0,\r\n      0x1f000: 0x1040080,\r\n      0x10800: 0x21000080,\r\n      0x11800: 0x1000000,\r\n      0x12800: 0x1040000,\r\n      0x13800: 0x20040080,\r\n      0x14800: 0x20000000,\r\n      0x15800: 0x1040080,\r\n      0x16800: 0x80,\r\n      0x17800: 0x21040000,\r\n      0x18800: 0x40080,\r\n      0x19800: 0x21040080,\r\n      0x1a800: 0x0,\r\n      0x1b800: 0x21000000,\r\n      0x1c800: 0x1000080,\r\n      0x1d800: 0x40000,\r\n      0x1e800: 0x20040000,\r\n      0x1f800: 0x20000080\r\n    },\r\n    {\r\n      0x0: 0x10000008,\r\n      0x100: 0x2000,\r\n      0x200: 0x10200000,\r\n      0x300: 0x10202008,\r\n      0x400: 0x10002000,\r\n      0x500: 0x200000,\r\n      0x600: 0x200008,\r\n      0x700: 0x10000000,\r\n      0x800: 0x0,\r\n      0x900: 0x10002008,\r\n      0xa00: 0x202000,\r\n      0xb00: 0x8,\r\n      0xc00: 0x10200008,\r\n      0xd00: 0x202008,\r\n      0xe00: 0x2008,\r\n      0xf00: 0x10202000,\r\n      0x80: 0x10200000,\r\n      0x180: 0x10202008,\r\n      0x280: 0x8,\r\n      0x380: 0x200000,\r\n      0x480: 0x202008,\r\n      0x580: 0x10000008,\r\n      0x680: 0x10002000,\r\n      0x780: 0x2008,\r\n      0x880: 0x200008,\r\n      0x980: 0x2000,\r\n      0xa80: 0x10002008,\r\n      0xb80: 0x10200008,\r\n      0xc80: 0x0,\r\n      0xd80: 0x10202000,\r\n      0xe80: 0x202000,\r\n      0xf80: 0x10000000,\r\n      0x1000: 0x10002000,\r\n      0x1100: 0x10200008,\r\n      0x1200: 0x10202008,\r\n      0x1300: 0x2008,\r\n      0x1400: 0x200000,\r\n      0x1500: 0x10000000,\r\n      0x1600: 0x10000008,\r\n      0x1700: 0x202000,\r\n      0x1800: 0x202008,\r\n      0x1900: 0x0,\r\n      0x1a00: 0x8,\r\n      0x1b00: 0x10200000,\r\n      0x1c00: 0x2000,\r\n      0x1d00: 0x10002008,\r\n      0x1e00: 0x10202000,\r\n      0x1f00: 0x200008,\r\n      0x1080: 0x8,\r\n      0x1180: 0x202000,\r\n      0x1280: 0x200000,\r\n      0x1380: 0x10000008,\r\n      0x1480: 0x10002000,\r\n      0x1580: 0x2008,\r\n      0x1680: 0x10202008,\r\n      0x1780: 0x10200000,\r\n      0x1880: 0x10202000,\r\n      0x1980: 0x10200008,\r\n      0x1a80: 0x2000,\r\n      0x1b80: 0x202008,\r\n      0x1c80: 0x200008,\r\n      0x1d80: 0x0,\r\n      0x1e80: 0x10000000,\r\n      0x1f80: 0x10002008\r\n    },\r\n    {\r\n      0x0: 0x100000,\r\n      0x10: 0x2000401,\r\n      0x20: 0x400,\r\n      0x30: 0x100401,\r\n      0x40: 0x2100401,\r\n      0x50: 0x0,\r\n      0x60: 0x1,\r\n      0x70: 0x2100001,\r\n      0x80: 0x2000400,\r\n      0x90: 0x100001,\r\n      0xa0: 0x2000001,\r\n      0xb0: 0x2100400,\r\n      0xc0: 0x2100000,\r\n      0xd0: 0x401,\r\n      0xe0: 0x100400,\r\n      0xf0: 0x2000000,\r\n      0x8: 0x2100001,\r\n      0x18: 0x0,\r\n      0x28: 0x2000401,\r\n      0x38: 0x2100400,\r\n      0x48: 0x100000,\r\n      0x58: 0x2000001,\r\n      0x68: 0x2000000,\r\n      0x78: 0x401,\r\n      0x88: 0x100401,\r\n      0x98: 0x2000400,\r\n      0xa8: 0x2100000,\r\n      0xb8: 0x100001,\r\n      0xc8: 0x400,\r\n      0xd8: 0x2100401,\r\n      0xe8: 0x1,\r\n      0xf8: 0x100400,\r\n      0x100: 0x2000000,\r\n      0x110: 0x100000,\r\n      0x120: 0x2000401,\r\n      0x130: 0x2100001,\r\n      0x140: 0x100001,\r\n      0x150: 0x2000400,\r\n      0x160: 0x2100400,\r\n      0x170: 0x100401,\r\n      0x180: 0x401,\r\n      0x190: 0x2100401,\r\n      0x1a0: 0x100400,\r\n      0x1b0: 0x1,\r\n      0x1c0: 0x0,\r\n      0x1d0: 0x2100000,\r\n      0x1e0: 0x2000001,\r\n      0x1f0: 0x400,\r\n      0x108: 0x100400,\r\n      0x118: 0x2000401,\r\n      0x128: 0x2100001,\r\n      0x138: 0x1,\r\n      0x148: 0x2000000,\r\n      0x158: 0x100000,\r\n      0x168: 0x401,\r\n      0x178: 0x2100400,\r\n      0x188: 0x2000001,\r\n      0x198: 0x2100000,\r\n      0x1a8: 0x0,\r\n      0x1b8: 0x2100401,\r\n      0x1c8: 0x100401,\r\n      0x1d8: 0x400,\r\n      0x1e8: 0x2000400,\r\n      0x1f8: 0x100001\r\n    },\r\n    {\r\n      0x0: 0x8000820,\r\n      0x1: 0x20000,\r\n      0x2: 0x8000000,\r\n      0x3: 0x20,\r\n      0x4: 0x20020,\r\n      0x5: 0x8020820,\r\n      0x6: 0x8020800,\r\n      0x7: 0x800,\r\n      0x8: 0x8020000,\r\n      0x9: 0x8000800,\r\n      0xa: 0x20800,\r\n      0xb: 0x8020020,\r\n      0xc: 0x820,\r\n      0xd: 0x0,\r\n      0xe: 0x8000020,\r\n      0xf: 0x20820,\r\n      0x80000000: 0x800,\r\n      0x80000001: 0x8020820,\r\n      0x80000002: 0x8000820,\r\n      0x80000003: 0x8000000,\r\n      0x80000004: 0x8020000,\r\n      0x80000005: 0x20800,\r\n      0x80000006: 0x20820,\r\n      0x80000007: 0x20,\r\n      0x80000008: 0x8000020,\r\n      0x80000009: 0x820,\r\n      0x8000000a: 0x20020,\r\n      0x8000000b: 0x8020800,\r\n      0x8000000c: 0x0,\r\n      0x8000000d: 0x8020020,\r\n      0x8000000e: 0x8000800,\r\n      0x8000000f: 0x20000,\r\n      0x10: 0x20820,\r\n      0x11: 0x8020800,\r\n      0x12: 0x20,\r\n      0x13: 0x800,\r\n      0x14: 0x8000800,\r\n      0x15: 0x8000020,\r\n      0x16: 0x8020020,\r\n      0x17: 0x20000,\r\n      0x18: 0x0,\r\n      0x19: 0x20020,\r\n      0x1a: 0x8020000,\r\n      0x1b: 0x8000820,\r\n      0x1c: 0x8020820,\r\n      0x1d: 0x20800,\r\n      0x1e: 0x820,\r\n      0x1f: 0x8000000,\r\n      0x80000010: 0x20000,\r\n      0x80000011: 0x800,\r\n      0x80000012: 0x8020020,\r\n      0x80000013: 0x20820,\r\n      0x80000014: 0x20,\r\n      0x80000015: 0x8020000,\r\n      0x80000016: 0x8000000,\r\n      0x80000017: 0x8000820,\r\n      0x80000018: 0x8020820,\r\n      0x80000019: 0x8000020,\r\n      0x8000001a: 0x8000800,\r\n      0x8000001b: 0x0,\r\n      0x8000001c: 0x20800,\r\n      0x8000001d: 0x820,\r\n      0x8000001e: 0x20020,\r\n      0x8000001f: 0x8020800\r\n    }\r\n  ];\r\n\r\n  // Masks that select the SBOX input\r\n  var SBOX_MASK = [\r\n    0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\r\n    0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\r\n  ];\r\n\r\n  /**\r\n   * DES block cipher algorithm.\r\n   */\r\n  var DES = C_algo.DES = BlockCipher.extend({\r\n    _doReset: function () {\r\n      // Shortcuts\r\n      var key = this._key;\r\n      var keyWords = key.words;\r\n\r\n      // Select 56 bits according to PC1\r\n      var keyBits = [];\r\n      for (var i = 0; i < 56; i++) {\r\n        var keyBitPos = PC1[i] - 1;\r\n        keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\r\n      }\r\n\r\n      // Assemble 16 subkeys\r\n      var subKeys = this._subKeys = [];\r\n      for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\r\n        // Create subkey\r\n        var subKey = subKeys[nSubKey] = [];\r\n\r\n        // Shortcut\r\n        var bitShift = BIT_SHIFTS[nSubKey];\r\n\r\n        // Select 48 bits according to PC2\r\n        for (var i = 0; i < 24; i++) {\r\n          // Select from the left 28 key bits\r\n          subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\r\n\r\n          // Select from the right 28 key bits\r\n          subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\r\n        }\r\n\r\n        // Since each subkey is applied to an expanded 32-bit input,\r\n        // the subkey can be broken into 8 values scaled to 32-bits,\r\n        // which allows the key to be used without expansion\r\n        subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\r\n        for (var i = 1; i < 7; i++) {\r\n          subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\r\n        }\r\n        subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\r\n      }\r\n\r\n      // Compute inverse subkeys\r\n      var invSubKeys = this._invSubKeys = [];\r\n      for (var i = 0; i < 16; i++) {\r\n        invSubKeys[i] = subKeys[15 - i];\r\n      }\r\n    },\r\n\r\n    encryptBlock: function (M, offset) {\r\n      this._doCryptBlock(M, offset, this._subKeys);\r\n    },\r\n\r\n    decryptBlock: function (M, offset) {\r\n      this._doCryptBlock(M, offset, this._invSubKeys);\r\n    },\r\n\r\n    _doCryptBlock: function (M, offset, subKeys) {\r\n      // Get input\r\n      this._lBlock = M[offset];\r\n      this._rBlock = M[offset + 1];\r\n\r\n      // Initial permutation\r\n      exchangeLR.call(this, 4,  0x0f0f0f0f);\r\n      exchangeLR.call(this, 16, 0x0000ffff);\r\n      exchangeRL.call(this, 2,  0x33333333);\r\n      exchangeRL.call(this, 8,  0x00ff00ff);\r\n      exchangeLR.call(this, 1,  0x55555555);\r\n\r\n      // Rounds\r\n      for (var round = 0; round < 16; round++) {\r\n        // Shortcuts\r\n        var subKey = subKeys[round];\r\n        var lBlock = this._lBlock;\r\n        var rBlock = this._rBlock;\r\n\r\n        // Feistel function\r\n        var f = 0;\r\n        for (var i = 0; i < 8; i++) {\r\n          f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\r\n        }\r\n        this._lBlock = rBlock;\r\n        this._rBlock = lBlock ^ f;\r\n      }\r\n\r\n      // Undo swap from last round\r\n      var t = this._lBlock;\r\n      this._lBlock = this._rBlock;\r\n      this._rBlock = t;\r\n\r\n      // Final permutation\r\n      exchangeLR.call(this, 1,  0x55555555);\r\n      exchangeRL.call(this, 8,  0x00ff00ff);\r\n      exchangeRL.call(this, 2,  0x33333333);\r\n      exchangeLR.call(this, 16, 0x0000ffff);\r\n      exchangeLR.call(this, 4,  0x0f0f0f0f);\r\n\r\n      // Set output\r\n      M[offset] = this._lBlock;\r\n      M[offset + 1] = this._rBlock;\r\n    },\r\n\r\n    keySize: 64/32,\r\n\r\n    ivSize: 64/32,\r\n\r\n    blockSize: 64/32\r\n  });\r\n\r\n  // Swap bits across the left and right words\r\n  function exchangeLR(offset, mask) {\r\n    var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\r\n    this._rBlock ^= t;\r\n    this._lBlock ^= t << offset;\r\n  }\r\n\r\n  function exchangeRL(offset, mask) {\r\n    var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\r\n    this._lBlock ^= t;\r\n    this._rBlock ^= t << offset;\r\n  }\r\n\r\n  /**\r\n   * Shortcut functions to the cipher's object interface.\r\n   *\r\n   * @example\r\n   *\r\n   *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\r\n   *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\r\n   */\r\n  C.DES = BlockCipher._createHelper(DES);\r\n\r\n  /**\r\n   * Triple-DES block cipher algorithm.\r\n   */\r\n  var TripleDES = C_algo.TripleDES = BlockCipher.extend({\r\n    _doReset: function () {\r\n      // Shortcuts\r\n      var key = this._key;\r\n      var keyWords = key.words;\r\n\r\n      // Create DES instances\r\n      this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));\r\n      this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));\r\n      this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));\r\n    },\r\n\r\n    encryptBlock: function (M, offset) {\r\n      this._des1.encryptBlock(M, offset);\r\n      this._des2.decryptBlock(M, offset);\r\n      this._des3.encryptBlock(M, offset);\r\n    },\r\n\r\n    decryptBlock: function (M, offset) {\r\n      this._des3.decryptBlock(M, offset);\r\n      this._des2.encryptBlock(M, offset);\r\n      this._des1.decryptBlock(M, offset);\r\n    },\r\n\r\n    keySize: 192/32,\r\n\r\n    ivSize: 64/32,\r\n\r\n    blockSize: 64/32\r\n  });\r\n\r\n  /**\r\n   * Shortcut functions to the cipher's object interface.\r\n   *\r\n   * @example\r\n   *\r\n   *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\r\n   *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\r\n   */\r\n  C.TripleDES = BlockCipher._createHelper(TripleDES);\r\n}());\r\n\r\n\r\n(function () {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var StreamCipher = C_lib.StreamCipher;\r\n  var C_algo = C.algo;\r\n\r\n  /**\r\n   * RC4 stream cipher algorithm.\r\n   */\r\n  var RC4 = C_algo.RC4 = StreamCipher.extend({\r\n    _doReset: function () {\r\n      // Shortcuts\r\n      var key = this._key;\r\n      var keyWords = key.words;\r\n      var keySigBytes = key.sigBytes;\r\n\r\n      // Init sbox\r\n      var S = this._S = [];\r\n      for (var i = 0; i < 256; i++) {\r\n        S[i] = i;\r\n      }\r\n\r\n      // Key setup\r\n      for (var i = 0, j = 0; i < 256; i++) {\r\n        var keyByteIndex = i % keySigBytes;\r\n        var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\r\n\r\n        j = (j + S[i] + keyByte) % 256;\r\n\r\n        // Swap\r\n        var t = S[i];\r\n        S[i] = S[j];\r\n        S[j] = t;\r\n      }\r\n\r\n      // Counters\r\n      this._i = this._j = 0;\r\n    },\r\n\r\n    _doProcessBlock: function (M, offset) {\r\n      M[offset] ^= generateKeystreamWord.call(this);\r\n    },\r\n\r\n    keySize: 256/32,\r\n\r\n    ivSize: 0\r\n  });\r\n\r\n  function generateKeystreamWord() {\r\n    // Shortcuts\r\n    var S = this._S;\r\n    var i = this._i;\r\n    var j = this._j;\r\n\r\n    // Generate keystream word\r\n    var keystreamWord = 0;\r\n    for (var n = 0; n < 4; n++) {\r\n      i = (i + 1) % 256;\r\n      j = (j + S[i]) % 256;\r\n\r\n      // Swap\r\n      var t = S[i];\r\n      S[i] = S[j];\r\n      S[j] = t;\r\n\r\n      keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\r\n    }\r\n\r\n    // Update counters\r\n    this._i = i;\r\n    this._j = j;\r\n\r\n    return keystreamWord;\r\n  }\r\n\r\n  /**\r\n   * Shortcut functions to the cipher's object interface.\r\n   *\r\n   * @example\r\n   *\r\n   *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\r\n   *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\r\n   */\r\n  C.RC4 = StreamCipher._createHelper(RC4);\r\n\r\n  /**\r\n   * Modified RC4 stream cipher algorithm.\r\n   */\r\n  var RC4Drop = C_algo.RC4Drop = RC4.extend({\r\n    /**\r\n     * Configuration options.\r\n     *\r\n     * @property {number} drop The number of keystream words to drop. Default 192\r\n     */\r\n    cfg: RC4.cfg.extend({\r\n      drop: 192\r\n    }),\r\n\r\n    _doReset: function () {\r\n      RC4._doReset.call(this);\r\n\r\n      // Drop\r\n      for (var i = this.cfg.drop; i > 0; i--) {\r\n        generateKeystreamWord.call(this);\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Shortcut functions to the cipher's object interface.\r\n   *\r\n   * @example\r\n   *\r\n   *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\r\n   *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\r\n   */\r\n  C.RC4Drop = StreamCipher._createHelper(RC4Drop);\r\n}());\r\n\r\n\r\n/** @preserve\r\n * Counter block mode compatible with  Dr Brian Gladman fileenc.c\r\n * derived from CryptoJS.mode.CTR\r\n * Jan Hruby jhruby.web@gmail.com\r\n */\r\nCryptoJS.mode.CTRGladman = (function () {\r\n  var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\r\n\r\n  function incWord(word)\r\n  {\r\n    if (((word >> 24) & 0xff) === 0xff) { //overflow\r\n      var b1 = (word >> 16)&0xff;\r\n      var b2 = (word >> 8)&0xff;\r\n      var b3 = word & 0xff;\r\n\r\n      if (b1 === 0xff) // overflow b1\r\n      {\r\n        b1 = 0;\r\n        if (b2 === 0xff)\r\n        {\r\n          b2 = 0;\r\n          if (b3 === 0xff)\r\n          {\r\n            b3 = 0;\r\n          }\r\n          else\r\n          {\r\n            ++b3;\r\n          }\r\n        }\r\n        else\r\n        {\r\n          ++b2;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        ++b1;\r\n      }\r\n\r\n      word = 0;\r\n      word += (b1 << 16);\r\n      word += (b2 << 8);\r\n      word += b3;\r\n    }\r\n    else\r\n    {\r\n      word += (0x01 << 24);\r\n    }\r\n    return word;\r\n  }\r\n\r\n  function incCounter(counter)\r\n  {\r\n    if ((counter[0] = incWord(counter[0])) === 0)\r\n    {\r\n      // encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\r\n      counter[1] = incWord(counter[1]);\r\n    }\r\n    return counter;\r\n  }\r\n\r\n  var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\r\n    processBlock: function (words, offset) {\r\n      // Shortcuts\r\n      var cipher = this._cipher\r\n      var blockSize = cipher.blockSize;\r\n      var iv = this._iv;\r\n      var counter = this._counter;\r\n\r\n      // Generate keystream\r\n      if (iv) {\r\n        counter = this._counter = iv.slice(0);\r\n\r\n        // Remove IV for subsequent blocks\r\n        this._iv = undefined;\r\n      }\r\n\r\n      incCounter(counter);\r\n\r\n      var keystream = counter.slice(0);\r\n      cipher.encryptBlock(keystream, 0);\r\n\r\n      // Encrypt\r\n      for (var i = 0; i < blockSize; i++) {\r\n        words[offset + i] ^= keystream[i];\r\n      }\r\n    }\r\n  });\r\n\r\n  CTRGladman.Decryptor = Encryptor;\r\n\r\n  return CTRGladman;\r\n}());\r\n\r\n\r\n\r\n\r\n(function () {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var StreamCipher = C_lib.StreamCipher;\r\n  var C_algo = C.algo;\r\n\r\n  // Reusable objects\r\n  var S  = [];\r\n  var C_ = [];\r\n  var G  = [];\r\n\r\n  /**\r\n   * Rabbit stream cipher algorithm\r\n   */\r\n  var Rabbit = C_algo.Rabbit = StreamCipher.extend({\r\n    _doReset: function () {\r\n      // Shortcuts\r\n      var K = this._key.words;\r\n      var iv = this.cfg.iv;\r\n\r\n      // Swap endian\r\n      for (var i = 0; i < 4; i++) {\r\n        K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\r\n          (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\r\n      }\r\n\r\n      // Generate initial state values\r\n      var X = this._X = [\r\n        K[0], (K[3] << 16) | (K[2] >>> 16),\r\n        K[1], (K[0] << 16) | (K[3] >>> 16),\r\n        K[2], (K[1] << 16) | (K[0] >>> 16),\r\n        K[3], (K[2] << 16) | (K[1] >>> 16)\r\n      ];\r\n\r\n      // Generate initial counter values\r\n      var C = this._C = [\r\n        (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\r\n        (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\r\n        (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\r\n        (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\r\n      ];\r\n\r\n      // Carry bit\r\n      this._b = 0;\r\n\r\n      // Iterate the system four times\r\n      for (var i = 0; i < 4; i++) {\r\n        nextState.call(this);\r\n      }\r\n\r\n      // Modify the counters\r\n      for (var i = 0; i < 8; i++) {\r\n        C[i] ^= X[(i + 4) & 7];\r\n      }\r\n\r\n      // IV setup\r\n      if (iv) {\r\n        // Shortcuts\r\n        var IV = iv.words;\r\n        var IV_0 = IV[0];\r\n        var IV_1 = IV[1];\r\n\r\n        // Generate four subvectors\r\n        var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\r\n        var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\r\n        var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\r\n        var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\r\n\r\n        // Modify counter values\r\n        C[0] ^= i0;\r\n        C[1] ^= i1;\r\n        C[2] ^= i2;\r\n        C[3] ^= i3;\r\n        C[4] ^= i0;\r\n        C[5] ^= i1;\r\n        C[6] ^= i2;\r\n        C[7] ^= i3;\r\n\r\n        // Iterate the system four times\r\n        for (var i = 0; i < 4; i++) {\r\n          nextState.call(this);\r\n        }\r\n      }\r\n    },\r\n\r\n    _doProcessBlock: function (M, offset) {\r\n      // Shortcut\r\n      var X = this._X;\r\n\r\n      // Iterate the system\r\n      nextState.call(this);\r\n\r\n      // Generate four keystream words\r\n      S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\r\n      S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\r\n      S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\r\n      S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\r\n\r\n      for (var i = 0; i < 4; i++) {\r\n        // Swap endian\r\n        S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\r\n          (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\r\n\r\n        // Encrypt\r\n        M[offset + i] ^= S[i];\r\n      }\r\n    },\r\n\r\n    blockSize: 128/32,\r\n\r\n    ivSize: 64/32\r\n  });\r\n\r\n  function nextState() {\r\n    // Shortcuts\r\n    var X = this._X;\r\n    var C = this._C;\r\n\r\n    // Save old counter values\r\n    for (var i = 0; i < 8; i++) {\r\n      C_[i] = C[i];\r\n    }\r\n\r\n    // Calculate new counter values\r\n    C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\r\n    C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\r\n    C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\r\n    C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\r\n    C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\r\n    C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\r\n    C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\r\n    C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\r\n    this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\r\n\r\n    // Calculate the g-values\r\n    for (var i = 0; i < 8; i++) {\r\n      var gx = X[i] + C[i];\r\n\r\n      // Construct high and low argument for squaring\r\n      var ga = gx & 0xffff;\r\n      var gb = gx >>> 16;\r\n\r\n      // Calculate high and low result of squaring\r\n      var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\r\n      var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\r\n\r\n      // High XOR low\r\n      G[i] = gh ^ gl;\r\n    }\r\n\r\n    // Calculate new state values\r\n    X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\r\n    X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\r\n    X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\r\n    X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\r\n    X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\r\n    X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\r\n    X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\r\n    X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\r\n  }\r\n\r\n  /**\r\n   * Shortcut functions to the cipher's object interface.\r\n   *\r\n   * @example\r\n   *\r\n   *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\r\n   *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\r\n   */\r\n  C.Rabbit = StreamCipher._createHelper(Rabbit);\r\n}());\r\n\r\n\r\n/**\r\n * Counter block mode.\r\n */\r\nCryptoJS.mode.CTR = (function () {\r\n  var CTR = CryptoJS.lib.BlockCipherMode.extend();\r\n\r\n  var Encryptor = CTR.Encryptor = CTR.extend({\r\n    processBlock: function (words, offset) {\r\n      // Shortcuts\r\n      var cipher = this._cipher\r\n      var blockSize = cipher.blockSize;\r\n      var iv = this._iv;\r\n      var counter = this._counter;\r\n\r\n      // Generate keystream\r\n      if (iv) {\r\n        counter = this._counter = iv.slice(0);\r\n\r\n        // Remove IV for subsequent blocks\r\n        this._iv = undefined;\r\n      }\r\n      var keystream = counter.slice(0);\r\n      cipher.encryptBlock(keystream, 0);\r\n\r\n      // Increment counter\r\n      counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\r\n\r\n      // Encrypt\r\n      for (var i = 0; i < blockSize; i++) {\r\n        words[offset + i] ^= keystream[i];\r\n      }\r\n    }\r\n  });\r\n\r\n  CTR.Decryptor = Encryptor;\r\n\r\n  return CTR;\r\n}());\r\n\r\n\r\n(function () {\r\n  // Shortcuts\r\n  var C = CryptoJS;\r\n  var C_lib = C.lib;\r\n  var StreamCipher = C_lib.StreamCipher;\r\n  var C_algo = C.algo;\r\n\r\n  // Reusable objects\r\n  var S  = [];\r\n  var C_ = [];\r\n  var G  = [];\r\n\r\n  /**\r\n   * Rabbit stream cipher algorithm.\r\n   *\r\n   * This is a legacy version that neglected to convert the key to little-endian.\r\n   * This error doesn't affect the cipher's security,\r\n   * but it does affect its compatibility with other implementations.\r\n   */\r\n  var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\r\n    _doReset: function () {\r\n      // Shortcuts\r\n      var K = this._key.words;\r\n      var iv = this.cfg.iv;\r\n\r\n      // Generate initial state values\r\n      var X = this._X = [\r\n        K[0], (K[3] << 16) | (K[2] >>> 16),\r\n        K[1], (K[0] << 16) | (K[3] >>> 16),\r\n        K[2], (K[1] << 16) | (K[0] >>> 16),\r\n        K[3], (K[2] << 16) | (K[1] >>> 16)\r\n      ];\r\n\r\n      // Generate initial counter values\r\n      var C = this._C = [\r\n        (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\r\n        (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\r\n        (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\r\n        (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\r\n      ];\r\n\r\n      // Carry bit\r\n      this._b = 0;\r\n\r\n      // Iterate the system four times\r\n      for (var i = 0; i < 4; i++) {\r\n        nextState.call(this);\r\n      }\r\n\r\n      // Modify the counters\r\n      for (var i = 0; i < 8; i++) {\r\n        C[i] ^= X[(i + 4) & 7];\r\n      }\r\n\r\n      // IV setup\r\n      if (iv) {\r\n        // Shortcuts\r\n        var IV = iv.words;\r\n        var IV_0 = IV[0];\r\n        var IV_1 = IV[1];\r\n\r\n        // Generate four subvectors\r\n        var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\r\n        var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\r\n        var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\r\n        var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\r\n\r\n        // Modify counter values\r\n        C[0] ^= i0;\r\n        C[1] ^= i1;\r\n        C[2] ^= i2;\r\n        C[3] ^= i3;\r\n        C[4] ^= i0;\r\n        C[5] ^= i1;\r\n        C[6] ^= i2;\r\n        C[7] ^= i3;\r\n\r\n        // Iterate the system four times\r\n        for (var i = 0; i < 4; i++) {\r\n          nextState.call(this);\r\n        }\r\n      }\r\n    },\r\n\r\n    _doProcessBlock: function (M, offset) {\r\n      // Shortcut\r\n      var X = this._X;\r\n\r\n      // Iterate the system\r\n      nextState.call(this);\r\n\r\n      // Generate four keystream words\r\n      S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\r\n      S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\r\n      S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\r\n      S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\r\n\r\n      for (var i = 0; i < 4; i++) {\r\n        // Swap endian\r\n        S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\r\n          (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\r\n\r\n        // Encrypt\r\n        M[offset + i] ^= S[i];\r\n      }\r\n    },\r\n\r\n    blockSize: 128/32,\r\n\r\n    ivSize: 64/32\r\n  });\r\n\r\n  function nextState() {\r\n    // Shortcuts\r\n    var X = this._X;\r\n    var C = this._C;\r\n\r\n    // Save old counter values\r\n    for (var i = 0; i < 8; i++) {\r\n      C_[i] = C[i];\r\n    }\r\n\r\n    // Calculate new counter values\r\n    C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\r\n    C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\r\n    C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\r\n    C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\r\n    C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\r\n    C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\r\n    C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\r\n    C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\r\n    this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\r\n\r\n    // Calculate the g-values\r\n    for (var i = 0; i < 8; i++) {\r\n      var gx = X[i] + C[i];\r\n\r\n      // Construct high and low argument for squaring\r\n      var ga = gx & 0xffff;\r\n      var gb = gx >>> 16;\r\n\r\n      // Calculate high and low result of squaring\r\n      var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\r\n      var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\r\n\r\n      // High XOR low\r\n      G[i] = gh ^ gl;\r\n    }\r\n\r\n    // Calculate new state values\r\n    X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\r\n    X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\r\n    X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\r\n    X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\r\n    X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\r\n    X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\r\n    X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\r\n    X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\r\n  }\r\n\r\n  /**\r\n   * Shortcut functions to the cipher's object interface.\r\n   *\r\n   * @example\r\n   *\r\n   *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\r\n   *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\r\n   */\r\n  C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\r\n}());\r\n\r\n\r\n/**\r\n * Zero padding strategy.\r\n */\r\nCryptoJS.pad.ZeroPadding = {\r\n  pad: function (data, blockSize) {\r\n    // Shortcut\r\n    var blockSizeBytes = blockSize * 4;\r\n\r\n    // Pad\r\n    data.clamp();\r\n    data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\r\n  },\r\n\r\n  unpad: function (data) {\r\n    // Shortcut\r\n    var dataWords = data.words;\r\n\r\n    // Unpad\r\n    var i = data.sigBytes - 1;\r\n    while (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\r\n      i--;\r\n    }\r\n    data.sigBytes = i + 1;\r\n  }\r\n};\r\n\r\n"]}]}