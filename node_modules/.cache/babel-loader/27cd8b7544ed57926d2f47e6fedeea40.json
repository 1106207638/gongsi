{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\jeecgbiz\\modal\\JSelectDepartModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\jeecgbiz\\modal\\JSelectDepartModal.vue","mtime":1615948816020},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["JSelectDepartModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <j-modal\r\n    title=\"选择部门\"\r\n    :width=\"modalWidth\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleSubmit\"\r\n    @cancel=\"handleCancel\"\r\n    switchFullscreen\r\n    cancelText=\"关闭\">\r\n    <a-spin tip=\"Loading...\" :spinning=\"false\">\r\n      <a-input-search style=\"margin-bottom: 1px\" placeholder=\"请输入部门名称按回车进行搜索\" @search=\"onSearch\" />\r\n      <a-tree\r\n        checkable\r\n        class=\"my-dept-select-tree\"\r\n        :treeData=\"treeData\"\r\n        :checkStrictly=\"true\"\r\n        @check=\"onCheck\"\r\n        @select=\"onSelect\"\r\n        @expand=\"onExpand\"\r\n        :autoExpandParent=\"autoExpandParent\"\r\n        :expandedKeys=\"expandedKeys\"\r\n        :checkedKeys=\"checkedKeys\">\r\n\r\n        <template slot=\"title\" slot-scope=\"{title}\">\r\n          <span v-if=\"title.indexOf(searchValue) > -1\">\r\n            {{title.substr(0, title.indexOf(searchValue))}}\r\n            <span style=\"color: #f50\">{{searchValue}}</span>\r\n            {{title.substr(title.indexOf(searchValue) + searchValue.length)}}\r\n          </span>\r\n          <span v-else>{{title}}</span>\r\n        </template>\r\n      </a-tree>\r\n\r\n    </a-spin>\r\n  </j-modal>\r\n</template>\r\n\r\n<script>\r\n  import { queryDepartTreeList } from '@/api/api'\r\n  export default {\r\n    name: 'JSelectDepartModal',\r\n    props:['modalWidth','multi','rootOpened','departId'],\r\n    data(){\r\n      return {\r\n        visible:false,\r\n        confirmLoading:false,\r\n        treeData:[],\r\n        autoExpandParent:true,\r\n        expandedKeys:[],\r\n        dataList:[],\r\n        checkedKeys:[],\r\n        checkedRows:[],\r\n        searchValue:\"\"\r\n      }\r\n    },\r\n    created(){\r\n      this.loadDepart();\r\n    },\r\n    watch:{\r\n      departId(){\r\n        this.initDepartComponent()\r\n      },\r\n      visible: {\r\n        handler() {\r\n          if (this.departId) {\r\n            this.checkedKeys = this.departId.split(\",\");\r\n            // console.log('this.departId', this.departId)\r\n          } else {\r\n            this.checkedKeys = [];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    methods:{\r\n      show(){\r\n        this.visible=true\r\n        this.checkedRows=[]\r\n        this.checkedKeys=[]\r\n      },\r\n      loadDepart(){\r\n        queryDepartTreeList().then(res=>{\r\n          if(res.success){\r\n            let arr = [...res.result]\r\n            this.reWriterWithSlot(arr)\r\n            this.treeData = arr\r\n            this.initDepartComponent()\r\n            if(this.rootOpened){\r\n              this.initExpandedKeys(res.result)\r\n            }\r\n          }\r\n        })\r\n      },\r\n      initDepartComponent(){\r\n        let names = ''\r\n        if(this.departId){\r\n          let currDepartId = this.departId\r\n          for(let item of this.dataList){\r\n            if(currDepartId.indexOf(item.key)>=0){\r\n              names+=\",\"+item.title\r\n            }\r\n          }\r\n          if(names){\r\n            names = names.substring(1)\r\n          }\r\n        }\r\n        this.$emit(\"initComp\",names)\r\n      },\r\n      reWriterWithSlot(arr){\r\n        for(let item of arr){\r\n          if(item.children && item.children.length>0){\r\n            this.reWriterWithSlot(item.children)\r\n            let temp = Object.assign({},item)\r\n            temp.children = {}\r\n            this.dataList.push(temp)\r\n          }else{\r\n            this.dataList.push(item)\r\n            item.scopedSlots={ title: 'title' }\r\n          }\r\n        }\r\n      },\r\n      initExpandedKeys(arr){\r\n        if(arr && arr.length>0){\r\n          let keys = []\r\n          for(let item of arr){\r\n            if(item.children && item.children.length>0){\r\n              keys.push(item.id)\r\n            }\r\n          }\r\n          this.expandedKeys=[...keys]\r\n        }else{\r\n          this.expandedKeys=[]\r\n        }\r\n      },\r\n      onCheck (checkedKeys,info) {\r\n        if(!this.multi){\r\n          let arr = checkedKeys.checked.filter(item => this.checkedKeys.indexOf(item) < 0)\r\n          this.checkedKeys = [...arr]\r\n          this.checkedRows = (this.checkedKeys.length === 0) ? [] : [info.node.dataRef]\r\n        }else{\r\n          this.checkedKeys = checkedKeys.checked\r\n          this.checkedRows = this.getCheckedRows(this.checkedKeys)\r\n        }\r\n      },\r\n      onSelect(selectedKeys,info) {\r\n        let keys = []\r\n        keys.push(selectedKeys[0])\r\n        if(!this.checkedKeys || this.checkedKeys.length===0 || !this.multi){\r\n          this.checkedKeys = [...keys]\r\n          this.checkedRows=[info.node.dataRef]\r\n        }else{\r\n          let currKey = info.node.dataRef.key\r\n          if(this.checkedKeys.indexOf(currKey)>=0){\r\n            this.checkedKeys = this.checkedKeys.filter(item=> item !==currKey)\r\n          }else{\r\n            this.checkedKeys.push(...keys)\r\n          }\r\n        }\r\n        this.checkedRows = this.getCheckedRows(this.checkedKeys)\r\n      },\r\n      onExpand (expandedKeys) {\r\n        this.expandedKeys = expandedKeys\r\n        this.autoExpandParent = false\r\n      },\r\n      handleSubmit(){\r\n        if(!this.checkedKeys || this.checkedKeys.length==0){\r\n          this.$emit(\"ok\",'')\r\n        }else{\r\n          this.$emit(\"ok\",this.checkedRows,this.checkedKeys.join(\",\"))\r\n        }\r\n        this.handleClear()\r\n      },\r\n      handleCancel(){\r\n        this.handleClear()\r\n      },\r\n      handleClear(){\r\n        this.visible=false\r\n        this.checkedKeys=[]\r\n      },\r\n      getParentKey(currKey,treeData){\r\n        let parentKey\r\n        for (let i = 0; i < treeData.length; i++) {\r\n          const node = treeData[i]\r\n          if (node.children) {\r\n            if (node.children.some(item => item.key === currKey)) {\r\n              parentKey = node.key\r\n            } else if (this.getParentKey(currKey, node.children)) {\r\n              parentKey = this.getParentKey(currKey, node.children)\r\n            }\r\n          }\r\n        }\r\n        return parentKey\r\n      },\r\n      onSearch(value){\r\n        const expandedKeys = this.dataList.map((item) => {\r\n          if (item.title.indexOf(value) > -1) {\r\n            return this.getParentKey(item.key,this.treeData)\r\n          }\r\n          return null\r\n        }).filter((item, i, self) => item && self.indexOf(item) === i)\r\n\r\n        Object.assign(this, {\r\n          expandedKeys,\r\n          searchValue: value,\r\n          autoExpandParent: true,\r\n        })\r\n\r\n\r\n      },\r\n      // 根据 checkedKeys 获取 rows\r\n      getCheckedRows(checkedKeys) {\r\n        const forChildren = (list, key) => {\r\n          for (let item of list) {\r\n            if (item.id === key) {\r\n              return item\r\n            }\r\n            if (item.children instanceof Array) {\r\n              let value = forChildren(item.children, key)\r\n              if (value != null) {\r\n                return value\r\n              }\r\n            }\r\n          }\r\n          return null\r\n        }\r\n\r\n        let rows = []\r\n        for (let key of checkedKeys) {\r\n          let row = forChildren(this.treeData, key)\r\n          if (row != null) {\r\n            rows.push(row)\r\n          }\r\n        }\r\n        return rows\r\n      }\r\n    }\r\n  }\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  // 限制部门选择树高度，避免部门太多时点击确定不便\r\n  .my-dept-select-tree{\r\n    height: 350px;\r\n    overflow-y: scroll;\r\n  }\r\n\r\n</style>"],"sourceRoot":"src/components/jeecgbiz/modal"}]}