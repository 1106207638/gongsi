{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\jeecg\\modal\\JPopupOnlReport.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\modal\\JPopupOnlReport.vue","mtime":1615948814862},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["JPopupOnlReport.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <j-modal\r\n    :title=\"title\"\r\n    :width=\"modalWidth\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    switchFullscreen\r\n    wrapClassName=\"j-popup-modal\"\r\n    @ok=\"handleSubmit\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <div class=\"table-page-search-wrapper\">\r\n      <a-form layout=\"inline\" @keyup.enter.native=\"searchByquery\">\r\n        <a-row :gutter=\"24\" v-if=\"showSearchFlag\">\r\n          <template v-for=\"(item,index) in queryInfo\">\r\n            <template v-if=\" item.hidden==='1' \">\r\n              <a-col :md=\"8\" :sm=\"24\" :key=\" 'query'+index \" v-show=\"toggleSearchStatus\">\r\n                <online-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></online-query-form-item>\r\n              </a-col>\r\n            </template>\r\n            <template v-else>\r\n              <a-col :md=\"8\" :sm=\"24\" :key=\" 'query'+index \">\r\n                <online-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></online-query-form-item>\r\n              </a-col>\r\n            </template>\r\n          </template>\r\n\r\n          <a-col :md=\"8\" :sm=\"8\">\r\n            <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\r\n              <a-button type=\"primary\" @click=\"searchByquery\" icon=\"search\">查询</a-button>\r\n              <a-button type=\"primary\" @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\r\n              <a @click=\"handleToggleSearch\" style=\"margin-left: 8px\">\r\n                {{ toggleSearchStatus ? '收起' : '展开' }}\r\n                <a-icon :type=\"toggleSearchStatus ? 'up' : 'down'\"/>\r\n              </a>\r\n            </span>\r\n          </a-col>\r\n\r\n        </a-row>\r\n      </a-form>\r\n    </div>\r\n\r\n    <div class=\"ant-alert ant-alert-info\" style=\"margin-bottom: 16px;\">\r\n      <i class=\"anticon anticon-info-circle ant-alert-icon\"></i>\r\n      已选择&nbsp;<a style=\"font-weight: 600\">{{ table.selectedRowKeys.length }}</a>项&nbsp;&nbsp;\r\n      <a style=\"margin-left: 24px\" @click=\"onClearSelected\">清空</a>\r\n\r\n      <a v-if=\"!showSearchFlag\" style=\"margin-left: 24px\" @click=\"onlyReload\">刷新</a>\r\n    </div>\r\n\r\n    <a-table\r\n      ref=\"table\"\r\n      size=\"middle\"\r\n      bordered\r\n      :rowKey=\"combineRowKey\"\r\n      :columns=\"table.columns\"\r\n      :dataSource=\"table.dataSource\"\r\n      :pagination=\"table.pagination\"\r\n      :loading=\"table.loading\"\r\n      :rowSelection=\"{fixed:true,selectedRowKeys: table.selectedRowKeys, onChange: handleChangeInTableSelect}\"\r\n      @change=\"handleChangeInTable\"\r\n      style=\"min-height: 300px\"\r\n      :scroll=\"tableScroll\"\r\n      :customRow=\"clickThenCheck\">\r\n    </a-table>\r\n\r\n\r\n  </j-modal>\r\n</template>\r\n\r\n<script>\r\n  import { getAction } from '@/api/manage'\r\n  import {filterObj} from '@/utils/util'\r\n  import { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\r\n  import { httpGroupRequest } from '@/api/GroupRequest.js'\r\n\r\n  const MODAL_WIDTH = 1200;\r\n  export default {\r\n    name: 'JPopupOnlReport',\r\n    props: ['multi', 'code', 'groupId', 'param'],\r\n    components:{\r\n    },\r\n    data(){\r\n      return {\r\n        visible:false,\r\n        title:\"\",\r\n        confirmLoading:false,\r\n        queryInfo:[],\r\n        toggleSearchStatus:false,\r\n        queryParam:{\r\n\r\n        },\r\n        dictOptions: {},\r\n        url: {\r\n          getColumns: '/online/cgreport/api/getRpColumns/',\r\n          getData: '/online/cgreport/api/getData/',\r\n          getQueryInfo: '/online/cgreport/api/getQueryInfo/'\r\n        },\r\n        table: {\r\n          loading: true,\r\n          // 表头\r\n          columns: [],\r\n          //数据集\r\n          dataSource: [],\r\n          // 选择器\r\n          selectedRowKeys: [],\r\n          selectionRows: [],\r\n          // 分页参数\r\n          pagination: {\r\n            current: 1,\r\n            pageSize: 10,\r\n            pageSizeOptions: ['10', '20', '30'],\r\n            showTotal: (total, range) => {\r\n              return range[0] + '-' + range[1] + ' 共' + total + '条'\r\n            },\r\n            showQuickJumper: true,\r\n            showSizeChanger: true,\r\n            total: 0\r\n          }\r\n        },\r\n        cgRpConfigId:\"\",\r\n        modalWidth:MODAL_WIDTH,\r\n        tableScroll:{x:MODAL_WIDTH-100},\r\n        dynamicParam:{}\r\n\r\n      }\r\n    },\r\n    mounted() {\r\n      //this.loadColumnsInfo()\r\n    },\r\n    watch: {\r\n      code() {\r\n        this.loadColumnsInfo()\r\n      },\r\n      param:{\r\n        deep:true,\r\n        handler(){\r\n          this.dynamicParamHandler()\r\n          this.loadData();\r\n        },\r\n      }\r\n    },\r\n    computed:{\r\n      showSearchFlag(){\r\n        return this.queryInfo && this.queryInfo.length>0\r\n      }\r\n    },\r\n    methods:{\r\n      loadColumnsInfo(){\r\n        let url = `${this.url.getColumns}${this.code}`\r\n        //缓存key\r\n        let groupIdKey\r\n        if (this.groupId) {\r\n          groupIdKey = this.groupId + url\r\n        }\r\n        httpGroupRequest(() => getAction(url), groupIdKey).then(res => {\r\n          if(res.success){\r\n            this.initDictOptionData(res.result.dictOptions);\r\n            this.cgRpConfigId = res.result.cgRpConfigId\r\n            this.title = res.result.cgRpConfigName\r\n            let currColumns = res.result.columns\r\n            for(let a=0;a<currColumns.length;a++){\r\n              if(currColumns[a].customRender){\r\n                let dictCode = currColumns[a].customRender;\r\n                currColumns[a].customRender=(text)=>{\r\n                  return filterMultiDictText(this.dictOptions[dictCode], text+\"\");\r\n                }\r\n              }\r\n            }\r\n            this.table.columns = [...currColumns]\r\n            this.initQueryInfo()\r\n          }\r\n        })\r\n      },\r\n      initQueryInfo() {\r\n        let url = `${this.url.getQueryInfo}${this.cgRpConfigId}`\r\n        //缓存key\r\n        let groupIdKey\r\n        if (this.groupId) {\r\n          groupIdKey = this.groupId + url\r\n        }\r\n        httpGroupRequest(() => getAction(url), groupIdKey).then((res) => {\r\n          // console.log(\"获取查询条件\", res);\r\n          if (res.success) {\r\n            this.dynamicParamHandler(res.result)\r\n            this.queryInfo = res.result\r\n            //查询条件加载后再请求数据\r\n            this.loadData(1)\r\n          } else {\r\n            this.$message.warning(res.message)\r\n          }\r\n        })\r\n      },\r\n      //处理动态参数\r\n      dynamicParamHandler(arr){\r\n        if(arr && arr.length>0){\r\n          //第一次加载查询条件前 初始化queryParam为空对象\r\n          let queryTemp = {}\r\n          for(let item of arr){\r\n            if(item.mode==='single'){\r\n              queryTemp[item.field] = ''\r\n            }\r\n          }\r\n          this.queryParam = {...queryTemp}\r\n        }\r\n        let dynamicTemp = {}\r\n        if(this.param){\r\n          Object.keys(this.param).map(key=>{\r\n            let str = this.param[key]\r\n            if(key in this.queryParam){\r\n              if(str && str.startsWith(\"'\") && str.endsWith(\"'\")){\r\n                str = str.substring(1,str.length-1)\r\n              }\r\n              //如果查询条件包含参数 设置值\r\n              this.queryParam[key]=str\r\n            }\r\n            dynamicTemp[key] = this.param[key]\r\n          })\r\n        }\r\n        this.dynamicParam = {...dynamicTemp}\r\n      },\r\n      loadData(arg) {\r\n        if (arg == 1) {\r\n          this.table.pagination.current = 1\r\n        }\r\n        let params = this.getQueryParams();//查询条件\r\n        this.table.loading = true\r\n        let url = `${this.url.getData}${this.cgRpConfigId}`\r\n        //缓存key\r\n        let groupIdKey\r\n        if (this.groupId) {\r\n          groupIdKey = this.groupId + url + JSON.stringify(params)\r\n        }\r\n        httpGroupRequest(() => getAction(url, params), groupIdKey).then(res => {\r\n          this.table.loading = false\r\n          // console.log(\"daa\",res)\r\n          let data = res.result\r\n          if (data) {\r\n            this.table.pagination.total = Number(data.total)\r\n            this.table.dataSource = data.records\r\n          } else {\r\n            this.table.pagination.total = 0\r\n            this.table.dataSource = []\r\n          }\r\n        })\r\n      },\r\n      getQueryParams() {\r\n        let paramTarget = {}\r\n        if(this.dynamicParam){\r\n          //处理自定义参数\r\n         Object.keys(this.dynamicParam).map(key=>{\r\n           paramTarget['self_'+key] = this.dynamicParam[key]\r\n         })\r\n        }\r\n        let param = Object.assign(paramTarget, this.queryParam, this.sorter);\r\n        param.pageNo = this.table.pagination.current;\r\n        param.pageSize = this.table.pagination.pageSize;\r\n        return filterObj(param);\r\n      },\r\n      handleChangeInTableSelect(selectedRowKeys, selectionRows) {\r\n        //update-begin-author:taoyan date:2020902 for:【issue】开源online的几个问题 LOWCOD-844\r\n        if(!selectedRowKeys || selectedRowKeys.length==0){\r\n          this.table.selectionRows = []\r\n        }else if(selectedRowKeys.length == selectionRows.length){\r\n          this.table.selectionRows = selectionRows\r\n        }else{\r\n          //当两者长度不一的时候 需要判断\r\n          let keys = this.table.selectedRowKeys\r\n          let rows = this.table.selectionRows;\r\n          //这个循环 添加新的记录\r\n          for(let i=0;i<selectionRows.length;i++){\r\n            let combineKey = this.combineRowKey(selectionRows[i])\r\n            if(keys.indexOf(combineKey)<0){\r\n              //如果 原来的key 不包含当前记录 push\r\n              rows.push(selectionRows[i])\r\n            }\r\n          }\r\n          //这个循环 移除取消选中的数据\r\n          this.table.selectionRows = rows.filter(item=>{\r\n            let combineKey = this.combineRowKey(item)\r\n            return selectedRowKeys.indexOf(combineKey)>=0\r\n          })\r\n        }\r\n        //update-end-author:taoyan date:2020902 for:【issue】开源online的几个问题 LOWCOD-844\r\n        this.table.selectedRowKeys = selectedRowKeys\r\n      },\r\n      handleChangeInTable(pagination, filters, sorter) {\r\n        //分页、排序、筛选变化时触发\r\n        if (Object.keys(sorter).length > 0) {\r\n          this.sorter.column = sorter.field\r\n          this.sorter.order = 'ascend' == sorter.order ? 'asc' : 'desc'\r\n        }\r\n        this.table.pagination = pagination\r\n        this.loadData()\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n      handleSubmit() {\r\n        if(!this.multi){\r\n          if(this.table.selectionRows && this.table.selectionRows.length>1){\r\n            this.$message.warning(\"请选择一条记录\")\r\n            return false\r\n          }\r\n        }\r\n        if(!this.table.selectionRows || this.table.selectionRows.length==0){\r\n          this.$message.warning(\"请选择一条记录\")\r\n          return false\r\n        }\r\n        this.$emit('ok', this.table.selectionRows);\r\n        this.close()\r\n      },\r\n      close() {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n        this.onClearSelected()\r\n      },\r\n      show(){\r\n        this.visible = true\r\n        this.loadColumnsInfo()\r\n      },\r\n      handleToggleSearch(){\r\n        this.toggleSearchStatus = !this.toggleSearchStatus;\r\n      },\r\n      searchByquery(){\r\n        this.loadData(1);\r\n      },\r\n      onlyReload(){\r\n        this.loadData();\r\n      },\r\n      searchReset(){\r\n        Object.keys(this.queryParam).forEach(key=>{\r\n          this.queryParam[key]=\"\"\r\n        })\r\n        this.loadData(1);\r\n      },\r\n      onClearSelected(){\r\n        this.table.selectedRowKeys = []\r\n        this.table.selectionRows = []\r\n      },\r\n      combineRowKey(record){\r\n        let res = ''\r\n         Object.keys(record).forEach(key=>{\r\n           res+=record[key]\r\n         })\r\n        if(res.length>50){\r\n          res = res.substring(0,50)\r\n        }\r\n        return res\r\n      },\r\n\r\n      clickThenCheck(record){\r\n        return {\r\n          on: {\r\n            click: () => {\r\n              let rowKey = this.combineRowKey(record)\r\n              if(!this.table.selectedRowKeys || this.table.selectedRowKeys.length==0){\r\n                let arr1=[],arr2=[]\r\n                arr1.push(record)\r\n                arr2.push(rowKey)\r\n                this.table.selectedRowKeys=arr2\r\n                this.table.selectionRows=arr1\r\n              }else{\r\n                if(this.table.selectedRowKeys.indexOf(rowKey)<0){\r\n                  this.table.selectedRowKeys.push(rowKey)\r\n                  this.table.selectionRows.push(record)\r\n                }else{\r\n                  let rowKey_index = this.table.selectedRowKeys.indexOf(rowKey)\r\n                  this.table.selectedRowKeys.splice(rowKey_index,1);\r\n                  this.table.selectionRows.splice(rowKey_index,1);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      //防止字典中有垃圾数据\r\n      initDictOptionData(dictOptions){\r\n        let obj = { }\r\n        Object.keys(dictOptions).map(k=>{\r\n          obj[k] = dictOptions[k].filter(item=>{\r\n            return item!=null\r\n          });\r\n        });\r\n        this.dictOptions  = obj\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components/jeecg/modal"}]}