{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\jeecg\\JEditableTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\JEditableTable.vue","mtime":1615948815728},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["JEditableTable.vue"],"names":[],"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","sourcesContent":["<!-- JEditableTable -->\r\n<!-- @version 1.6.1 -->\r\n<!-- @author sjlei -->\r\n<template>\r\n  <a-spin :spinning=\"loading\">\r\n\r\n    <a-row type=\"flex\">\r\n      <a-col>\r\n        <slot name=\"buttonBefore\" :target=\"getVM()\"/>\r\n      </a-col>\r\n      <a-col>\r\n        <!-- 操作按钮 -->\r\n        <div v-if=\"actionButton\" class=\"action-button\">\r\n          <a-button type=\"primary\" icon=\"plus\" @click=\"handleClickAdd\" :disabled=\"disabled\">新增</a-button>\r\n          <span class=\"gap\"></span>\r\n          <template v-if=\"selectedRowIds.length>0\">\r\n            <a-popconfirm\r\n              :title=\"`确定要删除这 ${selectedRowIds.length} 项吗?`\"\r\n              @confirm=\"handleConfirmDelete\">\r\n              <a-button type=\"primary\" icon=\"minus\" :disabled=\"disabled\">删除</a-button>\r\n              <span class=\"gap\"></span>\r\n            </a-popconfirm>\r\n            <template v-if=\"showClearSelectButton\">\r\n              <a-button icon=\"delete\" @click=\"handleClickClearSelection\">清空选择</a-button>\r\n              <span class=\"gap\"></span>\r\n            </template>\r\n          </template>\r\n        </div>\r\n      </a-col>\r\n      <a-col>\r\n        <slot name=\"buttonAfter\" :target=\"getVM()\"/>\r\n      </a-col>\r\n    </a-row>\r\n\r\n    <slot name=\"actionButtonAfter\" :target=\"getVM()\"/>\r\n\r\n    <div :id=\"`${caseId}inputTable`\" class=\"input-table\">\r\n      <!-- 渲染表头 -->\r\n      <div class=\"thead\" ref=\"thead\">\r\n        <div class=\"tr\" :style=\"{width: this.realTrWidth}\">\r\n          <!-- 左侧固定td  -->\r\n          <div v-if=\"dragSort\" class=\"td td-ds\" :style=\"style.tdLeft\">\r\n            <span></span>\r\n          </div>\r\n          <div v-if=\"rowSelection\" class=\"td td-cb\" :style=\"style.tdLeft\">\r\n            <!--:indeterminate=\"true\"-->\r\n            <a-checkbox\r\n              :checked=\"getSelectAll\"\r\n              :indeterminate=\"getSelectIndeterminate\"\r\n              @change=\"handleChangeCheckedAll\"\r\n            />\r\n          </div>\r\n          <div v-if=\"rowNumber\" class=\"td td-num\" :style=\"style.tdLeft\">\r\n            <span>#</span>\r\n          </div>\r\n          <!-- 右侧动态生成td -->\r\n          <template v-for=\"col in columns\">\r\n            <div\r\n              v-show=\"col.type !== formTypes.hidden\"\r\n              class=\"td\"\r\n              :key=\"col.key\"\r\n              :style=\"buildTdStyle(col,true)\">\r\n\r\n              <span>{{ col.title }}</span>\r\n            </div>\r\n          </template>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"scroll-view\" ref=\"scrollView\" :style=\"{'max-height':maxHeight+'px'}\">\r\n\r\n\r\n        <!-- 渲染主体 body -->\r\n        <div :id=\"`${caseId}tbody`\" class=\"tbody\" :style=\"tbodyStyle\">\r\n          <!-- 扩展高度 -->\r\n          <div class=\"tr-expand\" :style=\"`height:${getExpandHeight}px; z-index:${loading?'11':'9'};`\"></div>\r\n          <!-- 无数据时显示 -->\r\n          <div v-if=\"rows.length===0\" class=\"tr-nodata\">\r\n            <span>暂无数据</span>\r\n          </div>\r\n          <!-- v-model=\"rows\"-->\r\n          <draggable\r\n            :value=\"rows\"\r\n            handle=\".td-ds-icons\"\r\n            @start=\"handleDragMoveStart\"\r\n            @end=\"handleDragMoveEnd\"\r\n          >\r\n\r\n            <!-- 动态生成tr -->\r\n            <template v-for=\"(row,rowIndex) in rows\">\r\n              <!-- tr 只加载可见的和预加载的总共十条数据 -->\r\n              <div\r\n                v-if=\"\r\n                rowIndex >= parseInt(`${(scrollTop-rowHeight) / rowHeight}`) &&\r\n                  (parseInt(`${scrollTop / rowHeight}`) + 9) > rowIndex\r\n              \"\r\n                :id=\"`${caseId}tbody-tr-${rowIndex}`\"\r\n                :data-idx=\"rowIndex\"\r\n                class=\"tr\"\r\n                :class=\"selectedRowIds.indexOf(row.id) !== -1 ? 'tr-checked' : ''\"\r\n                :style=\"buildTrStyle(rowIndex)\"\r\n                :key=\"row.id\"\r\n                @click=\"handleClickTableRow\"\r\n              >\r\n                <!-- 左侧固定td  -->\r\n\r\n                <div v-if=\"dragSort\" class=\"td td-ds\" :style=\"style.tdLeft\" @dblclick=\"_handleRowInsertDown(rowIndex)\" >\r\n                  <a-dropdown :trigger=\"['click']\" :getPopupContainer=\"getParentContainer\">\r\n                    <div class=\"td-ds-icons\">\r\n                      <a-icon type=\"align-left\"/>\r\n                      <a-icon type=\"align-right\"/>\r\n                    </div>\r\n\r\n                    <a-menu slot=\"overlay\">\r\n                      <a-menu-item key=\"0\" :disabled=\"rowIndex===0\" @click=\"_handleRowMoveUp(rowIndex)\">向上移</a-menu-item>\r\n                      <a-menu-item key=\"1\" :disabled=\"rowIndex===(rows.length-1)\" @click=\"_handleRowMoveDown(rowIndex)\">向下移</a-menu-item>\r\n                      <a-menu-divider/>\r\n                      <a-menu-item key=\"3\" @click=\"_handleRowInsertDown(rowIndex)\">插入一行</a-menu-item>\r\n                    </a-menu>\r\n                  </a-dropdown>\r\n                </div>\r\n\r\n                <div v-if=\"rowSelection\" class=\"td td-cb\" :style=\"style.tdLeft\">\r\n                  <!-- 此 v-for 只是为了拼接 id 字符串 -->\r\n                  <template v-for=\"(id,i) in [`${row.id}`]\">\r\n                    <a-checkbox\r\n                      :id=\"id\"\r\n                      :key=\"i\"\r\n                      :checked=\"selectedRowIds.indexOf(id) !== -1\"\r\n                      @change=\"handleChangeLeftCheckbox\"/>\r\n                  </template>\r\n                </div>\r\n                <div v-if=\"rowNumber\" class=\"td td-num\" :style=\"style.tdLeft\">\r\n                  <span>{{ rowIndex+1 }}</span>\r\n                </div>\r\n                <!-- 右侧动态生成td -->\r\n                <div\r\n                  class=\"td\"\r\n                  v-for=\"col in columns\"\r\n                  v-show=\"col.type !== formTypes.hidden\"\r\n                  :key=\"col.key\"\r\n                  :style=\"buildTdStyle(col)\">\r\n\r\n                  <!-- 此 v-for 只是为了拼接 id 字符串 -->\r\n                  <template v-for=\"(id,i) in [`${col.key}${row.id}`]\">\r\n\r\n                    <!-- native input -->\r\n                    <label :key=\"i\" v-if=\"col.type === formTypes.input || col.type === formTypes.inputNumber\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <input\r\n                          v-if=\"isEditRow(row, col)\"\r\n                          :id=\"id\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          :data-input-number=\"col.type === formTypes.inputNumber\"\r\n                          :placeholder=\"replaceProps(col, col.placeholder)\"\r\n                          @blur=\"(e)=>{handleBlurCommono(e.target,rowIndex,row,col)}\"\r\n                          @input=\"(e)=>{handleInputCommono(e.target,rowIndex,row,col)}\"\r\n                        />\r\n                        <span\r\n                          v-else\r\n                          class=\"j-td-span no-edit\"\r\n                          :class=\"{disabled: buildProps(row,col).disabled}\"\r\n                          @click=\"handleEditRow(row, col)\"\r\n                        >{{ inputValues[rowIndex][col.key] }}</span>\r\n                      </a-tooltip>\r\n                    </label>\r\n                    <!-- checkbox -->\r\n                    <template v-else-if=\"col.type === formTypes.checkbox\">\r\n                      <a-checkbox\r\n                        :key=\"i\"\r\n                        :id=\"id\"\r\n                        v-bind=\"buildProps(row,col)\"\r\n                        :checked=\"checkboxValues[id]\"\r\n                        @change=\"(e)=>handleChangeCheckboxCommon(e,row,col)\"\r\n                      />\r\n                    </template>\r\n                    <!-- select -->\r\n                    <template v-else-if=\"col.type === formTypes.select\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <a-select\r\n                          v-if=\"isEditRow(row, col)\"\r\n                          :id=\"id\"\r\n                          :key=\"i\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          style=\"width: 100%;\"\r\n                          :value=\"selectValues[id]\"\r\n                          :options=\"col.options\"\r\n                          :getPopupContainer=\"getParentContainer\"\r\n                          :placeholder=\"replaceProps(col, col.placeholder)\"\r\n                          :filterOption=\"(i,o)=>handleSelectFilterOption(i,o,col)\"\r\n                          @change=\"(v)=>handleChangeSelectCommon(v,id,row,col)\"\r\n                          @search=\"(v)=>handleSearchSelect(v,id,row,col)\"\r\n                          @blur=\"(v)=>handleBlurSearch(v,id,row,col)\"\r\n                          allowClear\r\n                        />\r\n                        <span\r\n                          v-else\r\n                          class=\"j-td-span no-edit\"\r\n                          :class=\"{disabled: buildProps(row,col).disabled}\"\r\n                          @click.stop=\"handleEditRow(row, col)\"\r\n                        >{{ getSelectTranslateText(selectValues[id], row, col) }}</span>\r\n                      </a-tooltip>\r\n                    </template>\r\n                    <!-- date -->\r\n                    <template v-else-if=\"col.type === formTypes.date || col.type === formTypes.datetime\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <j-date\r\n                          v-if=\"isEditRow(row, col)\"\r\n                          :id=\"id\"\r\n                          :key=\"i\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          style=\"width: 100%;\"\r\n                          :value=\"jdateValues[id]\"\r\n                          :getCalendarContainer=\"getParentContainer\"\r\n                          :placeholder=\"replaceProps(col, col.placeholder)\"\r\n                          :trigger-change=\"true\"\r\n                          :showTime=\"col.type === formTypes.datetime\"\r\n                          :dateFormat=\"col.type === formTypes.date? 'YYYY-MM-DD':'YYYY-MM-DD HH:mm:ss'\"\r\n                          allowClear\r\n                          @change=\"(v)=>handleChangeJDateCommon(v,id,row,col,col.type === formTypes.datetime)\"\r\n                        />\r\n                        <span\r\n                          v-else\r\n                          class=\"j-td-span no-edit\"\r\n                          :class=\"{disabled: buildProps(row,col).disabled}\"\r\n                          @click=\"handleEditRow(row, col)\"\r\n                        >{{ jdateValues[id] }}</span>\r\n                      </a-tooltip>\r\n                    </template>\r\n                    <!-- input_pop -->\r\n                    <template v-else-if=\"col.type === formTypes.input_pop\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <j-input-pop\r\n                          v-if=\"isEditRow(row, col)\"\r\n                          :id=\"id\"\r\n                          :key=\"i\"\r\n                          :width=\"300\"\r\n                          :height=\"210\"\r\n                          :pop-container=\"`${caseId}tbody`\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          style=\"width: 100%;\"\r\n                          :value=\"jInputPopValues[id]\"\r\n                          :getCalendarContainer=\"getParentContainer\"\r\n                          :placeholder=\"replaceProps(col, col.placeholder)\"\r\n                          @change=\"(v)=>handleChangeJInputPopCommon(v,id,row,col)\"\r\n                        />\r\n                        <span\r\n                          v-else\r\n                          class=\"j-td-span no-edit\"\r\n                          :class=\"{disabled: buildProps(row,col).disabled}\"\r\n                          @click=\"handleEditRow(row, col)\"\r\n                        >{{ jInputPopValues[id] }}</span>\r\n                      </a-tooltip>\r\n                    </template>\r\n                    <!-- upload -->\r\n                    <div v-else-if=\"col.type === formTypes.upload\" :key=\"i\">\r\n                      <template v-if=\"uploadValues[id] != null\" v-for=\"(file,fileKey) of [(uploadValues[id]||{})]\">\r\n                        <a-input\r\n                          :key=\"fileKey\"\r\n                          :readOnly=\"true\"\r\n                          :value=\"file.name\"\r\n                        >\r\n\r\n                          <template slot=\"addonBefore\" style=\"width: 30px\">\r\n                            <a-tooltip v-if=\"file.status==='uploading'\" :title=\"`上传中(${Math.floor(file.percent)}%)`\">\r\n                              <a-icon type=\"loading\"/>\r\n                            </a-tooltip>\r\n                            <a-tooltip v-else-if=\"file.status==='done'\" title=\"上传完成\">\r\n                              <a-icon type=\"check-circle\" style=\"color:#00DB00;\"/>\r\n                            </a-tooltip>\r\n                            <a-tooltip v-else title=\"上传失败\">\r\n                              <a-icon type=\"exclamation-circle\" style=\"color:red;\"/>\r\n                            </a-tooltip>\r\n                          </template>\r\n\r\n                          <template v-if=\"col.allowDownload!==false || col.allowRemove!==false\" slot=\"addonAfter\" style=\"width: 30px\">\r\n                            <a-dropdown :trigger=\"['click']\" placement=\"bottomRight\" :getPopupContainer=\"getParentContainer\">\r\n                              <a-tooltip title=\"操作\" :getPopupContainer=\"getParentContainer\">\r\n                                <a-icon\r\n                                  v-if=\"file.status!=='uploading'\"\r\n                                  type=\"setting\"\r\n                                  style=\"cursor: pointer;\"/>\r\n                              </a-tooltip>\r\n\r\n                              <a-menu slot=\"overlay\">\r\n                                <a-menu-item v-if=\"col.allowDownload!==false\" @click=\"handleClickDownloadFile(id)\">\r\n                                  <span><a-icon type=\"download\"/>&nbsp;下载</span>\r\n                                </a-menu-item>\r\n                                <a-menu-item v-if=\"col.allowRemove!==false\" @click=\"handleClickDelFile(id)\">\r\n                                  <span><a-icon type=\"delete\"/>&nbsp;删除</span>\r\n                                </a-menu-item>\r\n                              </a-menu>\r\n                            </a-dropdown>\r\n                          </template>\r\n\r\n                        </a-input>\r\n                      </template>\r\n\r\n                      <div :hidden=\"uploadValues[id] != null\">\r\n                        <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                          <a-upload\r\n                            name=\"file\"\r\n                            :data=\"{'isup':1}\"\r\n                            :multiple=\"false\"\r\n                            :action=\"col.action\"\r\n                            :headers=\"uploadGetHeaders(row,col)\"\r\n                            :showUploadList=\"false\"\r\n                            v-bind=\"buildProps(row,col)\"\r\n                            @change=\"(v)=>handleChangeUpload(v,id,row,col)\"\r\n                          >\r\n                            <a-button icon=\"upload\">{{ col.placeholder }}</a-button>\r\n                          </a-upload>\r\n                        </a-tooltip>\r\n                      </div>\r\n\r\n                    </div>\r\n\r\n                    <!-- update-begin-author:taoyan date:0827 for：popup -->\r\n                    <template v-else-if=\"col.type === formTypes.popup\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <j-popup\r\n                          v-if=\"isEditRow(row, col)\"\r\n                          :id=\"id\"\r\n                          :key=\"i\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          :placeholder=\"replaceProps(col, col.placeholder)\"\r\n                          style=\"width: 100%;\"\r\n                          :value=\"getPopupValue(id)\"\r\n                          :field=\"col.field || col.key\"\r\n                          :org-fields=\"col.orgFields\"\r\n                          :dest-fields=\"col.destFields\"\r\n                          :code=\"col.popupCode\"\r\n                          :groupId=\"caseId\"\r\n                          @input=\"(value,others)=>popupCallback(value,others,id,row,col,rowIndex)\"\r\n                        />\r\n                        <span\r\n                          v-else\r\n                          class=\"j-td-span no-edit\"\r\n                          :class=\"{disabled: buildProps(row,col).disabled}\"\r\n                          @click=\"handleEditRow(row, col)\"\r\n                        >{{ getPopupValue(id) }}</span>\r\n                      </a-tooltip>\r\n                    </template>\r\n                    <!-- update-end-author:taoyan date:0827 for：popup -->\r\n\r\n                    <!-- update-beign-author:taoyan date:0827 for：文件/图片逻辑新增 -->\r\n                    <div v-else-if=\"col.type === formTypes.file\" :key=\"i\">\r\n                      <template v-if=\"uploadValues[id] != null\" v-for=\"(file,fileKey) of [(uploadValues[id]||{})]\">\r\n                        <div :key=\"fileKey\" style=\"position: relative;\">\r\n                          <a-tooltip v-if=\"file.status==='uploading'\" :title=\"`上传中(${Math.floor(file.percent)}%)`\">\r\n                            <a-icon type=\"loading\" style=\"color:red;\"/>\r\n                            <span style=\"color:red;margin-left:5px\">{{  file.status }}</span>\r\n                          </a-tooltip>\r\n\r\n                          <a-tooltip v-else-if=\"file.status==='done'\" :title=\"file.name\">\r\n                            <a-icon type=\"paper-clip\" />\r\n                            <span style=\"margin-left:5px\">{{ getEllipsisWord(file.name,5) }}</span>\r\n                          </a-tooltip>\r\n\r\n                          <a-tooltip v-else :title=\"file.name\">\r\n                            <a-icon type=\"paper-clip\" style=\"color:red;\"/>\r\n                            <span style=\"color:red;margin-left:5px\">{{ getEllipsisWord(file.name,5) }}</span>\r\n                          </a-tooltip>\r\n\r\n                          <template style=\"width: 30px\">\r\n                            <a-dropdown :trigger=\"['click']\" placement=\"bottomRight\" :getPopupContainer=\"getParentContainer\" style=\"margin-left: 10px;\">\r\n                              <a-tooltip title=\"操作\" :getPopupContainer=\"getParentContainer\">\r\n                                <a-icon v-if=\"file.status!=='uploading'\" type=\"setting\" style=\"cursor: pointer;\"/>\r\n                              </a-tooltip>\r\n\r\n                              <a-menu slot=\"overlay\">\r\n                                <a-menu-item v-if=\"col.allowDownload!==false\" @click=\"handleClickDownFileByUrl(id)\">\r\n                                  <span><a-icon type=\"download\"/>&nbsp;下载</span>\r\n                                </a-menu-item>\r\n                                <a-menu-item @click=\"handleClickDelFile(id)\">\r\n                                  <span><a-icon type=\"delete\"/>&nbsp;删除</span>\r\n                                </a-menu-item>\r\n                                <a-menu-item @click=\"handleMoreOperation(id,col,col)\">\r\n                                  <span><a-icon type=\"bars\" /> 更多</span>\r\n                                </a-menu-item>\r\n                              </a-menu>\r\n                            </a-dropdown>\r\n                          </template>\r\n                        </div>\r\n                      </template>\r\n\r\n                      <div :hidden=\"uploadValues[id] != null\">\r\n                        <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                          <a-upload\r\n                            name=\"file\"\r\n                            :data=\"{'isup':1}\"\r\n                            :multiple=\"false\"\r\n                            :action=\"getUploadAction(col.action)\"\r\n                            :headers=\"uploadGetHeaders(row,col)\"\r\n                            :showUploadList=\"false\"\r\n                            v-bind=\"buildProps(row,col)\"\r\n                            @change=\"(v)=>handleChangeUpload(v,id,row,col)\"\r\n                          >\r\n                            <a-button icon=\"upload\">上传文件</a-button>\r\n                          </a-upload>\r\n                        </a-tooltip>\r\n                      </div>\r\n\r\n                    </div>\r\n\r\n                    <div v-else-if=\"col.type === formTypes.image\" :key=\"i\">\r\n                      <template v-if=\"uploadValues[id] != null\" v-for=\"(file,fileKey) of [(uploadValues[id]||{})]\">\r\n                        <div :key=\"fileKey\" style=\"position: relative;\">\r\n                          <template v-if=\"!uploadValues[id] || !(uploadValues[id]['url'] || uploadValues[id]['path'] || uploadValues[id]['message'])\">\r\n                            <a-icon type=\"loading\"/>\r\n                          </template>\r\n                          <template v-else-if=\"uploadValues[id]['path']\">\r\n                            <img class=\"j-editable-image\" :src=\"getCellImageView(id)\" alt=\"无图片\" @click=\"handleMoreOperation(id,'img',col)\"/>\r\n                          </template>\r\n                          <template v-else>\r\n                            <a-icon type=\"exclamation-circle\" style=\"color: red;\" @click=\"handleClickShowImageError(id)\"/>\r\n                          </template>\r\n                          <template slot=\"addonBefore\" style=\"width: 30px\">\r\n                            <a-tooltip v-if=\"file.status==='uploading'\" :title=\"`上传中(${Math.floor(file.percent)}%)`\">\r\n                              <a-icon type=\"loading\"/>\r\n                            </a-tooltip>\r\n                            <a-tooltip v-else-if=\"file.status==='done'\" title=\"上传完成\">\r\n                              <a-icon type=\"check-circle\" style=\"color:#00DB00;\"/>\r\n                            </a-tooltip>\r\n                            <a-tooltip v-else title=\"上传失败\">\r\n                              <a-icon type=\"exclamation-circle\" style=\"color:red;\"/>\r\n                            </a-tooltip>\r\n                          </template>\r\n\r\n                          <template style=\"width: 30px\">\r\n                            <a-dropdown :trigger=\"['click']\" placement=\"bottomRight\" :getPopupContainer=\"getParentContainer\" style=\"margin-left: 10px;\">\r\n                              <a-tooltip title=\"操作\" :getPopupContainer=\"getParentContainer\">\r\n                                <a-icon\r\n                                  v-if=\"file.status!=='uploading'\"\r\n                                  type=\"setting\"\r\n                                  style=\"cursor: pointer;\"/>\r\n                              </a-tooltip>\r\n\r\n                              <a-menu slot=\"overlay\">\r\n                                <a-menu-item v-if=\"col.allowDownload!==false\" @click=\"handleClickDownFileByUrl(id)\">\r\n                                  <span><a-icon type=\"download\"/>&nbsp;下载</span>\r\n                                </a-menu-item>\r\n                                <a-menu-item @click=\"handleClickDelFile(id)\">\r\n                                  <span><a-icon type=\"delete\"/>&nbsp;删除</span>\r\n                                </a-menu-item>\r\n                                <a-menu-item @click=\"handleMoreOperation(id,'img',col)\">\r\n                                  <span><a-icon type=\"bars\" /> 更多</span>\r\n                                </a-menu-item>\r\n                              </a-menu>\r\n                            </a-dropdown>\r\n                          </template>\r\n\r\n                        </div>\r\n                      </template>\r\n\r\n                      <div :hidden=\"uploadValues[id] != null\">\r\n                        <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                          <a-upload\r\n                            name=\"file\"\r\n                            :data=\"{'isup':1}\"\r\n                            :multiple=\"false\"\r\n                            :action=\"getUploadAction(col.action)\"\r\n                            :headers=\"uploadGetHeaders(row,col)\"\r\n                            :showUploadList=\"false\"\r\n                            v-bind=\"buildProps(row,col)\"\r\n                            @change=\"(v)=>handleChangeUpload(v,id,row,col)\"\r\n                          >\r\n                            <a-button icon=\"upload\">上传图片</a-button>\r\n                          </a-upload>\r\n                        </a-tooltip>\r\n                      </div>\r\n\r\n                    </div>\r\n                    <!-- update-end-author:taoyan date:0827 for：图片逻辑新增 -->\r\n\r\n                    <!-- radio-begin -->\r\n                    <template v-else-if=\"col.type === formTypes.radio\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <a-radio-group\r\n                          :id=\"id\"\r\n                          :key=\"i\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          :value=\"radioValues[id]\"\r\n                          @change=\"(e)=>handleRadioChange(e.target.value,id,row,col)\">\r\n                          <a-radio v-for=\"(item, key) in col.options\" :key=\"key\" :value=\"item.value\">{{ item.text }}</a-radio>\r\n                        </a-radio-group>\r\n                      </a-tooltip>\r\n                    </template>\r\n                    <!-- radio-end -->\r\n\r\n                    <!-- select多选 -begin -->\r\n                    <template v-else-if=\"col.type === formTypes.list_multi\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <a-select\r\n                          v-if=\"isEditRow(row, col)\"\r\n                          :id=\"id\"\r\n                          :key=\"i\"\r\n                          mode=\"multiple\"\r\n                          :maxTagCount=\"1\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          style=\"width: 100%;\"\r\n                          :value=\"multiSelectValues[id]\"\r\n                          :options=\"col.options\"\r\n                          :getPopupContainer=\"getParentContainer\"\r\n                          :placeholder=\"replaceProps(col, col.placeholder)\"\r\n                          @change=\"(v)=>handleMultiSelectChange(v,id,row,col)\"\r\n                          allowClear\r\n                        />\r\n                        <span\r\n                          v-else\r\n                          class=\"j-td-span no-edit\"\r\n                          :class=\"{disabled: buildProps(row,col).disabled}\"\r\n                          @click=\"handleEditRow(row, col)\"\r\n                        >{{ getSelectTranslateText(multiSelectValues[id], row, col) }} </span>\r\n                      </a-tooltip>\r\n                    </template>\r\n                    <!-- select多选 -end -->\r\n\r\n                    <!-- select搜索 -begin -->\r\n                    <template v-else-if=\"col.type === formTypes.sel_search\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <a-select\r\n                          v-if=\"isEditRow(row, col)\"\r\n                          :id=\"id\"\r\n                          :key=\"i\"\r\n                          showSearch\r\n                          optionFilterProp=\"children\"\r\n                          :filterOption=\"filterOption\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          style=\"width: 100%;\"\r\n                          :value=\"searchSelectValues[id]\"\r\n                          :options=\"col.options\"\r\n                          :getPopupContainer=\"getParentContainer\"\r\n                          :placeholder=\"replaceProps(col, col.placeholder)\"\r\n                          @change=\"(v)=>handleSearchSelectChange(v,id,row,col)\"\r\n                          allowClear\r\n                        />\r\n                        <span\r\n                          v-else\r\n                          class=\"j-td-span no-edit\"\r\n                          :class=\"{disabled: buildProps(row,col).disabled}\"\r\n                          @click=\"handleEditRow(row, col)\"\r\n                        >{{ getSelectTranslateText(searchSelectValues[id], row, col) }}</span>\r\n                      </a-tooltip>\r\n                    </template>\r\n                    <!-- select搜索 -end -->\r\n\r\n                    <div v-else-if=\"col.type === formTypes.slot\" :key=\"i\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <slot\r\n                          :name=\"(col.slot || col.slotName) || col.key\"\r\n                          :index=\"rowIndex\"\r\n                          :text=\"slotValues[id]\"\r\n                          :value=\"slotValues[id]\"\r\n                          :column=\"col\"\r\n                          :rowId=\"getCleanId(row.id)\"\r\n                          :getValue=\"()=>_getValueForSlot(row.id)\"\r\n                          :caseId=\"caseId\"\r\n                          :allValues=\"_getAllValuesForSlot()\"\r\n                          :target=\"getVM()\"\r\n                          :handleChange=\"(v)=>handleChangeSlotCommon(v,id,row,col)\"\r\n                          :isNotPass=\"notPassedIds.includes(col.key+row.id)\"\r\n                        />\r\n                      </a-tooltip>\r\n                    </div>\r\n\r\n                    <!-- else (normal) -->\r\n                    <span v-else :key=\"i\" v-bind=\"buildProps(row,col)\">{{ inputValues[rowIndex][col.key] }}</span>\r\n                  </template>\r\n                </div>\r\n              </div>\r\n              <!-- -- tr end -- -->\r\n\r\n            </template>\r\n          </draggable>\r\n\r\n\r\n          <!-- 统计行 -->\r\n          <div\r\n            v-if=\"showStatisticsRow\"\r\n            class=\"tr\"\r\n            :style=\"{\r\n              ...buildTrStyle(rows.length),\r\n              height: '32px'\r\n            }\"\r\n          >\r\n            <div v-if=\"dragSort\" class=\"td td-ds\" :style=\"style.tdLeft\">\r\n            </div>\r\n            <div v-if=\"rowSelection\" class=\"td td-cb\" :style=\"style.tdLeft\">\r\n              统计\r\n            </div>\r\n            <div v-if=\"rowNumber\" class=\"td td-num\" :style=\"style.tdLeft\">\r\n              <span v-if=\"!rowSelection\">统计</span>\r\n            </div>\r\n\r\n            <!-- 右侧动态生成td -->\r\n            <template v-for=\"col in columns\">\r\n              <div\r\n                :key=\"col.key\"\r\n                class=\"td\"\r\n                v-show=\"col.type !== formTypes.hidden\"\r\n                :style=\"buildTdStyle(col)\"\r\n              >\r\n                <span\r\n                  v-show=\"col.type === formTypes.inputNumber\"\r\n                  style=\"padding: 0 5px;\"\r\n                >{{statisticsColumns[col.key]}}</span>\r\n              </div>\r\n            </template>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <j-file-pop ref=\"filePop\" @ok=\"handleFileSuccess\" :number=\"number\"></j-file-pop>\r\n    </div>\r\n  </a-spin>\r\n</template>\r\n\r\n<script>\r\n  import Vue from 'vue'\r\n  import Draggable from 'vuedraggable'\r\n  import { ACCESS_TOKEN } from '@/store/mutation-types'\r\n  import { FormTypes, VALIDATE_NO_PASSED } from '@/utils/JEditableTableUtil'\r\n  import { cloneObject, randomString, randomNumber, getEventPath } from '@/utils/util'\r\n  import JDate from '@/components/jeecg/JDate'\r\n  import { filterDictText, initDictOptions } from '@/components/dict/JDictSelectUtil'\r\n  import { getFileAccessHttpUrl } from '@/api/manage';\r\n  import JInputPop from '@/components/jeecg/minipop/JInputPop'\r\n  import JFilePop from '@/components/jeecg/minipop/JFilePop'\r\n\r\n  // 行高，需要在实例加载完成前用到\r\n  let rowHeight = 61\r\n\r\n  export default {\r\n    name: 'JEditableTable',\r\n    components: { JDate, Draggable, JInputPop, JFilePop },\r\n    provide() {\r\n      return {\r\n        parentIsJEditableTable: true,\r\n        getDestroyCleanGroupRequest: () => this.destroyCleanGroupRequest,\r\n      }\r\n    },\r\n    props: {\r\n      // 列信息\r\n      columns: {\r\n        type: Array,\r\n        required: true\r\n      },\r\n      // 数据源\r\n      dataSource: {\r\n        type: Array,\r\n        required: true,\r\n        default: () => []\r\n      },\r\n      // 是否显示操作按钮\r\n      actionButton: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      // 是否显示行号\r\n      rowNumber: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      // 是否可选择行\r\n      rowSelection: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      // 页面是否在加载中\r\n      loading: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      // 表格内容区域最大高度\r\n      maxHeight: {\r\n        type: Number,\r\n        default: 400\r\n      },\r\n      // 要禁用的行\r\n      disabledRows: {\r\n        type: Object,\r\n        default() {\r\n          return {}\r\n        }\r\n      },\r\n      // 是否禁用全部组件\r\n      disabled: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      // 是否可拖拽排序\r\n      dragSort: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      dragSortKey: {\r\n        type: String,\r\n        default: 'orderNum'\r\n      },\r\n      // 是否一直显示编辑框，如果为false则只有点击的时候才出现输入框\r\n      alwaysEdit: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        // 是否首次运行\r\n        isFirst: true,\r\n        // 当前实例是否是行编辑\r\n        isJEditableTable: true,\r\n        // caseId，用于防止有多个实例的时候会冲突\r\n        caseId: `_jet-${randomString(6)}-`,\r\n        // 临时ID标识，凡是以该标识结尾的ID都是临时ID，不添加到数据库中\r\n        tempId: `_tid-${randomString(6)}`,\r\n        // 存储document element 对象\r\n        el: {\r\n          inputTable: null,\r\n          tbody: null\r\n        },\r\n        // 存储各个div的style\r\n        style: {\r\n          // 'max-height': '400px'\r\n          tbody: { left: '0px' },\r\n          // 左侧固定td的style\r\n          tdLeft: {},\r\n        },\r\n        // 表单的类型\r\n        formTypes: FormTypes,\r\n        // 行数据\r\n        rows: [],\r\n        // 行高，height + padding + border\r\n        rowHeight,\r\n        // 滚动条顶部距离\r\n        scrollTop: 0,\r\n        // 绑定 select 的值\r\n        selectValues: {},\r\n        // 绑定 checkbox 的值\r\n        checkboxValues: {},\r\n        // 绑定 jdate 的值\r\n        jdateValues: {},\r\n        // 绑定jinputpop\r\n        jInputPopValues:{},\r\n        // 绑定插槽数据\r\n        slotValues: {},\r\n        // file 信息\r\n        uploadValues: {},\r\n        //popup信息\r\n        popupValues: {},\r\n\r\n        radioValues: {},\r\n        metaCheckboxValues: {},\r\n        multiSelectValues: {},\r\n        searchSelectValues: {},\r\n        // 绑定左侧选择框已选择的id\r\n        selectedRowIds: [],\r\n        // 存储被删除行的id\r\n        deleteIds: [],\r\n        // 存储显示tooltip的信息\r\n        tooltips: {},\r\n        // 存储没有通过验证的inputId\r\n        notPassedIds: [],\r\n\r\n        // 当前是否正在拖拽排序\r\n        dragging: false,\r\n        // 是否有统计列\r\n        hasStatisticsColumn: false,\r\n        statisticsColumns: {},\r\n        // 只有在行编辑被销毁时才主动清空GroupRequest的内存\r\n        destroyCleanGroupRequest: false,\r\n        // 当前正在编辑的行的id\r\n        currentEditRows: {},\r\n        // 上次push数据的事件，用于判断是否点击过快\r\n        lastPushTimeMap: new Map(),\r\n        number:0,\r\n      }\r\n    },\r\n    created() {\r\n      this.inputValues = []\r\n      // 当前显示的tr\r\n      this.visibleTrEls = []\r\n      this.disabledRowIds = (this.disabledRowIds || [])\r\n      // 解决火狐浏览器下拖拽会打开新的Tab的问题\r\n      document.body.ondrop = (event) => {\r\n        if (this.dragging) {\r\n          event.preventDefault()\r\n          event.stopPropagation()\r\n        }\r\n      }\r\n    },\r\n    // 计算属性\r\n    computed: {\r\n      // expandHeight = rows.length * rowHeight\r\n      getExpandHeight() {\r\n        let length = this.rows.length * this.rowHeight\r\n        if (this.showStatisticsRow) {\r\n          length += 34\r\n        }\r\n        return length\r\n      },\r\n      // 是否显示统计行\r\n      showStatisticsRow() {\r\n        return this.hasStatisticsColumn && this.rows.length > 0\r\n      },\r\n      // 获取是否选择了部分\r\n      getSelectIndeterminate() {\r\n        return (this.selectedRowIds.length > 0 &&\r\n          this.selectedRowIds.length < this.rows.length)\r\n      },\r\n      // 获取是否选择了全部\r\n      getSelectAll() {\r\n        return (this.selectedRowIds.length === this.rows.length) && this.rows.length > 0\r\n      },\r\n      tbodyStyle() {\r\n        let style = Object.assign({}, this.style.tbody)\r\n        // style['max-height'] = `${this.maxHeight}px`\r\n        style['width'] = this.realTrWidth\r\n        return style\r\n      },\r\n      showClearSelectButton() {\r\n        let count = 0\r\n        for (let key in this.disabledRows) {\r\n          if (this.disabledRows.hasOwnProperty(key)) count++\r\n        }\r\n        return count > 0\r\n      },\r\n      accessToken() {\r\n        return Vue.ls.get(ACCESS_TOKEN)\r\n      },\r\n      realTrWidth() {\r\n        let splice = ' + '\r\n        let calcWidth = 'calc('\r\n        this.columns.forEach((column, i) => {\r\n          let { type, width } = column\r\n          // 隐藏字段不参与计算\r\n          if (type !== FormTypes.hidden) {\r\n            if (typeof width === 'number') {\r\n              calcWidth += width + 'px'\r\n            } else if (typeof width === 'string') {\r\n              calcWidth += width\r\n            } else {\r\n              calcWidth += '120px'\r\n            }\r\n            calcWidth += splice\r\n          }\r\n        })\r\n        if (calcWidth.endsWith(splice)) {\r\n          calcWidth = calcWidth.substring(0, calcWidth.length - splice.length)\r\n        }\r\n        calcWidth += ')'\r\n        // console.log('calcWidth: ', calcWidth)\r\n        return calcWidth\r\n      }\r\n    },\r\n    // 侦听器\r\n    watch: {\r\n      rows: {\r\n        immediate: true,\r\n        handler(val, old) {\r\n          // val.forEach(item => {\r\n          //   for (let inputValue of  this.inputValues) {\r\n          //     if (inputValue.id === item.id) {\r\n          //       item['dbFieldName'] = inputValue['dbFieldName']\r\n          //       break\r\n          //     }\r\n          //   }\r\n          // })\r\n          // console.log('watch.rows:', cloneObject({ val, old }))\r\n        }\r\n      },\r\n      dataSource: {\r\n        immediate: true,\r\n        handler: function (newValue) {\r\n          // 兼容IE\r\n          this.getElementPromise('tbody').then(() => {\r\n            this.initialize()\r\n            this._pushByDataSource(newValue)\r\n          })\r\n        }\r\n      },\r\n      columns: {\r\n        immediate: true,\r\n        handler(columns) {\r\n          // 兼容IE\r\n          this.getElementPromise('tbody').then(() => {\r\n            columns.forEach(column => {\r\n              if (column.type === FormTypes.select || column.type === FormTypes.list_multi || column.type === FormTypes.sel_search) {\r\n                // 兼容 旧版本 options\r\n                if (column.options instanceof Array) {\r\n                  column.options = column.options.map(item => {\r\n                    if (item) {\r\n                      return {\r\n                        ...item,\r\n                        text: item.text || item.title,\r\n                        title: item.text || item.title\r\n                      }\r\n                    }\r\n                    return {}\r\n                  })\r\n                }\r\n                if (column.dictCode) {\r\n                  this._loadDictConcatToOptions(column)\r\n                }\r\n              }\r\n            })\r\n          })\r\n        }\r\n      },\r\n      // 当selectRowIds改变时触发事件\r\n      selectedRowIds(newValue) {\r\n        this.$emit('selectRowChange', cloneObject(newValue).map(i => this.getCleanId(i)))\r\n      }\r\n    },\r\n    mounted() {\r\n      let vm = this\r\n      /** 监听滚动条事件 */\r\n      this.getElement('inputTable').onscroll = function (event) {\r\n        vm.syncScrollBar(event.target.scrollLeft)\r\n      }\r\n      this.getElement('tbody').onscroll = function (event) {\r\n        // vm.recalcTrHiddenItem(event.target.scrollTop)\r\n      }\r\n\r\n      let { thead, scrollView } = this.$refs\r\n      scrollView.onscroll = function (event) {\r\n\r\n        // console.log(event.target.scrollTop, ' - ', event.target.scrollLeft)\r\n\r\n        thead.scrollLeft = event.target.scrollLeft\r\n\r\n        vm.recalcTrHiddenItem(event.target.scrollTop)\r\n\r\n      }\r\n\r\n      // 添加事件监听\r\n      this.addEventListener()\r\n\r\n    },\r\n    methods: {\r\n\r\n      getElement(id, noCaseId = false) {\r\n        if (!this.el[id]) {\r\n          this.el[id] = document.getElementById((noCaseId ? '' : this.caseId) + id)\r\n        }\r\n        return this.el[id]\r\n      },\r\n\r\n      getElementPromise(id, noCaseId = false) {\r\n        return new Promise((resolve) => {\r\n          let timer = setInterval(() => {\r\n            let element = this.getElement(id, noCaseId)\r\n            if (element) {\r\n              clearInterval(timer)\r\n              resolve(element)\r\n            }\r\n          }, 10)\r\n        })\r\n      },\r\n\r\n      /** 初始化列表 */\r\n      initialize() {\r\n        this.visibleTrEls = []\r\n        // 判断是否是首次进入该方法，如果是就不清空行，防止删除了预添加的数据\r\n        if (!this.isFirst) {\r\n          // inputValues：用来存储input表单的值\r\n          // 数组里的每项都是一个对象，对象里每个key都是input的rowKey，值就是input的值，其中有个id的字段来区分\r\n          // 示例：\r\n          // [{\r\n          //    id: \"_jet-4sp0iu-15541771111770\"\r\n          //    dbDefaultVal: \"aaa\",\r\n          //    dbFieldName: \"bbb\",\r\n          //    dbFieldTxt: \"ccc\",\r\n          //    dbLength: 32\r\n          // }]\r\n          this.inputValues = []\r\n          this.rows = []\r\n          this.deleteIds = []\r\n          this.selectValues = {}\r\n          this.checkboxValues = {}\r\n          this.jdateValues = {}\r\n          this.jInputPopValues = {}\r\n          this.slotValues = {}\r\n          this.selectedRowIds = []\r\n          this.tooltips = {}\r\n          this.notPassedIds = []\r\n          this.uploadValues = []\r\n          this.popupValues = []\r\n          this.radioValues = []\r\n          this.multiSelectValues = []\r\n          this.searchSelectValues = []\r\n          this.scrollTop = 0\r\n          this.$nextTick(() => {\r\n            this.getElement('tbody').scrollTop = 0\r\n          })\r\n        } else {\r\n          this.isFirst = false\r\n        }\r\n      },\r\n\r\n      /** 同步滚动条状态 */\r\n      syncScrollBar(scrollLeft) {\r\n        // this.style.tbody.left = `${scrollLeft}px`\r\n        // this.getElement('tbody').scrollLeft = scrollLeft\r\n      },\r\n      /** 重置滚动条位置，参数留空则滚动到上次记录的位置 */\r\n      resetScrollTop(top) {\r\n        let { scrollView } = this.$refs\r\n        if (top != null && typeof top === 'number') {\r\n          scrollView.scrollTop = top\r\n        } else {\r\n          scrollView.scrollTop = this.scrollTop\r\n        }\r\n      },\r\n      /** 重新计算需要隐藏或显示的tr */\r\n      recalcTrHiddenItem(top) {\r\n        let diff = top - this.scrollTop\r\n        if (diff < 0) {\r\n          diff = this.scrollTop - top\r\n        }\r\n        // 只有在滚动了百分之三十的行高的距离时才进行更新\r\n        if (diff >= this.rowHeight * 0.3) {\r\n          this.scrollTop = top\r\n          // 更新form表单的值\r\n          this.$nextTick(() => {\r\n            this.updateFormValues()\r\n          })\r\n        }\r\n      },\r\n      /** 生成id */\r\n      generateId(rows) {\r\n        if (!(rows instanceof Array)) {\r\n          rows = this.rows || []\r\n        }\r\n        let timestamp = new Date().getTime()\r\n        return `${this.caseId}${timestamp}${rows.length}${randomNumber(6)}${this.tempId}`\r\n      },\r\n      /** push 一条数据 */\r\n      push(record, update = true, rows, insertIndex = null, setDefaultValue = true) {\r\n        return this._pushByDataSource([record], [insertIndex], update, rows, setDefaultValue)\r\n      },\r\n\r\n      /**\r\n       * push 数据\r\n       *\r\n       * @param dataSource 数据源\r\n       * @param insertIndexes 行插入位置，和dataSource的下标一一对应\r\n       * @param update 是否更新\r\n       * @param rows 若不传就使用 this.rows\r\n       * @param setDefaultValue 是否填充默认值\r\n       *\r\n       */\r\n      _pushByDataSource(dataSource, insertIndexes = null, update = true, rows = null, setDefaultValue = false) {\r\n        if (!(rows instanceof Array)) {\r\n          rows = [...this.rows] || []\r\n        }\r\n        let checkboxValues = { ...this.checkboxValues }\r\n        let selectValues = { ...this.selectValues }\r\n        let jdateValues = { ...this.jdateValues }\r\n        let jInputPopValues = { ...this.jInputPopValues }\r\n        let slotValues = { ...this.slotValues }\r\n        let uploadValues = { ...this.uploadValues }\r\n        let popupValues = { ...this.popupValues }\r\n        let radioValues = { ...this.radioValues }\r\n        let multiSelectValues = { ...this.multiSelectValues }\r\n        let searchSelectValues = { ...this.searchSelectValues }\r\n        // 禁用行的id\r\n        let disabledRowIds = (this.disabledRowIds || [])\r\n        dataSource.forEach((data, newValueIndex) => {\r\n          // 不能直接更改数据源的id\r\n          let dataId = data.id\r\n          // 判断源数据是否带有id\r\n          if (dataId == null || dataId === '') {\r\n            dataId = this.generateId(rows)\r\n          } else if(!this.hasCaseId(dataId)) {\r\n            dataId = this.caseId + dataId\r\n          }\r\n          let row = { id: dataId }\r\n          let value = { id: dataId }\r\n          let disabled = false\r\n          this.columns.forEach(column => {\r\n            let inputId = column.key + value.id\r\n            let sourceValue = (data[column.key] == null ? '' : data[column.key]).toString()\r\n\r\n            let defaultValue = null;\r\n            if (setDefaultValue) {\r\n              defaultValue = column.defaultValue || (column.defaultValue === 0 ? 0 : '')\r\n              if (defaultValue instanceof Array) {\r\n                defaultValue = defaultValue.join(',')\r\n              }\r\n\r\n              sourceValue = (typeof sourceValue === 'number' || sourceValue) ? sourceValue : defaultValue\r\n            }\r\n            let sourceValueIsEmpty = (sourceValue == null || sourceValue === '')\r\n\r\n            if (column.type === FormTypes.inputNumber) {\r\n              // 判断是否是排序字段，如果是就赋最大值\r\n              if (column.isOrder === true) {\r\n                value[column.key] = this.getInputNumberMaxValue(column) + 1\r\n              } else {\r\n                value[column.key] = sourceValue\r\n              }\r\n              // 判断是否是统计列\r\n              if (column.statistics) {\r\n                this.hasStatisticsColumn = true\r\n                if (!this.statisticsColumns[column.key]) {\r\n                  this.$set(this.statisticsColumns, column.key, 0)\r\n                }\r\n              }\r\n\r\n            } else if (column.type === FormTypes.checkbox) {\r\n              // 判断是否设定了customValue（自定义值）\r\n              if (column.customValue instanceof Array) {\r\n                let customValue = (column.customValue[0] || '').toString()\r\n                if (sourceValueIsEmpty && setDefaultValue) {\r\n                  sourceValue = column.defaultChecked ? customValue : sourceValue\r\n                }\r\n                checkboxValues[inputId] = (sourceValue === customValue)\r\n              } else {\r\n                if (sourceValueIsEmpty && setDefaultValue) {\r\n                  checkboxValues[inputId] = !!column.defaultChecked\r\n                } else {\r\n                  checkboxValues[inputId] = sourceValue\r\n                }\r\n              }\r\n\r\n            } else if (column.type === FormTypes.select) {\r\n              if (!sourceValueIsEmpty) {\r\n                // 判断是否是多选\r\n                if (typeof sourceValue === 'string' && (column.props || {})['mode'] === 'multiple') {\r\n                  sourceValue = sourceValue === '' ? [] : sourceValue.split(',')\r\n                }\r\n                selectValues[inputId] = sourceValue\r\n              } else {\r\n                selectValues[inputId] = undefined\r\n              }\r\n\r\n            } else if (column.type === FormTypes.date || column.type === FormTypes.datetime) {\r\n              jdateValues[inputId] = sourceValue\r\n\r\n            } else if (column.type === FormTypes.slot) {\r\n              slotValues[inputId] = sourceValue\r\n\r\n            } else if (column.type === FormTypes.popup) {\r\n              popupValues[inputId] = sourceValue\r\n            } else if (column.type === FormTypes.input_pop) {\r\n              jInputPopValues[inputId] = sourceValue\r\n            } else if (column.type === FormTypes.radio) {\r\n              radioValues[inputId] = sourceValue\r\n            } else if (column.type === FormTypes.sel_search) {\r\n              searchSelectValues[inputId] = sourceValue\r\n            } else if (column.type === FormTypes.list_multi) {\r\n              if (typeof sourceValue === 'string' && sourceValue.length > 0) {\r\n                multiSelectValues[inputId] = sourceValue.split(',')\r\n              } else {\r\n                multiSelectValues[inputId] = []\r\n              }\r\n            } else if (column.type === FormTypes.upload || column.type === FormTypes.file || column.type === FormTypes.image) {\r\n              if (sourceValue) {\r\n                let fileName = ''\r\n                if (sourceValue.indexOf(',') > 0) {\r\n                  let sourceValue2 = sourceValue.split(',')[0]\r\n                  fileName = sourceValue2.substring(sourceValue2.lastIndexOf('/') + 1)\r\n                } else {\r\n                  fileName = sourceValue.substring(sourceValue.lastIndexOf('/') + 1)\r\n                }\r\n                uploadValues[inputId] = {\r\n                  name: fileName,\r\n                  status: 'done',\r\n                  path: sourceValue\r\n                }\r\n              }\r\n            } else {\r\n              value[column.key] = sourceValue\r\n            }\r\n\r\n            // 解析disabledRows\r\n            for (let columnKey in this.disabledRows) {\r\n              // 判断是否有该属性\r\n              if (this.disabledRows.hasOwnProperty(columnKey) && data.hasOwnProperty(columnKey)) {\r\n                if (disabled !== true) {\r\n                  let temp = this.disabledRows[columnKey]\r\n                  // 禁用规则可以是一个数组\r\n                  if (temp instanceof Array) {\r\n                    disabled = temp.includes(data[columnKey])\r\n                  } else {\r\n                    disabled = (temp === data[columnKey])\r\n                  }\r\n                  if (disabled) {\r\n                    disabledRowIds.push(row.id)\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          })\r\n          // 插入行而不是添加到最后\r\n          let added = false\r\n          if (insertIndexes instanceof Array) {\r\n            let insertIndex = insertIndexes[newValueIndex]\r\n            if (typeof insertIndex === 'number') {\r\n              added = true\r\n              rows.splice(insertIndex, 0, row)\r\n              this.inputValues.splice(insertIndex, 0, value)\r\n            }\r\n          }\r\n          //update-begin-author:lvdandan date:20201105 for:LOWCOD-987 【online】js增强的问题--数据对象带有id，且和现有数据一致时，替换患有数据\r\n          if(-1 !== rows.findIndex(item => item.id === row.id)){\r\n            added = true\r\n            this.inputValues = this.inputValues.map(item => item.id === row.id ? value : item)\r\n          }\r\n          //update-begin-author:lvdandan date:20201105 for:LOWCOD-987 【online】js增强的问题--数据对象带有id，且和现有数据一致时，替换患有数据\r\n          if (!added) {\r\n            rows.push(row)\r\n            this.inputValues.push(value)\r\n          }\r\n        })\r\n        // 启用了拖动排序，就重新计算排序编号\r\n        if (this.dragSort) {\r\n          this.inputValues.forEach((item, index) => {\r\n            item[this.dragSortKey] = (index + 1)\r\n          })\r\n        }\r\n        this.disabledRowIds = disabledRowIds\r\n        this.checkboxValues = checkboxValues\r\n        this.selectValues = selectValues\r\n        this.jdateValues = jdateValues\r\n        this.jInputPopValues = jInputPopValues\r\n        this.slotValues = slotValues\r\n        this.uploadValues = uploadValues\r\n        this.popupValues = popupValues\r\n        this.radioValues = radioValues\r\n        this.multiSelectValues = multiSelectValues\r\n        this.searchSelectValues = searchSelectValues\r\n        // 重新计算所有统计列\r\n        this.recalcAllStatisticsColumns()\r\n        // 更新到 dom\r\n        if (update) {\r\n          this.rows = rows\r\n\r\n          // 更新form表单的值\r\n          this.$nextTick(() => {\r\n            this.forceUpdateFormValues()\r\n          })\r\n        }\r\n        return rows\r\n      },\r\n\r\n      /** 获取某一数字输入框列中的最大的值 */\r\n      getInputNumberMaxValue(column) {\r\n        let maxNum = 0\r\n        this.inputValues.forEach((item, index) => {\r\n          let val = item[column.key], num\r\n          try {\r\n            num = parseInt(val)\r\n          } catch {\r\n            num = 0\r\n          }\r\n          // 把首次循环的结果当成最大值\r\n          if (index === 0) {\r\n            maxNum = num\r\n          } else {\r\n            maxNum = (num > maxNum) ? num : maxNum\r\n          }\r\n        })\r\n        return maxNum\r\n      },\r\n      /** 添加一行 */\r\n      add(num = 1, forceScrollToBottom = false) {\r\n        if (num < 1) return\r\n        // let timestamp = new Date().getTime()\r\n        let rows = this.rows\r\n        let row\r\n        for (let i = 0; i < num; i++) {\r\n          rows = this.push({}, false, rows)\r\n          row = rows[rows.length - 1]\r\n        }\r\n        this.rows = rows\r\n\r\n        this.$nextTick(() => {\r\n          this.updateFormValues()\r\n        })\r\n        // 触发add事件\r\n        this.$emit('added', {\r\n          row: (() => {\r\n            let r = Object.assign({}, row)\r\n            r.id = this.getCleanId(r.id)\r\n            return r\r\n          })(),\r\n          target: this\r\n        })\r\n        // 设置滚动条位置\r\n        let tbody = this.getElement('tbody')\r\n        let offsetHeight = tbody.offsetHeight\r\n        let realScrollTop = tbody.scrollTop + offsetHeight\r\n        if (forceScrollToBottom === false) {\r\n          // 只有滚动条在底部的时候才自动滚动\r\n          if (!((tbody.scrollHeight - realScrollTop) <= 10)) {\r\n            return\r\n          }\r\n        }\r\n        this.$nextTick(() => {\r\n          tbody.scrollTop = tbody.scrollHeight\r\n        })\r\n      },\r\n      /**\r\n       * 在指定位置添加一行\r\n       * @param insertIndex 添加位置下标\r\n       * @param num 添加的行数，默认1\r\n       */\r\n      insert(insertIndex, num = 1) {\r\n        if (this.checkTooFastClick('insert', 1500)) {\r\n          return\r\n        }\r\n        if (!insertIndex && num < 1) return\r\n        let rows = this.rows\r\n        let newRows = []\r\n        for (let i = 0; i < num; i++) {\r\n          let row = { id: this.generateId(rows) }\r\n          rows = this.push(row, false, rows, insertIndex)\r\n          newRows.push(row)\r\n        }\r\n        // 同步更改\r\n        this.rows = rows\r\n        this.$nextTick(() => {\r\n          this.recalcSortNumber()\r\n          this.forceUpdateFormValues()\r\n        })\r\n        // 触发 insert 事件\r\n        this.$emit('inserted', {\r\n          rows: newRows.map(row => {\r\n            let r = cloneObject(row)\r\n            r.id = this.getCleanId(r.id)\r\n            return r\r\n          }),\r\n          num, insertIndex,\r\n          target: this\r\n        })\r\n      },\r\n      /** 删除被选中的行 */\r\n      removeSelectedRows() {\r\n        this.removeRows(this.selectedRowIds)\r\n        this.selectedRowIds = []\r\n      },\r\n      /** 删除一行或多行 */\r\n      removeRows(id) {\r\n        let ids = id\r\n        if (!(id instanceof Array)) {\r\n          if (typeof id === 'string') {\r\n            ids = [id]\r\n          } else {\r\n            throw  `JEditableTable.removeRows() 函数需要的参数可以是string或Array类型，但提供的却是${typeof id}`\r\n          }\r\n        }\r\n\r\n        let rows = cloneObject(this.rows)\r\n        ids.forEach(removeId => {\r\n          removeId = this.getCleanId(removeId)\r\n          // 找到每个id对应的真实index并删除\r\n          const findAndDelete = (arr) => {\r\n            for (let i = 0; i < arr.length; i++) {\r\n              let currentId = this.getCleanId(arr[i].id)\r\n              if (currentId === removeId) {\r\n                arr.splice(i, 1)\r\n                return true\r\n              }\r\n            }\r\n          }\r\n          // 找到rows对应的index，并删除\r\n          if (findAndDelete(rows)) {\r\n            // 找到values对应的index，并删除\r\n            findAndDelete(this.inputValues)\r\n            // 将caseId去除\r\n            let id = this.getCleanId(removeId)\r\n            this.deleteIds.push(id)\r\n          }\r\n        })\r\n        this.rows = rows\r\n        this.$emit('deleted', this.getDeleteIds(), this)\r\n        this.$nextTick(() => {\r\n          // 更新formValues\r\n          this.updateFormValues()\r\n          // 重新计算统计\r\n          this.recalcAllStatisticsColumns()\r\n        })\r\n        return true\r\n      },\r\n\r\n      /** 获取表格表单里的值（异步版） */\r\n      getValuesAsync(options = {}, callback) {\r\n        let { validate, rowIds, deleteTempId } = options\r\n        if (typeof validate !== 'boolean') validate = true\r\n        if (!(rowIds instanceof Array)) rowIds = null\r\n        // 是否删除临时ID，默认为 false\r\n        if (typeof deleteTempId !== 'boolean') deleteTempId = false\r\n        // console.log('options:', { validate, rowIds })\r\n\r\n        let asyncCount = 0\r\n        let error = 0\r\n        let inputValues = cloneObject(this.inputValues)\r\n        let tooltips = Object.assign({}, this.tooltips)\r\n        let notPassedIds = cloneObject(this.notPassedIds)\r\n        // 用于存储合并后的值\r\n        let values = []\r\n        // 遍历inputValues来获取每行的值\r\n        for (let value of inputValues) {\r\n          let rowIdsFlag = false\r\n          // 如果带有rowIds，那么就只存这几行的数据\r\n          if (rowIds == null) {\r\n            rowIdsFlag = true\r\n          } else {\r\n            for (let rowId of rowIds) {\r\n              if (this.getCleanId(rowId) === this.getCleanId(value.id)) {\r\n                rowIdsFlag = true\r\n                break\r\n              }\r\n            }\r\n          }\r\n\r\n          if (!rowIdsFlag) continue\r\n\r\n          this.columns.forEach(column => {\r\n            let inputId = column.key + value.id\r\n            if (column.type === FormTypes.checkbox) {\r\n              let checked = this.checkboxValues[inputId]\r\n              if (column.customValue instanceof Array) {\r\n                value[column.key] = checked ? column.customValue[0] : column.customValue[1]\r\n              } else {\r\n                value[column.key] = checked\r\n              }\r\n\r\n            } else if (column.type === FormTypes.select) {\r\n              let selected = this.selectValues[inputId]\r\n              if (selected instanceof Array) {\r\n                value[column.key] = cloneObject(selected)\r\n              } else {\r\n                value[column.key] = selected\r\n              }\r\n\r\n            } else if (column.type === FormTypes.date || column.type === FormTypes.datetime) {\r\n              value[column.key] = this.jdateValues[inputId]\r\n\r\n            } else if (column.type === FormTypes.input_pop) {\r\n              value[column.key] = this.jInputPopValues[inputId]\r\n\r\n            } else if (column.type === FormTypes.upload) {\r\n              value[column.key] = cloneObject(this.uploadValues[inputId] || null)\r\n\r\n            } else if (column.type === FormTypes.image || column.type === FormTypes.file) {\r\n              let currUploadObj = cloneObject(this.uploadValues[inputId] || null)\r\n              if (currUploadObj) {\r\n                value[column.key] = currUploadObj['path'] || null\r\n              }\r\n\r\n            } else if (column.type === FormTypes.popup) {\r\n              if (!value[column.key]) {\r\n                value[column.key] = this.popupValues[inputId] || null\r\n              }\r\n            } else if (column.type === FormTypes.radio) {\r\n              value[column.key] = this.radioValues[inputId]\r\n            } else if (column.type === FormTypes.sel_search) {\r\n              value[column.key] = this.searchSelectValues[inputId]\r\n            } else if (column.type === FormTypes.list_multi) {\r\n              if (!this.multiSelectValues[inputId] || this.multiSelectValues[inputId].length === 0) {\r\n                value[column.key] = ''\r\n              } else {\r\n                value[column.key] = this.multiSelectValues[inputId].join(',')\r\n              }\r\n            } else if (column.type === FormTypes.slot) {\r\n              value[column.key] = this.slotValues[inputId]\r\n            }\r\n\r\n\r\n            // 检查表单验证\r\n            if (validate === true) {\r\n              const handleValidateOneInput = (results) => {\r\n                tooltips[inputId] = results[0]\r\n                if (tooltips[inputId].passed === false) {\r\n                  error++\r\n                  // if (error++ === 0) {\r\n                  // let element = document.getElementById(inputId)\r\n                  // while (element.className !== 'tr') {\r\n                  //   element = element.parentElement\r\n                  // }\r\n                  // this.jumpToId(inputId, element)\r\n                  // }\r\n                }\r\n                tooltips[inputId].visible = false\r\n                notPassedIds = results[1]\r\n              }\r\n              asyncCount++\r\n              let results = this.validateOneInputAsync(value[column.key], value, column, notPassedIds, false, 'getValues', (results) => {\r\n                handleValidateOneInput(results)\r\n                asyncCount--\r\n              })\r\n              handleValidateOneInput(results)\r\n            }\r\n          })\r\n          // 删除 tempId\r\n          if (deleteTempId && this.isTempId(value.id)) {\r\n            delete value.id\r\n          } else {\r\n            value.id = this.getCleanId(value.id)\r\n          }\r\n\r\n          values.push(value)\r\n        }\r\n\r\n        if (validate === true) {\r\n          this.tooltips = tooltips\r\n          this.notPassedIds = notPassedIds\r\n        }\r\n\r\n        const timer = setInterval(() => {\r\n          if (asyncCount === 0) {\r\n            clearInterval(timer)\r\n            if (typeof callback === 'function') {\r\n              callback({ error, values })\r\n            }\r\n          }\r\n        }, 10)\r\n\r\n        return { error, values }\r\n      },\r\n\r\n      /** 获取表格表单里的值（同步版） */\r\n      getValuesSync(options = {}) {\r\n        return this.getValuesAsync(options)\r\n      },\r\n\r\n      /** 获取表格表单里的值 */\r\n      getValues(callback, validate = true, rowIds) {\r\n        this.getValuesAsync({ validate, rowIds }, ({ error, values }) => {\r\n          if (typeof callback === 'function') {\r\n            callback(error, values)\r\n          }\r\n        })\r\n      },\r\n      /** getValues的Promise版 */\r\n      getValuesPromise(validate = true, rowIds, deleteTempId) {\r\n        return new Promise((resolve, reject) => {\r\n          this.getValuesAsync({ validate, rowIds, deleteTempId }, ({ error, values }) => {\r\n            if (error === 0) {\r\n              resolve(values)\r\n            } else {\r\n              reject(VALIDATE_NO_PASSED)\r\n            }\r\n          })\r\n        })\r\n      },\r\n      /** 获取被删除项的id */\r\n      getDeleteIds() {\r\n        return cloneObject(this.deleteIds)\r\n      },\r\n      /** 获取所有的数据，包括values、deleteIds */\r\n      getAll(validate, deleteTempId) {\r\n        return new Promise((resolve, reject) => {\r\n          let deleteIds = this.getDeleteIds()\r\n          this.getValuesPromise(validate, null, deleteTempId).then((values) => {\r\n            resolve({ values, deleteIds })\r\n          }).catch(error => {\r\n            reject(error)\r\n          })\r\n        })\r\n      },\r\n      /** Sync 获取所有的数据，包括values、deleteIds */\r\n      getAllSync(validate, rowIds, deleteTempId) {\r\n        let result = this.getValuesSync({ validate, rowIds, deleteTempId })\r\n        result.deleteIds = this.getDeleteIds()\r\n        return result\r\n      },\r\n      // slot 获取值\r\n      _getValueForSlot(rowId) {\r\n        return this.getValuesSync({ rowIds: [rowId] }).values[0]\r\n      },\r\n      _getAllValuesForSlot() {\r\n        return cloneObject({\r\n          inputValues: this.inputValues,\r\n          selectValues: this.selectValues,\r\n          checkboxValues: this.checkboxValues,\r\n          jdateValues: this.jdateValues,\r\n          jInputPopValues: this.jInputPopValues,\r\n          slotValues: this.slotValues,\r\n          uploadValues: this.uploadValues,\r\n          popupValues: this.popupValues,\r\n          radioValues: this.radioValues,\r\n          multiSelectValues: this.multiSelectValues,\r\n          searchSelectValues: this.searchSelectValues,\r\n        })\r\n      },\r\n      /** 设置某行某列的值 */\r\n      setValues(values) {\r\n\r\n        values.forEach(item => {\r\n          let { rowKey, values: newValues } = item\r\n          rowKey = this.getCleanId(rowKey)\r\n          for (let newValueKey in newValues) {\r\n            if (newValues.hasOwnProperty(newValueKey)) {\r\n              let edited = false // 已被修改\r\n              for (let column of this.columns) {\r\n                if (column.key === newValueKey) {\r\n                  let newValue = newValues[newValueKey]\r\n                  this.inputValues.forEach(value => {\r\n                    // 在inputValues中找到了该字段\r\n                    if (rowKey === this.getCleanId(value.id)) {\r\n                      if (value.hasOwnProperty(newValueKey)) {\r\n                        edited = true\r\n                        value[newValueKey] = newValue\r\n                      }\r\n                    }\r\n                  })\r\n                  if (!edited) {\r\n                    let modelKey = `${newValueKey}${this.caseId}${rowKey}`\r\n                    if (column.type === FormTypes.select) {\r\n                      if (newValue !== 0 && !newValue) {\r\n                        edited = this.setOneValue(this.selectValues, modelKey, undefined)\r\n                      } else {\r\n                        edited = this.setOneValue(this.selectValues, modelKey, newValue)\r\n                      }\r\n                    } else if (column.type === FormTypes.checkbox) {\r\n                      // checkbox 特殊处理 CustomValue\r\n                      let key = this.valuesHasOwnProperty(this.checkboxValues, modelKey)\r\n                      // 找到对应的column\r\n                      let sourceValue\r\n                      // 判断是否设定了customValue（自定义值）\r\n                      if (column.customValue instanceof Array) {\r\n                        let customValue = (column.customValue[0] || '').toString()\r\n                        sourceValue = (newValue === customValue)\r\n                      } else {\r\n                        sourceValue = !!newValue\r\n                      }\r\n                      this.$set(this.checkboxValues, key, sourceValue)\r\n                      edited = true\r\n                    } else if (column.type === FormTypes.date || column.type === FormTypes.datetime) {\r\n                      edited = this.setOneValue(this.jdateValues, modelKey, newValue)\r\n                    } else if (column.type === FormTypes.input_pop) {\r\n                      edited = this.setOneValue(this.jInputPopValues, modelKey, newValue)\r\n                    } else if (column.type === FormTypes.slot) {\r\n                      edited = this.setOneValue(this.slotValues, modelKey, newValue)\r\n                    } else if (column.type === FormTypes.upload || column.type === FormTypes.image || column.type === FormTypes.file) {\r\n                      edited = this.setOneValue(this.uploadValues, modelKey, newValue)\r\n                    } else if (column.type === FormTypes.popup) {\r\n                      edited = this.setOneValue(this.popupValues, modelKey, newValue)\r\n                    } else if (column.type === FormTypes.radio) {\r\n                      edited = this.setOneValue(this.radioValues, modelKey, newValue)\r\n                    } else if (column.type === FormTypes.list_multi) {\r\n                      edited = this.setOneValue(this.multiSelectValues, modelKey, newValue, true)\r\n                    } else if (column.type === FormTypes.sel_search) {\r\n                      edited = this.setOneValue(this.searchSelectValues, modelKey, newValue)\r\n                    } else {\r\n                      edited = false\r\n                    }\r\n                  }\r\n                  if (edited) {\r\n                    this.elemValueChange(column.type, {[newValueKey]: newValue}, column, newValue)\r\n                  }\r\n                }\r\n              }\r\n              if (!edited) {\r\n                console.warn(`JEditableTable.setValues：没有找到\"${newValueKey}\"列`)\r\n              }\r\n            }\r\n          }\r\n        })\r\n        // 强制更新formValues\r\n        this.forceUpdateFormValues()\r\n      },\r\n      /**\r\n       * 设置单个组件的值\r\n       * @param valuesObject 组件存储值的对象\r\n       * @param modelKey 组件存储值的对象里的key\r\n       * @param value 新值\r\n       * @param isMultiple 是否多选，如果是就会对 value 进行一个 split(',') 的操作\r\n       */\r\n      setOneValue(valuesObject, modelKey, value, isMultiple = false) {\r\n        let key = this.valuesHasOwnProperty(valuesObject, modelKey)\r\n        if (key) {\r\n          // 处理多选数组\r\n          if (isMultiple && !Array.isArray(value)) {\r\n            value = (value || '').toString().trim()\r\n            value = value === '' ? [] : value.split(',')\r\n          }\r\n          this.$set(valuesObject, key, value)\r\n          return true\r\n        }\r\n        return false\r\n      },\r\n      valuesHasOwnProperty(values, ownProperty) {\r\n        let key = ownProperty\r\n        if (values.hasOwnProperty(key)) {\r\n          return key\r\n        }\r\n        if (values.hasOwnProperty(key + this.tempId)) {\r\n          return key + this.tempId\r\n        }\r\n        return null\r\n      },\r\n\r\n      /** 跳转到指定位置 */\r\n      // jumpToId(id, element) {\r\n      //   if (element == null) {\r\n      //     element = document.getElementById(id)\r\n      //   }\r\n      //   if (element != null) {\r\n      //     console.log(this.getElement('tbody').scrollTop, element.offsetTop)\r\n      //     this.getElement('tbody').scrollTop = element.offsetTop\r\n      //     console.log(this.getElement('tbody').scrollTop, element.offsetTop)\r\n      //   }\r\n      // },\r\n\r\n      /**\r\n       * 验证单个表单，异步版\r\n       *\r\n       * @param value 校验的值\r\n       * @param row 校验的行\r\n       * @param column 校验的列\r\n       * @param notPassedIds 没有通过校验的 id\r\n       * @param update 是否更新到vue中\r\n       * @param validType 校验触发的方式（input、blur等）\r\n       * @param callback\r\n       */\r\n      validateOneInputAsync(value, row, column, notPassedIds, update = false, validType = 'input', callback) {\r\n        let tooltips = Object.assign({}, this.tooltips)\r\n        // let notPassedIds = cloneObject(this.notPassedIds)\r\n        let inputId = column.key + row.id\r\n        tooltips[inputId] = tooltips[inputId] ? tooltips[inputId] : {}\r\n\r\n        let [passed, message] = this.validateValue(column, value)\r\n\r\n        const nextThen = res => {\r\n          let [passed, message] = res\r\n          // !(passed == null && tooltips[inputId].visible != null)\r\n          if (passed != null) {\r\n            tooltips[inputId].visible = !passed\r\n            tooltips[inputId].passed = passed\r\n            let index = notPassedIds.indexOf(inputId)\r\n            if (!passed) {\r\n              tooltips[inputId].title = this.replaceProps(column, message)\r\n              if (index === -1) notPassedIds.push(inputId)\r\n            } else {\r\n              if (index !== -1) notPassedIds.splice(index, 1)\r\n            }\r\n          }\r\n          // 是否更新到data\r\n          if (update) {\r\n            this.tooltips = tooltips\r\n            this.notPassedIds = notPassedIds\r\n          }\r\n\r\n          if (typeof callback === 'function') {\r\n            callback([tooltips[inputId], notPassedIds])\r\n          }\r\n\r\n        }\r\n\r\n        if (typeof passed === 'function') {\r\n          let executed = false\r\n          passed(validType, value, { id: this.getCleanId(row.id) }, { ...column }, (flag, msg) => {\r\n            if (executed) return\r\n            executed = true\r\n            if (typeof msg === 'string') {\r\n              message = msg\r\n            }\r\n            if (flag == null) {\r\n              nextThen([true, message])\r\n            } else {\r\n              nextThen([!!flag, message])\r\n            }\r\n          }, this)\r\n        } else {\r\n          nextThen([passed, message])\r\n        }\r\n\r\n        return [tooltips[inputId], notPassedIds]\r\n      },\r\n\r\n      /** 验证单个表单 */\r\n      validateOneInput(value, row, column, notPassedIds, update = false, validType = 'input') {\r\n        return this.validateOneInputAsync(value, row, column, notPassedIds, update, validType)\r\n      },\r\n      /** 通过规则验证值是否正确 */\r\n      validateValue(column, value) {\r\n        let rules = column.validateRules\r\n        let passed = true, message = ''\r\n        // 判断有没有验证规则或验证规则格式正不正确，若条件不符合则默认通过\r\n        if (rules instanceof Array) {\r\n          for (let rule of rules) {\r\n            // 当前值是否为空\r\n            let isNull = (value == null || value === '')\r\n            // 验证规则：非空\r\n            if (rule.required === true && isNull) {\r\n              passed = false\r\n            } else // 使用 else-if 是为了防止一个 rule 中出现两个规则\r\n            // 验证规则：唯一校验\r\n            if (rule.unique === true || rule.pattern === 'only') {\r\n              let { values } = this.getValuesSync({ validate: false })\r\n              let findCount = 0\r\n              for (let val of values) {\r\n                if (val[column.key] === value) {\r\n                  if (++findCount >= 2) {\r\n                    passed = false\r\n                    break\r\n                  }\r\n                }\r\n              }\r\n            } else\r\n            // 验证规则：正则表达式\r\n            if (!!rule.pattern && !isNull) {\r\n\r\n              // 兼容 online 的规则\r\n              let foo = [\r\n                { title: '6到16位数字', value: 'n6-16', pattern: /^\\d{6,18}$/ },\r\n                { title: '6到16位任意字符', value: '*6-16', pattern: /^.{6,16}$/ },\r\n                { title: '6到18位字母', value: 's6-18', pattern: /^[a-z|A-Z]{6,18}$/ },\r\n                { title: '网址', value: 'url', pattern: /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/ },\r\n                { title: '电子邮件', value: 'e', pattern: /^([\\w]+\\.*)([\\w]+)@[\\w]+\\.\\w{3}(\\.\\w{2}|)$/ },\r\n                { title: '手机号码', value: 'm', pattern: /^1[3456789]\\d{9}$/ },\r\n                { title: '邮政编码', value: 'p', pattern: /^[1-9]\\d{5}$/ },\r\n                { title: '字母', value: 's', pattern: /^[A-Z|a-z]+$/ },\r\n                { title: '数字', value: 'n', pattern: /^-?\\d+(\\.?\\d+|\\d?)$/ },\r\n                { title: '整数', value: 'z', pattern: /^-?\\d+$/ },\r\n                { title: '非空', value: '*', pattern: /^.+$/ },\r\n                { title: '金额', value: 'money', pattern: /^(([1-9][0-9]*)|([0]\\.\\d{0,2}|[1-9][0-9]*\\.\\d{0,2}))$/ },\r\n              ]\r\n              let flag = false\r\n              for (let item of foo) {\r\n                if (rule.pattern === item.value && item.pattern) {\r\n                  passed = new RegExp(item.pattern).test(value)\r\n                  flag = true\r\n                  break\r\n                }\r\n              }\r\n              if (!flag) passed = new RegExp(rule.pattern).test(value)\r\n            } else\r\n            // 校验规则：自定义函数校验\r\n            if (typeof rule.handler === 'function') {\r\n              return [rule.handler, rule.message]\r\n            }\r\n            // 如果没有通过验证，则跳出循环。如果通过了验证，则继续验证下一条规则\r\n            if (!passed) {\r\n              message = rule.message\r\n              break\r\n            }\r\n          }\r\n        }\r\n        return [passed, message]\r\n      },\r\n\r\n      /** 动态更新表单的值 */\r\n      updateFormValues() {\r\n        let trs = this.getElement('tbody').getElementsByClassName('tr')\r\n        let trEls = []\r\n        for (let tr of trs) {\r\n          trEls.push(tr)\r\n        }\r\n        // 获取新增的 tr\r\n        let newTrEls = trEls\r\n        if (this.visibleTrEls.length > 0) {\r\n          newTrEls = []\r\n          for (let tr of trEls) {\r\n            let isNewest = true\r\n            for (let vtr of this.visibleTrEls) {\r\n              if (vtr.id === tr.id) {\r\n                isNewest = false\r\n                break\r\n              }\r\n            }\r\n            if (isNewest) {\r\n              newTrEls.push(tr)\r\n            }\r\n          }\r\n        }\r\n        this.visibleTrEls = trEls\r\n        // 向新增的tr中赋值\r\n        newTrEls.forEach(tr => {\r\n          let { idx } = tr.dataset\r\n          let value = this.inputValues[idx]\r\n          for (let key in value) {\r\n            if (value.hasOwnProperty(key)) {\r\n              let elid = `${key}${value.id}`\r\n              let el = document.getElementById(elid)\r\n              if (el) {\r\n                el.value = value[key]\r\n              }\r\n            }\r\n          }\r\n        })\r\n      },\r\n      /** 强制更新FormValues */\r\n      forceUpdateFormValues() {\r\n        this.visibleTrEls = []\r\n        this.$forceUpdate()\r\n        this.$nextTick(() => this.updateFormValues())\r\n      },\r\n\r\n      // 重新计算所有统计列\r\n      recalcAllStatisticsColumns() {\r\n        if (this.hasStatisticsColumn) {\r\n          Object.keys(this.statisticsColumns).forEach(key => this.recalcOneStatisticsColumn(key))\r\n        }\r\n      },\r\n      // 重新计算单个统计列\r\n      recalcOneStatisticsColumn(key) {\r\n        if (this.hasStatisticsColumn) {\r\n          if (this.statisticsColumns.hasOwnProperty(key)) {\r\n            // 计算合计值\r\n            let count = 0\r\n            this.inputValues.forEach(item => {\r\n              let value = item[key]\r\n              if (value && count !== '-') {\r\n                try {\r\n                  count += Number.parseInt(value)\r\n                } catch (e) {\r\n                  count = '-'\r\n                }\r\n              }\r\n            })\r\n            this.statisticsColumns[key] = count\r\n          }\r\n        }\r\n      },\r\n\r\n      /** 获取某个统计字段的值 */\r\n      getStatisticsValue(key) {\r\n        if (this.hasStatisticsColumn) {\r\n          if (this.statisticsColumns.hasOwnProperty(key)) {\r\n            return this.statisticsColumns[key]\r\n          }\r\n        }\r\n        return null\r\n      },\r\n\r\n      /** 全选或取消全选 */\r\n      handleChangeCheckedAll() {\r\n        let selectedRowIds = []\r\n        if (!this.getSelectAll) {\r\n          this.rows.forEach(row => {\r\n            if ((this.disabledRowIds || []).indexOf(row.id) === -1) {\r\n              selectedRowIds.push(row.id)\r\n            }\r\n          })\r\n        }\r\n        this.selectedRowIds = selectedRowIds\r\n      },\r\n      /** 左侧行选择框change事件 */\r\n      handleChangeLeftCheckbox(event) {\r\n        let { id } = event.target\r\n\r\n        if ((this.disabledRowIds || []).indexOf(id) !== -1) {\r\n          return\r\n        }\r\n\r\n        let index = this.selectedRowIds.indexOf(id)\r\n        if (index !== -1) {\r\n          this.selectedRowIds.splice(index, 1)\r\n        } else {\r\n          this.selectedRowIds.push(id)\r\n        }\r\n\r\n      },\r\n      handleClickAdd() {\r\n        this.add()\r\n        // this.$emit('add')\r\n      },\r\n      handleConfirmDelete() {\r\n        this.removeSelectedRows()\r\n      },\r\n      handleClickClearSelection() {\r\n        this.clearSelection()\r\n      },\r\n      clearSelection() {\r\n        this.selectedRowIds = []\r\n      },\r\n      /** 用于搜索下拉框中的内容 */\r\n      handleSelectFilterOption(input, option, column) {\r\n        if (column.allowSearch === true || column.allowInput === true) {\r\n          return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n        }\r\n        return true\r\n      },\r\n      /** select 搜索时的事件，用于动态添加options */\r\n      handleSearchSelect(value, id, row, col) {\r\n        if (col.allowSearch !== true && col.allowInput === true) {\r\n          // 是否找到了对应的项，找不到则添加这一项\r\n          let flag = false\r\n          for (let option of col.options) {\r\n            if (option.value.toLocaleString() === value.toLocaleString()) {\r\n              flag = true\r\n              break\r\n            }\r\n          }\r\n          // !!value ：不添加空值\r\n          if (!flag && !!value) {\r\n            // searchAdd 是否是通过搜索添加的\r\n            col.options.push({ title: value, value: value, searchAdd: true })\r\n          }\r\n\r\n        }\r\n      },\r\n      // blur 失去焦点\r\n      handleBlurSearch(value, id, row, col) {\r\n        if (col.allowInput === true) {\r\n          // 删除无用的因搜索（用户输入）而创建的项\r\n          if (typeof value === 'string') {\r\n            let indexs = []\r\n            col.options.forEach((option, index) => {\r\n              if (option.value.toLocaleString() === value.toLocaleString()) {\r\n                delete option.searchAdd\r\n              } else if (option.searchAdd === true) {\r\n                indexs.push(index)\r\n              }\r\n            })\r\n            // 翻转删除数组中的项\r\n            for (let index of indexs.reverse()) {\r\n              col.options.splice(index, 1)\r\n            }\r\n          }\r\n\r\n        }\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, col, this.notPassedIds, true, 'blur')\r\n      },\r\n\r\n      /** 触发已拖动事件 */\r\n      emitDragged(oldIndex, newIndex) {\r\n        this.$emit('dragged', { oldIndex, newIndex, target: this })\r\n      },\r\n\r\n      handleDragMoveStart(event) {\r\n        this.dragging = true\r\n        this.$refs.scrollView.style.overflow = 'hidden'\r\n      },\r\n\r\n      /** 拖动结束，交换inputValue中的值 */\r\n      handleDragMoveEnd(event) {\r\n        this.dragging = false\r\n        this.$refs.scrollView.style.overflow = 'auto'\r\n\r\n        let { oldIndex, newIndex, item: { dataset: { idx: dataIdx } } } = event\r\n\r\n        // 由于动态显示隐藏行导致index有误差，需要算出真实的index\r\n        let diff = Number.parseInt(dataIdx) - oldIndex\r\n        oldIndex += diff\r\n        newIndex += diff\r\n\r\n        this.rowResort(oldIndex, newIndex)\r\n        this.emitDragged(oldIndex, newIndex)\r\n      },\r\n\r\n      /** 行重新排序 */\r\n      rowResort(oldIndex, newIndex) {\r\n        const sort = (array) => {\r\n          // 存储旧数据，并删除旧项目\r\n          let temp = array[oldIndex]\r\n          array.splice(oldIndex, 1)\r\n          // 向新项目里添加旧数据\r\n          array.splice(newIndex, 0, temp)\r\n        }\r\n\r\n        sort(this.rows)\r\n        sort(this.inputValues)\r\n\r\n        this.recalcSortNumber()\r\n\r\n        this.forceUpdateFormValues()\r\n      },\r\n\r\n      /** 重新计算排序字段的数值 */\r\n      recalcSortNumber() {\r\n        if (this.dragSort) {\r\n          // 重置排序字段\r\n          this.inputValues.forEach((val, idx) => val[this.dragSortKey] = (idx + 1))\r\n        }\r\n      },\r\n\r\n      /** 当前行向上移一位 */\r\n      _handleRowMoveUp(rowIndex) {\r\n        if (rowIndex > 0) {\r\n          let newIndex = rowIndex - 1\r\n          this.rowResort(rowIndex, newIndex)\r\n          this.emitDragged(rowIndex, newIndex)\r\n        }\r\n      },\r\n\r\n      /** 当前行向下移一位 */\r\n      _handleRowMoveDown(rowIndex) {\r\n        if (rowIndex < (this.rows.length - 1)) {\r\n          let newIndex = rowIndex + 1\r\n          this.rowResort(rowIndex, newIndex)\r\n          this.emitDragged(rowIndex, newIndex)\r\n        }\r\n      },\r\n\r\n      /** 在当前行下面插入一行 */\r\n      _handleRowInsertDown(rowIndex) {\r\n        let insertIndex = (rowIndex + 1)\r\n        this.insert(insertIndex)\r\n      },\r\n\r\n      /* --- common function begin --- */\r\n\r\n      /** input事件 */\r\n      handleInputCommono(target, index, row, column) {\r\n        let oldValue = this.inputValues[index][column.key] || ''\r\n        let { value, dataset, selectionStart } = target\r\n        let type = FormTypes.input\r\n        let change = true\r\n        if (`${dataset.inputNumber}` === 'true') {\r\n          type = FormTypes.inputNumber\r\n          // 判断输入的值是否匹配数字正则表达式，不匹配就还原\r\n          if (!/^-?\\d+\\.?\\d*$/.test(value) && (value !== '' && value !== '-')) {\r\n            change = false\r\n            value = oldValue\r\n            target.value = value\r\n            if (typeof selectionStart === 'number') {\r\n              target.selectionStart = selectionStart - 1\r\n              target.selectionEnd = selectionStart - 1\r\n            }\r\n          }\r\n        }\r\n        // 存储输入的值\r\n        this.inputValues[index][column.key] = value\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'input')\r\n\r\n        if (type === FormTypes.inputNumber) {\r\n          this.recalcOneStatisticsColumn(column.key)\r\n        }\r\n\r\n        // 触发valueChange 事件\r\n        if (change) {\r\n          this.elemValueChange(type, row, column, value)\r\n        }\r\n      },\r\n      /** slot Change */\r\n      handleChangeSlotCommon(value, id, row, column) {\r\n        this.slotValues = this.bindValuesChange(value, id, 'slotValues')\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n        // 触发valueChange 事件\r\n        this.elemValueChange(FormTypes.slot, row, column, value)\r\n      },\r\n      handleBlurCommono(target, index, row, column) {\r\n        let { value, dataset } = target\r\n        if (dataset && `${dataset.inputNumber}` === 'true') {\r\n          // 判断输入的值是否匹配数字正则表达式，不匹配就置空\r\n          if (!/^-?\\d+\\.?\\d*$/.test(value)) {\r\n            value = ''\r\n          } else {\r\n            value = Number.parseFloat(value)\r\n          }\r\n          target.value = value\r\n        }\r\n        //update--begin--autor:lvdandan-----date:20201126------for：LOWCOD-1088 JEditableTable输入校验提示框位置偏移 #2005\r\n        setTimeout(()=>{\r\n          // 做单个表单验证\r\n          this.validateOneInput(value, row, column, this.notPassedIds, true, 'blur')\r\n        }, 100)\r\n        //update--end--autor:lvdandan-----date:20201126------for：LOWCOD-1088 JEditableTable输入校验提示框位置偏移 #2005\r\n      },\r\n      handleChangeCheckboxCommon(event, row, column) {\r\n        let { id, checked } = event.target\r\n        this.checkboxValues = this.bindValuesChange(checked, id, 'checkboxValues')\r\n\r\n        // 触发valueChange 事件\r\n        this.elemValueChange(FormTypes.checkbox, row, column, checked)\r\n      },\r\n      handleChangeSelectCommon(value, id, row, column) {\r\n        this.selectValues = this.bindValuesChange(value, id, 'selectValues')\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n\r\n        // 触发valueChange 事件\r\n        this.elemValueChange(FormTypes.select, row, column, value)\r\n      },\r\n      handleChangeJDateCommon(value, id, row, column, showTime) {\r\n        this.jdateValues = this.bindValuesChange(value, id, 'jdateValues')\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n\r\n        // 触发valueChange 事件\r\n        if (showTime) {\r\n          this.elemValueChange(FormTypes.datetime, row, column, value)\r\n        } else {\r\n          this.elemValueChange(FormTypes.date, row, column, value)\r\n        }\r\n      },\r\n      handleChangeJInputPopCommon(value, id, row, column){\r\n        this.jInputPopValues = this.bindValuesChange(value, id, 'jInputPopValues')\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n        // 触发valueChange 事件\r\n        this.elemValueChange(FormTypes.input_pop, row, column, value)\r\n      },\r\n      handleChangeUpload(info, id, row, column) {\r\n        let { file } = info\r\n        let value = {\r\n          name: file.name,\r\n          type: file.type,\r\n          size: file.size,\r\n          status: file.status,\r\n          percent: file.percent\r\n        }\r\n        if (column.responseName && file.response) {\r\n          value['responseName'] = file.response[column.responseName]\r\n        }\r\n        if (file.status === 'done') {\r\n          value['path'] = file.response[column.responseName]\r\n        } else if (file.status === 'error') {\r\n          value['message'] = file.response.message || '未知错误'\r\n        }\r\n        this.uploadValues = this.bindValuesChange(value, id, 'uploadValues')\r\n\r\n        // 触发valueChange 事件\r\n        this.elemValueChange(column.type, row, column, value)\r\n      },\r\n      handleMoreOperation(id,flag,column){\r\n        //update-begin-author:wangshuai date:20201021 for:LOWCOD-969 判断传过来的字段是否存在number，用于控制上传文件\r\n        if(column.number){\r\n          this.number = column.number;\r\n        }else{\r\n          this.number = 0;\r\n        }\r\n        //update-end-author:wangshuai date:20201021 for:LOWCOD-969 判断传过来的字段是否存在number，用于控制上传文件\r\n        if(column && column.fieldExtendJson){\r\n          let json = JSON.parse(column.fieldExtendJson);\r\n          this.number = json.uploadnum?json.uploadnum:0;\r\n        }\r\n        //console.log(\"this.uploadValues[id]\",this.uploadValues[id])\r\n        let path = ''\r\n        if(this.uploadValues && this.uploadValues[id]){\r\n          path = this.uploadValues[id].path\r\n        }\r\n        this.$refs.filePop.show(id,path,flag)\r\n      },\r\n      handleFileSuccess(obj){\r\n        if(obj.id){\r\n          this.uploadValues = this.bindValuesChange(obj, obj.id, 'uploadValues')\r\n        }\r\n      },\r\n      handleClickTableRow(event) {\r\n        let {target} = event\r\n        if (target.className === 'td' || target.className === 'tr') {\r\n          // 清空编辑状态\r\n          this.currentEditRows = {}\r\n        }\r\n      },\r\n      // 点击后编辑当前行\r\n      handleEditRow(row, col) {\r\n        if (this.alwaysEdit) {\r\n          return\r\n        }\r\n        // 将点击的组件置为可编辑并还原其他组件的编辑状态\r\n        this.currentEditRows = {\r\n          [row.id]: {\r\n            [col.key]: true\r\n          }\r\n        }\r\n        if (col.type === FormTypes.input || col.type === FormTypes.inputNumber) {\r\n          this.$nextTick(() => {\r\n            this.forceUpdateFormValues()\r\n            // 自动获取焦点\r\n            let el = document.getElementById(`${col.key}${row.id}`)\r\n            if (el) {\r\n              el.focus()\r\n            }\r\n          })\r\n        }\r\n      },\r\n      /** 记录用到数据绑定的组件的值 */\r\n      bindValuesChange(value, id, key) {\r\n        this.$set(this[key], id, value)\r\n        return this[key]\r\n      },\r\n\r\n      /** value 触发valueChange事件 */\r\n      elemValueChange(type, rowSource, columnSource, value) {\r\n        let column = Object.assign({}, columnSource)\r\n        // 将caseId去除\r\n        let row = Object.assign({}, rowSource)\r\n        row.id = this.getCleanId(row.id)\r\n        // 获取整行的数据\r\n        let { values } = this.getValuesSync({ validate: false, rowIds: [row.id] })\r\n        if (values.length > 0) {\r\n          Object.assign(row, values[0])\r\n        }\r\n        this.$emit('valueChange', { type, row, column, value, target: this })\r\n      },\r\n\r\n      /** 获取干净的ID（不包含任何杂质的ID） */\r\n      getCleanId(id) {\r\n        id = this.removeCaseId(id)\r\n        id = this.removeTempId(id)\r\n        return id\r\n      },\r\n\r\n      /** 判断某个ID是否包含了caseId */\r\n      hasCaseId(id) {\r\n        return id && id.startsWith(this.caseId)\r\n      },\r\n\r\n      /** 将caseId去除 */\r\n      removeCaseId(id) {\r\n        if (this.hasCaseId(id)) {\r\n          return id.substring(this.caseId.length, id.length)\r\n        }\r\n        return id\r\n      },\r\n\r\n      // 判断 id 是否是临时Id\r\n      isTempId(id) {\r\n        return (id || '').endsWith(this.tempId)\r\n      },\r\n\r\n      /** 将tempId去除 */\r\n      removeTempId(id) {\r\n        if (this.isTempId(id)) {\r\n          return id.substring(0, id.length - this.tempId.length)\r\n        }\r\n        return id;\r\n      },\r\n\r\n      handleClickDelFile(id) {\r\n        this.uploadValues[id] = null\r\n      },\r\n      handleClickDownloadFile(id) {\r\n        let { path } = this.uploadValues[id] || {}\r\n        if (path) {\r\n          let url = getFileAccessHttpUrl(path)\r\n          window.open(url)\r\n        }\r\n      },\r\n      handleClickDownFileByUrl(id){\r\n        let { url,path } = this.uploadValues[id] || {}\r\n        if (!url || url.length===0) {\r\n          if(path && path.length>0){\r\n            url = getFileAccessHttpUrl(path.split(',')[0])\r\n          }\r\n        }\r\n        if(url){\r\n          window.open(url)\r\n        }\r\n      },\r\n      handleClickShowImageError(id) {\r\n        let currUploadObj = this.uploadValues[id] || null\r\n        if (currUploadObj && currUploadObj['message']) {\r\n          this.$error({ title: '上传出错', content: '错误信息：' + currUploadObj['message'], maskClosable: true })\r\n        }\r\n      },\r\n\r\n      /** 加载数据字典并合并到 options */\r\n      _loadDictConcatToOptions(column) {\r\n        initDictOptions(column.dictCode).then((res) => {\r\n          if (res.success) {\r\n            let newOptions = (column.options || [])// .concat(res.result)\r\n            res.result.forEach(item => {\r\n              // 过滤重复数据\r\n              for (let option of newOptions) if (option.value === item.value) return\r\n              newOptions.push(item)\r\n            })\r\n            this.$set(column, 'options', newOptions)\r\n          } else {\r\n            console.group(`JEditableTable 查询字典(${column.dictCode})发生异常`)\r\n            console.log(res.message)\r\n            console.groupEnd()\r\n          }\r\n        })\r\n      },\r\n\r\n      /* --- common function end --- */\r\n\r\n      /* --- 以下是辅助方法，多用于动态构造页面中的数据 --- */\r\n\r\n      /** 辅助方法：打印日志 */\r\n      log() {\r\n        if (this.$attrs.logger) {\r\n          console.log.apply(null, arguments)\r\n        }\r\n      },\r\n\r\n      getVM() {\r\n        return this\r\n      },\r\n\r\n      /** 辅助方法：动态构造Tooltip的Props，防止出现不消失的情况 */\r\n      buildTooltipProps(row, col, id) {\r\n        let {notPassedIds, tooltips} = this\r\n        let props = {\r\n          title: (tooltips[id] || {}).title,\r\n          placement: 'top',\r\n          autoAdjustOverflow: true,\r\n          getPopupContainer: this.getParentContainer,\r\n          class: {\r\n            'j-check-failed': false\r\n          },\r\n        }\r\n        let isCheckFailed = notPassedIds.includes(id)\r\n        if (isCheckFailed) {\r\n          props.class['j-check-failed'] = true\r\n        } else {\r\n          props['visible'] = false\r\n        }\r\n        return props\r\n      },\r\n\r\n      /** 辅助方法：指定a-select 和 j-data 的父容器 */\r\n      getParentContainer(node) {\r\n        let element = (() => {\r\n          // nodeType 8\t: Comment\t: 注释\r\n          if (this.$el && this.$el.nodeType !== 8) {\r\n            return this.$el\r\n          }\r\n          let doc = document.getElementById(this.caseId + 'inputTable')\r\n          if (doc != null) {\r\n            return doc\r\n          }\r\n          return node.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode\r\n        })()\r\n\r\n        // 递归判断是否带有 overflow: hidden；的父元素\r\n        const ifParent = (child) => {\r\n          let currentOverflow = null\r\n          if (child['currentStyle']) {\r\n            currentOverflow = child['currentStyle']['overflow']\r\n          } else if (window.getComputedStyle) {\r\n            currentOverflow = window.getComputedStyle(child)['overflow']\r\n          }\r\n          if (currentOverflow != null) {\r\n            if (currentOverflow === 'hidden') {\r\n              // 找到了带有 hidden 的标签，判断它的父级是否还有 hidden，直到遇到完全没有 hidden 或 body 的时候才停止递归\r\n              let temp = ifParent(child.parentNode)\r\n              return temp != null ? temp : child.parentNode\r\n            } else\r\n            // 当前标签没有 hidden ，如果有父级并且父级不是 body 的话就继续递归判断父级\r\n            if (child.parentNode && child.parentNode.tagName.toLocaleLowerCase() !== 'body') {\r\n              return ifParent(child.parentNode)\r\n            } else {\r\n              // 直到 body 都没有遇到有 hidden 的标签\r\n              return null\r\n            }\r\n          } else {\r\n            return child\r\n          }\r\n        }\r\n\r\n        let temp = ifParent(element)\r\n        return (temp != null) ? temp : element\r\n      },\r\n\r\n      /** 辅助方法：替换${...}变量 */\r\n      replaceProps(col, value) {\r\n        if (value && typeof value === 'string') {\r\n          value = value.replace(/\\${title}/g, col.title)\r\n          value = value.replace(/\\${key}/g, col.key)\r\n          value = value.replace(/\\${defaultValue}/g, col.defaultValue)\r\n        }\r\n        return value\r\n      },\r\n\r\n      /** view辅助方法：构建 tr style */\r\n      buildTrStyle(index) {\r\n        return {\r\n          'top': `${rowHeight * index}px`\r\n        }\r\n      },\r\n      /** view辅助方法：构建 td style */\r\n      buildTdStyle(col,isTitle) {\r\n        const isEmptyWidth = (column) => (column.type === FormTypes.hidden || column.width === '0px' || column.width === '0' || column.width === 0)\r\n\r\n        let style = {}\r\n        // 计算宽度\r\n        if (col.width) {\r\n          style['width'] = col.width\r\n        } else if (this.columns) {\r\n          style['width'] = `${(100 - 4 * 2) / (this.columns.filter(column => !isEmptyWidth(column))).length}%`\r\n        } else {\r\n          style['width'] = '120px'\r\n        }\r\n        //update-begin-author:lvdandan date:20201116 for:LOWCOD-984 默认风格功能测试附表样式问题 日期时间控件长度太大\r\n        //是否为标题，如果是时间控件设为200，时间控件的标题设为240 时间\r\n        if(col.type === FormTypes.datetime){\r\n          if(true === isTitle){\r\n            style['width'] = '240px'\r\n          }else{\r\n            style['width'] = '200px'\r\n          }\r\n        }\r\n        //update-end-author:lvdandan date:20201116 for:LOWCOD-984 默认风格功能测试附表样式问题 日期时间控件长度太大\r\n\r\n        // checkbox 居中显示\r\n        let isCheckbox = col.type === FormTypes.checkbox\r\n        if (isCheckbox) {\r\n          style['align-items'] = 'center'\r\n          style['text-align'] = 'center'\r\n          style['padding-left'] = '0'\r\n          style['padding-right'] = '0'\r\n        }\r\n        if (isEmptyWidth(col)) {\r\n          style['padding-left'] = '0'\r\n          style['padding-right'] = '0'\r\n        }\r\n        return style\r\n      },\r\n      /** view辅助方法：构造props */\r\n      buildProps(row, col) {\r\n        let props = {}\r\n        // 解析props\r\n        if (typeof col.props === 'object') {\r\n          for (let prop in col.props) {\r\n            if (col.props.hasOwnProperty(prop)) {\r\n              props[prop] = this.replaceProps(col, col.props[prop])\r\n            }\r\n          }\r\n        }\r\n        // 判断select是否允许输入\r\n        if (col.type === FormTypes.select && (col.allowInput === true || col.allowSearch === true)) {\r\n          props['showSearch'] = true\r\n        }\r\n\r\n        // 判断是否是禁用的列\r\n        props['disabled'] = (typeof col['disabled'] === 'boolean' ? col['disabled'] : props['disabled'])\r\n\r\n        // 判断是否为禁用的行\r\n        if (props['disabled'] !== true) {\r\n          props['disabled'] = ((this.disabledRowIds || []).indexOf(row.id) !== -1)\r\n        }\r\n\r\n        // 判断是否禁用全部组件\r\n        if (this.disabled === true) {\r\n          props['disabled'] = true\r\n        }\r\n\r\n        return props\r\n      },\r\n\r\n      /** 辅助方法：防止过快点击，如果点击过快的话就返回 true */\r\n      checkTooFastClick(key = 'default', ms = 300) {\r\n        let nowTime = Date.now()\r\n        let lastTime = this.lastPushTimeMap.get(key)\r\n        if (!lastTime) {\r\n          lastTime = nowTime\r\n          this.lastPushTimeMap.set(key, nowTime)\r\n          return false\r\n        }\r\n        let diffTime = nowTime - lastTime\r\n        if (diffTime <= ms) {\r\n          this.$message.warn('你点击的太快了，请慢点点击!')\r\n          return true\r\n        }\r\n        this.lastPushTimeMap.set(key, nowTime)\r\n        return false\r\n      },\r\n\r\n      /** upload 辅助方法：获取 headers */\r\n      uploadGetHeaders(row, column) {\r\n        let headers = {}\r\n        if (column.token === true) {\r\n          headers['X-Access-Token'] = this.accessToken\r\n        }\r\n        return headers\r\n      },\r\n      /** 上传请求地址 */\r\n      getUploadAction(value) {\r\n        if (!value) {\r\n          return window._CONFIG['domianURL'] + '/sys/common/upload'\r\n        } else {\r\n          return value\r\n        }\r\n      },\r\n      /** 预览图片地址 */\r\n      getCellImageView(id) {\r\n        let currUploadObj = this.uploadValues[id] || null\r\n        if (currUploadObj) {\r\n          if(currUploadObj['url']){\r\n            return currUploadObj['url'];\r\n          }else if(currUploadObj['path']){\r\n            let readpath = currUploadObj['path'].split(',')[0]\r\n            return getFileAccessHttpUrl(readpath)\r\n          }\r\n        }\r\n        return ''\r\n      },\r\n      /** popup回调 */\r\n      popupCallback(value, others, id, row, column, index) {\r\n        // 存储输入的值\r\n        let popupValue = value\r\n        if (others) {\r\n          let rowKey = this.getCleanId(row.id)\r\n          let setValueItem = {rowKey, values: {}}\r\n          Object.keys(others).forEach(key => {\r\n            // 当前列直接赋值，其他列通过setValues赋值\r\n            if (key === column.key) {\r\n              popupValue = others[key]\r\n            } else {\r\n              setValueItem.values[key] = others[key]\r\n            }\r\n          })\r\n          if (Object.keys(setValueItem).length > 0) {\r\n            this.setValues([setValueItem])\r\n          }\r\n        }\r\n        this.setOneValue(this.popupValues, id, popupValue)\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n        // 触发valueChange 事件\r\n        this.elemValueChange('input', row, column, value)\r\n      },\r\n      /** popup输入框回显 */\r\n      getPopupValue(id) {\r\n        return this.popupValues[id]\r\n      },\r\n      handleRadioChange(value, id, row, column) {\r\n        this.radioValues = this.bindValuesChange(value, id, 'radioValues')\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n        // 触发valueChange 事件\r\n        this.elemValueChange(FormTypes.radio, row, column, value)\r\n      },\r\n      handleMultiSelectChange(value, id, row, column) {\r\n        this.multiSelectValues = this.bindValuesChange(value, id, 'multiSelectValues')\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n        // 触发valueChange 事件\r\n        this.elemValueChange(FormTypes.list_multi, row, column, value)\r\n      },\r\n      handleSearchSelectChange(value, id, row, column) {\r\n        this.searchSelectValues = this.bindValuesChange(value, id, 'searchSelectValues')\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n        this.elemValueChange(FormTypes.sel_search, row, column, value)\r\n      },\r\n      filterOption(input, option) {\r\n        return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      },\r\n      getEllipsisWord(content, len){\r\n        if(!content || content.length === 0){\r\n          return ''\r\n        }\r\n        if(content.length>len){\r\n          return content.substr(0,len)\r\n        }\r\n        return content;\r\n      },\r\n\r\n      /* --------------------------- 2020年5月18日 默认span模式 ------------------------------ */\r\n\r\n      /** 获取Select等组件翻译后的文本 */\r\n      getSelectTranslateText(value, row, col) {\r\n        // 翻译支持单选和多选（数组、逗号分割）\r\n        return filterDictText(col.options, value)\r\n      },\r\n\r\n      // 判定当前行是否是正在编辑的\r\n      isEditRow(row, col) {\r\n        if (this.alwaysEdit) {\r\n          return true\r\n        }\r\n        let current = this.currentEditRows[row.id]\r\n        return !!(current && current[col.key] === true)\r\n      },\r\n\r\n      /* ---- 事件监听 ---- */\r\n\r\n      // 鼠标弹起事件，用于清空输入状态\r\n      handleMouseup(event) {\r\n        if (this.alwaysEdit || Object.keys(this.currentEditRows).length === 0) {\r\n          return\r\n        }\r\n        // console.log(this.caseId + 'handleMouseup: ', event)\r\n        let {target} = event\r\n        if (!target){\r\n          return\r\n        }\r\n        let className = target.className || ''\r\n        if (typeof className === 'string') {\r\n          // 点击的标签是span\r\n          if (className.includes('j-td-span') && className.includes('no-edit')) {\r\n            return\r\n          }\r\n          // 点击的标签是下拉\r\n          if (className.includes('ant-select-dropdown-menu-item')) {\r\n            return\r\n          }\r\n        }\r\n\r\n        // 事件冒泡路径\r\n        let path = getEventPath(event)\r\n        for (let p of path) {\r\n          // 如果点击的是 tr 就不处理（tr单独处理）\r\n          if ((p.id || '').startsWith(`${this.caseId}tbody-tr`)) {\r\n            return\r\n          }\r\n          let pClassName = p.className || ''\r\n          pClassName = typeof pClassName === 'string' ? pClassName : pClassName.toString()\r\n\r\n          /* --- 特殊处理以下组件，点击以下标签时不清空编辑状态 --- */\r\n\r\n          // 点击的标签是JInputPop\r\n          if (pClassName.includes('j-input-pop')) {\r\n            return\r\n          }\r\n          // 点击的标签是JPopup的弹出层\r\n          if (pClassName.includes('j-popup-modal')) {\r\n            return\r\n          }\r\n          // 点击的标签是日期选择器的弹出层\r\n          if (pClassName.includes('j-date-picker') || pClassName.includes('ant-calendar-picker-container')) {\r\n            return\r\n          }\r\n\r\n        }\r\n        // 清空编辑状态\r\n        this.currentEditRows = {}\r\n      },\r\n\r\n      // 添加事件监听\r\n      addEventListener() {\r\n        window.addEventListener('mouseup', this.handleMouseup)\r\n      },\r\n      // 移除事件监听\r\n      removeEventListener() {\r\n        window.removeEventListener('mouseup', this.handleMouseup)\r\n      },\r\n\r\n      /* --------------------------- 2020年5月18日 默认span模式 ------------------------------ */\r\n\r\n\r\n    },\r\n    beforeDestroy() {\r\n      this.removeEventListener()\r\n      this.destroyCleanGroupRequest = true\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n  .action-button {\r\n    margin-bottom: 8px;\r\n\r\n    .gap {\r\n      padding-left: 8px;\r\n    }\r\n\r\n  }\r\n\r\n  /* 设定边框参数 */\r\n  @borderColor: #e8e8e8;\r\n  @border: 1px solid @borderColor;\r\n  /* tr & td 之间的间距 */\r\n  @spacing: 8px;\r\n\r\n  .input-table {\r\n    max-width: 100%;\r\n    overflow-x: hidden;\r\n    overflow-y: hidden;\r\n    position: relative;\r\n    border: @border;\r\n\r\n    .thead, .tbody {\r\n\r\n      .tr, .td {\r\n        display: flex;\r\n      }\r\n\r\n      .td {\r\n\r\n        /*border-right: 1px solid red;*/\r\n        /*color: white;*/\r\n        /*background-color: black;*/\r\n        /*margin-right: @spacing !important;*/\r\n\r\n        padding-left: @spacing;\r\n        flex-direction: column;\r\n\r\n        &.td-cb, &.td-num {\r\n          width: 45px;\r\n          min-width: 45px;\r\n          max-width: 50px;\r\n          margin-right: 0;\r\n          padding-left: 0;\r\n          padding-right: 0;\r\n          justify-content: center;\r\n          align-items: center;\r\n        }\r\n\r\n        &.td-ds {\r\n          width: 30px;\r\n          min-width: 30px;\r\n          max-width: 35px;\r\n          margin-right: 0;\r\n          padding-left: 0;\r\n          padding-right: 0;\r\n          justify-content: center;\r\n          align-items: center;\r\n\r\n          .td-ds-icons {\r\n            position: relative;\r\n            cursor: move;\r\n            width: 100%;\r\n            /*padding: 25% 0;*/\r\n            height: 100%;\r\n\r\n            .anticon-align-left,\r\n            .anticon-align-right {\r\n              position: absolute;\r\n              top: 30%;\r\n            }\r\n\r\n            .anticon-align-left {\r\n              left: 25%;\r\n            }\r\n\r\n            .anticon-align-right {\r\n              right: 25%;\r\n            }\r\n          }\r\n\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    .thead {\r\n      overflow-y: scroll;\r\n      overflow-x: hidden;\r\n      border-bottom: @border;\r\n\r\n      /** 隐藏thead的滑块   */\r\n\r\n      &::-webkit-scrollbar-thumb {\r\n        box-shadow: none !important;\r\n        background-color: transparent !important;\r\n      }\r\n\r\n      .tr {\r\n        min-width: 100%;\r\n        overflow-y: scroll;\r\n      }\r\n\r\n      .td {\r\n        /*flex: 1;*/\r\n        padding: 8px @spacing;\r\n        justify-content: center;\r\n      }\r\n\r\n    }\r\n\r\n    .tbody {\r\n      position: relative;\r\n      top: 0;\r\n      left: 0;\r\n      overflow-x: hidden;\r\n      overflow-y: hidden;\r\n      min-height: 61px;\r\n      /*max-height: 400px;*/\r\n      min-width: 100%;\r\n\r\n      .tr-nodata {\r\n        color: #999;\r\n        line-height: 61px;\r\n        text-align: center;\r\n      }\r\n\r\n      .tr {\r\n        /*line-height: 50px;*/\r\n\r\n        border-bottom: @border;\r\n        transition: background-color 300ms;\r\n        width: 100%;\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 10;\r\n\r\n        &.tr-checked {\r\n          background-color: #fafafa;\r\n        }\r\n\r\n        &:hover {\r\n          background-color: #E6F7FF;\r\n        }\r\n\r\n      }\r\n\r\n      .tr-expand {\r\n        position: relative;\r\n        z-index: 9;\r\n        background-color: white;\r\n      }\r\n\r\n      .td {\r\n        /*flex: 1;*/\r\n        padding: 14px @spacing 14px 0;\r\n        justify-content: center;\r\n\r\n        &:last-child {\r\n          padding-right: @spacing;\r\n        }\r\n\r\n        input {\r\n          font-variant: tabular-nums;\r\n          box-sizing: border-box;\r\n          margin: 0;\r\n          list-style: none;\r\n          position: relative;\r\n          display: inline-block;\r\n          padding: 4px 11px;\r\n          width: 100%;\r\n          height: 32px;\r\n          font-size: 14px;\r\n          line-height: 1.5;\r\n          color: rgba(0, 0, 0, 0.65);\r\n          background-color: #fff;\r\n          border: 1px solid #d9d9d9;\r\n          border-radius: 4px;\r\n          transition: all 0.3s;\r\n          outline: none;\r\n\r\n          &:hover {\r\n            border-color: #4D90FE\r\n          }\r\n\r\n          &:focus {\r\n            border-color: #40a9ff;\r\n            box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\r\n            border-right-width: 1px !important;\r\n          }\r\n\r\n          &:disabled {\r\n            color: rgba(0, 0, 0, 0.25);\r\n            background: #f5f5f5;\r\n            cursor: not-allowed;\r\n          }\r\n\r\n          /* 设置placeholder的颜色 */\r\n\r\n          &::-webkit-input-placeholder { /* WebKit browsers */\r\n            color: #ccc;\r\n          }\r\n\r\n          &:-moz-placeholder { /* Mozilla Firefox 4 to 18 */\r\n            color: #ccc;\r\n          }\r\n\r\n          &::-moz-placeholder { /* Mozilla Firefox 19+ */\r\n            color: #ccc;\r\n          }\r\n\r\n          &:-ms-input-placeholder { /* Internet Explorer 10+ */\r\n            color: #ccc;\r\n          }\r\n\r\n        }\r\n\r\n        .j-editable-image {\r\n          height: 32px;\r\n          max-width: 100px !important;\r\n          cursor: pointer;\r\n\r\n          &:hover {\r\n            opacity: 0.8;\r\n          }\r\n\r\n          &:active {\r\n            opacity: 0.6;\r\n          }\r\n\r\n        }\r\n\r\n        /* --------------------------- 2020年5月18日 begin 默认span模式 ------------------------------ */\r\n\r\n        label {\r\n          height: 32px;\r\n\r\n          &.ant-checkbox-wrapper {\r\n            height: auto;\r\n          }\r\n        }\r\n\r\n        .j-td-span {\r\n          position: relative;\r\n          padding: 4px 11px;\r\n          border: 1px solid transparent;\r\n          display: inline-block;\r\n          width: 100%;\r\n          max-width: 100%;\r\n          height: 32px;\r\n          cursor: text;\r\n          transition: all 0.3s;\r\n          box-sizing: border-box;\r\n          font-size: 14px;\r\n          line-height: 1.5;\r\n          color: rgba(0, 0, 0, 0.65);\r\n          border-radius: 4px;\r\n          overflow: hidden;\r\n          white-space: nowrap;\r\n          text-overflow: ellipsis;\r\n\r\n          &:hover {\r\n            background-color: white;\r\n          }\r\n\r\n          &.disabled {\r\n            cursor: not-allowed;\r\n\r\n            &:hover {\r\n              color: rgba(0, 0, 0, 0.25);\r\n              background-color: #F5F5F5;\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n        /* --------------------------- 2020年5月18日 end 默认span模式 ------------------------------ */\r\n\r\n        /* --------------------------- 2020年5月28日 begin 新增校验未通过的样式 ------------------------------ */\r\n\r\n        .j-check-failed.j-td-span {\r\n          background-color: rgba(255, 0, 0, 0.05);\r\n\r\n          &:hover {\r\n            background-color: rgba(255, 0, 0, 0.1);\r\n          }\r\n        }\r\n\r\n        .j-check-failed.j-td-span,\r\n        input.j-check-failed,\r\n        .j-check-failed /deep/ input,\r\n        .ant-select.j-check-failed /deep/ .ant-select-selection,\r\n        .ant-upload.j-check-failed /deep/ .ant-btn {\r\n          border-color: red;\r\n          box-shadow: 0 0 0 2px rgba(255, 0, 0, 0.2);\r\n        }\r\n\r\n        /* --------------------------- 2020年5月28日 end 新增校验未通过的样式 ------------------------------ */\r\n\r\n      }\r\n\r\n    }\r\n\r\n    .scroll-view {\r\n      overflow: auto;\r\n      overflow-y: scroll;\r\n    }\r\n\r\n    .thead, .thead .tr, .scroll-view {\r\n      @scrollBarSize: 6px;\r\n      /* 定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/\r\n\r\n      &::-webkit-scrollbar {\r\n        width: @scrollBarSize;\r\n        height: @scrollBarSize;\r\n        background-color: transparent;\r\n      }\r\n\r\n      /* 定义滚动条轨道 */\r\n\r\n      &::-webkit-scrollbar-track {\r\n        background-color: #f0f0f0;\r\n      }\r\n\r\n      /* 定义滑块 */\r\n\r\n      &::-webkit-scrollbar-thumb {\r\n        background-color: #eee;\r\n        box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n\r\n        &:hover {\r\n          background-color: #bbb;\r\n        }\r\n\r\n        &:active {\r\n          background-color: #888;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    .thead .tr {\r\n\r\n      &::-webkit-scrollbar-track {\r\n        background-color: transparent;\r\n      }\r\n\r\n      /* IE模式下隐藏 */\r\n      -ms-overflow-style: none;\r\n      -ms-scroll-chaining: chained;\r\n      -ms-content-zooming: zoom;\r\n      -ms-scroll-rails: none;\r\n      -ms-content-zoom-limit-min: 100%;\r\n      -ms-content-zoom-limit-max: 500%;\r\n      -ms-scroll-snap-type: proximity;\r\n      -ms-scroll-snap-points-x: snapList(100%, 200%, 300%, 400%, 500%);\r\n    }\r\n\r\n  }\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/jeecg"}]}