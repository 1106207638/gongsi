{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\src\\components\\jeecg\\JVxeTable\\components\\JVxeTable.js","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\JVxeTable\\components\\JVxeTable.js","mtime":1615948814766},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/vue/src/components/jeecg/JVxeTable/components/JVxeTable.js"],"names":["XEUtils","PropTypes","JVXETypes","VxeWebSocketMixins","initDictOptions","getRefPromise","getEnhancedMixins","replaceProps","JVxeToolbar","JVxeSubPopover","JVxeDetailsModal","JVxePagination","cloneObject","getVmParentByName","pushIfNotExist","randomString","simpleDebounce","UtilTools","getNoAuthCols","name","provide","superTrigger","event","trigger","mixins","components","props","rowKey","string","def","columns","type","Array","required","dataSource","authPre","String","default","isonline","Boolean","toolbar","importBtn","toolbarConfig","object","slots","btns","rowNumber","bool","rowSelection","rowSelectionType","oneOf","rowExpand","expandConfig","loading","height","instanceOf","Number","maxHeight","disabledRows","disabled","dragSort","dragSortKey","size","bordered","pagination","clickRowShowSubForm","clickRowShowMainForm","clickSelectRow","reloadEffect","Rules","asyncRemove","data","isJVXETable","caseId","_innerColumns","_innerEditRules","scroll","top","left","scrolling","defaultVxeProps","mode","showIcon","iconClose","iconOpen","highlight","selectedRows","selectedRowIds","statistics","has","sum","average","reloadEffectRowKeysMap","excludeCode","computed","vxeColumns","forEach","column","renderOptions","listeners","cellListeners","$type","rowDragSort","slot","$scopedSlots","hasOwnProperty","slotName","target","editRender","Object","assign","cellRender","file","image","width","endsWith","parseInt","substr","length","vxeEditRules","editRules","vxeProps","showFooter","$attrs","border","footerMethod","handleFooterMethod","vxeEvents","events","handleVxeScroll","handleCellClick","handleEditClosed","handleEditActived","handleVxeRadioChange","handleVxeCheckboxAll","handleVxeCheckboxChange","keys","$listeners","key","listen","isArray","push","valueChange","rowMoveUp","rowIndex","rowResort","rowMoveDown","rowInsertDown","insertRows","watch","immediate","handler","vxe","idx","$set","loadData","loadExcludeCode","expandColumn","seqColumn","checkboxColumn","radioColumn","dragSortColumn","indexOf","col","enhanced","rowCheckbox","rowRadio","field","renderName","_prefix","hidden","visible","switches","normal","dictCode","_loadDictConcatToOptions","validateRules","rules","rule","replace","message","unique","pattern","validator","uniqueValidator","bind","fooPatterns","value","foo","handlerConvertToValidator","item","arr","toLowerCase","title","fixed","align","unshift","content","created","mounted","handleTabsChange","methods","tabs","tabPane","currentKey","$vnode","unwatch","$children","$watch","$nextTick","refreshScroll","recalculate","$on","$refs","scrollTop","scrollLeft","subPopover","close","closeScrolling","row","$table","getRadioRecord","handleSelectChange","getCheckboxRecords","$event","action","includes","map","id","own","showDetails","detailsModal","open","toggle","className","toString","setRadioRow","toggleCheckboxRow","editClosed","apply","arguments","editActived","footers","getFooterStatisticsMap","checks","method","property","mean","columnIndex","handleFooterSpanMethod","colspan","resetScrollTop","scrollTo","loadNewData","xTable","validateTable","validate","catch","errMap","fullValidateTable","fullValidate","setValues","values","console","warn","record","getIfRowById","colKey","getColumnByKey","oldValue","newValue","isSetValues","getAll","tableData","getTableData","deleteData","getDeleteData","options","rowIds","rowId","fullData","filterNewRows","getNewData","newData","getInsertRecords","getNewDataWithId","getRowById","isNew","getNewRowById","records","getRemoveRecords","addRows","rows","isOnlJs","converter","dbDefaultVal","dbFieldName","dbFieldTxt","dbIsKey","dbIsNull","dbLength","dbPointLength","dbType","dictField","dictTable","dictText","fieldDefaultValue","fieldExtendJson","fieldHref","fieldLength","fieldMustInput","fieldShowType","isQuery","isReadOnly","isShowForm","isShowList","mainField","mainTable","orderNum","order_num","queryConfigFlag","queryDefVal","queryDictField","queryDictTable","queryDictText","queryMode","sortFlag","$emit","_addOrInsert","index","pushRows","setActive","tableFullData","insertAt","result","setActiveRow","_recalcSortNumber","clearSelection","clearRadioRow","clearCheckboxRow","removeRows","_remove","res","removeRowsById","filter","getColumnByField","$target","then","success","newOptions","option","group","groupEnd","remove","insertRecords","removeSelection","afterFullData","tableSourceData","editStore","treeConfig","checkboxOpts","selection","isInsertByRow","scrollYLoad","actived","removeList","insertList","checkField","rest","nowData","Error","getLog","slice","keepSource","rowIdSet","Set","clearActived","handleTableData","updateFooter","updateCache","checkSelectionStatus","updateScrollYSpace","oldIndex","newIndex","window","sort","array","splice","updateData","triggerName","undefined","log","_createRow","i","tableFullColumn","createValue","renderVxeGrid","h","ref","class","on","scopedSlots","renderToolbar","that","add","save","import","formData","JSON","parse","localStorage","getItem","deleteRows","removeEvent","confirmRemove","toolbarPrefix","toolbarSuffix","renderToolbarAfterSlot","renderSubPopover","subForm","renderDetailsModal","mainForm","renderPagination","change","e","pre","render","beforeDestroy","Promise","resolve","reject","flag","msg","cellValue","findCount","rowData"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport PropTypes from 'ant-design-vue/es/_util/vue-types'\r\nimport { JVXETypes } from '@/components/jeecg/JVxeTable/index'\r\nimport VxeWebSocketMixins from '../mixins/vxe.web.socket.mixins'\r\nimport { initDictOptions } from '@/components/dict/JDictSelectUtil'\r\n\r\nimport { getRefPromise } from '../utils/vxeUtils'\r\nimport { getEnhancedMixins, replaceProps } from '../utils/cellUtils'\r\n\r\nimport JVxeToolbar from './JVxeToolbar'\r\nimport JVxeSubPopover from './JVxeSubPopover'\r\nimport JVxeDetailsModal from './JVxeDetailsModal'\r\nimport JVxePagination from './JVxePagination'\r\nimport { cloneObject, getVmParentByName, pushIfNotExist, randomString, simpleDebounce } from '@/utils/util'\r\nimport { UtilTools } from 'vxe-table/packages/tools/src/utils'\r\nimport { getNoAuthCols } from \"@/utils/authFilter\"\r\n\r\nexport default {\r\n  name: 'JVxeTable',\r\n  provide() {\r\n    return {\r\n      superTrigger: (name, event) => this.trigger(name, event)\r\n    }\r\n  },\r\n  mixins: [VxeWebSocketMixins],\r\n  components: {JVxeToolbar, JVxeSubPopover, JVxeDetailsModal, JVxePagination},\r\n  props: {\r\n    rowKey: PropTypes.string.def('id'),\r\n    // 列信息\r\n    columns: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    // 数据源\r\n    dataSource: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    authPre: {\r\n      type: String,\r\n      required: false,\r\n      default: ''\r\n    },\r\n    isonline:{\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    // 是否显示工具栏\r\n    toolbar: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true\r\n    },\r\n    importBtn:Boolean,\r\n    // 工具栏配置\r\n    toolbarConfig: PropTypes.object.def(() => ({\r\n      // prefix 前缀；suffix 后缀；\r\n      slots: ['prefix', 'suffix'],\r\n      // add 新增按钮；remove 删除按钮；clearSelection 清空选择按钮；collapse 展开收起\r\n      btns: ['add', 'remove', 'clearSelection'],\r\n    })),\r\n    // 是否显示行号\r\n    rowNumber: PropTypes.bool.def(false),\r\n    // 是否可选择行\r\n    rowSelection: PropTypes.bool.def(false),\r\n    // 选择行类型\r\n    rowSelectionType: PropTypes.oneOf(['checkbox', 'radio']).def('checkbox'),\r\n    // 是否可展开行\r\n    rowExpand: PropTypes.bool.def(false),\r\n    // 展开行配置\r\n    expandConfig: PropTypes.object.def(() => ({})),\r\n    // 页面是否在加载中\r\n    loading: PropTypes.bool.def(false),\r\n    height: PropTypes.instanceOf([Number, String]).def('auto'),\r\n    // 最大高度\r\n    maxHeight: {\r\n      type: Number,\r\n      default: () => null,\r\n    },\r\n    // 要禁用的行 TODO 未实现\r\n    disabledRows: PropTypes.object.def(() => ({})),\r\n    // 是否禁用全部组件\r\n    disabled: PropTypes.bool.def(false),\r\n    // 是否可拖拽排序 TODO 仅实现上下排序，未实现拖拽排序（可能无法实现或较为困难）\r\n    dragSort: PropTypes.bool.def(false),\r\n    // 排序字段保存的Key\r\n    dragSortKey: PropTypes.string.def('orderNum'),\r\n    // 大小，可选值有：medium（中）、small（小）、mini（微）、tiny（非常小）\r\n    size: PropTypes.oneOf(['medium', 'small', 'mini', 'tiny']).def('medium'),\r\n    // 是否显示边框线\r\n    bordered: PropTypes.bool.def(false),\r\n    // 分页器参数，设置了即可显示分页器\r\n    pagination: PropTypes.object.def(() => ({})),\r\n    // 点击行时是否显示子表单\r\n    clickRowShowSubForm: PropTypes.bool.def(false),\r\n    // 点击行时是否显示主表单\r\n    clickRowShowMainForm: PropTypes.bool.def(false),\r\n    // 是否点击选中行，优先级最低\r\n    clickSelectRow: PropTypes.bool.def(false),\r\n    // 是否开启 reload 数据效果\r\n    reloadEffect: PropTypes.bool.def(false),\r\n    // 校验规则\r\n    Rules: PropTypes.object.def(() => ({})),\r\n    // 是否异步删除行，如果你要实现异步删除，那么需要把这个选项开启，\r\n    // 在remove事件里调用confirmRemove方法才会真正删除（除非删除的全是新增的行）\r\n    asyncRemove: PropTypes.bool.def(false),\r\n  },\r\n  data() {\r\n    return {\r\n      isJVXETable: true,\r\n      // caseId，表格唯一标识\r\n      caseId: `_j-vxe-${randomString(8)}_`,\r\n      // 内置columns\r\n      _innerColumns: [],\r\n      // 内置 EditRules\r\n      _innerEditRules: [],\r\n      // 记录滚动条位置\r\n      scroll: {top: 0, left: 0},\r\n      // 当前是否正在滚动\r\n      scrolling: false,\r\n      // vxe 默认配置\r\n      defaultVxeProps: {\r\n        'row-id': this.rowKey,\r\n        // 高亮hover的行\r\n        'highlight-hover-row': true,\r\n        // 溢出隐藏并显示tooltip\r\n        'show-overflow': true,\r\n        // 表头溢出隐藏并显示tooltip\r\n        'show-header-overflow': true,\r\n        'show-footer-overflow': true,\r\n        // 可编辑配置\r\n        'edit-config': {trigger: 'click', mode: 'cell',showIcon:false},\r\n        'expand-config': {\r\n          iconClose: 'ant-table-row-expand-icon ant-table-row-collapsed',\r\n          iconOpen: 'ant-table-row-expand-icon ant-table-row-expanded'\r\n        },\r\n        // 虚拟滚动配置，y轴大于30条数据时启用虚拟滚动\r\n        // 'scroll-y': {\r\n        //   gt: 30\r\n        // },\r\n        // 'scroll-x': {\r\n        //   gt: 15\r\n        // },\r\n        'radio-config': {highlight: true},\r\n        'checkbox-config': {highlight: true},\r\n      },\r\n      // 绑定左侧选择框\r\n      selectedRows: [],\r\n      // 绑定左侧选择框已选择的id\r\n      selectedRowIds: [],\r\n      // 统计列配置\r\n      statistics: {\r\n        has: false,\r\n        sum: [],\r\n        average: [],\r\n      },\r\n      // 允许执行刷新特效的行ID\r\n      reloadEffectRowKeysMap: {},\r\n      //配置了但是没有授权的按钮和列 集合\r\n      excludeCode:[]\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    // vxe 最终 columns\r\n    vxeColumns() {\r\n      this._innerColumns.forEach(column => {\r\n        let renderOptions = {\r\n          caseId: this.caseId,\r\n          bordered: this.bordered,\r\n          disabled: this.disabled,\r\n          scrolling: this.scrolling,\r\n          reloadEffect: this.reloadEffect,\r\n          reloadEffectRowKeysMap: this.reloadEffectRowKeysMap,\r\n          listeners: this.cellListeners,\r\n        }\r\n        if (column.$type === JVXETypes.rowDragSort) {\r\n          renderOptions.dragSortKey = this.dragSortKey\r\n        }\r\n        // slot 组件特殊处理\r\n        if (column.$type === JVXETypes.slot) {\r\n          if (this.$scopedSlots.hasOwnProperty(column.slotName)) {\r\n            renderOptions.slot = this.$scopedSlots[column.slotName]\r\n            renderOptions.target = this\r\n          }\r\n        }\r\n        if (column.editRender) {\r\n          Object.assign(column.editRender, renderOptions)\r\n        }\r\n        if (column.cellRender) {\r\n          Object.assign(column.cellRender, renderOptions)\r\n        }\r\n        // update--begin--autor:lvdandan-----date:20201019------for:LOWCOD-882 【新行编辑】列表上带按钮的遮挡问题\r\n        if (column.$type === JVXETypes.file || column.$type === JVXETypes.image) {\r\n          if (column.width && column.width.endsWith('px')) {\r\n            column.width = Number.parseInt(column.width.substr(0,column.width.length-2))+Number.parseInt(1)+'px';\r\n          }\r\n        }\r\n        // update--begin--autor:lvdandan-----date:20201019------for:LOWCOD-882 【新行编辑】列表上带按钮的遮挡问题\r\n      })\r\n      return this._innerColumns\r\n    },\r\n    // vxe 最终 editRules\r\n    vxeEditRules() {\r\n      return Object.assign({}, this.editRules, this._innerEditRules)\r\n    },\r\n    // vxe 最终 props\r\n    vxeProps() {\r\n      let expandConfig = Object.assign({}, this.defaultVxeProps['expand-config'], this.expandConfig)\r\n\r\n      return Object.assign({}, this.defaultVxeProps, {\r\n        showFooter: this.statistics.has,\r\n      }, this.$attrs, {\r\n        loading: this.loading,\r\n        columns: this.vxeColumns,\r\n        editRules: this.vxeEditRules,\r\n        // data: this.dataSource,\r\n        height: this.height === 'auto' ? null : this.height,\r\n        maxHeight: this.maxHeight,\r\n        border: this.bordered,\r\n        expandConfig: expandConfig,\r\n        footerMethod: this.handleFooterMethod,\r\n        // footerSpanMethod: this.handleFooterSpanMethod,\r\n      })\r\n    },\r\n    // vxe 最终 events\r\n    vxeEvents() {\r\n      // 内置事件\r\n      let events = {\r\n        'scroll': this.handleVxeScroll,\r\n        'cell-click': this.handleCellClick,\r\n        'edit-closed': this.handleEditClosed,\r\n        'edit-actived': this.handleEditActived,\r\n        'radio-change': this.handleVxeRadioChange,\r\n        'checkbox-all': this.handleVxeCheckboxAll,\r\n        'checkbox-change': this.handleVxeCheckboxChange,\r\n      }\r\n      // 用户传递的事件，进行合并操作\r\n      Object.keys(this.$listeners).forEach(key => {\r\n        let listen = this.$listeners[key]\r\n        if (events.hasOwnProperty(key)) {\r\n          if (Array.isArray(listen)) {\r\n            listen.push(events[key])\r\n          } else {\r\n            listen = [events[key], listen]\r\n          }\r\n        }\r\n        events[key] = listen\r\n      })\r\n      return events\r\n    },\r\n    // 组件监听事件\r\n    cellListeners() {\r\n      return {\r\n        trigger: (name, event) => this.trigger(name, event),\r\n        valueChange: event => this.trigger('valueChange', event),\r\n        /** 当前行向上移一位 */\r\n        rowMoveUp: rowIndex => this.rowResort(rowIndex, rowIndex - 1),\r\n        /** 当前行向下移一位 */\r\n        rowMoveDown: rowIndex => this.rowResort(rowIndex, rowIndex + 1),\r\n        /** 在当前行下面插入一行 */\r\n        rowInsertDown: rowIndex => this.insertRows({}, rowIndex + 1),\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    dataSource: {\r\n      //   deep: true,\r\n      immediate: true,\r\n      async handler() {\r\n        let vxe = await getRefPromise(this, 'vxe')\r\n        // 阻断vue监听大数据，提高性能\r\n\r\n        // 开启了排序就自动计算排序值\r\n        if (this.dragSort) {\r\n          this.dataSource.forEach((data, idx) => {\r\n            this.$set(data, this.dragSortKey, idx + 1)\r\n          })\r\n        }\r\n\r\n        vxe.loadData(this.dataSource)\r\n        // TODO 解析disabledRows\r\n        // let disabled = false\r\n        //\r\n        // let disabledRowIds = (this.disabledRowIds || [])\r\n        // // 解析disabledRows\r\n        // Object.keys(this.disabledRows).forEach(disabledColKey => {\r\n        //   // 判断是否有该属性\r\n        //   if (data.hasOwnProperty(disabledColKey)) {\r\n        //     if (disabled !== true) {\r\n        //       let temp = this.disabledRows[disabledColKey]\r\n        //       // 禁用规则可以是一个数组\r\n        //       if (Array.isArray(temp)) {\r\n        //         disabled = temp.includes(data[disabledColKey])\r\n        //       } else {\r\n        //         disabled = (temp === data[disabledColKey])\r\n        //       }\r\n        //       if (disabled) {\r\n        //         disabledRowIds.push(row.id)\r\n        //       }\r\n        //     }\r\n        //   }\r\n        // })\r\n      },\r\n    },\r\n    columns: {\r\n      immediate: true,\r\n      handler(columns) {\r\n        //获取不需要显示列\r\n        this.loadExcludeCode()\r\n        let _innerColumns = []\r\n        let _innerEditRules = {}\r\n        let {rowNumber, rowSelection, rowExpand, dragSort} = this\r\n        let expandColumn, seqColumn, checkboxColumn, radioColumn, dragSortColumn\r\n        if (Array.isArray(columns)) {\r\n          this.statistics.has = false\r\n          this.statistics.sum = []\r\n          this.statistics.average = []\r\n\r\n          // 处理成vxe可识别的columns\r\n          columns.forEach(column => {\r\n            if(this.excludeCode.indexOf(column.key)>=0){\r\n              return false\r\n            }\r\n            let col = {...column}\r\n            let {type} = col\r\n            const enhanced = getEnhancedMixins(type)\r\n            if (type === JVXETypes.rowNumber) {\r\n              seqColumn = col\r\n            } else if (type === JVXETypes.rowCheckbox) {\r\n              checkboxColumn = col\r\n            } else if (type === JVXETypes.rowRadio) {\r\n              radioColumn = col\r\n            } else if (type === JVXETypes.rowExpand) {\r\n              expandColumn = col\r\n            } else if (type === JVXETypes.rowDragSort) {\r\n              dragSortColumn = col\r\n            } else {\r\n              col.field = col.key\r\n              // 防止和vxeTable自带的type起冲突\r\n              col.$type = col.type\r\n              delete col.type\r\n              let renderName = 'cellRender', renderOptions = {name: JVXETypes._prefix + type}\r\n              if (type) {\r\n                // hidden 是特殊的组件\r\n                if (type === JVXETypes.hidden) {\r\n                  col.visible = false\r\n                } else if (enhanced.switches.editRender) {\r\n                  renderName = 'editRender'\r\n                  renderOptions.type = enhanced.switches.visible ? 'visible' : 'default'\r\n                }\r\n              } else {\r\n                renderOptions.name = JVXETypes._prefix + JVXETypes.normal\r\n              }\r\n              col[renderName] = renderOptions\r\n              // 处理字典\r\n              if (col.dictCode) {\r\n                this._loadDictConcatToOptions(col)\r\n              }\r\n              // 处理校验\r\n              if (col.validateRules) {\r\n                let rules = []\r\n                if (Array.isArray(col.validateRules)) {\r\n                  for (let rule of col.validateRules) {\r\n                    let replace = {\r\n                      message: replaceProps(col, rule.message)\r\n                    }\r\n                    if (rule.unique || rule.pattern === 'only') {\r\n                      // 唯一校验器\r\n                      rule.validator = uniqueValidator.bind(this)\r\n                    } else if (rule.pattern) {\r\n                      // 非空\r\n                      if (rule.pattern === fooPatterns[0].value) {\r\n                        rule.required = true\r\n                        delete rule.pattern\r\n                      } else {\r\n                        // 兼容Online表单的特殊规则\r\n                        for (let foo of fooPatterns) {\r\n                          if (foo.value === rule.pattern) {\r\n                            rule.pattern = foo.pattern\r\n                            break\r\n                          }\r\n                        }\r\n                      }\r\n                    } else if (typeof rule.handler === 'function') {\r\n                      // 自定义函数校验\r\n                      rule.validator = handlerConvertToValidator.bind(this)\r\n                    }\r\n                    rules.push(Object.assign({}, rule, replace))\r\n                  }\r\n                }\r\n                _innerEditRules[col.key] = rules\r\n              }\r\n              // 处理统计列\r\n              // sum = 求和、average = 平均值\r\n              if (Array.isArray(col.statistics)) {\r\n                this.statistics.has = true\r\n                col.statistics.forEach(item => {\r\n                  let arr = this.statistics[item.toLowerCase()]\r\n                  if (Array.isArray(arr)) {\r\n                    pushIfNotExist(arr, col.key)\r\n                  }\r\n                })\r\n              }\r\n              _innerColumns.push(col)\r\n            }\r\n          })\r\n        }\r\n        // 判断是否开启了序号\r\n        if (rowNumber) {\r\n          let col = {type: 'seq', title: '#', width: 60, fixed: 'left', align: 'center'}\r\n          if (seqColumn) {\r\n            col = Object.assign(col, seqColumn, {type: 'seq'})\r\n          }\r\n          _innerColumns.unshift(col)\r\n        }\r\n        // 判断是否开启了可选择行\r\n        if (rowSelection) {\r\n          let width = 40\r\n          if (this.statistics.has && !rowExpand && !dragSort) {\r\n            width = 60\r\n          }\r\n          let col = {type: this.rowSelectionType, width, fixed: 'left', align: 'center'}\r\n          // radio\r\n          if (this.rowSelectionType === 'radio' && radioColumn) {\r\n            col = Object.assign(col, radioColumn, {type: 'radio'})\r\n          }\r\n          // checkbox\r\n          if (this.rowSelectionType === 'checkbox' && checkboxColumn) {\r\n            col = Object.assign(col, checkboxColumn, {type: 'checkbox'})\r\n          }\r\n          _innerColumns.unshift(col)\r\n        }\r\n        // 是否可展开行\r\n        if (rowExpand) {\r\n          let width = 40\r\n          if (this.statistics.has && !dragSort) {\r\n            width = 60\r\n          }\r\n          let col = {type: 'expand', title: '', width, fixed: 'left', align: 'center', slots: {content: 'expandContent'}}\r\n          if (expandColumn) {\r\n            col = Object.assign(col, expandColumn, {type: 'expand'})\r\n          }\r\n          _innerColumns.unshift(col)\r\n        }\r\n        // 是否可拖动排序\r\n        if (dragSort) {\r\n          let width = 40\r\n          if (this.statistics.has) {\r\n            width = 60\r\n          }\r\n          let col = {type: JVXETypes.rowDragSort, title: '', width, fixed: 'left', align: 'center', cellRender: {name: JVXETypes._prefix + JVXETypes.rowDragSort}}\r\n          if (dragSortColumn) {\r\n            col = Object.assign(col, dragSortColumn, {type: JVXETypes.rowDragSort})\r\n          }\r\n          _innerColumns.unshift(col)\r\n        }\r\n\r\n        this._innerColumns = _innerColumns\r\n        this._innerEditRules = _innerEditRules\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    this.handleTabsChange()\r\n  },\r\n  methods: {\r\n\r\n    /**\r\n     * 自动判断父级是否是 <a-tabs/> 组件，然后添加事件监听，自动重置表格\r\n     */\r\n    handleTabsChange() {\r\n      // 获取父级\r\n      const tabs = getVmParentByName(this, 'ATabs')\r\n      const tabPane = getVmParentByName(this, 'ATabPane')\r\n      if (tabs && tabPane) {\r\n        // 用户自定义的 key\r\n        const currentKey = tabPane.$vnode.key\r\n        // 添加 activeKey 监听\r\n        const unwatch = tabs.$children[0].$watch('$data._activeKey', async (key) => {\r\n          // 切换到自己时重新计算\r\n          if (currentKey === key) {\r\n            await this.$nextTick()\r\n            await this.refreshScroll()\r\n            await this.recalculate()\r\n          }\r\n        })\r\n        // 当前实例销毁时取消监听\r\n        this.$on('beforeDestroy', () => unwatch())\r\n      }\r\n    },\r\n\r\n    handleVxeScroll(event) {\r\n      let {$refs, scroll} = this\r\n\r\n      // 记录滚动条的位置\r\n      scroll.top = event.scrollTop\r\n      scroll.left = event.scrollLeft\r\n\r\n      $refs.subPopover ? $refs.subPopover.close() : null\r\n      this.scrolling = true\r\n      this.closeScrolling()\r\n    },\r\n    // 当手动勾选单选时触发的事件\r\n    handleVxeRadioChange(event) {\r\n      let row = event.$table.getRadioRecord()\r\n      this.selectedRows = row ? [row] : []\r\n      this.handleSelectChange('radio', this.selectedRows, event)\r\n    },\r\n    // 当手动勾选全选时触发的事件\r\n    handleVxeCheckboxAll(event) {\r\n      this.selectedRows = event.$table.getCheckboxRecords()\r\n      this.handleSelectChange('checkbox-all', this.selectedRows, event)\r\n    },\r\n    // 当手动勾选并且值发生改变时触发的事件\r\n    handleVxeCheckboxChange(event) {\r\n      this.selectedRows = event.$table.getCheckboxRecords()\r\n      this.handleSelectChange('checkbox', this.selectedRows, event)\r\n    },\r\n    // 行选择change事件\r\n    handleSelectChange(type, selectedRows, $event) {\r\n      let action\r\n      if (type === 'radio') {\r\n        action = 'selected'\r\n      } else if (type === 'checkbox') {\r\n        action = selectedRows.includes($event.row) ? 'selected' : 'unselected'\r\n      } else {\r\n        action = 'selected-all'\r\n      }\r\n\r\n      this.selectedRowIds = selectedRows.map(row => row.id)\r\n      this.trigger('selectRowChange', {\r\n        type: type,\r\n        action: action,\r\n        $event: $event,\r\n        row: $event.row,\r\n        selectedRows: this.selectedRows,\r\n        selectedRowIds: this.selectedRowIds\r\n      })\r\n    },\r\n\r\n    // 点击单元格时触发的事件\r\n    handleCellClick(event) {\r\n      let {row, column, $event, $table} = event\r\n      let {$refs} = this\r\n\r\n      // 点击了可编辑的\r\n      if (column.editRender) {\r\n        $refs.subPopover ? $refs.subPopover.close() : null\r\n        return\r\n      }\r\n\r\n      // 显示详细信息\r\n      if (column.own.showDetails) {\r\n        // 两个如果同时存在的话会出现死循环\r\n        $refs.subPopover ? $refs.subPopover.close() : null\r\n        $refs.detailsModal ? $refs.detailsModal.open(event) : null\r\n      } else if ($refs.subPopover) {\r\n        $refs.subPopover.toggle(event)\r\n      } else if (this.clickSelectRow) {\r\n        let className = $event.target.className || ''\r\n        className = typeof className === 'string' ? className : className.toString()\r\n        // 点击的是expand，不做处理\r\n        if (className.includes('vxe-table--expand-btn')) {\r\n          return\r\n        }\r\n        // 点击的是checkbox，不做处理\r\n        if (className.includes('vxe-checkbox--icon') || className.includes('vxe-cell--checkbox')) {\r\n          return\r\n        }\r\n        // 点击的是radio，不做处理\r\n        if (className.includes('vxe-radio--icon') || className.includes('vxe-cell--radio')) {\r\n          return\r\n        }\r\n        if (this.rowSelectionType === 'radio') {\r\n          $table.setRadioRow(row)\r\n          this.handleVxeRadioChange(event)\r\n        } else {\r\n          $table.toggleCheckboxRow(row)\r\n          this.handleVxeCheckboxChange(event)\r\n        }\r\n      }\r\n    },\r\n\r\n    // 单元格编辑状态下被关闭时会触发该事件\r\n    handleEditClosed({column}) {\r\n      // 执行增强\r\n      getEnhancedMixins(column.own.$type, 'aopEvents').editClosed.apply(this, arguments)\r\n    },\r\n\r\n    // 单元格被激活编辑时会触发该事件\r\n    handleEditActived({column}) {\r\n      // 执行增强\r\n      getEnhancedMixins(column.own.$type, 'aopEvents').editActived.apply(this, arguments)\r\n    },\r\n\r\n    /** 表尾数据处理方法，用于显示统计信息 */\r\n    handleFooterMethod({columns, data}) {\r\n      const {statistics} = this\r\n      let footers = []\r\n      if (statistics.has) {\r\n        if (statistics.sum.length > 0) {\r\n          footers.push(this.getFooterStatisticsMap({\r\n            columns: columns,\r\n            title: '合计',\r\n            checks: statistics.sum,\r\n            method: (column) => XEUtils.sum(data, column.property)\r\n          }))\r\n        }\r\n        if (statistics.average.length > 0) {\r\n          footers.push(this.getFooterStatisticsMap({\r\n            columns: columns,\r\n            title: '平均',\r\n            checks: statistics.average,\r\n            method: (column) => XEUtils.mean(data, column.property)\r\n          }))\r\n        }\r\n      }\r\n      return footers\r\n    },\r\n\r\n    getFooterStatisticsMap({columns, title, checks, method}) {\r\n      return columns.map((column, columnIndex) => {\r\n        if (columnIndex === 0) {\r\n          return title\r\n        }\r\n        if (checks.includes(column.property)) {\r\n          return method(column, columnIndex)\r\n        }\r\n        return null\r\n      })\r\n    },\r\n\r\n    /** 表尾单元格合并方法 */\r\n    handleFooterSpanMethod(event) {\r\n      if (event.columnIndex === 0) {\r\n        return {colspan: 2}\r\n      }\r\n    },\r\n\r\n    /*--- 外部可调用接口方法 ---*/\r\n\r\n    /**\r\n     * 重置滚动条Top位置\r\n     * @param top 新top位置，留空则滚动到上次记录的位置，用于解决切换tab选项卡时导致白屏以及自动将滚动条滚动到顶部的问题\r\n     */\r\n    resetScrollTop(top) {\r\n      this.scrollTo(null, (top == null || top === '') ? this.scroll.top : top)\r\n    },\r\n\r\n    /**\r\n     * 加载新数据，和 loadData 不同的是，用该方法加载的数据都是相当于点新增按钮新增的数据。\r\n     * 适用于不是数据库里查出来的没有id的临时数据\r\n     * @param dataSource\r\n     */\r\n    async loadNewData(dataSource) {\r\n      if (Array.isArray(dataSource)) {\r\n        let {xTable} = this.$refs.vxe.$refs\r\n        return await xTable.loadData(dataSource)\r\n      }\r\n      return []\r\n    },\r\n\r\n    // 校验table，失败返回errMap，成功返回null\r\n    async validateTable() {\r\n      const errMap = await this.validate().catch(errMap => errMap)\r\n      return errMap ? errMap : null\r\n    },\r\n    // 完整校验\r\n    async fullValidateTable() {\r\n      const errMap = await this.fullValidate().catch(errMap => errMap)\r\n      return errMap ? errMap : null\r\n    },\r\n\r\n    /** 设置某行某列的值 */\r\n    setValues(values) {\r\n      if (!Array.isArray(values)) {\r\n        console.warn(`JVxeTable.setValues：必须传递数组`)\r\n        return\r\n      }\r\n      values.forEach((item, idx) => {\r\n        let {rowKey, values: record} = item\r\n        let {row} = this.getIfRowById(rowKey)\r\n        if (!row) {\r\n          return\r\n        }\r\n        Object.keys(record).forEach(colKey => {\r\n          let column = this.getColumnByKey(colKey)\r\n          if (column) {\r\n            let oldValue = row[colKey]\r\n            let newValue = record[colKey]\r\n            if (newValue !== oldValue) {\r\n              this.$set(row, colKey, newValue)\r\n              // 触发 valueChange 事件\r\n              this.trigger('valueChange', {\r\n                type: column.own.$type,\r\n                value: newValue,\r\n                oldValue: oldValue,\r\n                col: column.own,\r\n                column: column,\r\n                isSetValues: true,\r\n              })\r\n            }\r\n          } else {\r\n            console.warn(`JVxeTable.setValues：没有找到key为\"${colKey}\"的列`)\r\n          }\r\n        })\r\n      })\r\n    },\r\n\r\n    /** 获取所有的数据，包括values、deleteIds */\r\n    getAll() {\r\n      return {\r\n        tableData: this.getTableData(),\r\n        deleteData: this.getDeleteData()\r\n      }\r\n    },\r\n    /** 获取表格数据 */\r\n    getTableData(options = {}) {\r\n      let {rowIds} = options\r\n      let tableData\r\n      // 仅查询指定id的行\r\n      if (Array.isArray(rowIds) && rowIds.length > 0) {\r\n        tableData = []\r\n        rowIds.forEach(rowId => {\r\n          let {row} = this.getIfRowById(rowId)\r\n          if (row) {\r\n            tableData.push(row)\r\n          }\r\n        })\r\n      } else {\r\n        // 查询所有行\r\n        tableData = this.$refs.vxe.getTableData().fullData\r\n      }\r\n      return this.filterNewRows(tableData, false)\r\n    },\r\n    /** 仅获取新增的数据 */\r\n    getNewData() {\r\n      let newData = cloneObject(this.$refs.vxe.getInsertRecords())\r\n      newData.forEach(row => delete row.id)\r\n      return newData\r\n    },\r\n    /** 仅获取新增的数据,带有id */\r\n    getNewDataWithId() {\r\n      let newData = cloneObject(this.$refs.vxe.getInsertRecords())\r\n      return newData\r\n    },\r\n    /** 根据ID获取行，新增的行也能查出来 */\r\n    getIfRowById(id) {\r\n      let row = this.getRowById(id), isNew = false\r\n      if (!row) {\r\n        row = this.getNewRowById(id)\r\n        if (!row) {\r\n          console.warn(`JVxeTable.getIfRowById：没有找到id为\"${id}\"的行`)\r\n          return {row: null}\r\n        }\r\n        isNew = true\r\n      }\r\n      return {row, isNew}\r\n    },\r\n    /** 通过临时ID获取新增的行 */\r\n    getNewRowById(id) {\r\n      let records = this.getInsertRecords()\r\n      for (let record of records) {\r\n        if (record.id === id) {\r\n          return record\r\n        }\r\n      }\r\n      return null\r\n    },\r\n    /** 仅获取被删除的数据（新增又被删除的数据不会被获取到） */\r\n    getDeleteData() {\r\n      return cloneObject(this.$refs.vxe.getRemoveRecords())\r\n    },\r\n    /**\r\n     * 添加一行或多行\r\n     *\r\n     * @param rows\r\n     * @return\r\n     */\r\n    async addRows(rows = {\r\n\r\n    }, isOnlJs) {\r\n      if(this.isonline) {\r\n        rows = {\r\n          converter: \"\",\r\n          dbDefaultVal: \"\",\r\n          dbFieldName: \"\",\r\n          dbFieldTxt: \"\",\r\n          dbIsKey: \"1\",\r\n          dbIsNull: \"0\",\r\n          dbLength: \"36\",\r\n          dbPointLength: \"0\",\r\n          dbType: \"string\",\r\n          dictField: \"\",\r\n          dictTable: \"\",\r\n          dictText: \"\",\r\n          fieldDefaultValue: \"\",\r\n          fieldExtendJson: \"\",\r\n          fieldHref: \"\",\r\n          fieldLength: \"120\",\r\n          fieldMustInput: \"0\",\r\n          fieldShowType: \"text\",\r\n          isQuery: \"0\",\r\n          isReadOnly: \"1\",\r\n          isShowForm: \"0\",\r\n          isShowList: \"0\",\r\n          mainField: \"\",\r\n          mainTable: \"\",\r\n          orderNum: 1,\r\n          order_num: 0,\r\n          queryConfigFlag: \"0\",\r\n          queryDefVal: \"\",\r\n          queryDictField: \"\",\r\n          queryDictTable: \"\",\r\n          queryDictText: \"\",\r\n          queryMode: \"single\",\r\n          sortFlag: \"0\",\r\n        }\r\n        this.$emit('selfAdd')\r\n      }else {\r\n        return this._addOrInsert(rows, -1, 'added', isOnlJs)\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 添加一行或多行\r\n     *\r\n     * @param rows\r\n     * @param index 添加下标，数字，必填\r\n     * @return\r\n     */\r\n    async insertRows(rows, index) {\r\n      if (typeof index !== 'number' || index < 0) {\r\n        console.warn(`【JVXETable】insertRows：index必须传递数字，且大于-1`)\r\n        return\r\n      }\r\n      return this._addOrInsert(rows, index, 'inserted')\r\n    },\r\n    /**\r\n     * 添加一行或多行临时数据，不会填充默认值，传什么就添加进去什么\r\n     * @param rows\r\n     * @param options 选项\r\n     * @param options.setActive 是否激活最后一行的编辑模式\r\n     */\r\n    async pushRows(rows = {}, options = {}) {\r\n      let {xTable} = this.$refs.vxe.$refs\r\n      let {setActive, index} = options\r\n      setActive = setActive == null ? false : !!setActive\r\n      index = index == null ? -1 : index\r\n      index = index === -1 ? index : xTable.tableFullData[index]\r\n      // 插入行\r\n      let result = await xTable.insertAt(rows, index)\r\n      if (setActive) {\r\n        // 激活最后一行的编辑模式\r\n        xTable.setActiveRow(result.rows[result.rows.length - 1])\r\n      }\r\n      await this._recalcSortNumber()\r\n      return result\r\n    },\r\n\r\n    /** 清空选择行 */\r\n    clearSelection() {\r\n      let event = {$table: this.$refs.vxe, target: this}\r\n      if (this.rowSelectionType === JVXETypes.rowRadio) {\r\n        this.$refs.vxe.clearRadioRow()\r\n        this.handleVxeRadioChange(event)\r\n      } else {\r\n        this.$refs.vxe.clearCheckboxRow()\r\n        this.handleVxeCheckboxChange(event)\r\n      }\r\n    },\r\n\r\n    /** 删除一行或多行数据 */\r\n    async removeRows(rows) {\r\n      const res = await this._remove(rows)\r\n      await this._recalcSortNumber()\r\n      return res\r\n    },\r\n\r\n    /** 根据id删除一行或多行 */\r\n    removeRowsById(rowId) {\r\n      let rowIds\r\n      if (Array.isArray(rowId)) {\r\n        rowIds = rowId\r\n      } else {\r\n        rowIds = [rowId]\r\n      }\r\n      let rows = rowIds.map((id) => {\r\n        let {row} = this.getIfRowById(id)\r\n        if (!row) {\r\n          return\r\n        }\r\n        if (row) {\r\n          return row\r\n        } else {\r\n          console.warn(`【JVXETable】removeRowsById：${id}不存在`)\r\n          return null\r\n        }\r\n      }).filter((row) => row != null)\r\n      return this.removeRows(rows)\r\n    },\r\n\r\n    getColumnByKey() {\r\n      return this.$refs.vxe.getColumnByField.apply(this.$refs.vxe, arguments)\r\n    },\r\n\r\n    /* --- 辅助方法 ---*/\r\n\r\n    // 触发事件\r\n    trigger(name, event = {}) {\r\n      event.$target = this\r\n      event.$table = this.$refs.vxe\r\n      //online增强参数兼容\r\n      event.target = this\r\n      this.$emit(name, event)\r\n    },\r\n\r\n    /** 加载数据字典并合并到 options */\r\n    _loadDictConcatToOptions(column) {\r\n      initDictOptions(column.dictCode).then((res) => {\r\n        if (res.success) {\r\n          let newOptions = (column.options || [])// .concat(res.result)\r\n          res.result.forEach(item => {\r\n            // 过滤重复数据\r\n            for (let option of newOptions) if (option.value === item.value) return\r\n            newOptions.push(item)\r\n          })\r\n          this.$set(column, 'options', newOptions)\r\n        } else {\r\n          console.group(`JVxeTable 查询字典(${column.dictCode})发生异常`)\r\n          console.warn(res.message)\r\n          console.groupEnd()\r\n        }\r\n      })\r\n    },\r\n\r\n    // 设置 this.scrolling 防抖模式\r\n    closeScrolling: simpleDebounce(function () {\r\n      this.scrolling = false\r\n    }, 100),\r\n\r\n    /**\r\n     * 过滤添加的行\r\n     * @param rows 要筛选的行数据\r\n     * @param remove true = 删除新增，false=只删除id\r\n     * @param handler function\r\n     */\r\n    filterNewRows(rows, remove = true, handler) {\r\n      let insertRecords = this.$refs.vxe.getInsertRecords()\r\n      let records = []\r\n      for (let row of rows) {\r\n        let item = cloneObject(row)\r\n        if (insertRecords.includes(row)) {\r\n          handler ? handler({item, row, insertRecords}) : null\r\n\r\n          if (remove) {\r\n            continue\r\n          }\r\n          delete item.id\r\n        }\r\n        records.push(item)\r\n      }\r\n      return records\r\n    },\r\n\r\n    // 删除选中的数据\r\n    async removeSelection() {\r\n      let res = await this._remove(this.selectedRows)\r\n      this.clearSelection()\r\n      await this._recalcSortNumber()\r\n      return res\r\n    },\r\n\r\n    /**\r\n     * 【删除指定行数据】（重写vxeTable的内部方法，添加了从keepSource中删除）\r\n     * 如果传 row 则删除一行\r\n     * 如果传 rows 则删除多行\r\n     * 如果为空则删除所有\r\n     */\r\n    _remove(rows) {\r\n      const xTable = this.$refs.vxe.$refs.xTable\r\n\r\n      const {afterFullData, tableFullData, tableSourceData, editStore, treeConfig, checkboxOpts, selection, isInsertByRow, scrollYLoad} = xTable\r\n      const {actived, removeList, insertList} = editStore\r\n      const {checkField: property} = checkboxOpts\r\n      let rest = []\r\n      const nowData = afterFullData\r\n      if (treeConfig) {\r\n        throw new Error(UtilTools.getLog('vxe.error.noTree', ['remove']))\r\n      }\r\n      if (!rows) {\r\n        rows = tableFullData\r\n      } else if (!XEUtils.isArray(rows)) {\r\n        rows = [rows]\r\n      }\r\n      // 如果是新增，则保存记录\r\n      rows.forEach(row => {\r\n        if (!isInsertByRow(row)) {\r\n          removeList.push(row)\r\n        }\r\n      })\r\n      // 如果绑定了多选属性，则更新状态\r\n      if (!property) {\r\n        XEUtils.remove(selection, row => rows.indexOf(row) > -1)\r\n      }\r\n      // 从数据源中移除\r\n      if (tableFullData === rows) {\r\n        rows = rest = tableFullData.slice(0)\r\n        tableFullData.length = 0\r\n        nowData.length = 0\r\n      } else {\r\n        rest = XEUtils.remove(tableFullData, row => rows.indexOf(row) > -1)\r\n        XEUtils.remove(nowData, row => rows.indexOf(row) > -1)\r\n      }\r\n      // 【从keepSource中删除】\r\n      if (xTable.keepSource) {\r\n        let rowIdSet = new Set(rows.map(row => row.id))\r\n        XEUtils.remove(tableSourceData, row => rowIdSet.has(row.id))\r\n      }\r\n\r\n      // 如果当前行被激活编辑，则清除激活状态\r\n      if (actived.row && rows.indexOf(actived.row) > -1) {\r\n        xTable.clearActived()\r\n      }\r\n      // 从新增中移除已删除的数据\r\n      XEUtils.remove(insertList, row => rows.indexOf(row) > -1)\r\n      xTable.handleTableData()\r\n      xTable.updateFooter()\r\n      xTable.updateCache()\r\n      xTable.checkSelectionStatus()\r\n      if (scrollYLoad) {\r\n        xTable.updateScrollYSpace()\r\n      }\r\n      return xTable.$nextTick().then(() => {\r\n        xTable.recalculate()\r\n        return {row: rest.length ? rest[rest.length - 1] : null, rows: rest}\r\n      })\r\n    },\r\n\r\n    /** 行重新排序 */\r\n    async rowResort(oldIndex, newIndex) {\r\n      const xTable = this.$refs.vxe.$refs.xTable\r\n      window.xTable = xTable\r\n      const sort = (array) => {\r\n        // 存储旧数据，并删除旧项目\r\n        let row = array.splice(oldIndex, 1)[0]\r\n        // 向新项目里添加旧数据\r\n        array.splice(newIndex, 0, row)\r\n      }\r\n      sort(xTable.tableFullData)\r\n      if (xTable.keepSource) {\r\n        sort(xTable.tableSourceData)\r\n      }\r\n      await this.$nextTick()\r\n      await this._recalcSortNumber()\r\n    },\r\n\r\n    /** 重新计算排序字段的数值 */\r\n    async _recalcSortNumber() {\r\n      const xTable = this.$refs.vxe.$refs.xTable\r\n      if (this.dragSort) {\r\n        xTable.tableFullData.forEach((data, idx) => data[this.dragSortKey] = (idx + 1))\r\n      }\r\n      await xTable.updateCache(true)\r\n      return await xTable.updateData()\r\n    },\r\n\r\n    async _addOrInsert(rows = {}, index, triggerName, isOnlJs) {\r\n      let {xTable} = this.$refs.vxe.$refs\r\n      let records\r\n      if (Array.isArray(rows)) {\r\n        delete rows.undefined\r\n        records = rows\r\n      } else {\r\n        delete rows.undefined\r\n        records = [rows]\r\n      }\r\n      console.log(records)\r\n      // 遍历添加默认值\r\n      records.forEach(record => this._createRow(record))\r\n      console.log(records)\r\n      let result = await this.pushRows(records, {index: index, setActive: true})\r\n      // 遍历插入的行\r\n      // update--begin--autor:lvdandan-----date:20201117------for:LOWCOD-987 【新行编辑】js增强附表内置方法调用问题 #1819\r\n      // online js增强时以传过来值为准，不再赋默认值\r\n      if (isOnlJs != true) {\r\n        for (let i = 0; i < result.rows.length; i++) {\r\n          let row = result.rows[i]\r\n          this.trigger(triggerName, {\r\n            row: row,\r\n            $table: xTable,\r\n            target: this,\r\n          })\r\n        }\r\n      }\r\n      // update--end--autor:lvdandan-----date:20201117------for:LOWCOD-987 【新行编辑】js增强附表内置方法调用问题 #1819\r\n      return result\r\n    },\r\n    // 创建新行，自动添加默认值\r\n    _createRow(record = {}) {\r\n      let {xTable} = this.$refs.vxe.$refs\r\n      // 添加默认值\r\n      xTable.tableFullColumn.forEach(column => {\r\n        let col = column.own\r\n        if (record[col.key] == null || record[col.key] === '') {\r\n          // 设置默认值\r\n          let createValue = getEnhancedMixins(col.$type || col.type, 'createValue')\r\n          record[col.key] = createValue({row: record, column, $table: xTable})\r\n        }\r\n      })\r\n      delete record.undefined\r\n      return record\r\n    },\r\n\r\n    /*--- 渲染函数 ---*/\r\n\r\n    // 渲染 vxe\r\n    renderVxeGrid(h) {\r\n      return h('vxe-grid', {\r\n        ref: 'vxe',\r\n        class: ['j-vxe-table'],\r\n        props: this.vxeProps,\r\n        on: this.vxeEvents,\r\n        // 作用域插槽的格式为\r\n        scopedSlots: this.$scopedSlots,\r\n      })\r\n    },\r\n    // 渲染工具栏\r\n    renderToolbar(h) {\r\n      var that = this\r\n      if (this.toolbar) {\r\n        return h('j-vxe-toolbar', {\r\n          props: {\r\n            toolbarConfig: this.toolbarConfig,\r\n            importBtn:this.importBtn,\r\n            excludeCode: this.excludeCode,\r\n            size: this.size,\r\n            disabled: this.disabled,\r\n            disabledRows: this.disabledRows,\r\n            selectedRowIds: this.selectedRowIds,\r\n          },\r\n          on: {\r\n            // 新增事件\r\n            add: () => this.addRows(),\r\n            // 保存事件\r\n            save: () => this.trigger('save', {\r\n              $table: this.$refs.vxe,\r\n              target: this,\r\n            }),\r\n            import() {\r\n              var formData = JSON.parse(window.localStorage.getItem('formData'))\r\n              var res = JSON.parse(window.localStorage.getItem('uploadresult'))\r\n              if(formData.type=='DutyData') {\r\n                  that.$emit('loadDataUpload',res)\r\n              }else if(formData.type=='WeekStatistics') {\r\n                that.dataSource = res\r\n              }\r\n            },\r\n            // 删除事件\r\n            remove: () => {\r\n              let $table = this.$refs.vxe\r\n              let deleteRows = this.filterNewRows(this.selectedRows)\r\n              // 触发删除事件\r\n              if (deleteRows.length > 0) {\r\n                let removeEvent = {deleteRows, $table, target: this}\r\n                if (this.asyncRemove) {\r\n                  // 确认删除，只有调用这个方法才会真删除\r\n                  removeEvent.confirmRemove = () => this.removeSelection()\r\n                } else {\r\n                  this.removeSelection()\r\n                }\r\n                this.trigger('remove', removeEvent)\r\n              } else {\r\n                this.removeSelection()\r\n              }\r\n            },\r\n            // 清除选择事件\r\n            clearSelection: this.clearSelection\r\n          },\r\n          scopedSlots: {\r\n            toolbarPrefix: this.$scopedSlots.toolbarPrefix,\r\n            toolbarSuffix: this.$scopedSlots.toolbarSuffix,\r\n          },\r\n        })\r\n      }\r\n      return null\r\n    },\r\n    // 渲染 toolbarAfter 插槽\r\n    renderToolbarAfterSlot() {\r\n      if (this.$scopedSlots['toolbarAfter']) {\r\n        return this.$scopedSlots['toolbarAfter']()\r\n      }\r\n      return null\r\n    },\r\n    // 渲染点击时弹出的子表\r\n    renderSubPopover(h) {\r\n      if (this.clickRowShowSubForm && this.$scopedSlots.subForm) {\r\n        return h('j-vxe-sub-popover', {\r\n          ref: 'subPopover',\r\n          scopedSlots: {\r\n            subForm: this.$scopedSlots.subForm,\r\n          }\r\n        })\r\n      }\r\n      return null\r\n    },\r\n    // 渲染点击时弹出的详细信息\r\n    renderDetailsModal(h) {\r\n      if (this.clickRowShowMainForm && this.$scopedSlots.mainForm) {\r\n        return h('j-vxe-details-modal', {\r\n          ref: 'detailsModal',\r\n          scopedSlots: {\r\n            subForm: this.clickRowShowSubForm ? this.$scopedSlots.subForm : null,\r\n            mainForm: this.$scopedSlots.mainForm\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 渲染分页器\r\n    renderPagination(h) {\r\n      if (this.pagination && Object.keys(this.pagination).length > 0) {\r\n        return h('j-vxe-pagination', {\r\n          props: {\r\n            size: this.size,\r\n            disabled: this.disabled,\r\n            pagination: this.pagination\r\n          },\r\n          on: {\r\n            change: (e) => this.trigger('pageChange', e)\r\n          },\r\n        })\r\n      }\r\n      return null\r\n    },\r\n    loadExcludeCode(){\r\n      if(!this.authPre || this.authPre.length==0){\r\n        this.excludeCode = []\r\n      }else{\r\n        let pre = this.authPre\r\n        if(!pre.endsWith(':')){\r\n          pre += ':'\r\n        }\r\n        this.excludeCode = getNoAuthCols(pre)\r\n      }\r\n    }\r\n\r\n  },\r\n  render(h) {\r\n    return h('div', {\r\n      class: ['j-vxe-table-box', `size--${this.size}`]\r\n    }, [\r\n      this.renderSubPopover(h),\r\n      this.renderDetailsModal(h),\r\n      this.renderToolbar(h),\r\n      this.renderToolbarAfterSlot(),\r\n      this.renderVxeGrid(h),\r\n      this.renderPagination(h),\r\n    ])\r\n  },\r\n  beforeDestroy() {\r\n    this.$emit('beforeDestroy')\r\n  }\r\n}\r\n\r\n// 兼容 online 的规则\r\nconst fooPatterns = [\r\n  {title: '非空', value: '*', pattern: /^.+$/},\r\n  {title: '6到16位数字', value: 'n6-16', pattern: /^\\d{6,18}$/},\r\n  {title: '6到16位任意字符', value: '*6-16', pattern: /^.{6,16}$/},\r\n  {title: '6到18位字母', value: 's6-18', pattern: /^[a-z|A-Z]{6,18}$/},\r\n  {title: '网址', value: 'url', pattern: /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/},\r\n  {title: '电子邮件', value: 'e', pattern: /^([\\w]+\\.*)([\\w]+)@[\\w]+\\.\\w{3}(\\.\\w{2}|)$/},\r\n  {title: '手机号码', value: 'm', pattern: /^1[3456789]\\d{9}$/},\r\n  {title: '邮政编码', value: 'p', pattern: /^[1-9]\\d{5}$/},\r\n  {title: '字母', value: 's', pattern: /^[A-Z|a-z]+$/},\r\n  {title: '数字', value: 'n', pattern: /^-?\\d+(\\.?\\d+|\\d?)$/},\r\n  {title: '整数', value: 'z', pattern: /^-?\\d+$/},\r\n  {title: '金额', value: 'money', pattern: /^(([1-9][0-9]*)|([0]\\.\\d{0,2}|[1-9][0-9]*\\.\\d{0,2}))$/},\r\n]\r\n\r\n/** 旧版handler转为新版Validator */\r\nfunction handlerConvertToValidator(event) {\r\n  const {column, rule} = event\r\n  return new Promise((resolve, reject) => {\r\n    rule.handler(event, (flag, msg) => {\r\n      let message = rule.message\r\n      if (typeof msg === 'string') {\r\n        message = replaceProps(column.own, msg)\r\n      }\r\n      if (flag == null) {\r\n        resolve(message)\r\n      } else if (!!flag) {\r\n        resolve(message)\r\n      } else {\r\n        reject(new Error(message))\r\n      }\r\n    }, this, event)\r\n  })\r\n}\r\n\r\n/** 唯一校验器 */\r\nfunction uniqueValidator(event) {\r\n  const {cellValue, column, rule} = event\r\n  let tableData = this.getTableData()\r\n  let findCount = 0\r\n  for (let rowData of tableData) {\r\n    if (rowData[column.own.key] === cellValue) {\r\n      if (++findCount >= 2) {\r\n        return Promise.reject(new Error(rule.message))\r\n      }\r\n    }\r\n  }\r\n  return Promise.resolve()\r\n}"]}]}