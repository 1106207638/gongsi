{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\jeecg\\modules\\JEditableTable\\DefaultTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\jeecg\\modules\\JEditableTable\\DefaultTable.vue","mtime":1615948819013},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DefaultTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\r\n  <div>\r\n    <a-button @click=\"handleTableCheck\" type=\"primary\">表单验证</a-button>\r\n    <span style=\"padding-left:8px;\"></span>\r\n    <a-tooltip placement=\"top\" title=\"获取值，忽略表单验证\" :autoAdjustOverflow=\"true\">\r\n      <a-button @click=\"handleTableGet\" type=\"primary\">获取值</a-button>\r\n    </a-tooltip>\r\n    <span style=\"padding-left:8px;\"></span>\r\n    <a-tooltip placement=\"top\" title=\"模拟加载1000条数据\" :autoAdjustOverflow=\"true\">\r\n      <a-button @click=\"handleTableSet\" type=\"primary\">设置值</a-button>\r\n    </a-tooltip>\r\n\r\n\r\n    <j-editable-table\r\n      ref=\"editableTable\"\r\n      :loading=\"loading\"\r\n      :columns=\"columns\"\r\n      :dataSource=\"dataSource\"\r\n      :rowNumber=\"true\"\r\n      :rowSelection=\"true\"\r\n      :actionButton=\"true\"\r\n      :dragSort=\"true\"\r\n      style=\"margin-top: 8px;\"\r\n      @selectRowChange=\"handleSelectRowChange\">\r\n\r\n      <template v-slot:action=\"props\">\r\n        <a @click=\"handleDelete(props)\">删除</a>\r\n      </template>\r\n\r\n    </j-editable-table>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n  import moment from 'moment'\r\n  import { FormTypes } from '@/utils/JEditableTableUtil'\r\n  import { randomUUID, randomNumber } from '@/utils/util'\r\n  import JEditableTable from '@/components/jeecg/JEditableTable'\r\n\r\n  export default {\r\n    name: 'DefaultTable',\r\n    components: { JEditableTable },\r\n    data() {\r\n      return {\r\n        loading: false,\r\n        columns: [\r\n          {\r\n            title: '字段名称',\r\n            key: 'dbFieldName',\r\n            // width: '19%',\r\n            width: '300px',\r\n            type: FormTypes.input,\r\n            defaultValue: '',\r\n            placeholder: '请输入${title}',\r\n            validateRules: [\r\n              {\r\n                required: true, // 必填\r\n                message: '请输入${title}' // 显示的文本\r\n              },\r\n              {\r\n                pattern: /^[a-z|A-Z][a-z|A-Z\\d_-]{0,}$/, // 正则\r\n                message: '${title}必须以字母开头，可包含数字、下划线、横杠'\r\n              },\r\n              {\r\n                unique: true,\r\n                message: '${title}不能重复'\r\n              },\r\n              {\r\n                handler(type, value, row, column, callback, target) {\r\n                  // type 触发校验的类型（input、change、blur）\r\n                  // value 当前校验的值\r\n                  // callback(flag, message) 方法必须执行且只能执行一次\r\n                  //          flag = 是否通过了校验，不填写或者填写 null 代表不进行任何操作\r\n                  //          message = 提示的类型，默认使用配置的 message\r\n                  // target 行编辑的实例对象\r\n\r\n                  if (type === 'blur') {\r\n                    if (value === 'abc') {\r\n                      callback(false, '${title}不能是abc')  // false = 未通过校验\r\n                    } else {\r\n                      callback(true) // true = 通过验证\r\n                    }\r\n                  } else {\r\n                    callback(true) // 不填写或者填写 null 代表不进行任何操作\r\n                  }\r\n                },\r\n                message: '${title}默认提示'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: '文件域',\r\n            key: 'upload',\r\n            type: FormTypes.upload,\r\n            // width: '19%',\r\n            width: '300px',\r\n            placeholder: '点击上传',\r\n            token: true,\r\n            responseName: 'message',\r\n            action: window._CONFIG['domianURL'] + '/sys/common/upload'\r\n          },\r\n          {\r\n            title: '字段类型',\r\n            key: 'dbFieldType',\r\n            // width: '18%',\r\n            width: '300px',\r\n            type: FormTypes.select,\r\n            options: [ // 下拉选项\r\n              { title: 'String', value: 'string' },\r\n              { title: 'Integer', value: 'int' },\r\n              { title: 'Double', value: 'double' },\r\n              { title: 'Boolean', value: 'boolean' }\r\n            ],\r\n            allowInput: true,\r\n            defaultValue: '',\r\n            placeholder: '请选择${title}',\r\n            validateRules: [{ required: true, message: '请选择${title}' }]\r\n          },\r\n          {\r\n            title: '性别（字典）',\r\n            key: 'sex_dict',\r\n            width: '300px',\r\n            type: FormTypes.select,\r\n            options: [],\r\n            dictCode: 'sex',\r\n            placeholder: '请选择${title}',\r\n            validateRules: [{ required: true, message: '请选择${title}' }]\r\n          },\r\n          {\r\n            title: '多选测试',\r\n            key: 'multipleSelect',\r\n            // width: '18%',\r\n            width: '300px',\r\n            type: FormTypes.select,\r\n            props: { 'mode': 'multiple' }, // 支持多选\r\n            options: [\r\n              { title: 'String', value: 'string' },\r\n              { title: 'Integer', value: 'int' },\r\n              { title: 'Double', value: 'double' },\r\n              { title: 'Boolean', value: 'boolean' }\r\n            ],\r\n            defaultValue: ['int', 'boolean'], // 多个默认项\r\n            // defaultValue: 'string,double,int', // 也可使用这种方式\r\n            placeholder: '这里可以多选',\r\n            validateRules: [{ required: true, message: '请选择${title}' }]\r\n          },\r\n          {\r\n            title: '字段长度',\r\n            key: 'dbLength',\r\n            // width: '8%',\r\n            width: '100px',\r\n            type: FormTypes.inputNumber,\r\n            defaultValue: 32,\r\n            placeholder: '${title}',\r\n            // 是否是统计列，只有 inputNumber 才能设置统计列\r\n            statistics: true,\r\n            validateRules: [{ required: true, message: '请输入${title}' }]\r\n          },\r\n          {\r\n            title: '日期',\r\n            key: 'datetime',\r\n            // width: '22%',\r\n            width: '320px',\r\n            type: FormTypes.datetime,\r\n            defaultValue: '2019-4-30 14:52:22',\r\n            placeholder: '请选择${title}',\r\n            validateRules: [{ required: true, message: '请选择${title}' }]\r\n          },\r\n          {\r\n            title: '数字',\r\n            key: 'money',\r\n            width: '320px',\r\n            type: FormTypes.inputNumber,\r\n            defaultValue: '100.32',\r\n            placeholder: '请选择${title}',\r\n            validateRules: [{ required: true, message: '请选择${title}' }]\r\n          },\r\n          {\r\n            title: '可以为空',\r\n            key: 'isNull',\r\n            // width: '8%',\r\n            width: '100px',\r\n            type: FormTypes.checkbox,\r\n            customValue: ['Y', 'N'], // true ,false\r\n            defaultChecked: false\r\n          },\r\n          {\r\n            type: FormTypes.popup,\r\n            key: 'popup',\r\n            title: 'JPopup',\r\n            width: '180px',\r\n            popupCode: 'demo',\r\n            field: 'name',\r\n            orgFields: 'name',\r\n            destFields: 'name'\r\n          },\r\n          {\r\n            title: '操作',\r\n            key: 'action',\r\n            // width: '8%',\r\n            width: '100px',\r\n            type: FormTypes.slot,\r\n            slotName: 'action',\r\n          }\r\n\r\n        ],\r\n        dataSource: [],\r\n        selectedRowIds: []\r\n      }\r\n    },\r\n    mounted() {\r\n      this.randomData(23, false)\r\n    },\r\n    methods: {\r\n\r\n      /** 表单验证 */\r\n      handleTableCheck() {\r\n        this.$refs.editableTable.getValues((error) => {\r\n          if (error === 0) {\r\n            this.$message.success('验证通过')\r\n          } else {\r\n            this.$message.error('验证未通过')\r\n          }\r\n        })\r\n      },\r\n      /** 获取值，忽略表单验证 */\r\n      handleTableGet() {\r\n        this.$refs.editableTable.getValues((error, values) => {\r\n          console.log('values:', values)\r\n        }, false)\r\n        console.log('deleteIds:', this.$refs.editableTable.getDeleteIds())\r\n\r\n        this.$message.info('获取值成功，请看控制台输出')\r\n\r\n      },\r\n      /** 模拟加载1000条数据 */\r\n      handleTableSet() {\r\n        this.randomData(1000, true)\r\n      },\r\n\r\n      handleSelectRowChange(selectedRowIds) {\r\n        this.selectedRowIds = selectedRowIds\r\n      },\r\n\r\n      /* 随机生成数据 */\r\n      randomData(size, loading = false) {\r\n        if (loading) {\r\n          this.loading = true\r\n        }\r\n\r\n        let randomDatetime = () => {\r\n          let time = parseInt(randomNumber(1000, 9999999999999))\r\n          return moment(new Date(time)).format('YYYY-MM-DD HH:mm:ss')\r\n        }\r\n\r\n        let begin = Date.now()\r\n        let values = []\r\n        for (let i = 0; i < size; i++) {\r\n          values.push({\r\n            id: randomUUID(),\r\n            dbFieldName: `name_${i + 1}`,\r\n            // dbFieldTxt: randomString(10),\r\n            multipleSelect: ['string', ['int', 'double', 'boolean'][randomNumber(0, 2)]],\r\n            dbFieldType: ['string', 'int', 'double', 'boolean'][randomNumber(0, 3)],\r\n            dbLength: randomNumber(0, 233),\r\n            datetime: randomDatetime(),\r\n            isNull: ['Y', 'N'][randomNumber(0, 1)]\r\n          })\r\n        }\r\n\r\n        this.dataSource = values\r\n        let end = Date.now()\r\n        let diff = end - begin\r\n\r\n        if (loading && diff < size) {\r\n          setTimeout(() => {\r\n            this.loading = false\r\n          }, size - diff)\r\n        }\r\n\r\n      },\r\n\r\n      handleDelete(props) {\r\n        let { rowId, target } = props\r\n        target.removeRows(rowId)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/jeecg/modules/JEditableTable"}]}