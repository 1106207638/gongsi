{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\modules\\monitor\\TomcatInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\modules\\monitor\\TomcatInfo.vue","mtime":1615948820457},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICdAL2FwaS9tYW5hZ2UnOwptb21lbnQubG9jYWxlKCd6aC1jbicpOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpbWU6ICcnLAogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICB0YWJsZUxvYWRpbmc6IHRydWUsCiAgICAgIGNvbHVtbnM6IFt7CiAgICAgICAgdGl0bGU6ICflj4LmlbAnLAogICAgICAgIHdpZHRoOiAnMzAlJywKICAgICAgICBkYXRhSW5kZXg6ICdwYXJhbScsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsKICAgICAgICAgIGN1c3RvbVJlbmRlcjogJ3BhcmFtJwogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIHRpdGxlOiAn5o+P6L+wJywKICAgICAgICB3aWR0aDogJzQwJScsCiAgICAgICAgZGF0YUluZGV4OiAndGV4dCcsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsKICAgICAgICAgIGN1c3RvbVJlbmRlcjogJ3RleHQnCiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICflvZPliY3lgLwnLAogICAgICAgIHdpZHRoOiAnMzAlJywKICAgICAgICBkYXRhSW5kZXg6ICd2YWx1ZScsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsKICAgICAgICAgIGN1c3RvbVJlbmRlcjogJ3ZhbHVlJwogICAgICAgIH0KICAgICAgfV0sCiAgICAgIGRhdGFTb3VyY2U6IFtdLAogICAgICAvLyDliJfooajpgJrov4cgdGV4dEluZm8g5riy5p+T5Ye66aKc6Imy44CB5o+P6L+w5ZKM5Y2V5L2NCiAgICAgIHRleHRJbmZvOiB7CiAgICAgICAgJ3RvbWNhdC5zZXNzaW9ucy5jcmVhdGVkJzogewogICAgICAgICAgY29sb3I6ICdncmVlbicsCiAgICAgICAgICB0ZXh0OiAndG9tY2F0IOW3suWIm+W7uiBzZXNzaW9uIOaVsCcsCiAgICAgICAgICB1bml0OiAn5LiqJwogICAgICAgIH0sCiAgICAgICAgJ3RvbWNhdC5zZXNzaW9ucy5leHBpcmVkJzogewogICAgICAgICAgY29sb3I6ICdncmVlbicsCiAgICAgICAgICB0ZXh0OiAndG9tY2F0IOW3sui/h+acnyBzZXNzaW9uIOaVsCcsCiAgICAgICAgICB1bml0OiAn5LiqJwogICAgICAgIH0sCiAgICAgICAgJ3RvbWNhdC5zZXNzaW9ucy5hY3RpdmUuY3VycmVudCc6IHsKICAgICAgICAgIGNvbG9yOiAnZ3JlZW4nLAogICAgICAgICAgdGV4dDogJ3RvbWNhdCDlvZPliY3mtLvot4Mgc2Vzc2lvbiDmlbAnLAogICAgICAgICAgdW5pdDogJ+S4qicKICAgICAgICB9LAogICAgICAgICd0b21jYXQuc2Vzc2lvbnMuYWN0aXZlLm1heCc6IHsKICAgICAgICAgIGNvbG9yOiAnZ3JlZW4nLAogICAgICAgICAgdGV4dDogJ3RvbWNhdCDmtLvot4Mgc2Vzc2lvbiDmlbDls7DlgLwnLAogICAgICAgICAgdW5pdDogJ+S4qicKICAgICAgICB9LAogICAgICAgICd0b21jYXQuc2Vzc2lvbnMucmVqZWN0ZWQnOiB7CiAgICAgICAgICBjb2xvcjogJ2dyZWVuJywKICAgICAgICAgIHRleHQ6ICfotoXov4dzZXNzaW9uIOacgOWkp+mFjee9ruWQju+8jOaLkue7neeahCBzZXNzaW9uIOS4quaVsCcsCiAgICAgICAgICB1bml0OiAn5LiqJwogICAgICAgIH0sCiAgICAgICAgJ3RvbWNhdC5nbG9iYWwuc2VudCc6IHsKICAgICAgICAgIGNvbG9yOiAncHVycGxlJywKICAgICAgICAgIHRleHQ6ICflj5HpgIHnmoTlrZfoioLmlbAnLAogICAgICAgICAgdW5pdDogJ2J5dGVzJwogICAgICAgIH0sCiAgICAgICAgJ3RvbWNhdC5nbG9iYWwucmVxdWVzdC5tYXgnOiB7CiAgICAgICAgICBjb2xvcjogJ3B1cnBsZScsCiAgICAgICAgICB0ZXh0OiAncmVxdWVzdCDor7fmsYLmnIDplb/ogJfml7YnLAogICAgICAgICAgdW5pdDogJ+enkicKICAgICAgICB9LAogICAgICAgICd0b21jYXQuZ2xvYmFsLnJlcXVlc3QuY291bnQnOiB7CiAgICAgICAgICBjb2xvcjogJ3B1cnBsZScsCiAgICAgICAgICB0ZXh0OiAn5YWo5bGAIHJlcXVlc3Qg6K+35rGC5qyh5pWwJywKICAgICAgICAgIHVuaXQ6ICfmrKEnCiAgICAgICAgfSwKICAgICAgICAndG9tY2F0Lmdsb2JhbC5yZXF1ZXN0LnRvdGFsVGltZSc6IHsKICAgICAgICAgIGNvbG9yOiAncHVycGxlJywKICAgICAgICAgIHRleHQ6ICflhajlsYAgcmVxdWVzdCDor7fmsYLmgLvogJfml7YnLAogICAgICAgICAgdW5pdDogJ+enkicKICAgICAgICB9LAogICAgICAgICd0b21jYXQuc2VydmxldC5yZXF1ZXN0Lm1heCc6IHsKICAgICAgICAgIGNvbG9yOiAnY3lhbicsCiAgICAgICAgICB0ZXh0OiAnc2VydmxldCDor7fmsYLmnIDplb/ogJfml7YnLAogICAgICAgICAgdW5pdDogJ+enkicKICAgICAgICB9LAogICAgICAgICd0b21jYXQuc2VydmxldC5yZXF1ZXN0LmNvdW50JzogewogICAgICAgICAgY29sb3I6ICdjeWFuJywKICAgICAgICAgIHRleHQ6ICdzZXJ2bGV0IOaAu+ivt+axguasoeaVsCcsCiAgICAgICAgICB1bml0OiAn5qyhJwogICAgICAgIH0sCiAgICAgICAgJ3RvbWNhdC5zZXJ2bGV0LnJlcXVlc3QudG90YWxUaW1lJzogewogICAgICAgICAgY29sb3I6ICdjeWFuJywKICAgICAgICAgIHRleHQ6ICdzZXJ2bGV0IOivt+axguaAu+iAl+aXticsCiAgICAgICAgICB1bml0OiAn56eSJwogICAgICAgIH0sCiAgICAgICAgJ3RvbWNhdC50aHJlYWRzLmN1cnJlbnQnOiB7CiAgICAgICAgICBjb2xvcjogJ3BpbmsnLAogICAgICAgICAgdGV4dDogJ3RvbWNhdCDlvZPliY3nur/nqIvmlbDvvIjljIXmi6zlrojmiqTnur/nqIvvvIknLAogICAgICAgICAgdW5pdDogJ+S4qicKICAgICAgICB9LAogICAgICAgICd0b21jYXQudGhyZWFkcy5jb25maWcubWF4JzogewogICAgICAgICAgY29sb3I6ICdwaW5rJywKICAgICAgICAgIHRleHQ6ICd0b21jYXQg6YWN572u55qE57q/56iL5pyA5aSn5pWwJywKICAgICAgICAgIHVuaXQ6ICfkuKonCiAgICAgICAgfQogICAgICB9LAogICAgICAvLyDlvZPkuIDmnaHorrDlvZXkuK3pnIDopoHlj5blh7rlpJrmnaHmlbDmja7nmoTml7blgJnpnIDopoHphY3nva7or6XlrZfmrrUKICAgICAgbW9yZUluZm86IHsKICAgICAgICAndG9tY2F0Lmdsb2JhbC5yZXF1ZXN0JzogWycuY291bnQnLCAnLnRvdGFsVGltZSddLAogICAgICAgICd0b21jYXQuc2VydmxldC5yZXF1ZXN0JzogWycuY291bnQnLCAnLnRvdGFsVGltZSddCiAgICAgIH0KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5sb2FkVG9tY2F0SW5mbygpOwogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlQ2xpY2tVcGRhdGU6IGZ1bmN0aW9uIGhhbmRsZUNsaWNrVXBkYXRlKCkgewogICAgICB0aGlzLmxvYWRUb21jYXRJbmZvKCk7CiAgICB9LAogICAgbG9hZFRvbWNhdEluZm86IGZ1bmN0aW9uIGxvYWRUb21jYXRJbmZvKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy50YWJsZUxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLnRpbWUgPSBtb21lbnQoKS5mb3JtYXQoJ1lZWVnlubRNTeaciERE5pelIEhI5pe2bW3liIZzc+enkicpOwogICAgICBQcm9taXNlLmFsbChbZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL3RvbWNhdC5zZXNzaW9ucy5jcmVhdGVkJyksIGdldEFjdGlvbignYWN0dWF0b3IvbWV0cmljcy90b21jYXQuc2Vzc2lvbnMuZXhwaXJlZCcpLCBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvdG9tY2F0LnNlc3Npb25zLmFjdGl2ZS5jdXJyZW50JyksIGdldEFjdGlvbignYWN0dWF0b3IvbWV0cmljcy90b21jYXQuc2Vzc2lvbnMuYWN0aXZlLm1heCcpLCBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvdG9tY2F0LnNlc3Npb25zLnJlamVjdGVkJykgLy8gMi4zLjUuUkVMRUFTRSDml6DmraRBUEkKICAgICAgLy8gZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL3RvbWNhdC5nbG9iYWwuc2VudCcpLAogICAgICAvLyBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvdG9tY2F0Lmdsb2JhbC5yZXF1ZXN0Lm1heCcpLAogICAgICAvLyBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvdG9tY2F0Lmdsb2JhbC5yZXF1ZXN0JyksCiAgICAgIC8vIGdldEFjdGlvbignYWN0dWF0b3IvbWV0cmljcy90b21jYXQudGhyZWFkcy5jdXJyZW50JyksCiAgICAgIC8vIGdldEFjdGlvbignYWN0dWF0b3IvbWV0cmljcy90b21jYXQudGhyZWFkcy5jb25maWcubWF4JykKICAgICAgLy8gMi4xLjMuUkVMRUFTRSDml6DmraRBUEkKICAgICAgLy9nZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvdG9tY2F0LnNlcnZsZXQucmVxdWVzdCcpLAogICAgICAvLyBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvdG9tY2F0LnNlcnZsZXQucmVxdWVzdC5tYXgnKSwKICAgICAgXSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIHRvbWNhdEluZm8gPSBbXTsKICAgICAgICByZXMuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUsIGlkKSB7CiAgICAgICAgICB2YXIgbW9yZSA9IF90aGlzLm1vcmVJbmZvW3ZhbHVlLm5hbWVdOwoKICAgICAgICAgIGlmICghKG1vcmUgaW5zdGFuY2VvZiBBcnJheSkpIHsKICAgICAgICAgICAgbW9yZSA9IFsnJ107CiAgICAgICAgICB9CgogICAgICAgICAgbW9yZS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpZHgpIHsKICAgICAgICAgICAgdmFyIHBhcmFtID0gdmFsdWUubmFtZSArIGl0ZW07CiAgICAgICAgICAgIHRvbWNhdEluZm8ucHVzaCh7CiAgICAgICAgICAgICAgaWQ6IHBhcmFtICsgaWQsCiAgICAgICAgICAgICAgcGFyYW06IHBhcmFtLAogICAgICAgICAgICAgIHRleHQ6ICdmYWxzZSB2YWx1ZScsCiAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlLm1lYXN1cmVtZW50c1tpZHhdLnZhbHVlCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgICAgX3RoaXMuZGF0YVNvdXJjZSA9IHRvbWNhdEluZm87CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlKTsKCiAgICAgICAgX3RoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPllRvbWNhdOS/oeaBr+Wksei0pScpOwogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgX3RoaXMudGFibGVMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["TomcatInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-skeleton active :loading=\"loading\" :paragraph=\"{rows: 17}\">\r\n    <a-card :bordered=\"false\">\r\n\r\n      <a-alert type=\"info\" :showIcon=\"true\">\r\n        <div slot=\"message\">\r\n          上次更新时间：{{ this.time }}\r\n          <a-divider type=\"vertical\"/>\r\n          <a @click=\"handleClickUpdate\">立即更新</a>\r\n        </div>\r\n      </a-alert>\r\n\r\n      <a-table\r\n        rowKey=\"id\"\r\n        size=\"middle\"\r\n        :columns=\"columns\"\r\n        :dataSource=\"dataSource\"\r\n        :pagination=\"false\"\r\n        :loading=\"tableLoading\"\r\n        style=\"margin-top: 20px;\">\r\n\r\n        <template slot=\"param\" slot-scope=\"text, record\">\r\n          <a-tag :color=\"textInfo[record.param].color\">{{ text }}</a-tag>\r\n        </template>\r\n\r\n        <template slot=\"text\" slot-scope=\"text, record\">\r\n          {{ textInfo[record.param].text }}\r\n        </template>\r\n\r\n        <template slot=\"value\" slot-scope=\"text, record\">\r\n          {{ text }} {{ textInfo[record.param].unit }}\r\n        </template>\r\n\r\n      </a-table>\r\n\r\n    </a-card>\r\n  </a-skeleton>\r\n</template>\r\n<script>\r\n  import moment from 'moment'\r\n  import { getAction } from '@/api/manage'\r\n\r\n  moment.locale('zh-cn')\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        time: '',\r\n        loading: true,\r\n        tableLoading: true,\r\n        columns: [{\r\n          title: '参数',\r\n          width: '30%',\r\n          dataIndex: 'param',\r\n          scopedSlots: { customRender: 'param' }\r\n        }, {\r\n          title: '描述',\r\n          width: '40%',\r\n          dataIndex: 'text',\r\n          scopedSlots: { customRender: 'text' }\r\n        }, {\r\n          title: '当前值',\r\n          width: '30%',\r\n          dataIndex: 'value',\r\n          scopedSlots: { customRender: 'value' }\r\n        }],\r\n        dataSource: [],\r\n        // 列表通过 textInfo 渲染出颜色、描述和单位\r\n        textInfo: {\r\n          'tomcat.sessions.created': { color: 'green', text: 'tomcat 已创建 session 数', unit: '个' },\r\n          'tomcat.sessions.expired': { color: 'green', text: 'tomcat 已过期 session 数', unit: '个' },\r\n          'tomcat.sessions.active.current': { color: 'green', text: 'tomcat 当前活跃 session 数', unit: '个' },\r\n          'tomcat.sessions.active.max': { color: 'green', text: 'tomcat 活跃 session 数峰值', unit: '个' },\r\n          'tomcat.sessions.rejected': { color: 'green', text: '超过session 最大配置后，拒绝的 session 个数', unit: '个' },\r\n\r\n          'tomcat.global.sent': { color: 'purple', text: '发送的字节数', unit: 'bytes' },\r\n          'tomcat.global.request.max': { color: 'purple', text: 'request 请求最长耗时', unit: '秒' },\r\n          'tomcat.global.request.count': { color: 'purple', text: '全局 request 请求次数', unit: '次' },\r\n          'tomcat.global.request.totalTime': { color: 'purple', text: '全局 request 请求总耗时', unit: '秒' },\r\n\r\n          'tomcat.servlet.request.max': { color: 'cyan', text: 'servlet 请求最长耗时', unit: '秒' },\r\n          'tomcat.servlet.request.count': { color: 'cyan', text: 'servlet 总请求次数', unit: '次' },\r\n          'tomcat.servlet.request.totalTime': { color: 'cyan', text: 'servlet 请求总耗时', unit: '秒' },\r\n\r\n          'tomcat.threads.current': { color: 'pink', text: 'tomcat 当前线程数（包括守护线程）', unit: '个' },\r\n          'tomcat.threads.config.max': { color: 'pink', text: 'tomcat 配置的线程最大数', unit: '个' }\r\n        },\r\n        // 当一条记录中需要取出多条数据的时候需要配置该字段\r\n        moreInfo: {\r\n          'tomcat.global.request': ['.count', '.totalTime'],\r\n          'tomcat.servlet.request': ['.count', '.totalTime']\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.loadTomcatInfo()\r\n    },\r\n    methods: {\r\n\r\n      handleClickUpdate() {\r\n        this.loadTomcatInfo()\r\n      },\r\n\r\n      loadTomcatInfo() {\r\n        this.tableLoading = true\r\n        this.time = moment().format('YYYY年MM月DD日 HH时mm分ss秒')\r\n        Promise.all([\r\n          getAction('actuator/metrics/tomcat.sessions.created'),\r\n          getAction('actuator/metrics/tomcat.sessions.expired'),\r\n          getAction('actuator/metrics/tomcat.sessions.active.current'),\r\n          getAction('actuator/metrics/tomcat.sessions.active.max'),\r\n          getAction('actuator/metrics/tomcat.sessions.rejected'),\r\n          // 2.3.5.RELEASE 无此API\r\n          // getAction('actuator/metrics/tomcat.global.sent'),\r\n          // getAction('actuator/metrics/tomcat.global.request.max'),\r\n          // getAction('actuator/metrics/tomcat.global.request'),\r\n          // getAction('actuator/metrics/tomcat.threads.current'),\r\n          // getAction('actuator/metrics/tomcat.threads.config.max')\r\n          // 2.1.3.RELEASE 无此API\r\n          //getAction('actuator/metrics/tomcat.servlet.request'),\r\n          // getAction('actuator/metrics/tomcat.servlet.request.max'),\r\n        ]).then((res) => {\r\n          let tomcatInfo = []\r\n          res.forEach((value, id) => {\r\n            let more = this.moreInfo[value.name]\r\n            if (!(more instanceof Array)) {\r\n              more = ['']\r\n            }\r\n            more.forEach((item, idx) => {\r\n              let param = value.name + item\r\n              tomcatInfo.push({\r\n                id: param + id, param,\r\n                text: 'false value',\r\n                value: value.measurements[idx].value\r\n              })\r\n            })\r\n          })\r\n          this.dataSource = tomcatInfo\r\n        }).catch((e) => {\r\n          console.error(e)\r\n          this.$message.error('获取Tomcat信息失败')\r\n        }).finally(() => {\r\n          this.loading = false\r\n          this.tableLoading = false\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style></style>\r\n"],"sourceRoot":"src/views/modules/monitor"}]}