{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\jeecg\\JTreeDict.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\JTreeDict.vue","mtime":1615948815749},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["JTreeDict.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-tree-select\r\n    allowClear\r\n    labelInValue\r\n    style=\"width: 100%\"\r\n    :disabled=\"disabled\"\r\n    :dropdownStyle=\"{ maxHeight: '400px', overflow: 'auto' }\"\r\n    :placeholder=\"placeholder\"\r\n    :loadData=\"asyncLoadTreeData\"\r\n    :value=\"treeValue\"\r\n    :treeData=\"treeData\"\r\n    @change=\"onChange\"\r\n    @search=\"onSearch\">\r\n  </a-tree-select>\r\n</template>\r\n\r\n<script>\r\n  import { getAction } from '@/api/manage'\r\n\r\n  export default {\r\n    name: 'JTreeDict',\r\n    data(){\r\n      return {\r\n        treeData:[],\r\n        treeValue: null,\r\n        url_root:\"/sys/category/loadTreeRoot\",\r\n        url_children:\"/sys/category/loadTreeChildren\",\r\n        url_view:'/sys/category/loadOne',\r\n      }\r\n    },\r\n    props:{\r\n      value:{\r\n        type: String,\r\n        required: false\r\n      },\r\n      placeholder:{\r\n        type: String,\r\n        default: '请选择',\r\n        required: false\r\n      },\r\n      parentCode:{\r\n        type: String,\r\n        default: '',\r\n        required: false\r\n      },\r\n      field:{\r\n        type: String,\r\n        default: 'id',\r\n        required: false\r\n      },\r\n      root:{\r\n        type:Object,\r\n        required:false,\r\n        default:()=>{\r\n          return {\r\n            pid:'0'\r\n          }\r\n        }\r\n      },\r\n      async:{\r\n        type:Boolean,\r\n        default:false,\r\n        required:false\r\n      },\r\n      disabled:{\r\n        type:Boolean,\r\n        default:false,\r\n        required:false\r\n      }\r\n    },\r\n    watch:{\r\n      root:{\r\n        handler(val){\r\n          console.log(\"root-change\",val)\r\n        },\r\n        deep:true\r\n      },\r\n      parentCode:{\r\n        handler(){\r\n          this.loadRoot()\r\n        }\r\n      },\r\n      value:{\r\n        handler(){\r\n          this.loadViewInfo()\r\n        }\r\n      }\r\n    },\r\n    created(){\r\n      this.loadRoot()\r\n      this.loadViewInfo()\r\n    },\r\n    model: {\r\n      prop: 'value',\r\n      event: 'change'\r\n    },\r\n    methods:{\r\n      loadViewInfo(){\r\n        if(!this.value || this.value==\"0\"){\r\n          this.treeValue = null\r\n        }else{\r\n          let param = {\r\n            field:this.field,\r\n            val:this.value\r\n          }\r\n          getAction(this.url_view,param).then(res=>{\r\n            if(res.success){\r\n              this.treeValue = {\r\n                value:this.value,\r\n                label:res.result.name\r\n              }\r\n            }\r\n          })\r\n        }\r\n      },\r\n      loadRoot(){\r\n        let param = {\r\n          async:this.async,\r\n          pcode:this.parentCode\r\n        }\r\n        getAction(this.url_root,param).then(res=>{\r\n          if(res.success){\r\n            this.handleTreeNodeValue(res.result)\r\n            this.treeData = [...res.result]\r\n          }else{\r\n            this.$message.error(res.message)\r\n          }\r\n        })\r\n      },\r\n      asyncLoadTreeData (treeNode) {\r\n        return new Promise((resolve) => {\r\n          if(!this.async){\r\n            resolve()\r\n            return\r\n          }\r\n          if (treeNode.$vnode.children) {\r\n            resolve()\r\n            return\r\n          }\r\n          let pid = treeNode.$vnode.key\r\n          let param = {\r\n            pid:pid\r\n          }\r\n          getAction(this.url_children,param).then(res=>{\r\n            if(res.success){\r\n              this.handleTreeNodeValue(res.result)\r\n              this.addChildren(pid,res.result,this.treeData)\r\n              this.treeData = [...this.treeData]\r\n            }\r\n            resolve()\r\n          })\r\n        })\r\n      },\r\n      addChildren(pid,children,treeArray){\r\n        if(treeArray && treeArray.length>0){\r\n          for(let item of treeArray){\r\n            if(item.key == pid){\r\n              if(!children || children.length==0){\r\n                item.leaf = true\r\n              }else{\r\n                item.children = children\r\n              }\r\n              break\r\n            }else{\r\n              this.addChildren(pid,children,item.children)\r\n            }\r\n          }\r\n        }\r\n      },\r\n      handleTreeNodeValue(result){\r\n        let storeField = this.field=='code'?'code':'key'\r\n        for(let i of result){\r\n          i.value = i[storeField]\r\n          i.isLeaf = (!i.leaf)?false:true\r\n          if(i.children && i.children.length>0){\r\n            this.handleTreeNodeValue(i.children)\r\n          }\r\n        }\r\n      },\r\n      onChange(value){\r\n        console.log(value)\r\n        if(!value){\r\n          this.$emit('change', '');\r\n        }else{\r\n          this.$emit('change', value.value);\r\n        }\r\n        this.treeValue = value\r\n      },\r\n      onSearch(value){\r\n        console.log(value)\r\n      },\r\n      getCurrTreeData(){\r\n        return this.treeData\r\n      }\r\n    }\r\n\r\n  }\r\n</script>"],"sourceRoot":"src/components/jeecg"}]}