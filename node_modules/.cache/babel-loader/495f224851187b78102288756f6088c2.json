{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeSelectCell.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeSelectCell.vue","mtime":1615948814724},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["JVxeSelectCell.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-select\r\n    ref=\"select\"\r\n    :value=\"innerValue\"\r\n    allowClear\r\n    :filterOption=\"handleSelectFilterOption\"\r\n    v-bind=\"selectProps\"\r\n    style=\"width: 100%;\"\r\n    @blur=\"handleBlur\"\r\n    @change=\"handleChangeCommon\"\r\n    @search=\"handleSearchSelect\"\r\n  >\r\n\r\n    <template v-for=\"option of originColumn.options\">\r\n      <a-select-option :key=\"option.value\" :value=\"option.value\" :disabled=\"option.disabled\">\r\n        <span>{{option.text || option.label || option.title|| option.value}}</span>\r\n      </a-select-option>\r\n    </template>\r\n\r\n  </a-select>\r\n</template>\r\n\r\n<script>\r\n  import JVxeCellMixins, { dispatchEvent } from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\r\n  import { JVXETypes } from '@comp/jeecg/JVxeTable/index'\r\n\r\n  export default {\r\n    name: 'JVxeSelectCell',\r\n    mixins: [JVxeCellMixins],\r\n    computed: {\r\n      selectProps() {\r\n        let props = {...this.cellProps}\r\n        // 判断select是否允许输入\r\n        let {allowSearch, allowInput} = this.originColumn\r\n        if (allowInput === true || allowSearch === true) {\r\n          props['showSearch'] = true\r\n        }\r\n        return props\r\n      },\r\n    },\r\n    created() {\r\n      let multiple = [JVXETypes.selectMultiple, JVXETypes.list_multi]\r\n      let search = [JVXETypes.selectSearch, JVXETypes.sel_search]\r\n      if (multiple.includes(this.$type)) {\r\n        // 处理多选\r\n        let props = this.originColumn.props || {}\r\n        props['mode'] = 'multiple'\r\n        props['maxTagCount'] = 1\r\n        this.$set(this.originColumn, 'props', props)\r\n      } else if (search.includes(this.$type)) {\r\n        // 处理搜索\r\n        this.$set(this.originColumn, 'allowSearch', true)\r\n      }\r\n    },\r\n    methods: {\r\n\r\n      /** 处理blur失去焦点事件 */\r\n      handleBlur(value) {\r\n        let {allowInput, options} = this.originColumn\r\n\r\n        if (allowInput === true) {\r\n          // 删除无用的因搜索（用户输入）而创建的项\r\n          if (typeof value === 'string') {\r\n            let indexes = []\r\n            options.forEach((option, index) => {\r\n              if (option.value.toLocaleString() === value.toLocaleString()) {\r\n                delete option.searchAdd\r\n              } else if (option.searchAdd === true) {\r\n                indexes.push(index)\r\n              }\r\n            })\r\n            // 翻转删除数组中的项\r\n            for (let index of indexes.reverse()) {\r\n              options.splice(index, 1)\r\n            }\r\n          }\r\n        }\r\n\r\n        this.handleBlurCommon(value)\r\n      },\r\n\r\n      /** 用于搜索下拉框中的内容 */\r\n      handleSelectFilterOption(input, option) {\r\n        let {allowSearch, allowInput} = this.originColumn\r\n        if (allowSearch === true || allowInput === true) {\r\n          //update-begin-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\r\n          return option.componentOptions.children[0].children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          //update-end-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\r\n        }\r\n        return true\r\n      },\r\n\r\n      /** select 搜索时的事件，用于动态添加options */\r\n      handleSearchSelect(value) {\r\n        let {allowSearch, allowInput, options} = this.originColumn\r\n\r\n        if (allowSearch !== true && allowInput === true) {\r\n          // 是否找到了对应的项，找不到则添加这一项\r\n          let flag = false\r\n          for (let option of options) {\r\n            if (option.value.toLocaleString() === value.toLocaleString()) {\r\n              flag = true\r\n              break\r\n            }\r\n          }\r\n          // !!value ：不添加空值\r\n          if (!flag && !!value) {\r\n            // searchAdd 是否是通过搜索添加的\r\n            options.push({title: value, value: value, searchAdd: true})\r\n          }\r\n\r\n        }\r\n      },\r\n\r\n    },\r\n    // 【组件增强】注释详见：JVxeCellMixins.js\r\n    enhanced: {\r\n      aopEvents: {\r\n        editActived: event => dispatchEvent(event, 'ant-select'),\r\n      },\r\n      translate: {enabled: true},\r\n      getValue(value) {\r\n        if (Array.isArray(value)) {\r\n          return value.join(',')\r\n        } else {\r\n          return value\r\n        }\r\n      },\r\n      setValue(value) {\r\n        let {column: {own: col}, params: {$table}} = this\r\n        // 判断是否是多选\r\n        if ((col.props || {})['mode'] === 'multiple') {\r\n          $table.$set(col.props, 'maxTagCount', 1)\r\n        }\r\n        if (value != null && value !== '') {\r\n          if (typeof value === 'string') {\r\n            return value === '' ? [] : value.split(',')\r\n          }\r\n          return value\r\n        } else {\r\n          return undefined\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components/jeecg/JVxeTable/components/cells"}]}