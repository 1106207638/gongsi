{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\src\\components\\jeecg\\dynamic\\cm_sql_hint.js","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\dynamic\\cm_sql_hint.js","mtime":1615948814841},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/vue/src/components/jeecg/dynamic/cm_sql_hint.js"],"names":["mod","CodeMirror","tables","defaultTable","keywords","identifierQuote","CONS","QUERY_DIV","ALIAS_KEYWORD","Pos","cmpPos","isArray","val","Object","prototype","toString","call","getKeywords","editor","mode","doc","modeOption","resolveMode","getIdentifierQuote","getText","item","text","wrapTable","name","value","columns","parseTables","input","result","i","length","toUpperCase","getTable","shallowClone","object","key","hasOwnProperty","match","string","word","len","sub","substr","addMatches","search","wordlist","formatter","push","displayText","cleanName","charAt","nameParts","split","replace","RegExp","join","insertIdentifierQuotes","escaped","nameCompletion","cur","token","useIdentifierQuotes","start","cont","unshift","getTokenAt","line","w","pop","table","alias","aliasTable","oldTable","findTableByAlias","tableInsert","eachWord","lineText","f","words","fullQuery","getValue","aliasUpperCase","previousWord","separator","validRange","end","lastLine","getLineHandle","indexOfSeparator","indexOf","posFromIndex","prevItem","current","getCursor","query","getRange","wordUpperCase","registerHelper","options","defaultTableName","disableKeywords","ch","slice","objectOrClass","className","list","from","to"],"mappings":";;AAAA;AACA;AAEA,CAAC,UAASA,GAAT,EAAc;AACb;;;;;AAKE;AACAA,EAAAA,GAAG,CAACC,UAAD,CAAH;AACH,CARD,EAQG,UAASA,UAAT,EAAqB;AACtB;;AAEA,MAAIC,MAAJ;AACA,MAAIC,YAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,eAAJ;AACA,MAAIC,IAAI,GAAG;AACTC,IAAAA,SAAS,EAAE,GADF;AAETC,IAAAA,aAAa,EAAE;AAFN,GAAX;AAIA,MAAIC,GAAG,GAAGR,UAAU,CAACQ,GAArB;AAAA,MAA0BC,MAAM,GAAGT,UAAU,CAACS,MAA9C;;AAEA,WAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,WAAOC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,GAA/B,KAAuC,gBAA9C;AAAgE;;AAExF,WAASK,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,QAAIC,IAAI,GAAGD,MAAM,CAACE,GAAP,CAAWC,UAAtB;AACA,QAAIF,IAAI,KAAK,KAAb,EAAoBA,IAAI,GAAG,YAAP;AACpB,WAAOlB,UAAU,CAACqB,WAAX,CAAuBH,IAAvB,EAA6Bf,QAApC;AACD;;AAED,WAASmB,kBAAT,CAA4BL,MAA5B,EAAoC;AAClC,QAAIC,IAAI,GAAGD,MAAM,CAACE,GAAP,CAAWC,UAAtB;AACA,QAAIF,IAAI,KAAK,KAAb,EAAoBA,IAAI,GAAG,YAAP;AACpB,WAAOlB,UAAU,CAACqB,WAAX,CAAuBH,IAAvB,EAA6Bd,eAA7B,IAAgD,GAAvD;AACD;;AAED,WAASmB,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,WAAO,OAAOA,IAAP,IAAe,QAAf,GAA0BA,IAA1B,GAAiCA,IAAI,CAACC,IAA7C;AACD;;AAED,WAASC,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgC;AAC9B,QAAIlB,OAAO,CAACkB,KAAD,CAAX,EAAoBA,KAAK,GAAG;AAACC,MAAAA,OAAO,EAAED;AAAV,KAAR;AACpB,QAAI,CAACA,KAAK,CAACH,IAAX,EAAiBG,KAAK,CAACH,IAAN,GAAaE,IAAb;AACjB,WAAOC,KAAP;AACD;;AAED,WAASE,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAItB,OAAO,CAACqB,KAAD,CAAX,EAAoB;AAClB,WAAK,IAAIE,CAAC,GAAGF,KAAK,CAACG,MAAN,GAAe,CAA5B,EAA+BD,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1C,YAAIT,IAAI,GAAGO,KAAK,CAACE,CAAD,CAAhB;AACAD,QAAAA,MAAM,CAACT,OAAO,CAACC,IAAD,CAAP,CAAcW,WAAd,EAAD,CAAN,GAAsCT,SAAS,CAACH,OAAO,CAACC,IAAD,CAAR,EAAgBA,IAAhB,CAA/C;AACD;AACF,KALD,MAKO,IAAIO,KAAJ,EAAW;AAChB,WAAK,IAAIJ,IAAT,IAAiBI,KAAjB;AACEC,QAAAA,MAAM,CAACL,IAAI,CAACQ,WAAL,EAAD,CAAN,GAA6BT,SAAS,CAACC,IAAD,EAAOI,KAAK,CAACJ,IAAD,CAAZ,CAAtC;AADF;AAED;;AACD,WAAOK,MAAP;AACD;;AAED,WAASI,QAAT,CAAkBT,IAAlB,EAAwB;AACtB,WAAO1B,MAAM,CAAC0B,IAAI,CAACQ,WAAL,EAAD,CAAb;AACD;;AAED,WAASE,YAAT,CAAsBC,MAAtB,EAA8B;AAC5B,QAAIN,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIO,GAAT,IAAgBD,MAAhB;AAAwB,UAAIA,MAAM,CAACE,cAAP,CAAsBD,GAAtB,CAAJ,EACtBP,MAAM,CAACO,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AADF;;AAEA,WAAOP,MAAP;AACD;;AAED,WAASS,KAAT,CAAeC,MAAf,EAAuBC,IAAvB,EAA6B;AAC3B,QAAIC,GAAG,GAAGF,MAAM,CAACR,MAAjB;AACA,QAAIW,GAAG,GAAGtB,OAAO,CAACoB,IAAD,CAAP,CAAcG,MAAd,CAAqB,CAArB,EAAwBF,GAAxB,CAAV;AACA,WAAOF,MAAM,CAACP,WAAP,OAAyBU,GAAG,CAACV,WAAJ,EAAhC;AACD;;AAED,WAASY,UAAT,CAAoBf,MAApB,EAA4BgB,MAA5B,EAAoCC,QAApC,EAA8CC,SAA9C,EAAyD;AACvD,QAAIxC,OAAO,CAACuC,QAAD,CAAX,EAAuB;AACrB,WAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,QAAQ,CAACf,MAA7B,EAAqCD,CAAC,EAAtC;AACE,YAAIQ,KAAK,CAACO,MAAD,EAASC,QAAQ,CAAChB,CAAD,CAAjB,CAAT,EAAgCD,MAAM,CAACmB,IAAP,CAAYD,SAAS,CAACD,QAAQ,CAAChB,CAAD,CAAT,CAArB;AADlC;AAED,KAHD,MAGO;AACL,WAAK,IAAIU,IAAT,IAAiBM,QAAjB;AAA2B,YAAIA,QAAQ,CAACT,cAAT,CAAwBG,IAAxB,CAAJ,EAAmC;AAC5D,cAAIhC,GAAG,GAAGsC,QAAQ,CAACN,IAAD,CAAlB;AACA,cAAI,CAAChC,GAAD,IAAQA,GAAG,KAAK,IAApB,EACEA,GAAG,GAAGgC,IAAN,CADF,KAGEhC,GAAG,GAAGA,GAAG,CAACyC,WAAJ,GAAkB;AAAC3B,YAAAA,IAAI,EAAEd,GAAG,CAACc,IAAX;AAAiB2B,YAAAA,WAAW,EAAEzC,GAAG,CAACyC;AAAlC,WAAlB,GAAmEzC,GAAG,CAACc,IAA7E;AACF,cAAIgB,KAAK,CAACO,MAAD,EAASrC,GAAT,CAAT,EAAwBqB,MAAM,CAACmB,IAAP,CAAYD,SAAS,CAACvC,GAAD,CAArB;AACzB;AAPD;AAQD;AACF;;AAED,WAAS0C,SAAT,CAAmB1B,IAAnB,EAAyB;AACvB;AACA,QAAIA,IAAI,CAAC2B,MAAL,CAAY,CAAZ,KAAkB,GAAtB,EAA2B;AACzB3B,MAAAA,IAAI,GAAGA,IAAI,CAACmB,MAAL,CAAY,CAAZ,CAAP;AACD,KAJsB,CAKvB;AACA;;;AACA,QAAIS,SAAS,GAAG5B,IAAI,CAAC6B,KAAL,CAAWpD,eAAe,GAACA,eAA3B,CAAhB;;AACA,SAAK,IAAI6B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsB,SAAS,CAACrB,MAA9B,EAAsCD,CAAC,EAAvC;AACEsB,MAAAA,SAAS,CAACtB,CAAD,CAAT,GAAesB,SAAS,CAACtB,CAAD,CAAT,CAAawB,OAAb,CAAqB,IAAIC,MAAJ,CAAWtD,eAAX,EAA2B,GAA3B,CAArB,EAAsD,EAAtD,CAAf;AADF;;AAEA,WAAOmD,SAAS,CAACI,IAAV,CAAevD,eAAf,CAAP;AACD;;AAED,WAASwD,sBAAT,CAAgCjC,IAAhC,EAAsC;AACpC,QAAI4B,SAAS,GAAGhC,OAAO,CAACI,IAAD,CAAP,CAAc6B,KAAd,CAAoB,GAApB,CAAhB;;AACA,SAAK,IAAIvB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsB,SAAS,CAACrB,MAA9B,EAAsCD,CAAC,EAAvC;AACEsB,MAAAA,SAAS,CAACtB,CAAD,CAAT,GAAe7B,eAAe,GAC5B;AACAmD,MAAAA,SAAS,CAACtB,CAAD,CAAT,CAAawB,OAAb,CAAqB,IAAIC,MAAJ,CAAWtD,eAAX,EAA2B,GAA3B,CAArB,EAAsDA,eAAe,GAACA,eAAtE,CAFa,GAGbA,eAHF;AADF;;AAKA,QAAIyD,OAAO,GAAGN,SAAS,CAACI,IAAV,CAAe,GAAf,CAAd;AACA,QAAI,OAAOhC,IAAP,IAAe,QAAnB,EAA6B,OAAOkC,OAAP;AAC7BlC,IAAAA,IAAI,GAAGU,YAAY,CAACV,IAAD,CAAnB;AACAA,IAAAA,IAAI,CAACF,IAAL,GAAYoC,OAAZ;AACA,WAAOlC,IAAP;AACD;;AAED,WAASmC,cAAT,CAAwBC,GAAxB,EAA6BC,KAA7B,EAAoChC,MAApC,EAA4Cf,MAA5C,EAAoD;AAClD;AACA,QAAIgD,mBAAmB,GAAG,KAA1B;AACA,QAAIV,SAAS,GAAG,EAAhB;AACA,QAAIW,KAAK,GAAGF,KAAK,CAACE,KAAlB;AACA,QAAIC,IAAI,GAAG,IAAX;;AACA,WAAOA,IAAP,EAAa;AACXA,MAAAA,IAAI,GAAIH,KAAK,CAACtB,MAAN,CAAaY,MAAb,CAAoB,CAApB,KAA0B,GAAlC;AACAW,MAAAA,mBAAmB,GAAGA,mBAAmB,IAAKD,KAAK,CAACtB,MAAN,CAAaY,MAAb,CAAoB,CAApB,KAA0BlD,eAAxE;AAEA8D,MAAAA,KAAK,GAAGF,KAAK,CAACE,KAAd;AACAX,MAAAA,SAAS,CAACa,OAAV,CAAkBf,SAAS,CAACW,KAAK,CAACtB,MAAP,CAA3B;AAEAsB,MAAAA,KAAK,GAAG/C,MAAM,CAACoD,UAAP,CAAkB7D,GAAG,CAACuD,GAAG,CAACO,IAAL,EAAWN,KAAK,CAACE,KAAjB,CAArB,CAAR;;AACA,UAAIF,KAAK,CAACtB,MAAN,IAAgB,GAApB,EAAyB;AACvByB,QAAAA,IAAI,GAAG,IAAP;AACAH,QAAAA,KAAK,GAAG/C,MAAM,CAACoD,UAAP,CAAkB7D,GAAG,CAACuD,GAAG,CAACO,IAAL,EAAWN,KAAK,CAACE,KAAjB,CAArB,CAAR;AACD;AACF,KAlBiD,CAoBlD;;;AACA,QAAIxB,MAAM,GAAGa,SAAS,CAACI,IAAV,CAAe,GAAf,CAAb;AACAZ,IAAAA,UAAU,CAACf,MAAD,EAASU,MAAT,EAAiBzC,MAAjB,EAAyB,UAASsE,CAAT,EAAY;AAC7C,aAAON,mBAAmB,GAAGL,sBAAsB,CAACW,CAAD,CAAzB,GAA+BA,CAAzD;AACD,KAFS,CAAV,CAtBkD,CA0BlD;;AACAxB,IAAAA,UAAU,CAACf,MAAD,EAASU,MAAT,EAAiBxC,YAAjB,EAA+B,UAASqE,CAAT,EAAY;AACnD,aAAON,mBAAmB,GAAGL,sBAAsB,CAACW,CAAD,CAAzB,GAA+BA,CAAzD;AACD,KAFS,CAAV,CA3BkD,CA+BlD;;AACA7B,IAAAA,MAAM,GAAGa,SAAS,CAACiB,GAAV,EAAT;AACA,QAAIC,KAAK,GAAGlB,SAAS,CAACI,IAAV,CAAe,GAAf,CAAZ;AAEA,QAAIe,KAAK,GAAG,KAAZ;AACA,QAAIC,UAAU,GAAGF,KAAjB,CApCkD,CAqClD;;AACA,QAAI,CAACrC,QAAQ,CAACqC,KAAD,CAAb,EAAsB;AACpB,UAAIG,QAAQ,GAAGH,KAAf;AACAA,MAAAA,KAAK,GAAGI,gBAAgB,CAACJ,KAAD,EAAQxD,MAAR,CAAxB;AACA,UAAIwD,KAAK,KAAKG,QAAd,EAAwBF,KAAK,GAAG,IAAR;AACzB;;AAED,QAAI7C,OAAO,GAAGO,QAAQ,CAACqC,KAAD,CAAtB;AACA,QAAI5C,OAAO,IAAIA,OAAO,CAACA,OAAvB,EACEA,OAAO,GAAGA,OAAO,CAACA,OAAlB;;AAEF,QAAIA,OAAJ,EAAa;AACXkB,MAAAA,UAAU,CAACf,MAAD,EAASU,MAAT,EAAiBb,OAAjB,EAA0B,UAAS0C,CAAT,EAAY;AAC9C,YAAIO,WAAW,GAAGL,KAAlB;AACA,YAAIC,KAAK,IAAI,IAAb,EAAmBI,WAAW,GAAGH,UAAd;;AACnB,YAAI,OAAOJ,CAAP,IAAY,QAAhB,EAA0B;AACxBA,UAAAA,CAAC,GAAGO,WAAW,GAAG,GAAd,GAAoBP,CAAxB;AACD,SAFD,MAEO;AACLA,UAAAA,CAAC,GAAGlC,YAAY,CAACkC,CAAD,CAAhB;AACAA,UAAAA,CAAC,CAAC9C,IAAF,GAASqD,WAAW,GAAG,GAAd,GAAoBP,CAAC,CAAC9C,IAA/B;AACD;;AACD,eAAOwC,mBAAmB,GAAGL,sBAAsB,CAACW,CAAD,CAAzB,GAA+BA,CAAzD;AACD,OAVS,CAAV;AAWD;;AAED,WAAOL,KAAP;AACD;;AAED,WAASa,QAAT,CAAkBC,QAAlB,EAA4BC,CAA5B,EAA+B;AAC7B,QAAIC,KAAK,GAAGF,QAAQ,CAACxB,KAAT,CAAe,KAAf,CAAZ;;AACA,SAAK,IAAIvB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiD,KAAK,CAAChD,MAA1B,EAAkCD,CAAC,EAAnC;AACE,UAAIiD,KAAK,CAACjD,CAAD,CAAT,EAAcgD,CAAC,CAACC,KAAK,CAACjD,CAAD,CAAL,CAASwB,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,CAAD,CAAD;AADhB;AAED;;AAED,WAASoB,gBAAT,CAA0BH,KAA1B,EAAiCzD,MAAjC,EAAyC;AACvC,QAAIE,GAAG,GAAGF,MAAM,CAACE,GAAjB;AACA,QAAIgE,SAAS,GAAGhE,GAAG,CAACiE,QAAJ,EAAhB;AACA,QAAIC,cAAc,GAAGX,KAAK,CAACvC,WAAN,EAArB;AACA,QAAImD,YAAY,GAAG,EAAnB;AACA,QAAIb,KAAK,GAAG,EAAZ;AACA,QAAIc,SAAS,GAAG,EAAhB;AACA,QAAIC,UAAU,GAAG;AACftB,MAAAA,KAAK,EAAE1D,GAAG,CAAC,CAAD,EAAI,CAAJ,CADK;AAEfiF,MAAAA,GAAG,EAAEjF,GAAG,CAACS,MAAM,CAACyE,QAAP,EAAD,EAAoBzE,MAAM,CAAC0E,aAAP,CAAqB1E,MAAM,CAACyE,QAAP,EAArB,EAAwCxD,MAA5D;AAFO,KAAjB,CAPuC,CAYvC;;AACA,QAAI0D,gBAAgB,GAAGT,SAAS,CAACU,OAAV,CAAkBxF,IAAI,CAACC,SAAvB,CAAvB;;AACA,WAAMsF,gBAAgB,IAAI,CAAC,CAA3B,EAA8B;AAC5BL,MAAAA,SAAS,CAACpC,IAAV,CAAehC,GAAG,CAAC2E,YAAJ,CAAiBF,gBAAjB,CAAf;AACAA,MAAAA,gBAAgB,GAAGT,SAAS,CAACU,OAAV,CAAkBxF,IAAI,CAACC,SAAvB,EAAkCsF,gBAAgB,GAAC,CAAnD,CAAnB;AACD;;AACDL,IAAAA,SAAS,CAACnB,OAAV,CAAkB5D,GAAG,CAAC,CAAD,EAAI,CAAJ,CAArB;AACA+E,IAAAA,SAAS,CAACpC,IAAV,CAAe3C,GAAG,CAACS,MAAM,CAACyE,QAAP,EAAD,EAAoBzE,MAAM,CAAC0E,aAAP,CAAqB1E,MAAM,CAACyE,QAAP,EAArB,EAAwCjE,IAAxC,CAA6CS,MAAjE,CAAlB,EAnBuC,CAqBvC;;AACA,QAAI6D,QAAQ,GAAG,IAAf;AACA,QAAIC,OAAO,GAAG/E,MAAM,CAACgF,SAAP,EAAd;;AACA,SAAK,IAAIhE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsD,SAAS,CAACrD,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,UAAI,CAAC8D,QAAQ,IAAI,IAAZ,IAAoBtF,MAAM,CAACuF,OAAD,EAAUD,QAAV,CAAN,GAA4B,CAAjD,KAAuDtF,MAAM,CAACuF,OAAD,EAAUT,SAAS,CAACtD,CAAD,CAAnB,CAAN,IAAiC,CAA5F,EAA+F;AAC7FuD,QAAAA,UAAU,GAAG;AAACtB,UAAAA,KAAK,EAAE6B,QAAR;AAAkBN,UAAAA,GAAG,EAAEF,SAAS,CAACtD,CAAD;AAAhC,SAAb;AACA;AACD;;AACD8D,MAAAA,QAAQ,GAAGR,SAAS,CAACtD,CAAD,CAApB;AACD;;AAED,QAAIuD,UAAU,CAACtB,KAAf,EAAsB;AACpB,UAAIgC,KAAK,GAAG/E,GAAG,CAACgF,QAAJ,CAAaX,UAAU,CAACtB,KAAxB,EAA+BsB,UAAU,CAACC,GAA1C,EAA+C,KAA/C,CAAZ;;AAEA,WAAK,IAAIxD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiE,KAAK,CAAChE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAI+C,QAAQ,GAAGkB,KAAK,CAACjE,CAAD,CAApB;AACA8C,QAAAA,QAAQ,CAACC,QAAD,EAAW,UAASrC,IAAT,EAAe;AAChC,cAAIyD,aAAa,GAAGzD,IAAI,CAACR,WAAL,EAApB;AACA,cAAIiE,aAAa,KAAKf,cAAlB,IAAoCjD,QAAQ,CAACkD,YAAD,CAAhD,EACEb,KAAK,GAAGa,YAAR;AACF,cAAIc,aAAa,KAAK/F,IAAI,CAACE,aAA3B,EACE+E,YAAY,GAAG3C,IAAf;AACH,SANO,CAAR;AAOA,YAAI8B,KAAJ,EAAW;AACZ;AACF;;AACD,WAAOA,KAAP;AACD;;AAEDzE,EAAAA,UAAU,CAACqG,cAAX,CAA0B,MAA1B,EAAkC,KAAlC,EAAyC,UAASpF,MAAT,EAAiBqF,OAAjB,EAA0B;AACjErG,IAAAA,MAAM,GAAG6B,WAAW,CAACwE,OAAO,IAAIA,OAAO,CAACrG,MAApB,CAApB;AACA,QAAIsG,gBAAgB,GAAGD,OAAO,IAAIA,OAAO,CAACpG,YAA1C;AACA,QAAIsG,eAAe,GAAGF,OAAO,IAAIA,OAAO,CAACE,eAAzC;AACAtG,IAAAA,YAAY,GAAGqG,gBAAgB,IAAInE,QAAQ,CAACmE,gBAAD,CAA3C;AACApG,IAAAA,QAAQ,GAAGa,WAAW,CAACC,MAAD,CAAtB;AACAb,IAAAA,eAAe,GAAGkB,kBAAkB,CAACL,MAAD,CAApC;AAEA,QAAIsF,gBAAgB,IAAI,CAACrG,YAAzB,EACEA,YAAY,GAAG2E,gBAAgB,CAAC0B,gBAAD,EAAmBtF,MAAnB,CAA/B;AAEFf,IAAAA,YAAY,GAAGA,YAAY,IAAI,EAA/B;AAEA,QAAIA,YAAY,CAAC2B,OAAjB,EACE3B,YAAY,GAAGA,YAAY,CAAC2B,OAA5B;AAEF,QAAIkC,GAAG,GAAG9C,MAAM,CAACgF,SAAP,EAAV;AACA,QAAIjE,MAAM,GAAG,EAAb;AACA,QAAIgC,KAAK,GAAG/C,MAAM,CAACoD,UAAP,CAAkBN,GAAlB,CAAZ;AAAA,QAAoCG,KAApC;AAAA,QAA2CuB,GAA3C;AAAA,QAAgDzC,MAAhD;;AACA,QAAIgB,KAAK,CAACyB,GAAN,GAAY1B,GAAG,CAAC0C,EAApB,EAAwB;AACtBzC,MAAAA,KAAK,CAACyB,GAAN,GAAY1B,GAAG,CAAC0C,EAAhB;AACAzC,MAAAA,KAAK,CAACtB,MAAN,GAAesB,KAAK,CAACtB,MAAN,CAAagE,KAAb,CAAmB,CAAnB,EAAsB3C,GAAG,CAAC0C,EAAJ,GAASzC,KAAK,CAACE,KAArC,CAAf;AACD;;AAED,QAAIF,KAAK,CAACtB,MAAN,CAAaD,KAAb,CAAmB,qBAAnB,CAAJ,EAA+C;AAC7CO,MAAAA,MAAM,GAAGgB,KAAK,CAACtB,MAAf;AACAwB,MAAAA,KAAK,GAAGF,KAAK,CAACE,KAAd;AACAuB,MAAAA,GAAG,GAAGzB,KAAK,CAACyB,GAAZ;AACD,KAJD,MAIO;AACLvB,MAAAA,KAAK,GAAGuB,GAAG,GAAG1B,GAAG,CAAC0C,EAAlB;AACAzD,MAAAA,MAAM,GAAG,EAAT;AACD;;AACD,QAAIA,MAAM,CAACM,MAAP,CAAc,CAAd,KAAoB,GAApB,IAA2BN,MAAM,CAACM,MAAP,CAAc,CAAd,KAAoBlD,eAAnD,EAAoE;AAClE8D,MAAAA,KAAK,GAAGJ,cAAc,CAACC,GAAD,EAAMC,KAAN,EAAahC,MAAb,EAAqBf,MAArB,CAAtB;AACD,KAFD,MAEO;AACL,UAAI0F,aAAa,GAAG,SAAhBA,aAAgB,CAASpC,CAAT,EAAYqC,SAAZ,EAAuB;AACzC,YAAI,QAAOrC,CAAP,MAAa,QAAjB,EAA2B;AACzBA,UAAAA,CAAC,CAACqC,SAAF,GAAcA,SAAd;AACD,SAFD,MAEO;AACLrC,UAAAA,CAAC,GAAG;AAAE9C,YAAAA,IAAI,EAAE8C,CAAR;AAAWqC,YAAAA,SAAS,EAAEA;AAAtB,WAAJ;AACD;;AACD,eAAOrC,CAAP;AACD,OAPD;;AAQAxB,MAAAA,UAAU,CAACf,MAAD,EAASgB,MAAT,EAAiB9C,YAAjB,EAA+B,UAASqE,CAAT,EAAY;AACnD,eAAOoC,aAAa,CAACpC,CAAD,EAAI,qDAAJ,CAApB;AACD,OAFS,CAAV;AAGAxB,MAAAA,UAAU,CACRf,MADQ,EAERgB,MAFQ,EAGR/C,MAHQ,EAGA,UAASsE,CAAT,EAAY;AAClB,eAAOoC,aAAa,CAACpC,CAAD,EAAI,uBAAJ,CAApB;AACD,OALO,CAAV;AAOA,UAAI,CAACiC,eAAL,EACEzD,UAAU,CAACf,MAAD,EAASgB,MAAT,EAAiB7C,QAAjB,EAA2B,UAASoE,CAAT,EAAY;AAC/C,eAAOoC,aAAa,CAACpC,CAAC,CAACpC,WAAF,EAAD,EAAkB,yBAAlB,CAApB;AACD,OAFS,CAAV;AAGH;;AAED,WAAO;AAAC0E,MAAAA,IAAI,EAAE7E,MAAP;AAAe8E,MAAAA,IAAI,EAAEtG,GAAG,CAACuD,GAAG,CAACO,IAAL,EAAWJ,KAAX,CAAxB;AAA2C6C,MAAAA,EAAE,EAAEvG,GAAG,CAACuD,GAAG,CAACO,IAAL,EAAWmB,GAAX;AAAlD,KAAP;AACD,GA5DD;AA6DD,CA7SD","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: https://codemirror.net/LICENSE\r\n\r\n(function(mod) {\r\n  /*if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\r\n    mod(require(\"../../lib/codemirror\"), require(\"../../mode/sql/sql\"));\r\n  else if (typeof define == \"function\" && define.amd) // AMD\r\n    define([\"../../lib/codemirror\", \"../../mode/sql/sql\"], mod);\r\n  else */\r\n    // Plain browser env\r\n    mod(CodeMirror);\r\n})(function(CodeMirror) {\r\n  \"use strict\";\r\n\r\n  var tables;\r\n  var defaultTable;\r\n  var keywords;\r\n  var identifierQuote;\r\n  var CONS = {\r\n    QUERY_DIV: \";\",\r\n    ALIAS_KEYWORD: \"AS\"\r\n  };\r\n  var Pos = CodeMirror.Pos, cmpPos = CodeMirror.cmpPos;\r\n\r\n  function isArray(val) { return Object.prototype.toString.call(val) == \"[object Array]\" }\r\n\r\n  function getKeywords(editor) {\r\n    var mode = editor.doc.modeOption;\r\n    if (mode === \"sql\") mode = \"text/x-sql\";\r\n    return CodeMirror.resolveMode(mode).keywords;\r\n  }\r\n\r\n  function getIdentifierQuote(editor) {\r\n    var mode = editor.doc.modeOption;\r\n    if (mode === \"sql\") mode = \"text/x-sql\";\r\n    return CodeMirror.resolveMode(mode).identifierQuote || \"`\";\r\n  }\r\n\r\n  function getText(item) {\r\n    return typeof item == \"string\" ? item : item.text;\r\n  }\r\n\r\n  function wrapTable(name, value) {\r\n    if (isArray(value)) value = {columns: value}\r\n    if (!value.text) value.text = name\r\n    return value\r\n  }\r\n\r\n  function parseTables(input) {\r\n    var result = {}\r\n    if (isArray(input)) {\r\n      for (var i = input.length - 1; i >= 0; i--) {\r\n        var item = input[i]\r\n        result[getText(item).toUpperCase()] = wrapTable(getText(item), item)\r\n      }\r\n    } else if (input) {\r\n      for (var name in input)\r\n        result[name.toUpperCase()] = wrapTable(name, input[name])\r\n    }\r\n    return result\r\n  }\r\n\r\n  function getTable(name) {\r\n    return tables[name.toUpperCase()]\r\n  }\r\n\r\n  function shallowClone(object) {\r\n    var result = {};\r\n    for (var key in object) if (object.hasOwnProperty(key))\r\n      result[key] = object[key];\r\n    return result;\r\n  }\r\n\r\n  function match(string, word) {\r\n    var len = string.length;\r\n    var sub = getText(word).substr(0, len);\r\n    return string.toUpperCase() === sub.toUpperCase();\r\n  }\r\n\r\n  function addMatches(result, search, wordlist, formatter) {\r\n    if (isArray(wordlist)) {\r\n      for (var i = 0; i < wordlist.length; i++)\r\n        if (match(search, wordlist[i])) result.push(formatter(wordlist[i]))\r\n    } else {\r\n      for (var word in wordlist) if (wordlist.hasOwnProperty(word)) {\r\n        var val = wordlist[word]\r\n        if (!val || val === true)\r\n          val = word\r\n        else\r\n          val = val.displayText ? {text: val.text, displayText: val.displayText} : val.text\r\n        if (match(search, val)) result.push(formatter(val))\r\n      }\r\n    }\r\n  }\r\n\r\n  function cleanName(name) {\r\n    // Get rid name from identifierQuote and preceding dot(.)\r\n    if (name.charAt(0) == \".\") {\r\n      name = name.substr(1);\r\n    }\r\n    // replace doublicated identifierQuotes with single identifierQuotes\r\n    // and remove single identifierQuotes\r\n    var nameParts = name.split(identifierQuote+identifierQuote);\r\n    for (var i = 0; i < nameParts.length; i++)\r\n      nameParts[i] = nameParts[i].replace(new RegExp(identifierQuote,\"g\"), \"\");\r\n    return nameParts.join(identifierQuote);\r\n  }\r\n\r\n  function insertIdentifierQuotes(name) {\r\n    var nameParts = getText(name).split(\".\");\r\n    for (var i = 0; i < nameParts.length; i++)\r\n      nameParts[i] = identifierQuote +\r\n        // doublicate identifierQuotes\r\n        nameParts[i].replace(new RegExp(identifierQuote,\"g\"), identifierQuote+identifierQuote) +\r\n        identifierQuote;\r\n    var escaped = nameParts.join(\".\");\r\n    if (typeof name == \"string\") return escaped;\r\n    name = shallowClone(name);\r\n    name.text = escaped;\r\n    return name;\r\n  }\r\n\r\n  function nameCompletion(cur, token, result, editor) {\r\n    // Try to complete table, column names and return start position of completion\r\n    var useIdentifierQuotes = false;\r\n    var nameParts = [];\r\n    var start = token.start;\r\n    var cont = true;\r\n    while (cont) {\r\n      cont = (token.string.charAt(0) == \".\");\r\n      useIdentifierQuotes = useIdentifierQuotes || (token.string.charAt(0) == identifierQuote);\r\n\r\n      start = token.start;\r\n      nameParts.unshift(cleanName(token.string));\r\n\r\n      token = editor.getTokenAt(Pos(cur.line, token.start));\r\n      if (token.string == \".\") {\r\n        cont = true;\r\n        token = editor.getTokenAt(Pos(cur.line, token.start));\r\n      }\r\n    }\r\n\r\n    // Try to complete table names\r\n    var string = nameParts.join(\".\");\r\n    addMatches(result, string, tables, function(w) {\r\n      return useIdentifierQuotes ? insertIdentifierQuotes(w) : w;\r\n    });\r\n\r\n    // Try to complete columns from defaultTable\r\n    addMatches(result, string, defaultTable, function(w) {\r\n      return useIdentifierQuotes ? insertIdentifierQuotes(w) : w;\r\n    });\r\n\r\n    // Try to complete columns\r\n    string = nameParts.pop();\r\n    var table = nameParts.join(\".\");\r\n\r\n    var alias = false;\r\n    var aliasTable = table;\r\n    // Check if table is available. If not, find table by Alias\r\n    if (!getTable(table)) {\r\n      var oldTable = table;\r\n      table = findTableByAlias(table, editor);\r\n      if (table !== oldTable) alias = true;\r\n    }\r\n\r\n    var columns = getTable(table);\r\n    if (columns && columns.columns)\r\n      columns = columns.columns;\r\n\r\n    if (columns) {\r\n      addMatches(result, string, columns, function(w) {\r\n        var tableInsert = table;\r\n        if (alias == true) tableInsert = aliasTable;\r\n        if (typeof w == \"string\") {\r\n          w = tableInsert + \".\" + w;\r\n        } else {\r\n          w = shallowClone(w);\r\n          w.text = tableInsert + \".\" + w.text;\r\n        }\r\n        return useIdentifierQuotes ? insertIdentifierQuotes(w) : w;\r\n      });\r\n    }\r\n\r\n    return start;\r\n  }\r\n\r\n  function eachWord(lineText, f) {\r\n    var words = lineText.split(/\\s+/)\r\n    for (var i = 0; i < words.length; i++)\r\n      if (words[i]) f(words[i].replace(/[,;]/g, ''))\r\n  }\r\n\r\n  function findTableByAlias(alias, editor) {\r\n    var doc = editor.doc;\r\n    var fullQuery = doc.getValue();\r\n    var aliasUpperCase = alias.toUpperCase();\r\n    var previousWord = \"\";\r\n    var table = \"\";\r\n    var separator = [];\r\n    var validRange = {\r\n      start: Pos(0, 0),\r\n      end: Pos(editor.lastLine(), editor.getLineHandle(editor.lastLine()).length)\r\n    };\r\n\r\n    //add separator\r\n    var indexOfSeparator = fullQuery.indexOf(CONS.QUERY_DIV);\r\n    while(indexOfSeparator != -1) {\r\n      separator.push(doc.posFromIndex(indexOfSeparator));\r\n      indexOfSeparator = fullQuery.indexOf(CONS.QUERY_DIV, indexOfSeparator+1);\r\n    }\r\n    separator.unshift(Pos(0, 0));\r\n    separator.push(Pos(editor.lastLine(), editor.getLineHandle(editor.lastLine()).text.length));\r\n\r\n    //find valid range\r\n    var prevItem = null;\r\n    var current = editor.getCursor()\r\n    for (var i = 0; i < separator.length; i++) {\r\n      if ((prevItem == null || cmpPos(current, prevItem) > 0) && cmpPos(current, separator[i]) <= 0) {\r\n        validRange = {start: prevItem, end: separator[i]};\r\n        break;\r\n      }\r\n      prevItem = separator[i];\r\n    }\r\n\r\n    if (validRange.start) {\r\n      var query = doc.getRange(validRange.start, validRange.end, false);\r\n\r\n      for (var i = 0; i < query.length; i++) {\r\n        var lineText = query[i];\r\n        eachWord(lineText, function(word) {\r\n          var wordUpperCase = word.toUpperCase();\r\n          if (wordUpperCase === aliasUpperCase && getTable(previousWord))\r\n            table = previousWord;\r\n          if (wordUpperCase !== CONS.ALIAS_KEYWORD)\r\n            previousWord = word;\r\n        });\r\n        if (table) break;\r\n      }\r\n    }\r\n    return table;\r\n  }\r\n\r\n  CodeMirror.registerHelper(\"hint\", \"sql\", function(editor, options) {\r\n    tables = parseTables(options && options.tables)\r\n    var defaultTableName = options && options.defaultTable;\r\n    var disableKeywords = options && options.disableKeywords;\r\n    defaultTable = defaultTableName && getTable(defaultTableName);\r\n    keywords = getKeywords(editor);\r\n    identifierQuote = getIdentifierQuote(editor);\r\n\r\n    if (defaultTableName && !defaultTable)\r\n      defaultTable = findTableByAlias(defaultTableName, editor);\r\n\r\n    defaultTable = defaultTable || [];\r\n\r\n    if (defaultTable.columns)\r\n      defaultTable = defaultTable.columns;\r\n\r\n    var cur = editor.getCursor();\r\n    var result = [];\r\n    var token = editor.getTokenAt(cur), start, end, search;\r\n    if (token.end > cur.ch) {\r\n      token.end = cur.ch;\r\n      token.string = token.string.slice(0, cur.ch - token.start);\r\n    }\r\n\r\n    if (token.string.match(/^[.`\"'\\w@][\\w$#]*$/g)) {\r\n      search = token.string;\r\n      start = token.start;\r\n      end = token.end;\r\n    } else {\r\n      start = end = cur.ch;\r\n      search = \"\";\r\n    }\r\n    if (search.charAt(0) == \".\" || search.charAt(0) == identifierQuote) {\r\n      start = nameCompletion(cur, token, result, editor);\r\n    } else {\r\n      var objectOrClass = function(w, className) {\r\n        if (typeof w === \"object\") {\r\n          w.className = className;\r\n        } else {\r\n          w = { text: w, className: className };\r\n        }\r\n        return w;\r\n      };\r\n      addMatches(result, search, defaultTable, function(w) {\r\n        return objectOrClass(w, \"CodeMirror-hint-table CodeMirror-hint-default-table\");\r\n      });\r\n      addMatches(\r\n        result,\r\n        search,\r\n        tables, function(w) {\r\n          return objectOrClass(w, \"CodeMirror-hint-table\");\r\n        }\r\n      );\r\n      if (!disableKeywords)\r\n        addMatches(result, search, keywords, function(w) {\r\n          return objectOrClass(w.toUpperCase(), \"CodeMirror-hint-keyword\");\r\n        });\r\n    }\r\n\r\n    return {list: result, from: Pos(cur.line, start), to: Pos(cur.line, end)};\r\n  });\r\n});"]}]}