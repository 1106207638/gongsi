{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\jeecg\\JVxeDemo\\demo\\JSBCDemo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\jeecg\\JVxeDemo\\demo\\JSBCDemo.vue","mtime":1615948818510},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["JSBCDemo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-card title=\"即时保存示例\" :bordered=\"false\">\r\n    <!--\r\n      【即时保存大体思路】：\r\n      1. JVxeTable 上必须加 keep-source 属性\r\n      2. 监听 edit-closed事件，这个事件是在编辑完成后触发\r\n      3. 在这个事件里面判断数据是否更改，如果更改了就调用接口进行保存操作\r\n    -->\r\n    <j-vxe-table\r\n      toolbar\r\n      :toolbarConfig=\"toolbarConfig\"\r\n\r\n      row-number\r\n      row-selection\r\n      keep-source\r\n      async-remove\r\n\r\n      :height=\"340\"\r\n      :loading=\"loading\"\r\n      :columns=\"columns\"\r\n      :dataSource=\"dataSource\"\r\n      :pagination=\"pagination\"\r\n\r\n      @save=\"handleTableSave\"\r\n      @remove=\"handleTableRemove\"\r\n      @edit-closed=\"handleEditClosed\"\r\n      @pageChange=\"handlePageChange\"\r\n      @selectRowChange=\"handleSelectRowChange\"\r\n    />\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\n  import { getAction, postAction, putAction } from '@api/manage'\r\n  import { JVXETypes } from '@/components/jeecg/JVxeTable'\r\n\r\n  // 即时保存示例\r\n  export default {\r\n    name: 'JSBCDemo',\r\n    data() {\r\n      return {\r\n        // 工具栏的按钮配置\r\n        toolbarConfig: {\r\n          // add 新增按钮；remove 删除按钮；clearSelection 清空选择按钮\r\n          btn: ['add', 'save', 'remove', 'clearSelection']\r\n        },\r\n        // 是否正在加载\r\n        loading: false,\r\n        // 分页器参数\r\n        pagination: {\r\n          // 当前页码\r\n          current: 1,\r\n          // 每页的条数\r\n          pageSize: 200,\r\n          // 可切换的条数\r\n          pageSizeOptions: ['10', '20', '30', '100', '200'],\r\n          // 数据总数（目前并不知道真实的总数，所以先填写0，在后台查出来后再赋值）\r\n          total: 0,\r\n        },\r\n        // 选择的行\r\n        selectedRows: [],\r\n        // 数据源，控制表格的数据\r\n        dataSource: [],\r\n        // 列配置，控制表格显示的列\r\n        columns: [\r\n          {key: 'num', title: '序号', width: '80px'},\r\n          {\r\n            // 字段key，跟后台数据的字段名匹配\r\n            key: 'ship_name',\r\n            // 列的标题\r\n            title: '船名',\r\n            // 列的宽度\r\n            width: '180px',\r\n            // 如果加上了该属性，就代表当前单元格是可编辑的，type就是表单的类型，input就是简单的输入框\r\n            type: JVXETypes.input\r\n          },\r\n          {key: 'call', title: '呼叫', width: '80px', type: JVXETypes.input},\r\n          {key: 'len', title: '长', width: '80px', type: JVXETypes.input},\r\n          {key: 'ton', title: '吨', width: '120px', defaultValue: 233, type: JVXETypes.input},\r\n          {key: 'payer', title: '付款方', width: '120px', defaultValue: '张三', type: JVXETypes.input},\r\n          {key: 'count', title: '数', width: '40px'},\r\n          {\r\n            key: 'company',\r\n            title: '公司',\r\n            // 最小宽度，与宽度不同的是，这个不是固定的宽度，如果表格有多余的空间，会平均分配给设置了 minWidth 的列\r\n            // 如果要做占满表格的列可以这么写\r\n            minWidth: '180px',\r\n            type: JVXETypes.input\r\n          },\r\n          {key: 'trend', title: '动向', width: '120px', type: JVXETypes.input},\r\n        ],\r\n        // 查询url地址\r\n        url: {\r\n          getData: '/mock/vxe/getData',\r\n          // 模拟保存单行数据（即时保存）\r\n          saveRow: '/mock/vxe/immediateSaveRow',\r\n          // 模拟保存整个表格的数据\r\n          saveAll: '/mock/vxe/immediateSaveAll',\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n      this.loadData()\r\n    },\r\n    methods: {\r\n\r\n      // 加载数据\r\n      loadData() {\r\n        // 封装查询条件\r\n        let formData = {\r\n          pageNo: this.pagination.current,\r\n          pageSize: this.pagination.pageSize\r\n        }\r\n        // 调用查询数据接口\r\n        this.loading = true\r\n        getAction(this.url.getData, formData).then(res => {\r\n          if (res.success) {\r\n            // 后台查询回来的 total，数据总数量\r\n            this.pagination.total = res.result.total\r\n            // 将查询的数据赋值给 dataSource\r\n            this.dataSource = res.result.records\r\n            // 重置选择\r\n            this.selectedRows = []\r\n          } else {\r\n            this.$error({title: '主表查询失败', content: res.message})\r\n          }\r\n        }).finally(() => {\r\n          // 这里是无论成功或失败都会执行的方法，在这里关闭loading\r\n          this.loading = false\r\n        })\r\n      },\r\n\r\n      // 【整体保存】点击保存按钮时触发的事件\r\n      handleTableSave({$table, target}) {\r\n        // 校验整个表格\r\n        $table.validate().then((errMap) => {\r\n          // 校验通过\r\n          if (!errMap) {\r\n            // 获取所有数据\r\n            let tableData = target.getTableData()\r\n            console.log('当前保存的数据是：', tableData)\r\n            // 获取新增的数据\r\n            let newData = target.getNewData()\r\n            console.log('-- 新增的数据：', newData)\r\n            // 获取删除的数据\r\n            let deleteData = target.getDeleteData()\r\n            console.log('-- 删除的数据：', deleteData)\r\n\r\n            // 【模拟保存】\r\n            this.loading = true\r\n            postAction(this.url.saveAll, tableData).then(res => {\r\n              if (res.success) {\r\n                this.$message.success(`保存成功！`)\r\n              } else {\r\n                this.$message.warn(`保存失败：` + res.message)\r\n              }\r\n            }).finally(() => {\r\n              this.loading = false\r\n            })\r\n          }\r\n        })\r\n      },\r\n\r\n      // 触发单元格删除事件\r\n      handleTableRemove(event) {\r\n\r\n        // 把 event.deleteRows 传给后台进行删除（注意：这里不会传递前端逻辑新增的数据，因为不需要请求后台删除）\r\n        console.log('待删除的数据: ', event.deleteRows)\r\n        // 也可以只传ID，因为可以根据ID删除\r\n        let deleteIds = event.deleteRows.map(row => row.id)\r\n        console.log('待删除的数据ids: ', deleteIds)\r\n\r\n        // 模拟请求后台删除\r\n        this.loading = true\r\n        window.setTimeout(() => {\r\n          this.loading = false\r\n          this.$message.success('删除成功')\r\n          // 假设后台返回删除成功，必须要调用 confirmRemove() 方法，才会真正在表格里移除（会同时删除选中的逻辑新增的数据）\r\n          event.confirmRemove()\r\n        }, 1000)\r\n      },\r\n\r\n      // 单元格编辑完成之后触发的事件\r\n      handleEditClosed(event) {\r\n        let {$table, row, column} = event\r\n\r\n        let field = column.property\r\n        let cellValue = row[field]\r\n        // 判断单元格值是否被修改\r\n        if ($table.isUpdateByRow(row, field)) {\r\n          // 校验当前行\r\n          $table.validate(row).then((errMap) => {\r\n            // 校验通过\r\n            if (!errMap) {\r\n              // 【模拟保存】\r\n              let hideLoading = this.$message.loading(`正在保存\"${column.title}\"`, 0)\r\n              console.log('即时保存数据：', row)\r\n              putAction(this.url.saveRow, row).then(res => {\r\n                if (res.success) {\r\n                  this.$message.success(`\"${column.title}\"保存成功！`)\r\n                  // 局部更新单元格为已保存状态\r\n                  $table.reloadRow(row, null, field)\r\n                } else {\r\n                  this.$message.warn(`\"${column.title}\"保存失败：` + res.message)\r\n                }\r\n              }).finally(() => {\r\n                hideLoading()\r\n              })\r\n            }\r\n          })\r\n        }\r\n      },\r\n\r\n      // 当分页参数变化时触发的事件\r\n      handlePageChange(event) {\r\n        // 重新赋值\r\n        this.pagination.current = event.current\r\n        this.pagination.pageSize = event.pageSize\r\n        // 查询数据\r\n        this.loadData()\r\n      },\r\n\r\n      // 当选择的行变化时触发的事件\r\n      handleSelectRowChange(event) {\r\n        this.selectedRows = event.selectedRows\r\n      },\r\n\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/jeecg/JVxeDemo/demo"}]}