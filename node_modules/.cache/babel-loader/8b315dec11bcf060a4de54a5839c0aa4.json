{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\src\\components\\jeecg\\JVxeTable\\utils\\vxeUtils.js","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\JVxeTable\\utils\\vxeUtils.js","mtime":1615948814805},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/vue/src/components/jeecg/JVxeTable/utils/vxeUtils.js"],"names":["getVmParentByName","JVXETypes","VALIDATE_FAILED","Symbol","getRefPromise","vm","name","Promise","resolve","next","ref","$refs","setTimeout","getInputNumberMaxValue","col","rowsValues","maxNum","Object","values","forEach","rowValue","index","val","key","num","Number","parseFloat","getParentNodeByTagName","dom","tagName","document","body","parentNode","toLowerCase","trim","vxePackageToSuperQuery","columns","handler","Array","isArray","fieldList","i","length","type","rowCheckbox","rowRadio","rowExpand","rowNumber","field","value","text","title","dictCode","dict","date","datetime","format","inputNumber","options","assign","idx","push","console","error","validateFormAndTables","form","cases","autoJumpTab","validateFields","dataMap","reject","err","originError","formValue","validateTables","subData","tablesValue","tablesData","validateTable","then","errMap","getAll","paneKey","tabPane","$vnode","tabs","setActiveKey"],"mappings":"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","sourcesContent":["import { getVmParentByName } from '@/utils/util'\r\nimport { JVXETypes } from '@comp/jeecg/JVxeTable/index'\r\n\r\nexport const VALIDATE_FAILED = Symbol()\r\n\r\n/**\r\n * 获取指定的 $refs 对象\r\n * 有时候可能会遇到组件未挂载到页面中的情况，导致无法获取 $refs 中的某个对象\r\n * 这个方法可以等待挂载完成之后再返回 $refs 的对象，避免报错\r\n * @author sunjianlei\r\n **/\r\nexport function getRefPromise(vm, name) {\r\n  return new Promise((resolve) => {\r\n    (function next() {\r\n      let ref = vm.$refs[name]\r\n      if (ref) {\r\n        resolve(ref)\r\n      } else {\r\n        setTimeout(() => {\r\n          next()\r\n        }, 10)\r\n      }\r\n    })()\r\n  })\r\n}\r\n\r\n/** 获取某一数字输入框列中的最大的值 */\r\nexport function getInputNumberMaxValue(col, rowsValues) {\r\n  let maxNum = 0\r\n  Object.values(rowsValues).forEach((rowValue, index) => {\r\n    let val = rowValue[col.key], num\r\n    try {\r\n      num = Number.parseFloat(val)\r\n    } catch {\r\n      num = 0\r\n    }\r\n    // 把首次循环的结果当成最大值\r\n    if (index === 0) {\r\n      maxNum = num\r\n    } else {\r\n      maxNum = (num > maxNum) ? num : maxNum\r\n    }\r\n  })\r\n  return maxNum\r\n}\r\n\r\n/**\r\n *\r\n * 根据 tagName 获取父级节点\r\n *\r\n * @param dom 一级dom节点\r\n * @param tagName 标签名，不区分大小写\r\n * @return {HTMLElement | NULL}\r\n */\r\nexport function getParentNodeByTagName(dom, tagName = 'body') {\r\n  if (tagName === 'body') {\r\n    return document.body\r\n  }\r\n  if (dom.parentNode) {\r\n    if (dom.parentNode.tagName.toLowerCase() === tagName.trim().toLowerCase()) {\r\n      return dom.parentNode\r\n    } else {\r\n      return getParentNodeByTagName(dom.parentNode, tagName)\r\n    }\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * vxe columns 封装成高级查询可识别的选项\r\n * @param columns\r\n * @param handler 单独处理方法\r\n */\r\nexport function vxePackageToSuperQuery(columns, handler) {\r\n  if (Array.isArray(columns)) {\r\n    // 高级查询所需要的参数\r\n    let fieldList = []\r\n    // 遍历列\r\n    for (let i = 0; i < columns.length; i++) {\r\n      let col = columns[i]\r\n      if (col.type === JVXETypes.rowCheckbox ||\r\n        col.type === JVXETypes.rowRadio ||\r\n        col.type === JVXETypes.rowExpand ||\r\n        col.type === JVXETypes.rowNumber\r\n      ) {\r\n        continue\r\n      }\r\n      let field = {\r\n        type: 'string',\r\n        value: col.key,\r\n        text: col.title,\r\n        dictCode: col.dictCode || col.dict,\r\n      }\r\n      if (col.type === JVXETypes.date || col.type === JVXETypes.datetime) {\r\n        field.type = col.type\r\n        field.format = col.format\r\n      }\r\n      if (col.type === JVXETypes.inputNumber) {\r\n        field.type = 'int'\r\n      }\r\n      if (Array.isArray(col.options)) {\r\n        field.options = col.options\r\n      }\r\n      if (typeof handler === 'function') {\r\n        Object.assign(field, handler(col, idx))\r\n      }\r\n      fieldList.push(field)\r\n    }\r\n    return fieldList\r\n  } else {\r\n    console.error('columns必须是一个数组')\r\n  }\r\n  return null\r\n}\r\n\r\n/**\r\n * 一次性验证主表单和所有的次表单\r\n * @param form 主表单 form 对象\r\n * @param cases 接收一个数组，每项都是一个JVxeTable实例\r\n * @param autoJumpTab\r\n * @returns {Promise<any>}\r\n * @author sunjianlei\r\n */\r\nexport async function validateFormAndTables(form, cases, autoJumpTab) {\r\n  if (!(form && typeof form.validateFields === 'function')) {\r\n    throw `form 参数需要的是一个form对象，而传入的却是${typeof form}`\r\n  }\r\n  let dataMap = {}\r\n  let values = await new Promise((resolve, reject) => {\r\n    // 验证主表表单\r\n    form.validateFields((err, values) => {\r\n      err ? reject({error: VALIDATE_FAILED, originError: err}) : resolve(values)\r\n    })\r\n  })\r\n  Object.assign(dataMap, {formValue: values})\r\n  // 验证所有子表的表单\r\n  let subData = await validateTables(cases, autoJumpTab)\r\n  // 合并最终数据\r\n  dataMap = Object.assign(dataMap, {tablesValue: subData})\r\n  return dataMap\r\n}\r\n\r\n/**\r\n * 验证并获取一个或多个表格的所有值\r\n *\r\n * @param cases 接收一个数组，每项都是一个JVxeTable实例\r\n * @param autoJumpTab 校验失败后，是否自动跳转tab选项\r\n */\r\nexport function validateTables(cases, autoJumpTab = true) {\r\n  if (!Array.isArray(cases)) {\r\n    throw `'validateTables'函数的'cases'参数需要的是一个数组，而传入的却是${typeof cases}`\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    let tablesData = []\r\n    let index = 0\r\n    if (!cases || cases.length === 0) {\r\n      resolve()\r\n    }\r\n    (function next() {\r\n      let vm = cases[index]\r\n      vm.validateTable().then(errMap => {\r\n        // 校验通过\r\n        if (!errMap) {\r\n          tablesData[index] = vm.getAll()\r\n          // 判断校验是否全部完成，完成返回成功，否则继续进行下一步校验\r\n          if (++index === cases.length) {\r\n            resolve(tablesData)\r\n          } else (\r\n            next()\r\n          )\r\n        } else {\r\n          // 尝试获取tabKey，如果在ATab组件内即可获取\r\n          let paneKey\r\n          let tabPane = getVmParentByName(vm, 'ATabPane')\r\n          if (tabPane) {\r\n            paneKey = tabPane.$vnode.key\r\n            // 自动跳转到该表格\r\n            if (autoJumpTab) {\r\n              let tabs = getVmParentByName(tabPane, 'Tabs')\r\n              tabs && tabs.setActiveKey && tabs.setActiveKey(paneKey)\r\n            }\r\n          }\r\n          // 出现未验证通过的表单，不再进行下一步校验，直接返回失败\r\n          reject({error: VALIDATE_FAILED, index, paneKey, errMap})\r\n        }\r\n      })\r\n    })()\r\n  })\r\n}"]}]}