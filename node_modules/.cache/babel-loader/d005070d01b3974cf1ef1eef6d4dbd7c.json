{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\user\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\user\\Login.vue","mtime":1615948822552},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <a-form :form=\"form\" class=\"user-layout-login\" ref=\"formLogin\" id=\"formLogin\">\r\n      <a-tabs\r\n        :activeKey=\"customActiveKey\"\r\n        :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"\r\n        @change=\"handleTabClick\"\r\n      >\r\n        <a-tab-pane key=\"tab1\" tab=\"账号密码登录\">\r\n          <a-form-item>\r\n            <a-input\r\n              size=\"large\"\r\n              v-decorator=\"['username', validatorRules.username, { validator: this.handleUsernameOrEmail }]\"\r\n              type=\"text\"\r\n              placeholder=\"请输入帐户名\"\r\n            >\r\n              <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <a-form-item>\r\n            <a-input\r\n              v-decorator=\"['password', validatorRules.password]\"\r\n              size=\"large\"\r\n              type=\"password\"\r\n              autocomplete=\"false\"\r\n              placeholder=\"密码\"\r\n            >\r\n              <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <!--验证码 <a-row :gutter=\"0\">\r\n            <a-col :span=\"16\">\r\n              <a-form-item>\r\n                <a-input\r\n                  v-decorator=\"['inputCode', validatorRules.inputCode]\"\r\n                  size=\"large\"\r\n                  type=\"text\"\r\n                  @change=\"inputCodeChange\"\r\n                  placeholder=\"请输入验证码\"\r\n                >\r\n                  <a-icon slot=\"prefix\" type=\"smile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\r\n                </a-input>\r\n              </a-form-item>\r\n            </a-col>\r\n            <a-col :span=\"8\" style=\"text-align: right\">\r\n              <img\r\n                v-if=\"requestCodeSuccess\"\r\n                style=\"margin-top: 2px\"\r\n                :src=\"randCodeImage\"\r\n                @click=\"handleChangeCheckCode\"\r\n              />\r\n              <img v-else style=\"margin-top: 2px\" src=\"../../assets/checkcode.png\" @click=\"handleChangeCheckCode\" />\r\n            </a-col>\r\n          </a-row> -->\r\n        </a-tab-pane>\r\n\r\n        <!-- 手机登录start \r\n         <a-tab-pane key=\"tab2\" tab=\"手机号登录\">\r\n          <a-form-item>\r\n            <a-input v-decorator=\"['mobile', validatorRules.mobile]\" size=\"large\" type=\"text\" placeholder=\"手机号\">\r\n              <a-icon slot=\"prefix\" type=\"mobile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <a-row :gutter=\"16\">\r\n            <a-col class=\"gutter-row\" :span=\"16\">\r\n              <a-form-item>\r\n                <a-input\r\n                  v-decorator=\"['captcha',validatorRules.captcha]\"\r\n                  size=\"large\"\r\n                  type=\"text\"\r\n                  placeholder=\"请输入验证码\">\r\n                  <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n                </a-input>\r\n              </a-form-item>\r\n            </a-col>\r\n            <a-col class=\"gutter-row\" :span=\"8\">\r\n              <a-button\r\n                class=\"getCaptcha\"\r\n                tabindex=\"-1\"\r\n                :disabled=\"state.smsSendBtn\"\r\n                @click.stop.prevent=\"getCaptcha\"\r\n                v-text=\"!state.smsSendBtn && '获取验证码' || (state.time+' s')\"></a-button>\r\n            </a-col>\r\n          </a-row> \r\n        </a-tab-pane> \r\n            手机登录end -->\r\n      </a-tabs>\r\n\r\n      <!--用户帮助start\r\n\r\n       <a-form-item>\r\n        <a-checkbox v-decorator=\"['rememberMe', { initialValue: true, valuePropName: 'checked' }]\">自动登录</a-checkbox>\r\n        <router-link :to=\"{ name: 'alteration' }\" class=\"forge-password\" style=\"float: right\"> 忘记密码 </router-link>\r\n        <router-link :to=\"{ name: 'register' }\" class=\"forge-password\" style=\"float: right; margin-right: 10px\">\r\n          注册账户\r\n        </router-link>\r\n      </a-form-item> \r\n\r\n          用户帮助end-->\r\n\r\n      <a-form-item style=\"margin-top: 24px\">\r\n        <a-button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          class=\"login-button\"\r\n          :loading=\"loginBtn\"\r\n          @click.stop.prevent=\"handleSubmit\"\r\n          :disabled=\"loginBtn\"\r\n          >确定\r\n        </a-button>\r\n      </a-form-item>\r\n    </a-form>\r\n\r\n    <two-step-captcha\r\n      v-if=\"requiredTwoStepCaptcha\"\r\n      :visible=\"stepCaptchaVisible\"\r\n      @success=\"stepCaptchaSuccess\"\r\n      @cancel=\"stepCaptchaCancel\"\r\n    ></two-step-captcha>\r\n    <login-select-tenant ref=\"loginSelect\" @success=\"loginSelectOk\"></login-select-tenant>\r\n    <!-- <third-login ref=\"thirdLogin\"></third-login> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//import md5 from \"md5\"\r\nimport api from '@/api'\r\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\r\nimport { mapActions } from 'vuex'\r\nimport { timeFix } from '@/utils/util'\r\nimport Vue from 'vue'\r\nimport { ACCESS_TOKEN, ENCRYPTED_STRING } from '@/store/mutation-types'\r\nimport { putAction, postAction, getAction } from '@/api/manage'\r\nimport { encryption, getEncryptedString } from '@/utils/encryption/aesEncrypt'\r\nimport store from '@/store/'\r\nimport { USER_INFO } from '@/store/mutation-types'\r\nimport LoginSelectTenant from './LoginSelectTenant'\r\n\r\n//import ThirdLogin from './third/ThirdLogin'  注释第三方登录\r\nexport default {\r\n  components: {\r\n    LoginSelectTenant,\r\n    TwoStepCaptcha,\r\n    //ThirdLogin,\r\n  },\r\n  data() {\r\n    return {\r\n      customActiveKey: 'tab1',\r\n      loginBtn: false,\r\n      // login type: 0 email, 1 username, 2 telephone\r\n      loginType: 0,\r\n      requiredTwoStepCaptcha: false,\r\n      stepCaptchaVisible: false,\r\n      form: this.$form.createForm(this),\r\n      encryptedString: {\r\n        key: '',\r\n        iv: '',\r\n      },\r\n      state: {\r\n        time: 60,\r\n        smsSendBtn: false,\r\n      },\r\n      validatorRules: {\r\n        username: { rules: [{ required: true, message: '请输入用户名!' }, { validator: this.handleUsernameOrEmail }] },\r\n        password: { rules: [{ required: true, message: '请输入密码!', validator: 'click' }] },\r\n        mobile: { rules: [{ validator: this.validateMobile }] },\r\n        captcha: { rule: [{ required: true, message: '请输入验证码!' }] },\r\n        inputCode: { rules: [{ required: true, message: '请输入验证码!' }] },\r\n      },\r\n      verifiedCode: '',\r\n      inputCodeContent: '',\r\n      inputCodeNull: true,\r\n      currentUsername: '',\r\n      currdatetime: '',\r\n      randCodeImage: '',\r\n      requestCodeSuccess: false,\r\n    }\r\n  },\r\n  created() {\r\n    this.currdatetime = new Date().getTime()\r\n    Vue.ls.remove(ACCESS_TOKEN)\r\n    this.getRouterData()\r\n    this.handleChangeCheckCode()\r\n    // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n    //this.getEncrypte();\r\n    // update-end- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n  },\r\n  methods: {\r\n    ...mapActions(['Login', 'Logout', 'PhoneLogin']),\r\n    // handler\r\n    handleUsernameOrEmail(rule, value, callback) {\r\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/\r\n      if (regex.test(value)) {\r\n        this.loginType = 0\r\n      } else {\r\n        this.loginType = 1\r\n      }\r\n      callback()\r\n    },\r\n    handleTabClick(key) {\r\n      this.customActiveKey = key\r\n      // this.form.resetFields()\r\n    },\r\n    handleSubmit() {\r\n      let that = this\r\n      let loginParams = {}\r\n      that.loginBtn = true\r\n      // 使用账户密码登录\r\n      if (that.customActiveKey === 'tab1') {\r\n        that.form.validateFields(\r\n          ['username', 'password', 'inputCode', 'rememberMe'],\r\n          { force: true },\r\n          (err, values) => {\r\n            if (!err) {\r\n              loginParams.username = values.username\r\n              // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n              //loginParams.password = md5(values.password)\r\n              //loginParams.password = encryption(values.password,that.encryptedString.key,that.encryptedString.iv)\r\n              loginParams.password = values.password\r\n              loginParams.remember_me = values.rememberMe\r\n              // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n              loginParams.captcha = that.inputCodeContent\r\n              loginParams.checkKey = that.currdatetime\r\n              console.log('登录参数', loginParams)\r\n              that\r\n                .Login(loginParams)\r\n                .then((res) => {\r\n                  this.$refs.loginSelect.show(res.result)\r\n                })\r\n                .catch((err) => {\r\n                  that.requestFailed(err)\r\n                })\r\n            } else {\r\n              that.loginBtn = false\r\n            }\r\n          }\r\n        )\r\n        // 使用手机号登录\r\n      } else {\r\n        that.form.validateFields(['mobile', 'captcha', 'rememberMe'], { force: true }, (err, values) => {\r\n          if (!err) {\r\n            loginParams.mobile = values.mobile\r\n            loginParams.captcha = values.captcha\r\n            loginParams.remember_me = values.rememberMe\r\n            that\r\n              .PhoneLogin(loginParams)\r\n              .then((res) => {\r\n                console.log(res.result)\r\n                this.$refs.loginSelect.show(res.result)\r\n              })\r\n              .catch((err) => {\r\n                that.requestFailed(err)\r\n              })\r\n          }\r\n        })\r\n      }\r\n    },\r\n    getCaptcha(e) {\r\n      e.preventDefault()\r\n      let that = this\r\n      this.form.validateFields(['mobile'], { force: true }, (err, values) => {\r\n        if (!values.mobile) {\r\n          that.cmsFailed('请输入手机号')\r\n        } else if (!err) {\r\n          this.state.smsSendBtn = true\r\n          let interval = window.setInterval(() => {\r\n            if (that.state.time-- <= 0) {\r\n              that.state.time = 60\r\n              that.state.smsSendBtn = false\r\n              window.clearInterval(interval)\r\n            }\r\n          }, 1000)\r\n\r\n          const hide = this.$message.loading('验证码发送中..', 0)\r\n          let smsParams = {}\r\n          smsParams.mobile = values.mobile\r\n          smsParams.smsmode = '0'\r\n          postAction('/sys/sms', smsParams)\r\n            .then((res) => {\r\n              if (!res.success) {\r\n                setTimeout(hide, 0)\r\n                this.cmsFailed(res.message)\r\n              }\r\n              console.log(res)\r\n              setTimeout(hide, 500)\r\n            })\r\n            .catch((err) => {\r\n              setTimeout(hide, 1)\r\n              clearInterval(interval)\r\n              that.state.time = 60\r\n              that.state.smsSendBtn = false\r\n              this.requestFailed(err)\r\n            })\r\n        }\r\n      })\r\n    },\r\n    stepCaptchaSuccess() {\r\n      this.loginSuccess()\r\n    },\r\n    stepCaptchaCancel() {\r\n      this.Logout().then(() => {\r\n        this.loginBtn = false\r\n        this.stepCaptchaVisible = false\r\n      })\r\n    },\r\n    handleChangeCheckCode() {\r\n      this.currdatetime = new Date().getTime()\r\n      getAction(`/sys/randomImage/${this.currdatetime}`)\r\n        .then((res) => {\r\n          if (res.success) {\r\n            this.randCodeImage = res.result\r\n            this.requestCodeSuccess = true\r\n          } else {\r\n            this.$message.error(res.message)\r\n            this.requestCodeSuccess = false\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.requestCodeSuccess = false\r\n        })\r\n    },\r\n    loginSuccess() {\r\n      this.$router.push({ path: '/dashboard/analysis' }).catch(() => {\r\n        console.log('登录跳转首页出错,这个错误从哪里来的')\r\n      })\r\n      this.$notification.success({\r\n        message: '欢迎',\r\n        description: `${timeFix()}，欢迎回来`,\r\n      })\r\n    },\r\n    cmsFailed(err) {\r\n      this.$notification['error']({\r\n        message: '登录失败',\r\n        description: err,\r\n        duration: 4,\r\n      })\r\n    },\r\n    requestFailed(err) {\r\n      this.$notification['error']({\r\n        message: '登录失败',\r\n        description: ((err.response || {}).data || {}).message || err.message || '请求出现错误，请稍后再试',\r\n        duration: 4,\r\n      })\r\n      this.loginBtn = false\r\n    },\r\n    validateMobile(rule, value, callback) {\r\n      if (!value || new RegExp(/^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$/).test(value)) {\r\n        callback()\r\n      } else {\r\n        callback('您的手机号码格式不正确!')\r\n      }\r\n    },\r\n    validateInputCode(rule, value, callback) {\r\n      if (!value || this.verifiedCode == this.inputCodeContent) {\r\n        callback()\r\n      } else {\r\n        callback('您输入的验证码不正确!')\r\n      }\r\n    },\r\n    generateCode(value) {\r\n      this.verifiedCode = value.toLowerCase()\r\n    },\r\n    inputCodeChange(e) {\r\n      this.inputCodeContent = e.target.value\r\n    },\r\n    loginSelectOk() {\r\n      this.loginSuccess()\r\n    },\r\n    getRouterData() {\r\n      this.$nextTick(() => {\r\n        if (this.$route.params.username) {\r\n          this.form.setFieldsValue({\r\n            username: this.$route.params.username,\r\n          })\r\n        }\r\n      })\r\n    },\r\n    //获取密码加密规则\r\n    getEncrypte() {\r\n      var encryptedString = Vue.ls.get(ENCRYPTED_STRING)\r\n      if (encryptedString == null) {\r\n        getEncryptedString().then((data) => {\r\n          this.encryptedString = data\r\n        })\r\n      } else {\r\n        this.encryptedString = encryptedString\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.user-layout-login {\r\n  label {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .getCaptcha {\r\n    display: block;\r\n    width: 100%;\r\n    height: 40px;\r\n  }\r\n\r\n  .forge-password {\r\n    font-size: 14px;\r\n  }\r\n\r\n  button.login-button {\r\n    padding: 0 15px;\r\n    font-size: 16px;\r\n    height: 40px;\r\n    width: 100%;\r\n  }\r\n\r\n  .user-login-other {\r\n    text-align: left;\r\n    margin-top: 24px;\r\n    line-height: 22px;\r\n\r\n    .item-icon {\r\n      font-size: 24px;\r\n      color: rgba(0, 0, 0, 0.2);\r\n      margin-left: 16px;\r\n      vertical-align: middle;\r\n      cursor: pointer;\r\n      transition: color 0.3s;\r\n\r\n      &:hover {\r\n        color: #1890ff;\r\n      }\r\n    }\r\n\r\n    .register {\r\n      float: right;\r\n    }\r\n  }\r\n}\r\n</style>\r\n<style>\r\n.valid-error .ant-select-selection__placeholder {\r\n  color: #f5222d;\r\n}\r\n</style>"],"sourceRoot":"src/views/user"}]}