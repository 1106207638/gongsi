{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\system\\modules\\SysCategoryModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\system\\modules\\SysCategoryModal.vue","mtime":1615948821510},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgaHR0cEFjdGlvbiwgZ2V0QWN0aW9uIH0gZnJvbSAnQC9hcGkvbWFuYWdlJzsKaW1wb3J0IHBpY2sgZnJvbSAnbG9kYXNoLnBpY2snOwppbXBvcnQgSlRyZWVTZWxlY3QgZnJvbSAnQC9jb21wb25lbnRzL2plZWNnL0pUcmVlU2VsZWN0JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTeXNDYXRlZ29yeU1vZGFsIiwKICBjb21wb25lbnRzOiB7CiAgICBKVHJlZVNlbGVjdDogSlRyZWVTZWxlY3QKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtOiB0aGlzLiRmb3JtLmNyZWF0ZUZvcm0odGhpcyksCiAgICAgIHRpdGxlOiAi5pON5L2cIiwKICAgICAgd2lkdGg6IDgwMCwKICAgICAgdmlzaWJsZTogZmFsc2UsCiAgICAgIG1vZGVsOiB7fSwKICAgICAgbGFiZWxDb2w6IHsKICAgICAgICB4czogewogICAgICAgICAgc3BhbjogMjQKICAgICAgICB9LAogICAgICAgIHNtOiB7CiAgICAgICAgICBzcGFuOiA1CiAgICAgICAgfQogICAgICB9LAogICAgICB3cmFwcGVyQ29sOiB7CiAgICAgICAgeHM6IHsKICAgICAgICAgIHNwYW46IDI0CiAgICAgICAgfSwKICAgICAgICBzbTogewogICAgICAgICAgc3BhbjogMTYKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGNvbmZpcm1Mb2FkaW5nOiBmYWxzZSwKICAgICAgdmFsaWRhdG9yUnVsZXM6IHsKICAgICAgICBjb2RlOiB7CiAgICAgICAgICBydWxlczogW3sKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXnsbvlnovnvJbnoIEhJwogICAgICAgICAgfSwgewogICAgICAgICAgICB2YWxpZGF0b3I6IHRoaXMudmFsaWRhdGVNeUNvZGUKICAgICAgICAgIH1dCiAgICAgICAgfSwKICAgICAgICBwaWQ6IHt9LAogICAgICAgIG5hbWU6IHsKICAgICAgICAgIHJ1bGVzOiBbewogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeexu+Wei+WQjeensCEnCiAgICAgICAgICB9XQogICAgICAgIH0KICAgICAgfSwKICAgICAgdXJsOiB7CiAgICAgICAgYWRkOiAiL3N5cy9jYXRlZ29yeS9hZGQiLAogICAgICAgIGVkaXQ6ICIvc3lzL2NhdGVnb3J5L2VkaXQiLAogICAgICAgIGNoZWNrQ29kZTogIi9zeXMvY2F0ZWdvcnkvY2hlY2tDb2RlIgogICAgICB9LAogICAgICBleHBhbmRlZFJvd0tleXM6IFtdLAogICAgICBwaWRGaWVsZDogInBpZCIsCiAgICAgIHN1YkV4cGFuZGVkS2V5czogW10KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkge30sCiAgbWV0aG9kczogewogICAgYWRkOiBmdW5jdGlvbiBhZGQoKSB7CiAgICAgIHRoaXMuZWRpdCh7fSk7CiAgICB9LAogICAgZWRpdDogZnVuY3Rpb24gZWRpdChyZWNvcmQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuZm9ybS5yZXNldEZpZWxkcygpOwogICAgICB0aGlzLm1vZGVsID0gT2JqZWN0LmFzc2lnbih7fSwgcmVjb3JkKTsKICAgICAgdGhpcy52aXNpYmxlID0gdHJ1ZTsKICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLmZvcm0uc2V0RmllbGRzVmFsdWUocGljayhfdGhpcy5tb2RlbCwgJ3BpZCcsICduYW1lJywgJ2NvZGUnKSk7CiAgICAgIH0pOwogICAgfSwKICAgIGNsb3NlOiBmdW5jdGlvbiBjbG9zZSgpIHsKICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnKTsKICAgICAgdGhpcy52aXNpYmxlID0gZmFsc2U7CiAgICB9LAogICAgaGFuZGxlT2s6IGZ1bmN0aW9uIGhhbmRsZU9rKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciB0aGF0ID0gdGhpczsgLy8g6Kem5Y+R6KGo5Y2V6aqM6K+BCgogICAgICB0aGlzLmZvcm0udmFsaWRhdGVGaWVsZHMoZnVuY3Rpb24gKGVyciwgdmFsdWVzKSB7CiAgICAgICAgaWYgKCFlcnIpIHsKICAgICAgICAgIHRoYXQuY29uZmlybUxvYWRpbmcgPSB0cnVlOwogICAgICAgICAgdmFyIGh0dHB1cmwgPSAnJzsKICAgICAgICAgIHZhciBtZXRob2QgPSAnJzsKCiAgICAgICAgICBpZiAoIV90aGlzMi5tb2RlbC5pZCkgewogICAgICAgICAgICBodHRwdXJsICs9IF90aGlzMi51cmwuYWRkOwogICAgICAgICAgICBtZXRob2QgPSAncG9zdCc7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBodHRwdXJsICs9IF90aGlzMi51cmwuZWRpdDsKICAgICAgICAgICAgbWV0aG9kID0gJ3B1dCc7CiAgICAgICAgICB9CgogICAgICAgICAgdmFyIGZvcm1EYXRhID0gT2JqZWN0LmFzc2lnbihfdGhpczIubW9kZWwsIHZhbHVlcyk7CiAgICAgICAgICBjb25zb2xlLmxvZygi6KGo5Y2V5o+Q5Lqk5pWw5o2uIiwgZm9ybURhdGEpOwogICAgICAgICAgaHR0cEFjdGlvbihodHRwdXJsLCBmb3JtRGF0YSwgbWV0aG9kKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgaWYgKHJlcy5zdWNjZXNzKSB7CiAgICAgICAgICAgICAgdGhhdC4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tZXNzYWdlKTsKICAgICAgICAgICAgICB0aGF0LnN1Ym1pdFN1Y2Nlc3MoZm9ybURhdGEpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHRoYXQuJG1lc3NhZ2Uud2FybmluZyhyZXMubWVzc2FnZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKCkgewogICAgICAgICAgICB0aGF0LmNvbmZpcm1Mb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgIHRoYXQuY2xvc2UoKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlQ2FuY2VsOiBmdW5jdGlvbiBoYW5kbGVDYW5jZWwoKSB7CiAgICAgIHRoaXMuY2xvc2UoKTsKICAgIH0sCiAgICBwb3B1cENhbGxiYWNrOiBmdW5jdGlvbiBwb3B1cENhbGxiYWNrKHJvdykgewogICAgICB0aGlzLmZvcm0uc2V0RmllbGRzVmFsdWUocGljayhyb3csICdwaWQnLCAnbmFtZScsICdjb2RlJykpOwogICAgfSwKICAgIHN1Ym1pdFN1Y2Nlc3M6IGZ1bmN0aW9uIHN1Ym1pdFN1Y2Nlc3MoZm9ybURhdGEpIHsKICAgICAgaWYgKCFmb3JtRGF0YS5pZCkgewogICAgICAgIHZhciB0cmVlRGF0YSA9IHRoaXMuJHJlZnMudHJlZVNlbGVjdC5nZXRDdXJyVHJlZURhdGEoKTsKICAgICAgICB0aGlzLmV4cGFuZGVkUm93S2V5cyA9IFtdOwogICAgICAgIHRoaXMuZ2V0RXhwYW5kS2V5c0J5UGlkKGZvcm1EYXRhW3RoaXMucGlkRmllbGRdLCB0cmVlRGF0YSwgdHJlZURhdGEpOwoKICAgICAgICBpZiAoZm9ybURhdGEucGlkICYmIHRoaXMuZXhwYW5kZWRSb3dLZXlzLmxlbmd0aCA9PSAwKSB7CiAgICAgICAgICB0aGlzLmV4cGFuZGVkUm93S2V5cyA9IHRoaXMuc3ViRXhwYW5kZWRLZXlzOwogICAgICAgIH0KCiAgICAgICAgdGhpcy4kZW1pdCgnb2snLCBmb3JtRGF0YSwgdGhpcy5leHBhbmRlZFJvd0tleXMucmV2ZXJzZSgpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRlbWl0KCdvaycsIGZvcm1EYXRhKTsKICAgICAgfQogICAgfSwKICAgIGdldEV4cGFuZEtleXNCeVBpZDogZnVuY3Rpb24gZ2V0RXhwYW5kS2V5c0J5UGlkKHBpZCwgYXJyLCBhbGwpIHsKICAgICAgaWYgKHBpZCAmJiBhcnIgJiYgYXJyLmxlbmd0aCA+IDApIHsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykgewogICAgICAgICAgaWYgKGFycltpXS5rZXkgPT0gcGlkKSB7CiAgICAgICAgICAgIHRoaXMuZXhwYW5kZWRSb3dLZXlzLnB1c2goYXJyW2ldLmtleSk7CiAgICAgICAgICAgIHRoaXMuZ2V0RXhwYW5kS2V5c0J5UGlkKGFycltpXVsncGFyZW50SWQnXSwgYWxsLCBhbGwpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy5nZXRFeHBhbmRLZXlzQnlQaWQocGlkLCBhcnJbaV0uY2hpbGRyZW4sIGFsbCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgdmFsaWRhdGVNeUNvZGU6IGZ1bmN0aW9uIHZhbGlkYXRlTXlDb2RlKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICB2YXIgcGFyYW1zID0gewogICAgICAgIHBpZDogdGhpcy5mb3JtLmdldEZpZWxkVmFsdWUoJ3BpZCcpLAogICAgICAgIGNvZGU6IHZhbHVlCiAgICAgIH07CiAgICAgIGdldEFjdGlvbih0aGlzLnVybC5jaGVja0NvZGUsIHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5zdWNjZXNzKSB7CiAgICAgICAgICBjYWxsYmFjaygpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjYWxsYmFjayhyZXMubWVzc2FnZSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["SysCategoryModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"width\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    :destroyOnClose=\"true\"\r\n    cancelText=\"关闭\">\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item label=\"父级节点\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <j-tree-select\r\n            ref=\"treeSelect\"\r\n            placeholder=\"请选择父级节点\"\r\n            v-decorator=\"['pid', validatorRules.pid]\"\r\n            dict=\"sys_category,name,id\"\r\n            pidField=\"pid\"\r\n            pidValue=\"0\">\r\n          </j-tree-select>\r\n        </a-form-item>\r\n          \r\n        <a-form-item label=\"分类名称\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input v-decorator=\"[ 'name', validatorRules.name]\" placeholder=\"请输入分类名称\"></a-input>\r\n        </a-form-item>\r\n          \r\n        <!--<a-form-item label=\"类型编码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input v-decorator=\"[ 'code', validatorRules.code]\" placeholder=\"请输入类型编码\"></a-input>\r\n        </a-form-item>-->\r\n\r\n        <!--<a-form-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <span style=\"font-size: 12px;color:red\" slot=\"label\">编码规则(注)</span>\r\n          <span style=\"font-size: 12px;color:red\">\r\n            编码值前缀需和父节点保持一致,比如父级节点编码是A01则当前编码必须以A01开头\r\n          </span>\r\n        </a-form-item>-->\r\n          \r\n        \r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n\r\n  import { httpAction,getAction } from '@/api/manage'\r\n  import pick from 'lodash.pick'\r\n  import JTreeSelect from '@/components/jeecg/JTreeSelect'\r\n  \r\n  export default {\r\n    name: \"SysCategoryModal\",\r\n    components: { \r\n      JTreeSelect\r\n    },\r\n    data () {\r\n      return {\r\n        form: this.$form.createForm(this),\r\n        title:\"操作\",\r\n        width:800,\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n\r\n        confirmLoading: false,\r\n        validatorRules:{\r\n          code:{\r\n            rules: [{\r\n              required: true, message: '请输入类型编码!'\r\n            },{\r\n              validator: this.validateMyCode\r\n            }]\r\n          },\r\n          pid:{},\r\n          name:{rules: [{ required: true, message: '请输入类型名称!' }]}\r\n        },\r\n        url: {\r\n          add: \"/sys/category/add\",\r\n          edit: \"/sys/category/edit\",\r\n          checkCode:\"/sys/category/checkCode\",\r\n        },\r\n        expandedRowKeys:[],\r\n        pidField:\"pid\",\r\n        subExpandedKeys:[]\r\n     \r\n      }\r\n    },\r\n    created () {\r\n    },\r\n    methods: {\r\n      add () {\r\n        this.edit({});\r\n      },\r\n      edit (record) {\r\n        this.form.resetFields();\r\n        this.model = Object.assign({}, record);\r\n        this.visible = true;\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model,'pid','name','code'))\r\n        })\r\n      },\r\n      close () {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      handleOk () {\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true;\r\n            let httpurl = '';\r\n            let method = '';\r\n            if(!this.model.id){\r\n              httpurl+=this.url.add;\r\n              method = 'post';\r\n            }else{\r\n              httpurl+=this.url.edit;\r\n               method = 'put';\r\n            }\r\n            let formData = Object.assign(this.model, values);\r\n            console.log(\"表单提交数据\",formData)\r\n            httpAction(httpurl,formData,method).then((res)=>{\r\n              if(res.success){\r\n                that.$message.success(res.message);\r\n                that.submitSuccess(formData)\r\n              }else{\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              that.close();\r\n            })\r\n          }\r\n         \r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n      popupCallback(row){\r\n        this.form.setFieldsValue(pick(row,'pid','name','code'))\r\n      },\r\n      submitSuccess(formData){\r\n        if(!formData.id){\r\n          let treeData = this.$refs.treeSelect.getCurrTreeData()\r\n          this.expandedRowKeys=[]\r\n          this.getExpandKeysByPid(formData[this.pidField],treeData,treeData)\r\n          if(formData.pid && this.expandedRowKeys.length==0){\r\n            this.expandedRowKeys = this.subExpandedKeys;\r\n          }\r\n          this.$emit('ok',formData,this.expandedRowKeys.reverse());\r\n        }else{\r\n          this.$emit('ok',formData);\r\n      }\r\n      },\r\n      getExpandKeysByPid(pid,arr,all){\r\n        if(pid && arr && arr.length>0){\r\n          for(let i=0;i<arr.length;i++){\r\n            if(arr[i].key==pid){\r\n              this.expandedRowKeys.push(arr[i].key)\r\n              this.getExpandKeysByPid(arr[i]['parentId'],all,all)\r\n            }else{\r\n              this.getExpandKeysByPid(pid,arr[i].children,all)\r\n            }\r\n          }\r\n        }\r\n      },\r\n      validateMyCode(rule, value, callback){\r\n        let params = {\r\n          pid: this.form.getFieldValue('pid'),\r\n          code: value\r\n        }\r\n        getAction(this.url.checkCode,params).then((res) => {\r\n          if (res.success) {\r\n            callback()\r\n          } else {\r\n            callback(res.message)\r\n          }\r\n        })\r\n      },\r\n      \r\n      \r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/views/system/modules"}]}