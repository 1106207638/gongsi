{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\modules\\monitor\\JvmInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\modules\\monitor\\JvmInfo.vue","mtime":1615948820445},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICdAL2FwaS9tYW5hZ2UnOwptb21lbnQubG9jYWxlKCd6aC1jbicpOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpbWU6ICcnLAogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICB0YWJsZUxvYWRpbmc6IHRydWUsCiAgICAgIGNvbHVtbnM6IFt7CiAgICAgICAgdGl0bGU6ICflj4LmlbAnLAogICAgICAgIHdpZHRoOiAnMzAlJywKICAgICAgICBkYXRhSW5kZXg6ICdwYXJhbScsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsKICAgICAgICAgIGN1c3RvbVJlbmRlcjogJ3BhcmFtJwogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIHRpdGxlOiAn5o+P6L+wJywKICAgICAgICB3aWR0aDogJzQwJScsCiAgICAgICAgZGF0YUluZGV4OiAndGV4dCcsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsKICAgICAgICAgIGN1c3RvbVJlbmRlcjogJ3RleHQnCiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICflvZPliY3lgLwnLAogICAgICAgIHdpZHRoOiAnMzAlJywKICAgICAgICBkYXRhSW5kZXg6ICd2YWx1ZScsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsKICAgICAgICAgIGN1c3RvbVJlbmRlcjogJ3ZhbHVlJwogICAgICAgIH0KICAgICAgfV0sCiAgICAgIGRhdGFTb3VyY2U6IFtdLAogICAgICAvLyDliJfooajpgJrov4cgdGV4dEluZm8g5riy5p+T5Ye66aKc6Imy44CB5o+P6L+w5ZKM5Y2V5L2NCiAgICAgIHRleHRJbmZvOiB7CiAgICAgICAgJ2p2bS5tZW1vcnkubWF4JzogewogICAgICAgICAgY29sb3I6ICdwdXJwbGUnLAogICAgICAgICAgdGV4dDogJ0pWTSDmnIDlpKflhoXlrZgnLAogICAgICAgICAgdW5pdDogJ01CJwogICAgICAgIH0sCiAgICAgICAgJ2p2bS5tZW1vcnkuY29tbWl0dGVkJzogewogICAgICAgICAgY29sb3I6ICdwdXJwbGUnLAogICAgICAgICAgdGV4dDogJ0pWTSDlj6/nlKjlhoXlrZgnLAogICAgICAgICAgdW5pdDogJ01CJwogICAgICAgIH0sCiAgICAgICAgJ2p2bS5tZW1vcnkudXNlZCc6IHsKICAgICAgICAgIGNvbG9yOiAncHVycGxlJywKICAgICAgICAgIHRleHQ6ICdKVk0g5bey55So5YaF5a2YJywKICAgICAgICAgIHVuaXQ6ICdNQicKICAgICAgICB9LAogICAgICAgICdqdm0uYnVmZmVyLm1lbW9yeS51c2VkJzogewogICAgICAgICAgY29sb3I6ICdjeWFuJywKICAgICAgICAgIHRleHQ6ICdKVk0g57yT5Yay5Yy65bey55So5YaF5a2YJywKICAgICAgICAgIHVuaXQ6ICdNQicKICAgICAgICB9LAogICAgICAgICdqdm0uYnVmZmVyLmNvdW50JzogewogICAgICAgICAgY29sb3I6ICdjeWFuJywKICAgICAgICAgIHRleHQ6ICflvZPliY3nvJPlhrLljLrmlbDph48nLAogICAgICAgICAgdW5pdDogJ+S4qicKICAgICAgICB9LAogICAgICAgICdqdm0udGhyZWFkcy5kYWVtb24nOiB7CiAgICAgICAgICBjb2xvcjogJ2dyZWVuJywKICAgICAgICAgIHRleHQ6ICdKVk0g5a6I5oqk57q/56iL5pWw6YePJywKICAgICAgICAgIHVuaXQ6ICfkuKonCiAgICAgICAgfSwKICAgICAgICAnanZtLnRocmVhZHMubGl2ZSc6IHsKICAgICAgICAgIGNvbG9yOiAnZ3JlZW4nLAogICAgICAgICAgdGV4dDogJ0pWTSDlvZPliY3mtLvot4Pnur/nqIvmlbDph48nLAogICAgICAgICAgdW5pdDogJ+S4qicKICAgICAgICB9LAogICAgICAgICdqdm0udGhyZWFkcy5wZWFrJzogewogICAgICAgICAgY29sb3I6ICdncmVlbicsCiAgICAgICAgICB0ZXh0OiAnSlZNIOWzsOWAvOe6v+eoi+aVsOmHjycsCiAgICAgICAgICB1bml0OiAn5LiqJwogICAgICAgIH0sCiAgICAgICAgJ2p2bS5jbGFzc2VzLmxvYWRlZCc6IHsKICAgICAgICAgIGNvbG9yOiAnb3JhbmdlJywKICAgICAgICAgIHRleHQ6ICdKVk0g5bey5Yqg6L29IENsYXNzIOaVsOmHjycsCiAgICAgICAgICB1bml0OiAn5LiqJwogICAgICAgIH0sCiAgICAgICAgJ2p2bS5jbGFzc2VzLnVubG9hZGVkJzogewogICAgICAgICAgY29sb3I6ICdvcmFuZ2UnLAogICAgICAgICAgdGV4dDogJ0pWTSDmnKrliqDovb0gQ2xhc3Mg5pWw6YePJywKICAgICAgICAgIHVuaXQ6ICfkuKonCiAgICAgICAgfSwKICAgICAgICAnanZtLmdjLm1lbW9yeS5hbGxvY2F0ZWQnOiB7CiAgICAgICAgICBjb2xvcjogJ3BpbmsnLAogICAgICAgICAgdGV4dDogJ0dDIOaXtiwg5bm06L275Luj5YiG6YWN55qE5YaF5a2Y56m66Ze0JywKICAgICAgICAgIHVuaXQ6ICdNQicKICAgICAgICB9LAogICAgICAgICdqdm0uZ2MubWVtb3J5LnByb21vdGVkJzogewogICAgICAgICAgY29sb3I6ICdwaW5rJywKICAgICAgICAgIHRleHQ6ICdHQyDml7YsIOiAgeW5tOS7o+WIhumFjeeahOWGheWtmOepuumXtCcsCiAgICAgICAgICB1bml0OiAnTUInCiAgICAgICAgfSwKICAgICAgICAnanZtLmdjLm1heC5kYXRhLnNpemUnOiB7CiAgICAgICAgICBjb2xvcjogJ3BpbmsnLAogICAgICAgICAgdGV4dDogJ0dDIOaXtiwg6ICB5bm05Luj55qE5pyA5aSn5YaF5a2Y56m66Ze0JywKICAgICAgICAgIHVuaXQ6ICdNQicKICAgICAgICB9LAogICAgICAgICdqdm0uZ2MubGl2ZS5kYXRhLnNpemUnOiB7CiAgICAgICAgICBjb2xvcjogJ3BpbmsnLAogICAgICAgICAgdGV4dDogJ0Z1bGxHQyDml7YsIOiAgeW5tOS7o+eahOWGheWtmOepuumXtCcsCiAgICAgICAgICB1bml0OiAnTUInCiAgICAgICAgfSwKICAgICAgICAnanZtLmdjLnBhdXNlLmNvdW50JzogewogICAgICAgICAgY29sb3I6ICdibHVlJywKICAgICAgICAgIHRleHQ6ICfns7vnu5/lkK/liqjku6XmnaVHQyDmrKHmlbAnLAogICAgICAgICAgdW5pdDogJ+asoScKICAgICAgICB9LAogICAgICAgICdqdm0uZ2MucGF1c2UudG90YWxUaW1lJzogewogICAgICAgICAgY29sb3I6ICdibHVlJywKICAgICAgICAgIHRleHQ6ICfns7vnu5/lkK/liqjku6XmnaVHQyDmgLvogJfml7YnLAogICAgICAgICAgdW5pdDogJ+enkicKICAgICAgICB9CiAgICAgIH0sCiAgICAgIC8vIOW9k+S4gOadoeiusOW9leS4remcgOimgeWPluWHuuWkmuadoeaVsOaNrueahOaXtuWAmemcgOimgemFjee9ruivpeWtl+autQogICAgICBtb3JlSW5mbzogewogICAgICAgICdqdm0uZ2MucGF1c2UnOiBbJy5jb3VudCcsICcudG90YWxUaW1lJ10KICAgICAgfQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmxvYWRUb21jYXRJbmZvKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVDbGlja1VwZGF0ZTogZnVuY3Rpb24gaGFuZGxlQ2xpY2tVcGRhdGUoKSB7CiAgICAgIHRoaXMubG9hZFRvbWNhdEluZm8oKTsKICAgIH0sCiAgICBsb2FkVG9tY2F0SW5mbzogZnVuY3Rpb24gbG9hZFRvbWNhdEluZm8oKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnRhYmxlTG9hZGluZyA9IHRydWU7CiAgICAgIHRoaXMudGltZSA9IG1vbWVudCgpLmZvcm1hdCgnWVlZWeW5tE1N5pyIRETml6UgSEjml7ZtbeWIhnNz56eSJyk7CiAgICAgIFByb21pc2UuYWxsKFtnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvanZtLm1lbW9yeS5tYXgnKSwgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL2p2bS5tZW1vcnkuY29tbWl0dGVkJyksIGdldEFjdGlvbignYWN0dWF0b3IvbWV0cmljcy9qdm0ubWVtb3J5LnVzZWQnKSwgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL2p2bS5idWZmZXIubWVtb3J5LnVzZWQnKSwgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL2p2bS5idWZmZXIuY291bnQnKSwgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL2p2bS50aHJlYWRzLmRhZW1vbicpLCBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvanZtLnRocmVhZHMubGl2ZScpLCBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvanZtLnRocmVhZHMucGVhaycpLCBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvanZtLmNsYXNzZXMubG9hZGVkJyksIGdldEFjdGlvbignYWN0dWF0b3IvbWV0cmljcy9qdm0uY2xhc3Nlcy51bmxvYWRlZCcpLCBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvanZtLmdjLm1lbW9yeS5hbGxvY2F0ZWQnKSwgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL2p2bS5nYy5tZW1vcnkucHJvbW90ZWQnKSwgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL2p2bS5nYy5tYXguZGF0YS5zaXplJyksIGdldEFjdGlvbignYWN0dWF0b3IvbWV0cmljcy9qdm0uZ2MubGl2ZS5kYXRhLnNpemUnKSwgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL2p2bS5nYy5wYXVzZScpXSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIGluZm8gPSBbXTsKICAgICAgICByZXMuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUsIGlkKSB7CiAgICAgICAgICB2YXIgbW9yZSA9IF90aGlzLm1vcmVJbmZvW3ZhbHVlLm5hbWVdOwoKICAgICAgICAgIGlmICghKG1vcmUgaW5zdGFuY2VvZiBBcnJheSkpIHsKICAgICAgICAgICAgbW9yZSA9IFsnJ107CiAgICAgICAgICB9CgogICAgICAgICAgbW9yZS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpZHgpIHsKICAgICAgICAgICAgdmFyIHBhcmFtID0gdmFsdWUubmFtZSArIGl0ZW07CiAgICAgICAgICAgIHZhciB2YWwgPSB2YWx1ZS5tZWFzdXJlbWVudHNbaWR4XS52YWx1ZTsKCiAgICAgICAgICAgIGlmIChwYXJhbSA9PT0gJ2p2bS5tZW1vcnkubWF4JyB8fCBwYXJhbSA9PT0gJ2p2bS5tZW1vcnkuY29tbWl0dGVkJyB8fCBwYXJhbSA9PT0gJ2p2bS5tZW1vcnkudXNlZCcgfHwgcGFyYW0gPT09ICdqdm0uYnVmZmVyLm1lbW9yeS51c2VkJyB8fCBwYXJhbSA9PT0gJ2p2bS5nYy5tZW1vcnkuYWxsb2NhdGVkJyB8fCBwYXJhbSA9PT0gJ2p2bS5nYy5tZW1vcnkucHJvbW90ZWQnIHx8IHBhcmFtID09PSAnanZtLmdjLm1heC5kYXRhLnNpemUnIHx8IHBhcmFtID09PSAnanZtLmdjLmxpdmUuZGF0YS5zaXplJykgewogICAgICAgICAgICAgIHZhbCA9IF90aGlzLmNvbnZlcnQodmFsLCBOdW1iZXIpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpbmZvLnB1c2goewogICAgICAgICAgICAgIGlkOiBwYXJhbSArIGlkLAogICAgICAgICAgICAgIHBhcmFtOiBwYXJhbSwKICAgICAgICAgICAgICB0ZXh0OiAnZmFsc2UgdmFsdWUnLAogICAgICAgICAgICAgIHZhbHVlOiB2YWwKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgICBfdGhpcy5kYXRhU291cmNlID0gaW5mbzsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBjb25zb2xlLmVycm9yKGUpOwoKICAgICAgICBfdGhpcy4kbWVzc2FnZS5lcnJvcign6I635Y+WSlZN5L+h5oGv5aSx6LSlJyk7CiAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICBfdGhpcy50YWJsZUxvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgY29udmVydDogZnVuY3Rpb24gY29udmVydCh2YWx1ZSwgdHlwZSkgewogICAgICBpZiAodHlwZSA9PT0gTnVtYmVyKSB7CiAgICAgICAgcmV0dXJuIE51bWJlcih2YWx1ZSAvIDEwNDg1NzYpLnRvRml4ZWQoMyk7CiAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gRGF0ZSkgewogICAgICAgIHJldHVybiBtb21lbnQodmFsdWUgKiAxMDAwKS5mb3JtYXQoJ1lZWVktTU0tREQgSEg6bW06c3MnKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHZhbHVlOwogICAgfQogIH0KfTs="},{"version":3,"sources":["JvmInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-skeleton active :loading=\"loading\" :paragraph=\"{rows: 17}\">\r\n    <a-card :bordered=\"false\">\r\n\r\n      <a-alert type=\"info\" :showIcon=\"true\">\r\n        <div slot=\"message\">\r\n          上次更新时间：{{ this.time }}\r\n          <a-divider type=\"vertical\"/>\r\n          <a @click=\"handleClickUpdate\">立即更新</a>\r\n        </div>\r\n      </a-alert>\r\n\r\n      <a-table\r\n        rowKey=\"id\"\r\n        size=\"middle\"\r\n        :columns=\"columns\"\r\n        :dataSource=\"dataSource\"\r\n        :pagination=\"false\"\r\n        :loading=\"tableLoading\"\r\n        style=\"margin-top: 20px;\">\r\n\r\n        <template slot=\"param\" slot-scope=\"text, record\">\r\n          <a-tag :color=\"textInfo[record.param].color\">{{ text }}</a-tag>\r\n        </template>\r\n\r\n        <template slot=\"text\" slot-scope=\"text, record\">\r\n          {{ textInfo[record.param].text }}\r\n        </template>\r\n\r\n        <template slot=\"value\" slot-scope=\"text, record\">\r\n          {{ text }} {{ textInfo[record.param].unit }}\r\n        </template>\r\n\r\n      </a-table>\r\n    </a-card>\r\n  </a-skeleton>\r\n</template>\r\n<script>\r\n  import moment from 'moment'\r\n  import { getAction } from '@/api/manage'\r\n\r\n  moment.locale('zh-cn')\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        time: '',\r\n        loading: true,\r\n        tableLoading: true,\r\n        columns: [{\r\n          title: '参数',\r\n          width: '30%',\r\n          dataIndex: 'param',\r\n          scopedSlots: { customRender: 'param' }\r\n        }, {\r\n          title: '描述',\r\n          width: '40%',\r\n          dataIndex: 'text',\r\n          scopedSlots: { customRender: 'text' }\r\n        }, {\r\n          title: '当前值',\r\n          width: '30%',\r\n          dataIndex: 'value',\r\n          scopedSlots: { customRender: 'value' }\r\n        }],\r\n        dataSource: [],\r\n        // 列表通过 textInfo 渲染出颜色、描述和单位\r\n        textInfo: {\r\n          'jvm.memory.max': { color: 'purple', text: 'JVM 最大内存', unit: 'MB' },\r\n          'jvm.memory.committed': { color: 'purple', text: 'JVM 可用内存', unit: 'MB' },\r\n          'jvm.memory.used': { color: 'purple', text: 'JVM 已用内存', unit: 'MB' },\r\n          'jvm.buffer.memory.used': { color: 'cyan', text: 'JVM 缓冲区已用内存', unit: 'MB' },\r\n          'jvm.buffer.count': { color: 'cyan', text: '当前缓冲区数量', unit: '个' },\r\n          'jvm.threads.daemon': { color: 'green', text: 'JVM 守护线程数量', unit: '个' },\r\n          'jvm.threads.live': { color: 'green', text: 'JVM 当前活跃线程数量', unit: '个' },\r\n          'jvm.threads.peak': { color: 'green', text: 'JVM 峰值线程数量', unit: '个' },\r\n          'jvm.classes.loaded': { color: 'orange', text: 'JVM 已加载 Class 数量', unit: '个' },\r\n          'jvm.classes.unloaded': { color: 'orange', text: 'JVM 未加载 Class 数量', unit: '个' },\r\n          'jvm.gc.memory.allocated': { color: 'pink', text: 'GC 时, 年轻代分配的内存空间', unit: 'MB' },\r\n          'jvm.gc.memory.promoted': { color: 'pink', text: 'GC 时, 老年代分配的内存空间', unit: 'MB' },\r\n          'jvm.gc.max.data.size': { color: 'pink', text: 'GC 时, 老年代的最大内存空间', unit: 'MB' },\r\n          'jvm.gc.live.data.size': { color: 'pink', text: 'FullGC 时, 老年代的内存空间', unit: 'MB' },\r\n          'jvm.gc.pause.count': { color: 'blue', text: '系统启动以来GC 次数', unit: '次' },\r\n          'jvm.gc.pause.totalTime': { color: 'blue', text: '系统启动以来GC 总耗时', unit: '秒' }\r\n        },\r\n        // 当一条记录中需要取出多条数据的时候需要配置该字段\r\n        moreInfo: {\r\n          'jvm.gc.pause': ['.count', '.totalTime']\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.loadTomcatInfo()\r\n    },\r\n    methods: {\r\n\r\n      handleClickUpdate() {\r\n        this.loadTomcatInfo()\r\n      },\r\n\r\n      loadTomcatInfo() {\r\n        this.tableLoading = true\r\n        this.time = moment().format('YYYY年MM月DD日 HH时mm分ss秒')\r\n        Promise.all([\r\n          getAction('actuator/metrics/jvm.memory.max'),\r\n          getAction('actuator/metrics/jvm.memory.committed'),\r\n          getAction('actuator/metrics/jvm.memory.used'),\r\n          getAction('actuator/metrics/jvm.buffer.memory.used'),\r\n          getAction('actuator/metrics/jvm.buffer.count'),\r\n          getAction('actuator/metrics/jvm.threads.daemon'),\r\n          getAction('actuator/metrics/jvm.threads.live'),\r\n          getAction('actuator/metrics/jvm.threads.peak'),\r\n          getAction('actuator/metrics/jvm.classes.loaded'),\r\n          getAction('actuator/metrics/jvm.classes.unloaded'),\r\n          getAction('actuator/metrics/jvm.gc.memory.allocated'),\r\n          getAction('actuator/metrics/jvm.gc.memory.promoted'),\r\n          getAction('actuator/metrics/jvm.gc.max.data.size'),\r\n          getAction('actuator/metrics/jvm.gc.live.data.size'),\r\n          getAction('actuator/metrics/jvm.gc.pause')\r\n        ]).then((res) => {\r\n\r\n          let info = []\r\n          res.forEach((value, id) => {\r\n            let more = this.moreInfo[value.name]\r\n            if (!(more instanceof Array)) {\r\n              more = ['']\r\n            }\r\n            more.forEach((item, idx) => {\r\n              let param = value.name + item\r\n              let val = value.measurements[idx].value\r\n\r\n              if (param === 'jvm.memory.max'\r\n                || param === 'jvm.memory.committed'\r\n                || param === 'jvm.memory.used'\r\n                || param === 'jvm.buffer.memory.used'\r\n                || param === 'jvm.gc.memory.allocated'\r\n                || param === 'jvm.gc.memory.promoted'\r\n                || param === 'jvm.gc.max.data.size'\r\n                || param === 'jvm.gc.live.data.size'\r\n              ) {\r\n                val = this.convert(val, Number)\r\n              }\r\n              info.push({ id: param + id, param, text: 'false value', value: val })\r\n            })\r\n          })\r\n          this.dataSource = info\r\n\r\n\r\n        }).catch((e) => {\r\n          console.error(e)\r\n          this.$message.error('获取JVM信息失败')\r\n        }).finally(() => {\r\n          this.loading = false\r\n          this.tableLoading = false\r\n        })\r\n      },\r\n\r\n      convert(value, type) {\r\n        if (type === Number) {\r\n          return Number(value / 1048576).toFixed(3)\r\n        } else if (type === Date) {\r\n          return moment(value * 1000).format('YYYY-MM-DD HH:mm:ss')\r\n        }\r\n        return value\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style></style>\r\n"],"sourceRoot":"src/views/modules/monitor"}]}