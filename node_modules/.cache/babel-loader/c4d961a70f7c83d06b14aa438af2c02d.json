{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\zbtest\\zxtb.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\zbtest\\zxtb.vue","mtime":1615948822838},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["zxtb.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-card :bordered=\"false\" v-if=\"columns\">\n    <!-- 查询区域 -->\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\" @keyup.enter.native=\"searchQuery\">\n        <a-row :gutter=\"24\">\n          <a-col :xl=\"3\" :lg=\"6\" :md=\"8\" :sm=\"24\">\n            <a-form-item label=\"席位\">\n              <!-- <j-input placeholder=\"请输入名称模糊查询\" v-model=\"queryParam.name\"></j-input> -->\n              {{ userInfo.departName }}\n            </a-form-item>\n          </a-col>\n          <a-col :xl=\"3\" :lg=\"6\" :md=\"8\" :sm=\"24\">\n            <a-form-item label=\"报告人\">\n              <!-- <a-input placeholder=\"请输入名称查询\" v-model=\"queryParam.age\"></a-input>-->\n              <!-- <a-input placeholder=\"最小年龄\" type=\"ge\" v-model=\"queryParam.age_begin\" style=\"width:calc(50% - 15px);\"></a-input>\n              <span class=\"group-query-strig\">~</span>\n              <a-input placeholder=\"最大年龄\" type=\"le\" v-model=\"queryParam.age_end\" style=\"width:calc(50% - 15px);\"></a-input> -->\n              {{ userInfo.realName }}\n            </a-form-item>\n          </a-col>\n          <a-col :xl=\"6\" :lg=\"6\" :md=\"8\" :sm=\"24\">\n            <a-form-item label=\"报告日期\">\n              <a-date-picker v-model=\"formData.createTime\"\n                             :disabled=\"dateDisable\"\n                             format=\"YYYY-MM-DD\"\n                             @change=\"onChange\"\n              />\n            </a-form-item>\n          </a-col>\n          <a-col :xl=\"6\" :lg=\"6\" :md=\"8\" :sm=\"24\">\n            <a-form-item label=\"采报类型\">\n              <j-dict-select-tag @input=\"changeType\" v-model=\"formData.type\" :moren=\"false\" placeholder=\"请选择采报类型\"\n                                 dictCode=\"ReportType\"/>\n\n            </a-form-item>\n          </a-col>\n          <a-col :xl=\"6\" :lg=\"6\" :md=\"8\" :sm=\"24\">\n            <a-form-item label=\"采报模型\">\n              <a-select @change=\"templateChange\" v-model=\"formData.template\" :disabled=\"istype\"\n                        placeholder=\"请选择采报模型\">\n                <a-select-option :value=\"item.headId\" :key=\"index\" v-for=\"(item,index) in templateList\">\n                  {{ item.headName }}\n                </a-select-option>\n              </a-select>\n            </a-form-item>\n          </a-col>\n          <!-- <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\n            <a-col :xl=\"4\" :lg=\"6\" :md=\"8\" :sm=\"24\">\n              <a-button type=\"primary\" @click=\"searchQuery\" icon=\"search\">查询</a-button>\n              <a-button type=\"primary\" @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\n            </a-col>\n          </span> -->\n        </a-row>\n      </a-form>\n    </div>\n    <j-demo ref=\"zxcb\" v-if=\"jdemoshow\" :formData=\"formData\" :columns=\"columns\" :importBtn=\"importBtn\"\n            :dataSource=\"dataSource\"></j-demo>\n    <a-tabs default-active-key=\"0\" @change=\"callback\" >\n      <a-tab-pane :key=\"index\" :tab=\"item.name\" v-for=\"(item,index) in columnss\" :forceRender=\"true\" v-if=\"!jdemoshow\">\n        <j-demo :columns=\"item.columns\"  :importBtn=\"true\" :ref=\"'ref'+index\" @loadDataUpload=\"loadDataUpload\"\n                @getDatas=\"getDatas\" :formData=\"formData\" :dataSource=\"item.dataSource\"></j-demo>\n      </a-tab-pane>\n    </a-tabs>\n  </a-card>\n</template>\n\n<script>\nimport {\n  initDictOptions,\n  filterDictText,\n  filterDictTextByCache\n} from '@/components/dict/JDictSelectUtil'\nimport {JeecgListMixin} from '@/mixins/JeecgListMixin'\nimport Vue from 'vue'\nimport {filterObj} from '@/utils/util';\nimport JDemo from './JDemo.vue';\nimport UploadDemo from './uploadDemo.vue';\nimport {getAction,postAction} from \"@api/manage\";\nimport {JVXETypes} from \"@comp/jeecg/JVxeTable\";\nimport {JEditableTableMixin} from '@/mixins/JEditableTableMixin'\nimport {FormTypes, getRefPromise} from '@/utils/JEditableTableUtil'\n\nexport default {\n  name: \"JeecgDemoList\",\n  mixins: [JeecgListMixin, JEditableTableMixin],\n  components: {\n    JDemo,\n    UploadDemo\n  },\n  watch: {\n    \"columnss\": {\n      handler: function (val, oldVal) {\n        this.columnss = val\n      },\n      deep: true\n    }\n  },\n  data() {\n    return {\n      importBtn:false,\n      disableMixinCreated: true,\n      // 模板列表\n      jdemoshow: false,\n      templateList: [],\n      istype: true,\n      // 选择区域\n      formData: {\n        createTime: '',//时间\n        type: 'SynthesizeLogging',//采报类型\n        template: ''//模板\n      },\n\n      typeoption: [{\n        name: '综合日志',\n        value: 0\n      }, {\n        name: '执勤数据',\n        value: 1\n      }, {\n        name: '执勤报文',\n        value: 2\n      }, {\n        name: '军委填报表',\n        value: 3\n      }, {\n        name: '军委系统表',\n        value: 4\n      }],\n      stypeoption: [{\n        name: '模型一',\n        value: 0\n      }, {\n        name: '模型二',\n        value: 1\n      }, {\n        name: '模型三',\n        value: 2\n      }, {\n        name: '模型四',\n        value: 3\n      }, {\n        name: '模型五',\n        value: 4\n      }],\n      //列定义\n      url: {\n        list: \"/southTable/queryTableData\", //数据\n        structure: '/southTable/queryTableStructure',//结构\n        delete: \"/test/jeecgDemo/delete\",\n        deleteBatch: \"/test/jeecgDemo/deleteBatch\",\n        exportXlsUrl: \"/test/jeecgDemo/exportXls\",\n        templateUrl: '/reportFormModel/queryAllModel',\n        userInfo: '/southTable/queryUserInfo',//基本信息\n        save: '/southTable/reportFromDataSave'\n      },\n      isshowlist: true,\n      // 数据源，控制表格的数据\n      dataSource: [],\n      // 列配置，控制表格显示的列\n      columns: [],\n      columnss: [],\n      userInfo: null,\n      refKeys: ['ref0', 'ref1'],\n      dateDisable:false,\n    }\n  },\n  methods: {\n    loadDataUpload(arr) {\n      this.jdemoshow = true\n      for (var i = 0; i < arr.length; i++) {\n        this.columnss[i].dataSource = arr[i]\n      }\n\n      this.jdemoshow = false\n    },\n    getDatas() {\n      this.getDatass().then(tables => {\n        var arr = []\n        console.log(tables)\n        for(var i = 0 ; i < tables.length;i++) {\n          arr.push(tables[i][0].validAllEvent())\n        }\n        for(var i = 0 ;i< arr.length;i++) {\n          for(var j  =0;j< arr[i].length;j++) {\n            if(arr[i][j].parent_id) {\n              var id = arr[i][j].parent_id\n            }else {\n              var id = ''\n            }\n          }\n        }\n        let object = {\n          id:\"id\",\n          list:[[],[]]\n        }\n         var obj = {\n              templateType: this.formData.template,\n              reportFromType: this.formData.type,\n              list:arr,\n              id\n            }\n            // 【模拟保存】\n            this.loading = true\n            postAction(this.url.save, obj).then(res => {\n              if (res.success) {\n                this.$message.success(`保存成功！`)\n              } else {\n                this.$message.warn(`保存失败：` + res.message)\n              }\n            }).finally(() => {\n              this.loading = false\n            })\n      })\n    },\n    getDatass() {\n      var arr = ['ref0', 'ref1']\n      let values = arr.map(key => getRefPromise(this, key))\n      return Promise.all(values)\n    }\n    ,\n    callback() {\n    }\n    ,\n    // 获取模板类型\n    getTemplateList() {\n      var formData = {}\n      getAction(this.url.templateUrl, formData).then(res => {\n        if (res.success) {\n          // 将查询的数据赋值给 dataSource\n          this.templateList = res.result\n          // 重置选择\n        } else {\n          this.$error({title: '主表查询失败', content: res.message})\n        }\n      }).finally(() => {\n        // 这里是无论成功或失败都会执行的方法，在这里关闭loading\n        this.loading = false\n      })\n      getAction(this.url.userInfo, formData).then(res => {\n        if (res.success) {\n          // 将查询的数据赋值给 dataSource\n          this.userInfo = res.result\n          // 重置选择\n        } else {\n          this.$error({title: '主表查询失败', content: res.message})\n        }\n      }).finally(() => {\n        // 这里是无论成功或失败都会执行的方法，在这里关闭loading\n        this.loading = false\n      })\n    }\n    ,\n    // 选择日期的回调\n    onChange(date, dateString) {\n      this.formData.createTime = dateString\n      var e = this.formData.type\n      window.localStorage.setItem('formData', JSON.stringify(this.formData))\n      if (e == 'SynthesizeLogging') {\n        this.loadData()\n      } else if (e == 'DutyData') {\n      } else if (e == 'WeekStatistics') {\n\n      }\n    }\n    ,\n    // 选择类型\n    changeType(e) {\n      this.jdemoshow = false\n      var date = new Date();\n      var seperator1 = \"-\";\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n      var strDate = date.getDate();\n      if (month >= 1 && month <= 9) {\n        month = \"0\" + month;\n      }\n      if (strDate >= 0 && strDate <= 9) {\n        strDate = \"0\" + strDate;\n      }\n      var currentdate = year + seperator1 + month + seperator1 + strDate;\n      console.log(e)\n      if (e == 'SynthesizeLogging') {\n        this.istype = true\n        this.formData.template = ''\n        this.dateDisable = false\n        this.importBtn = false\n      } else if (e == 'DutyData') {\n        this.formData.template = this.templateList[0].headId\n        this.istype = false\n        this.formData.createTime = currentdate\n        this.dateDisable = true\n      } else if (e == 'WeekStatistics') {\n        this.formData.template = ''\n        this.istype = true\n        this.formData.createTime = currentdate\n        this.dateDisable = true\n        this.importBtn = true\n\n      }\n      window.localStorage.setItem('formData', JSON.stringify(this.formData))\n      this.getStructure()\n      this.loadData()\n    }\n    ,\n    // 选择模板\n    templateChange(e) {\n      this.jdemoshow = true\n      window.localStorage.setItem('formData', JSON.stringify(this.formData))\n      this.getStructure()\n      // 发送请求头部，请求数据的请求\n    }\n    ,\n    changeUploadMethod(e) {\n      console.log(e)\n    }\n    ,\n    // 查询结构（table的头部）\n    getStructure() {\n      // 封装查询条件\n      let formData = {\n        reportFromType: this.formData.type,\n        templateType: this.formData.template\n      }\n      // 调用查询数据接口\n      this.loading = true\n      getAction(this.url.structure, formData).then(res => {\n        if (res.success) {\n          if (this.formData.type != 'DutyData') {\n            var result = res.result\n            // 将查询的数据赋值给 dataSource\n            var arr = []\n            for (var i = 0; i < result.length; i++) {\n              if (result[i].isShowForm == 1) {\n                arr.push({\n                  key: result[i].dbFieldName,\n                  title: result[i].dbFieldTxt,\n                  type: JVXETypes[result[i].fieldShowType],\n                  defaultValue: result[i].fieldDefaultValue\n                })\n              }\n            }\n            this.jdemoshow = true\n            this.columns = arr\n            this.columnss = []\n          } else {//执勤数据\n            var result = res.result\n            var columns = []\n            for (var i = 0; i < result.length; i++) {\n              var arr = []\n              var obj = {\n                name: result[i].sheetName,\n                dataSource:[]\n              }\n              var results = result[i].fields\n              for (var j = 0; j < results.length; j++) {\n                if (results[j].isShowForm == 1) {\n                  arr.push({\n                    key: results[j].dbFieldName,\n                    title: results[j].dbFieldTxt,\n                    type: JVXETypes[results[j].fieldShowType],\n                    defaultValue: results[j].fieldDefaultValue\n                  })\n                }\n              }\n              obj.columns = arr\n              columns.push(obj)\n            }\n              this.columnss = columns\n              this.jdemoshow = false\n          }\n        } else {\n          this.$error({title: '主表查询失败', content: res.message})\n        }\n      }).finally(() => {\n        // 这里是无论成功或失败都会执行的方法，在这里关闭loading\n        this.loading = false\n      })\n    }\n    ,\n    // 查询数据\n    loadData() {\n      // 封装查询条件\n      let formData = {\n        createTime: this.formData.createTime\n      }\n      // 调用查询数据接口\n      this.loading = true\n      if (this.formData.type == 'SynthesizeLogging') {\n        getAction(this.url.list, formData).then(res => {\n          if (res.success) {\n            // 将查询的数据赋值给 dataSource\n            this.dataSource = res.result\n            // 重置选择\n            this.selectedRows = []\n          } else {\n            this.$error({title: '主表查询失败', content: res.message})\n          }\n        }).finally(() => {\n          // 这里是无论成功或失败都会执行的方法，在这里关闭loading\n          this.loading = false\n        })\n      } else {\n        this.dataSource = []\n      }\n    }\n  },\n  created() {\n    var date = new Date();\n    var seperator1 = \"-\";\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var strDate = date.getDate();\n    if (month >= 1 && month <= 9) {\n      month = \"0\" + month;\n    }\n    if (strDate >= 0 && strDate <= 9) {\n      strDate = \"0\" + strDate;\n    }\n    var currentdate = year + seperator1 + month + seperator1 + strDate;\n    this.formData.createTime = currentdate\n  },\n  mounted() {\n    // 获取头部数据\n    this.getStructure()\n    // 获取数据（list）\n    this.loadData()\n    // 获取模板列表\n    this.getTemplateList()\n    window.localStorage.setItem('formData', JSON.stringify(this.formData))\n  }\n}\n</script>\n<style scoped>\n@import '~@assets/less/common.less';\n</style>"],"sourceRoot":"src/views/zbtest"}]}