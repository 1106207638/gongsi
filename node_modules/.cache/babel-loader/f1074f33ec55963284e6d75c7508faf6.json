{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\src\\components\\jeecg\\JVxeTable\\utils\\cellUtils.js","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\JVxeTable\\utils\\cellUtils.js","mtime":1615948814804},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCmltcG9ydCB7IEFsbENlbGxzLCBKVlhFVHlwZXMgfSBmcm9tICdAL2NvbXBvbmVudHMvamVlY2cvSlZ4ZVRhYmxlJzsKaW1wb3J0IEpWeGVDZWxsTWl4aW5zIGZyb20gJy4uL21peGlucy9KVnhlQ2VsbE1peGlucyc7CmV4cG9ydCB2YXIgSlZYRVJlbmRlclR5cGUgPSB7CiAgZWRpdGVyOiAnZWRpdGVyJywKICBzcGFuZXI6ICdzcGFuZXInLAogIGRlZmF1bHQ6ICdkZWZhdWx0Jwp9OwovKiog5a6J6KOF5omA5pyJdnhl57uE5Lu2ICovCgpleHBvcnQgZnVuY3Rpb24gaW5zdGFsbEFsbENlbGwoVlhFVGFibGUpIHsKICAvLyDpgY3ljobmiYDmnInnu4Tku7bmibnph4/ms6jlhowKICBPYmplY3Qua2V5cyhBbGxDZWxscykuZm9yRWFjaChmdW5jdGlvbiAodHlwZSkgewogICAgcmV0dXJuIGluc3RhbGxPbmVDZWxsKFZYRVRhYmxlLCB0eXBlKTsKICB9KTsKfQovKiog5a6J6KOF5Y2V5Liqdnhl57uE5Lu2ICovCgpleHBvcnQgZnVuY3Rpb24gaW5zdGFsbE9uZUNlbGwoVlhFVGFibGUsIHR5cGUpIHsKICB2YXIgc3dpdGNoZXMgPSBnZXRFbmhhbmNlZE1peGlucyh0eXBlLCAnc3dpdGNoZXMnKTsKCiAgaWYgKHN3aXRjaGVzLmVkaXRSZW5kZXIgPT09IGZhbHNlKSB7CiAgICBpbnN0YWxsQ2VsbFJlbmRlcihWWEVUYWJsZSwgdHlwZSwgQWxsQ2VsbHNbdHlwZV0pOwogIH0gZWxzZSB7CiAgICBpbnN0YWxsRWRpdFJlbmRlcihWWEVUYWJsZSwgdHlwZSwgQWxsQ2VsbHNbdHlwZV0pOwogIH0KfQovKiog5rOo5YaM5Y+v57yW6L6R57uE5Lu2ICovCgpleHBvcnQgZnVuY3Rpb24gaW5zdGFsbEVkaXRSZW5kZXIoVlhFVGFibGUsIHR5cGUsIGNvbXAsIHNwYW5Db21wKSB7CiAgLy8g6I635Y+W5b2T5YmN57uE5Lu255qE5aKe5by6CiAgdmFyIGVuaGFuY2VkID0gZ2V0RW5oYW5jZWRNaXhpbnModHlwZSk7IC8vIHNwYW4g57uE5Lu2CgogIGlmICghc3BhbkNvbXAgJiYgQWxsQ2VsbHNbdHlwZSArICc6c3BhbiddKSB7CiAgICBzcGFuQ29tcCA9IEFsbENlbGxzW3R5cGUgKyAnOnNwYW4nXTsKICB9IGVsc2UgewogICAgc3BhbkNvbXAgPSBBbGxDZWxsc1tKVlhFVHlwZXMubm9ybWFsXTsKICB9IC8vIOa3u+WKoOa4suafkwoKCiAgVlhFVGFibGUucmVuZGVyZXIuYWRkKEpWWEVUeXBlcy5fcHJlZml4ICsgdHlwZSwgX29iamVjdFNwcmVhZCh7CiAgICAvLyDlj6/nvJbovpHmqKHmnb8KICAgIHJlbmRlckVkaXQ6IGNyZWF0ZVJlbmRlcihjb21wLCBlbmhhbmNlZCwgSlZYRVJlbmRlclR5cGUuZWRpdGVyKSwKICAgIC8vIOaYvuekuuaooeadvwogICAgcmVuZGVyQ2VsbDogY3JlYXRlUmVuZGVyKHNwYW5Db21wLCBlbmhhbmNlZCwgSlZYRVJlbmRlclR5cGUuc3BhbmVyKQogIH0sIGVuaGFuY2VkLmluc3RhbGxPcHRpb25zKSk7Cn0KLyoqIOazqOWGjOaZrumAmue7hOS7tiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGluc3RhbGxDZWxsUmVuZGVyKFZYRVRhYmxlLCB0eXBlKSB7CiAgdmFyIGNvbXAgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IEFsbENlbGxzW0pWWEVUeXBlcy5ub3JtYWxdOwogIC8vIOiOt+WPluW9k+WJjee7hOS7tueahOWinuW8ugogIHZhciBlbmhhbmNlZCA9IGdldEVuaGFuY2VkTWl4aW5zKHR5cGUpOwogIFZYRVRhYmxlLnJlbmRlcmVyLmFkZChKVlhFVHlwZXMuX3ByZWZpeCArIHR5cGUsIF9vYmplY3RTcHJlYWQoewogICAgLy8g6buY6K6k5pi+56S65qih5p2/CiAgICByZW5kZXJEZWZhdWx0OiBjcmVhdGVSZW5kZXIoY29tcCwgZW5oYW5jZWQsIEpWWEVSZW5kZXJUeXBlLmRlZmF1bHQpCiAgfSwgZW5oYW5jZWQuaW5zdGFsbE9wdGlvbnMpKTsKfQoKZnVuY3Rpb24gY3JlYXRlUmVuZGVyKGNvbXAsIGVuaGFuY2VkLCByZW5kZXJUeXBlKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChoLCByZW5kZXJPcHRpb25zLCBwYXJhbXMpIHsKICAgIHJldHVybiBbaChjb21wLCB7CiAgICAgIHByb3BzOiB7CiAgICAgICAgdmFsdWU6IHBhcmFtcy5yb3dbcGFyYW1zLmNvbHVtbi5wcm9wZXJ0eV0sCiAgICAgICAgcm93OiBwYXJhbXMucm93LAogICAgICAgIGNvbHVtbjogcGFyYW1zLmNvbHVtbiwKICAgICAgICBwYXJhbXM6IHBhcmFtcywKICAgICAgICByZW5kZXJPcHRpb25zOiByZW5kZXJPcHRpb25zLAogICAgICAgIHJlbmRlclR5cGU6IHJlbmRlclR5cGUKICAgICAgfQogICAgfSldOwogIH07Cn0gLy8g5bey5re35YWl55qE57uE5Lu25aKe5by6CgoKdmFyIEFsbENlbGxzTWl4aW5zID0gbmV3IE1hcCgpOwovKiog6I635Y+W5p+Q5Liq57uE5Lu255qE5aKe5by6ICovCgpleHBvcnQgZnVuY3Rpb24gZ2V0RW5oYW5jZWQodHlwZSkgewogIHZhciBjZWxsID0gQWxsQ2VsbHNbdHlwZV07CgogIGlmIChjZWxsICYmIGNlbGwuZW5oYW5jZWQpIHsKICAgIHJldHVybiBjZWxsLmVuaGFuY2VkOwogIH0KCiAgcmV0dXJuIG51bGw7Cn0KLyoqDQogKiDojrflj5bmn5DkuKrnu4Tku7bnmoTlop7lvLrvvIjmt7flhaXpu5jorqTlgLzvvIkNCiAqDQogKiBAcGFyYW0gdHlwZSBKVlhFVHlwZXMNCiAqIEBwYXJhbSBuYW1lIOWPr+epuu+8jOWinuW8uuWQjeensO+8jOeVmeepuui/lOWbnuaJgOacieWinuW8ug0KICovCgpleHBvcnQgZnVuY3Rpb24gZ2V0RW5oYW5jZWRNaXhpbnModHlwZSwgbmFtZSkgewogIHZhciBnZXRCeU5hbWUgPSBmdW5jdGlvbiBnZXRCeU5hbWUoZSkgewogICAgcmV0dXJuIG5hbWUgPyBlW25hbWVdIDogZTsKICB9OwoKICBpZiAoQWxsQ2VsbHNNaXhpbnMuaGFzKHR5cGUpKSB7CiAgICByZXR1cm4gZ2V0QnlOYW1lKEFsbENlbGxzTWl4aW5zLmdldCh0eXBlKSk7CiAgfQoKICB2YXIgZGVmRW5oYW5jZWQgPSBKVnhlQ2VsbE1peGlucy5lbmhhbmNlZDsKICB2YXIgZW5oYW5jZWQgPSBnZXRFbmhhbmNlZCh0eXBlKTsKCiAgaWYgKGVuaGFuY2VkKSB7CiAgICBPYmplY3Qua2V5cyhkZWZFbmhhbmNlZCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgIHZhciBkZWYgPSBkZWZFbmhhbmNlZFtrZXldOwoKICAgICAgaWYgKGVuaGFuY2VkLmhhc093blByb3BlcnR5KGtleSkpIHsKICAgICAgICAvLyDmlrnms5XlpoLmnpzlrZjlnKjlsLHkuI3opobnm5YKICAgICAgICBpZiAodHlwZW9mIGRlZiAhPT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmICE9PSAnc3RyaW5nJykgewogICAgICAgICAgZW5oYW5jZWRba2V5XSA9IE9iamVjdC5hc3NpZ24oe30sIGRlZiwgZW5oYW5jZWRba2V5XSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGVuaGFuY2VkW2tleV0gPSBkZWY7CiAgICAgIH0KICAgIH0pOwogICAgQWxsQ2VsbHNNaXhpbnMuc2V0KHR5cGUsIGVuaGFuY2VkKTsKICAgIHJldHVybiBnZXRCeU5hbWUoZW5oYW5jZWQpOwogIH0KCiAgQWxsQ2VsbHNNaXhpbnMuc2V0KHR5cGUsIGRlZkVuaGFuY2VkKTsKICByZXR1cm4gZ2V0QnlOYW1lKGRlZkVuaGFuY2VkKTsKfQovKiog6L6F5Yqp5pa55rOV77ya5pu/5o2iJHsuLi595Y+Y6YePICovCgpleHBvcnQgZnVuY3Rpb24gcmVwbGFjZVByb3BzKGNvbCwgdmFsdWUpIHsKICBpZiAodmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykgewogICAgdmFyIHRleHQgPSB2YWx1ZTsKICAgIHRleHQgPSB0ZXh0LnJlcGxhY2UoL1wke3RpdGxlfS9nLCBjb2wudGl0bGUpOwogICAgdGV4dCA9IHRleHQucmVwbGFjZSgvXCR7a2V5fS9nLCBjb2wua2V5KTsKICAgIHRleHQgPSB0ZXh0LnJlcGxhY2UoL1wke2RlZmF1bHRWYWx1ZX0vZywgY29sLmRlZmF1bHRWYWx1ZSk7CiAgICByZXR1cm4gdGV4dDsKICB9CgogIHJldHVybiB2YWx1ZTsKfQ=="},{"version":3,"sources":["D:/vue/src/components/jeecg/JVxeTable/utils/cellUtils.js"],"names":["AllCells","JVXETypes","JVxeCellMixins","JVXERenderType","editer","spaner","default","installAllCell","VXETable","Object","keys","forEach","type","installOneCell","switches","getEnhancedMixins","editRender","installCellRender","installEditRender","comp","spanComp","enhanced","normal","renderer","add","_prefix","renderEdit","createRender","renderCell","installOptions","renderDefault","renderType","h","renderOptions","params","props","value","row","column","property","AllCellsMixins","Map","getEnhanced","cell","name","getByName","e","has","get","defEnhanced","key","def","hasOwnProperty","assign","set","replaceProps","col","text","replace","title","defaultValue"],"mappings":"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","sourcesContent":["import { AllCells, JVXETypes } from '@/components/jeecg/JVxeTable'\r\nimport JVxeCellMixins from '../mixins/JVxeCellMixins'\r\n\r\nexport const JVXERenderType = {\r\n  editer: 'editer',\r\n  spaner: 'spaner',\r\n  default: 'default',\r\n}\r\n\r\n/** 安装所有vxe组件 */\r\nexport function installAllCell(VXETable) {\r\n  // 遍历所有组件批量注册\r\n  Object.keys(AllCells).forEach(type => installOneCell(VXETable, type))\r\n}\r\n\r\n/** 安装单个vxe组件 */\r\nexport function installOneCell(VXETable, type) {\r\n  const switches = getEnhancedMixins(type, 'switches')\r\n  if (switches.editRender === false) {\r\n    installCellRender(VXETable, type, AllCells[type])\r\n  } else {\r\n    installEditRender(VXETable, type, AllCells[type])\r\n  }\r\n}\r\n\r\n/** 注册可编辑组件 */\r\nexport function installEditRender(VXETable, type, comp, spanComp) {\r\n  // 获取当前组件的增强\r\n  const enhanced = getEnhancedMixins(type)\r\n  // span 组件\r\n  if (!spanComp && AllCells[type + ':span']) {\r\n    spanComp = AllCells[type + ':span']\r\n  } else {\r\n    spanComp = AllCells[JVXETypes.normal]\r\n  }\r\n  // 添加渲染\r\n  VXETable.renderer.add(JVXETypes._prefix + type, {\r\n    // 可编辑模板\r\n    renderEdit: createRender(comp, enhanced, JVXERenderType.editer),\r\n    // 显示模板\r\n    renderCell: createRender(spanComp, enhanced, JVXERenderType.spaner),\r\n    // 增强注册\r\n    ...enhanced.installOptions,\r\n  })\r\n}\r\n\r\n/** 注册普通组件 */\r\nexport function installCellRender(VXETable, type, comp = AllCells[JVXETypes.normal]) {\r\n  // 获取当前组件的增强\r\n  const enhanced = getEnhancedMixins(type)\r\n  VXETable.renderer.add(JVXETypes._prefix + type, {\r\n    // 默认显示模板\r\n    renderDefault: createRender(comp, enhanced, JVXERenderType.default),\r\n    // 增强注册\r\n    ...enhanced.installOptions,\r\n  })\r\n}\r\n\r\nfunction createRender(comp, enhanced, renderType) {\r\n  return function (h, renderOptions, params) {\r\n    return [h(comp, {\r\n      props: {\r\n        value: params.row[params.column.property],\r\n        row: params.row,\r\n        column: params.column,\r\n        params: params,\r\n        renderOptions: renderOptions,\r\n        renderType: renderType,\r\n      }\r\n    })]\r\n  }\r\n}\r\n\r\n// 已混入的组件增强\r\nconst AllCellsMixins = new Map()\r\n\r\n/** 获取某个组件的增强 */\r\nexport function getEnhanced(type) {\r\n  let cell = AllCells[type]\r\n  if (cell && cell.enhanced) {\r\n    return cell.enhanced\r\n  }\r\n  return null\r\n}\r\n\r\n/**\r\n * 获取某个组件的增强（混入默认值）\r\n *\r\n * @param type JVXETypes\r\n * @param name 可空，增强名称，留空返回所有增强\r\n */\r\nexport function getEnhancedMixins(type, name) {\r\n  const getByName = (e) => name ? e[name] : e\r\n  if (AllCellsMixins.has(type)) {\r\n    return getByName(AllCellsMixins.get(type))\r\n  }\r\n  let defEnhanced = JVxeCellMixins.enhanced\r\n  let enhanced = getEnhanced(type)\r\n  if (enhanced) {\r\n    Object.keys(defEnhanced).forEach(key => {\r\n      let def = defEnhanced[key]\r\n      if (enhanced.hasOwnProperty(key)) {\r\n        // 方法如果存在就不覆盖\r\n        if (typeof def !== 'function' && typeof def !== 'string') {\r\n          enhanced[key] = Object.assign({}, def, enhanced[key])\r\n        }\r\n      } else {\r\n        enhanced[key] = def\r\n      }\r\n    })\r\n    AllCellsMixins.set(type, enhanced)\r\n    return getByName(enhanced)\r\n  }\r\n  AllCellsMixins.set(type, defEnhanced)\r\n  return getByName(defEnhanced)\r\n}\r\n\r\n\r\n/** 辅助方法：替换${...}变量 */\r\nexport function replaceProps(col, value) {\r\n  if (value && typeof value === 'string') {\r\n    let text = value\r\n    text = text.replace(/\\${title}/g, col.title)\r\n    text = text.replace(/\\${key}/g, col.key)\r\n    text = text.replace(/\\${defaultValue}/g, col.defaultValue)\r\n    return text\r\n  }\r\n  return value\r\n}\r\n"]}]}