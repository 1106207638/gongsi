{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeTagsCell.js","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeTagsCell.js","mtime":1615948814729},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCmltcG9ydCBKVnhlQ2VsbE1peGlucyBmcm9tICdAL2NvbXBvbmVudHMvamVlY2cvSlZ4ZVRhYmxlL21peGlucy9KVnhlQ2VsbE1peGlucyc7IC8vIHRhZ3Mg57uE5Lu255qE5pi+56S657uE5Lu2CgpleHBvcnQgdmFyIFRhZ3NTcGFuQ2VsbCA9IHsKICBuYW1lOiAnSlZ4ZVRhZ3NDZWxsJywKICBtaXhpbnM6IFtKVnhlQ2VsbE1peGluc10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlubmVyVGFnczogW10KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgaW5uZXJWYWx1ZTogewogICAgICBpbW1lZGlhdGU6IHRydWUsCiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIodmFsdWUpIHsKICAgICAgICBpZiAodmFsdWUgIT09IHRoaXMuaW5uZXJUYWdzLmpvaW4oJzsnKSkgewogICAgICAgICAgdmFyIHJ2ID0gcmVwbGFjZVZhbHVlKHZhbHVlKTsKICAgICAgICAgIHRoaXMuaW5uZXJUYWdzID0gcnYuc3BsaXQoJzsnKTsKICAgICAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlQ29tbW9uKHJ2KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHJlbmRlclRhZ3M6IGZ1bmN0aW9uIHJlbmRlclRhZ3MoaCkgewogICAgICB2YXIgdGFncyA9IFtdOwogICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7CiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlOwogICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7CgogICAgICB0cnkgewogICAgICAgIGZvciAodmFyIF9pdGVyYXRvciA9IHRoaXMuaW5uZXJUYWdzW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkgewogICAgICAgICAgdmFyIHRhZyA9IF9zdGVwLnZhbHVlOwoKICAgICAgICAgIGlmICh0YWcpIHsKICAgICAgICAgICAgdmFyIHRhZ1Byb3BzID0ge307CiAgICAgICAgICAgIHZhciB0YWdTdHlsZSA9IHt9OwogICAgICAgICAgICB2YXIgc2V0VGFnQ29sb3IgPSB0aGlzLm9yaWdpbkNvbHVtbi5zZXRUYWdDb2xvcjsKCiAgICAgICAgICAgIGlmICh0eXBlb2Ygc2V0VGFnQ29sb3IgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICAgICAgICAvKioNCiAgICAgICAgICAgICAgICog6K6+572uIHRhZyDpopzoibINCiAgICAgICAgICAgICAgICoNCiAgICAgICAgICAgICAgICogQHBhcmFtIGV2ZW50IOWMheWQq+eahOWtl+aute+8mg0KICAgICAgICAgICAgICAgKiBldmVudC50YWdWYWx1ZSDlvZPliY10YWfnmoTlgLwNCiAgICAgICAgICAgICAgICogZXZlbnQudmFsdWUg5b2T5YmN5Y6f5aeL5YC8DQogICAgICAgICAgICAgICAqIGV2ZW50LnJvdyDlvZPliY3ooYznmoTmiYDmnInlgLwNCiAgICAgICAgICAgICAgICogZXZlbnQuY29sdW1uIOW9k+WJjeWIl+eahOmFjee9rg0KICAgICAgICAgICAgICAgKiBldmVudC5jb2x1bW4ub3duIOW9k+WJjeWIl+eahOWOn+Wni+mFjee9rg0KICAgICAgICAgICAgICAgKiBAcmV0dXJuIEFycmF5IHwgU3RyaW5nIOWPr+S7pei/lOWbnuS4gOS4quaVsOe7hO+8jOaVsOaNruesrOS4gOmhueaYr3RhZ+iDjOaZr+minOiJsu+8jOesrOS6jOmhueaYr+Wtl+S9k+minOiJsuOAguS5n+WPr+S7pei/lOWbnuS4gOS4quWtl+espuS4su+8jOWNs3RhZ+iDjOaZr+minOiJsg0KICAgICAgICAgICAgICAgKi8KICAgICAgICAgICAgICB2YXIgY29sb3IgPSBzZXRUYWdDb2xvcih7CiAgICAgICAgICAgICAgICB0YWdWYWx1ZTogdGFnLAogICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuaW5uZXJWYWx1ZSwKICAgICAgICAgICAgICAgIHJvdzogdGhpcy5yb3csCiAgICAgICAgICAgICAgICBjb2x1bW46IHRoaXMuY29sdW1uCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNvbG9yKSkgewogICAgICAgICAgICAgICAgdGFnUHJvcHMuY29sb3IgPSBjb2xvclswXTsKICAgICAgICAgICAgICAgIHRhZ1N0eWxlLmNvbG9yID0gY29sb3JbMV07CiAgICAgICAgICAgICAgfSBlbHNlIGlmIChjb2xvciAmJiB0eXBlb2YgY29sb3IgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgICAgICAgICB0YWdQcm9wcy5jb2xvciA9IGNvbG9yOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGFncy5wdXNoKGgoJ2EtdGFnJywgewogICAgICAgICAgICAgIHByb3BzOiB0YWdQcm9wcywKICAgICAgICAgICAgICBzdHlsZTogdGFnU3R5bGUKICAgICAgICAgICAgfSwgW3RhZ10pKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTsKICAgICAgICBfaXRlcmF0b3JFcnJvciA9IGVycjsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICB0cnkgewogICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4gIT0gbnVsbCkgewogICAgICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7CiAgICAgICAgICB9CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikgewogICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiB0YWdzOwogICAgfQogIH0sCiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkgewogICAgcmV0dXJuIGgoJ2RpdicsIHt9LCBbdGhpcy5yZW5kZXJUYWdzKGgpXSk7CiAgfQp9OyAvLyB0YWdzIOe7hOS7tueahOi+k+WFpeahhgoKZXhwb3J0IHZhciBUYWdzSW5wdXRDZWxsID0gewogIG5hbWU6ICdKVnhlVGFnc0lucHV0Q2VsbCcsCiAgbWl4aW5zOiBbSlZ4ZUNlbGxNaXhpbnNdLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbm5lclRhZ1ZhbHVlOiAnJwogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBpbm5lclZhbHVlOiB7CiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcih2YWx1ZSkgewogICAgICAgIGlmICh2YWx1ZSAhPT0gdGhpcy5pbm5lclRhZ1ZhbHVlKSB7CiAgICAgICAgICB0aGlzLmhhbmRsZUlucHV0Q2hhbmdlKHZhbHVlKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUlucHV0Q2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVJbnB1dENoYW5nZSh2YWx1ZSwgZXZlbnQpIHsKICAgICAgdGhpcy5pbm5lclRhZ1ZhbHVlID0gcmVwbGFjZVZhbHVlKHZhbHVlLCBldmVudCk7CiAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlQ29tbW9uKHRoaXMuaW5uZXJUYWdWYWx1ZSk7CiAgICAgIHJldHVybiB0aGlzLmlubmVyVGFnVmFsdWU7CiAgICB9CiAgfSwKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBoKCdhLWlucHV0JywgewogICAgICBwcm9wczogX29iamVjdFNwcmVhZCh7CiAgICAgICAgdmFsdWU6IHRoaXMuaW5uZXJWYWx1ZQogICAgICB9LCB0aGlzLmNlbGxQcm9wcyksCiAgICAgIG9uOiB7CiAgICAgICAgY2hhbmdlOiBmdW5jdGlvbiBjaGFuZ2UoZXZlbnQpIHsKICAgICAgICAgIHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQsCiAgICAgICAgICAgICAgdmFsdWUgPSBldmVudC50YXJnZXQudmFsdWU7CgogICAgICAgICAgdmFyIG5ld1ZhbHVlID0gX3RoaXMuaGFuZGxlSW5wdXRDaGFuZ2UodmFsdWUsIGV2ZW50KTsKCiAgICAgICAgICBpZiAobmV3VmFsdWUgIT09IHZhbHVlKSB7CiAgICAgICAgICAgIHRhcmdldC52YWx1ZSA9IG5ld1ZhbHVlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgfQp9OyAvLyDlsIblgLzmr4/pmpTkuKTkvY3liqDkuIrkuIDkuKrliIblj7cKCmZ1bmN0aW9uIHJlcGxhY2VWYWx1ZSh2YWx1ZSwgZXZlbnQpIHsKICBpZiAodmFsdWUpIHsKICAgIC8vIOmmluWFiOWOu+aOieeOsOacieeahOWIhuWPtwogICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC87L2csICcnKTsgLy8g54S25ZCO5YaN6YGN5Y6G5re75Yqg5YiG5Y+3CgogICAgdmFyIHJ2ID0gJyc7CiAgICB2YXIgc3BsaXRBcnIgPSB2YWx1ZS5zcGxpdCgnJyk7CiAgICB2YXIgY291bnQgPSAwOwogICAgc3BsaXRBcnIuZm9yRWFjaChmdW5jdGlvbiAodmFsLCBpbmRleCkgewogICAgICBydiArPSB2YWw7CiAgICAgIHZhciBwb3NpdGlvbiA9IGluZGV4ICsgMTsKCiAgICAgIGlmIChwb3NpdGlvbiAlIDIgPT09IDAgJiYgcG9zaXRpb24gPCBzcGxpdEFyci5sZW5ndGgpIHsKICAgICAgICBjb3VudCsrOwogICAgICAgIHJ2ICs9ICc7JzsKICAgICAgfQogICAgfSk7CgogICAgaWYgKGV2ZW50ICYmIGNvdW50ID4gMCkgewogICAgICB2YXIgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0LAogICAgICAgICAgc2VsZWN0aW9uU3RhcnQgPSBldmVudC50YXJnZXQuc2VsZWN0aW9uU3RhcnQ7CiAgICAgIHRhcmdldC5zZWxlY3Rpb25TdGFydCA9IHNlbGVjdGlvblN0YXJ0ICsgY291bnQ7CiAgICAgIHRhcmdldC5zZWxlY3Rpb25FbmQgPSBzZWxlY3Rpb25TdGFydCArIGNvdW50OwogICAgfQoKICAgIHJldHVybiBydjsKICB9CgogIHJldHVybiAnJzsKfQ=="},{"version":3,"sources":["D:/vue/src/components/jeecg/JVxeTable/components/cells/JVxeTagsCell.js"],"names":["JVxeCellMixins","TagsSpanCell","name","mixins","data","innerTags","watch","innerValue","immediate","handler","value","join","rv","replaceValue","split","handleChangeCommon","methods","renderTags","h","tags","tag","tagProps","tagStyle","setTagColor","originColumn","color","tagValue","row","column","Array","isArray","push","props","style","render","TagsInputCell","innerTagValue","handleInputChange","event","cellProps","on","change","target","newValue","replace","splitArr","count","forEach","val","index","position","length","selectionStart","selectionEnd"],"mappings":"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","sourcesContent":["import JVxeCellMixins from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\r\n\r\n// tags 组件的显示组件\r\nexport const TagsSpanCell = {\r\n  name: 'JVxeTagsCell',\r\n  mixins: [JVxeCellMixins],\r\n  data() {\r\n    return {\r\n      innerTags: [],\r\n    }\r\n  },\r\n  watch: {\r\n    innerValue: {\r\n      immediate: true,\r\n      handler(value) {\r\n        if (value !== this.innerTags.join(';')) {\r\n          let rv = replaceValue(value)\r\n          this.innerTags = rv.split(';')\r\n          this.handleChangeCommon(rv)\r\n        }\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    renderTags(h) {\r\n      let tags = []\r\n      for (let tag of this.innerTags) {\r\n        if (tag) {\r\n          let tagProps = {}\r\n          let tagStyle = {}\r\n          let setTagColor = this.originColumn.setTagColor\r\n          if (typeof setTagColor === 'function') {\r\n            /**\r\n             * 设置 tag 颜色\r\n             *\r\n             * @param event 包含的字段：\r\n             * event.tagValue 当前tag的值\r\n             * event.value 当前原始值\r\n             * event.row 当前行的所有值\r\n             * event.column 当前列的配置\r\n             * event.column.own 当前列的原始配置\r\n             * @return Array | String 可以返回一个数组，数据第一项是tag背景颜色，第二项是字体颜色。也可以返回一个字符串，即tag背景颜色\r\n             */\r\n            let color = setTagColor({\r\n              tagValue: tag,\r\n              value: this.innerValue,\r\n              row: this.row,\r\n              column: this.column,\r\n            })\r\n            if (Array.isArray(color)) {\r\n              tagProps.color = color[0]\r\n              tagStyle.color = color[1]\r\n            } else if (color && typeof color === 'string') {\r\n              tagProps.color = color\r\n            }\r\n          }\r\n          tags.push(h('a-tag', {\r\n            props: tagProps,\r\n            style: tagStyle,\r\n          }, [tag]))\r\n        }\r\n      }\r\n      return tags\r\n    },\r\n  },\r\n  render(h) {\r\n    return h('div', {}, [\r\n      this.renderTags(h)\r\n    ])\r\n  },\r\n}\r\n\r\n// tags 组件的输入框\r\nexport const TagsInputCell = {\r\n  name: 'JVxeTagsInputCell',\r\n  mixins: [JVxeCellMixins],\r\n  data() {\r\n    return {\r\n      innerTagValue: '',\r\n    }\r\n  },\r\n  watch: {\r\n    innerValue: {\r\n      immediate: true,\r\n      handler(value) {\r\n        if (value !== this.innerTagValue) {\r\n          this.handleInputChange(value)\r\n        }\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n\r\n    handleInputChange(value, event) {\r\n      this.innerTagValue = replaceValue(value, event)\r\n      this.handleChangeCommon(this.innerTagValue)\r\n      return this.innerTagValue\r\n    },\r\n\r\n  },\r\n  render(h) {\r\n    return h('a-input', {\r\n      props: {\r\n        value: this.innerValue,\r\n        ...this.cellProps\r\n      },\r\n      on: {\r\n        change: (event) => {\r\n          let {target, target: {value}} = event\r\n          let newValue = this.handleInputChange(value, event)\r\n          if (newValue !== value) {\r\n            target.value = newValue\r\n          }\r\n        }\r\n      },\r\n    })\r\n  },\r\n}\r\n\r\n// 将值每隔两位加上一个分号\r\nfunction replaceValue(value, event) {\r\n  if (value) {\r\n    // 首先去掉现有的分号\r\n    value = value.replace(/;/g, '')\r\n    // 然后再遍历添加分号\r\n    let rv = ''\r\n    let splitArr = value.split('')\r\n    let count = 0\r\n    splitArr.forEach((val, index) => {\r\n      rv += val\r\n      let position = index + 1\r\n      if (position % 2 === 0 && position < splitArr.length) {\r\n        count++\r\n        rv += ';'\r\n      }\r\n    })\r\n    if (event && count > 0) {\r\n      let {target, target: {selectionStart}} = event\r\n      target.selectionStart = selectionStart + count\r\n      target.selectionEnd = selectionStart + count\r\n    }\r\n    return rv\r\n  }\r\n  return ''\r\n}\r\n"]}]}