{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\system\\modules\\SysDataSourceModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\system\\modules\\SysDataSourceModal.vue","mtime":1615948821514},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SysDataSourceModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"数据源编码\">\r\n          <a-input placeholder=\"请输入数据源编码\" :disabled=\"!!model.id\" v-decorator=\"['code', validatorRules.code]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"数据源名称\">\r\n          <a-input placeholder=\"请输入数据源名称\" v-decorator=\"['name', validatorRules.name]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"数据库类型\">\r\n          <j-dict-select-tag placeholder=\"请选择数据库类型\" dict-code=\"database_type\" triggerChange v-decorator=\"['dbType', validatorRules.dbType]\" @change=\"handleDbTypeChange\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"驱动类\">\r\n          <a-input placeholder=\"请输入驱动类\" v-decorator=\"['dbDriver', validatorRules.dbDriver]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"数据源地址\">\r\n          <a-input placeholder=\"请输入数据源地址\" v-decorator=\"['dbUrl', validatorRules.dbUrl]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"数据库名称\">\r\n          <a-input placeholder=\"请输入数据库名称\" v-decorator=\"['dbName', validatorRules.dbName]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"用户名\">\r\n          <a-input placeholder=\"请输入用户名\" v-decorator=\"['dbUsername', validatorRules.dbUsername]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"密码\">\r\n          <a-row :gutter=\"8\">\r\n            <a-col :span=\"21\">\r\n              <a-input-password placeholder=\"请输入密码\" v-decorator=\"['dbPassword', validatorRules.dbPassword]\"/>\r\n            </a-col>\r\n            <a-col :span=\"3\">\r\n              <a-button type=\"primary\" size=\"small\" style=\"width: 100%\" @click=\"handleTest\">测试</a-button>\r\n            </a-col>\r\n          </a-row>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"备注\">\r\n          <a-textarea placeholder=\"请输入备注\" v-decorator=\"['remark', {}]\"/>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import pick from 'lodash.pick'\r\n  import { httpAction, postAction } from '@/api/manage'\r\n  import { validateDuplicateValue } from '@/utils/util'\r\n\r\n  export default {\r\n    name: 'SysDataSourceModal',\r\n    components: {},\r\n    data() {\r\n      return {\r\n        title: '操作',\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules: {\r\n          code: {\r\n            validateFirst: true,\r\n            rules: [\r\n              { required: true, message: '请输入数据源编码!' },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  let pattern = /^[a-z|A-Z][a-z|A-Z\\d_-]{0,}$/\r\n                  if (!pattern.test(value)) {\r\n                    callback('编码必须以字母开头，可包含数字、下划线、横杠')\r\n                  } else {\r\n                    validateDuplicateValue('sys_data_source', 'code', value, this.model.id, callback)\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          },\r\n          name: { rules: [{ required: true, message: '请输入数据源名称!' }] },\r\n          dbType: { rules: [{ required: true, message: '请选择数据库类型!' }] },\r\n          dbDriver: { rules: [{ required: true, message: '请输入驱动类!' }] },\r\n          dbUrl: { rules: [{ required: true, message: '请输入数据源地址!' }] },\r\n          dbName: { rules: [{ required: true, message: '请输入数据库名称!' }] },\r\n          dbUsername: { rules: [{ required: true, message: '请输入用户名!' }] },\r\n          dbPassword: { rules: [{ required: true, message: '请输入密码!' }] }\r\n        },\r\n        url: {\r\n          add: '/sys/dataSource/add',\r\n          edit: '/sys/dataSource/edit',\r\n        },\r\n        dbDriverMap: {\r\n          // MySQL 数据库\r\n          '1': { dbDriver: 'com.mysql.jdbc.Driver' },\r\n          // Oracle\r\n          '2': { dbDriver: 'oracle.jdbc.OracleDriver' },\r\n          // SQLServer 数据库\r\n          '3': { dbDriver: 'com.microsoft.sqlserver.jdbc.SQLServerDriver' },\r\n        },\r\n        dbUrlMap: {\r\n          // MySQL 数据库\r\n          '1': { dbUrl: 'jdbc:mysql://127.0.0.1:3306/jeecg-boot?characterEncoding=UTF-8&useUnicode=true&useSSL=false' },\r\n          // Oracle\r\n          '2': { dbUrl: 'jdbc:oracle:thin:@127.0.0.1:1521:ORCL' },\r\n          // SQLServer 数据库\r\n          '3': { dbUrl: 'jdbc:sqlserver://127.0.0.1:1433;SelectMethod=cursor;DatabaseName=jeecgboot' }\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n      add() {\r\n        this.edit({})\r\n      },\r\n      edit(record) {\r\n        this.form.resetFields()\r\n        this.model = Object.assign({}, record)\r\n        this.visible = true\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model, 'code', 'name', 'remark', 'dbType', 'dbDriver', 'dbUrl', 'dbName', 'dbUsername', 'dbPassword'))\r\n        })\r\n      },\r\n      close() {\r\n        this.$emit('close')\r\n        this.visible = false\r\n      },\r\n      handleOk() {\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            this.confirmLoading = true\r\n            let formData = Object.assign(this.model, values)\r\n            let httpUrl = this.url.add, method = 'post'\r\n            if (this.model.id) {\r\n              httpUrl = this.url.edit\r\n              method = 'put'\r\n              // 由于编码的特殊性，所以不能更改\r\n              formData['code'] = undefined\r\n            }\r\n            httpAction(httpUrl, formData, method).then((res) => {\r\n              if (res.success) {\r\n                this.$message.success(res.message)\r\n                this.$emit('ok')\r\n                this.close()\r\n              } else {\r\n                this.$message.warning(res.message)\r\n              }\r\n            }).finally(() => {\r\n              this.confirmLoading = false\r\n            })\r\n          }\r\n        })\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n      // 测试数据源配置是否可以正常连接\r\n      handleTest() {\r\n        let keys = ['dbType', 'dbDriver', 'dbUrl', 'dbName', 'dbUsername', 'dbPassword']\r\n        // 获取以上字段的值，并清除校验状态\r\n        let fieldsValues = this.form.getFieldsValue(keys)\r\n        let setFields = {}\r\n        keys.forEach(key => setFields[key] = { value: fieldsValues[key], errors: null })\r\n        // 清除校验状态，目的是可以让错误文字闪烁\r\n        this.form.setFields(setFields)\r\n        // 重新校验\r\n        this.$nextTick(() => {\r\n          this.form.validateFields(keys, (errors, values) => {\r\n            if (!errors) {\r\n              let loading = this.$message.loading('连接中……', 0)\r\n              postAction('/online/cgreport/api/testConnection', fieldsValues).then(res => {\r\n                if (res.success) {\r\n                  this.$message.success('连接成功')\r\n                } else throw new Error(res.message)\r\n              }).catch(error => {\r\n                this.$warning({ title: '连接失败', content: error.message || error })\r\n              }).finally(() => loading())\r\n            }\r\n          })\r\n        })\r\n      },\r\n      // 数据库类型更改时，联动更改数据库驱动\r\n      handleDbTypeChange(val) {\r\n        let dbDriver = this.dbDriverMap[val]\r\n        let dbUrl = this.dbUrlMap[val]\r\n        if (dbDriver) {\r\n          this.form.setFieldsValue(dbDriver)\r\n        }\r\n        if (dbUrl) {\r\n          this.form.setFieldsValue(dbUrl)\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped></style>"],"sourceRoot":"src/views/system/modules"}]}