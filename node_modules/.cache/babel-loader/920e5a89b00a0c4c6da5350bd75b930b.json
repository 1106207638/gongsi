{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\jeecg\\JTreeSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\JTreeSelect.vue","mtime":1615948815751},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["JTreeSelect.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-tree-select\r\n    allowClear\r\n    labelInValue\r\n    :getPopupContainer=\"(node) => node.parentNode\"\r\n    style=\"width: 100%\"\r\n    :disabled=\"disabled\"\r\n    :dropdownStyle=\"{ maxHeight: '400px', overflow: 'auto' }\"\r\n    :placeholder=\"placeholder\"\r\n    :loadData=\"asyncLoadTreeData\"\r\n    :value=\"treeValue\"\r\n    :treeData=\"treeData\"\r\n    :multiple=\"multiple\"\r\n    @change=\"onChange\"\r\n    @search=\"onSearch\">\r\n  </a-tree-select>\r\n</template>\r\n<script>\r\n\r\n  /*\r\n  * 异步树加载组件 通过传入表名 显示字段 存储字段 加载一个树控件\r\n  * <j-tree-select dict=\"aa_tree_test,aad,id\" pid-field=\"pid\" ></j-tree-select>\r\n  * */\r\n  import { getAction } from '@/api/manage'\r\n\r\n  export default {\r\n    name: 'JTreeSelect',\r\n    props: {\r\n      value:{\r\n        type: String,\r\n        required: false\r\n      },\r\n      placeholder:{\r\n        type: String,\r\n        default: '请选择',\r\n        required: false\r\n      },\r\n      dict:{\r\n        type: String,\r\n        default: '',\r\n        required: false\r\n      },\r\n      pidField:{\r\n        type: String,\r\n        default: 'pid',\r\n        required: false\r\n      },\r\n      pidValue:{\r\n        type: String,\r\n        default: '',\r\n        required: false\r\n      },\r\n      disabled:{\r\n        type:Boolean,\r\n        default:false,\r\n        required:false\r\n      },\r\n      hasChildField:{\r\n        type: String,\r\n        default: '',\r\n        required: false\r\n      },\r\n      condition:{\r\n        type:String,\r\n        default:'',\r\n        required:false\r\n      },\r\n      // 是否支持多选\r\n      multiple: {\r\n        type: Boolean,\r\n        default: false,\r\n      },\r\n      loadTriggleChange:{\r\n        type: Boolean,\r\n        default: false,\r\n        required:false\r\n      }\r\n    },\r\n    data () {\r\n      return {\r\n        treeValue: null,\r\n        treeData:[],\r\n        url:\"/sys/dict/loadTreeData\",\r\n        view:'/sys/dict/loadDictItem/',\r\n        tableName:\"\",\r\n        text:\"\",\r\n        code:\"\",\r\n\r\n      }\r\n    },\r\n    watch: {\r\n      value () {\r\n        this.loadItemByCode()\r\n      },\r\n      dict(){\r\n        this.initDictInfo()\r\n        this.loadRoot();\r\n      }\r\n    },\r\n    created(){\r\n      this.validateProp().then(()=>{\r\n        this.initDictInfo()\r\n        this.loadRoot()\r\n        this.loadItemByCode()\r\n      })\r\n    },\r\n    methods: {\r\n      loadItemByCode(){\r\n        if(!this.value || this.value==\"0\"){\r\n          this.treeValue = null\r\n        }else{\r\n          getAction(`${this.view}${this.dict}`,{key:this.value}).then(res=>{\r\n            if(res.success){\r\n              let values = this.value.split(',')\r\n              this.treeValue = res.result.map((item, index) => ({\r\n                key: values[index],\r\n                value: values[index],\r\n                label: item\r\n              }))\r\n              this.onLoadTriggleChange(res.result[0]);\r\n            }\r\n          })\r\n        }\r\n      },\r\n      onLoadTriggleChange(text){\r\n        //只有单选才会触发\r\n        if(!this.multiple && this.loadTriggleChange){\r\n          this.$emit('change', this.value,text)\r\n        }\r\n      },\r\n      initDictInfo(){\r\n        let arr = this.dict.split(\",\")\r\n        this.tableName = arr[0]\r\n        this.text = arr[1]\r\n        this.code = arr[2]\r\n      },\r\n      asyncLoadTreeData (treeNode) {\r\n        return new Promise((resolve) => {\r\n          if (treeNode.$vnode.children) {\r\n            resolve()\r\n            return\r\n          }\r\n          let pid = treeNode.$vnode.key\r\n          let param = {\r\n            pid:pid,\r\n            tableName:this.tableName,\r\n            text:this.text,\r\n            code:this.code,\r\n            pidField:this.pidField,\r\n            hasChildField:this.hasChildField,\r\n            condition:this.condition\r\n          }\r\n          getAction(this.url,param).then(res=>{\r\n            if(res.success){\r\n              for(let i of res.result){\r\n                i.value = i.key\r\n                if(i.leaf==false){\r\n                  i.isLeaf=false\r\n                }else if(i.leaf==true){\r\n                  i.isLeaf=true\r\n                }\r\n              }\r\n              this.addChildren(pid,res.result,this.treeData)\r\n              this.treeData = [...this.treeData]\r\n            }\r\n            resolve()\r\n          })\r\n        })\r\n      },\r\n      addChildren(pid,children,treeArray){\r\n        if(treeArray && treeArray.length>0){\r\n          for(let item of treeArray){\r\n            if(item.key == pid){\r\n              if(!children || children.length==0){\r\n                item.isLeaf=true\r\n              }else{\r\n                item.children = children\r\n              }\r\n              break\r\n            }else{\r\n              this.addChildren(pid,children,item.children)\r\n            }\r\n          }\r\n        }\r\n      },\r\n      loadRoot(){\r\n        let param = {\r\n          pid:this.pidValue,\r\n          tableName:this.tableName,\r\n          text:this.text,\r\n          code:this.code,\r\n          pidField:this.pidField,\r\n          hasChildField:this.hasChildField,\r\n          condition:this.condition\r\n        }\r\n        getAction(this.url,param).then(res=>{\r\n          if(res.success && res.result){\r\n            for(let i of res.result){\r\n              i.value = i.key\r\n              if(i.leaf==false){\r\n                i.isLeaf=false\r\n              }else if(i.leaf==true){\r\n                i.isLeaf=true\r\n              }\r\n            }\r\n            this.treeData = [...res.result]\r\n          }else{\r\n            console.log(\"数根节点查询结果-else\",res)\r\n          }\r\n        })\r\n      },\r\n      onChange(value){\r\n        if(!value){\r\n          this.$emit('change', '');\r\n          this.treeValue = null\r\n        } else if (value instanceof Array) {\r\n          this.$emit('change', value.map(item => item.value).join(','))\r\n          this.treeValue = value\r\n        } else {\r\n          this.$emit('change', value.value,value.label)\r\n          this.treeValue = value\r\n        }\r\n\r\n      },\r\n      onSearch(value){\r\n        console.log(value)\r\n      },\r\n      getCurrTreeData(){\r\n        return this.treeData\r\n      },\r\n      validateProp(){\r\n        let mycondition = this.condition\r\n        return new Promise((resolve,reject)=>{\r\n          if(!mycondition){\r\n            resolve();\r\n          }else{\r\n            try {\r\n              let test=JSON.parse(mycondition);\r\n              if(typeof test == 'object' && test){\r\n                resolve()\r\n              }else{\r\n                this.$message.error(\"组件JTreeSelect-condition传值有误，需要一个json字符串!\")\r\n                reject()\r\n              }\r\n            } catch(e) {\r\n              this.$message.error(\"组件JTreeSelect-condition传值有误，需要一个json字符串!\")\r\n              reject()\r\n            }\r\n          }\r\n        })\r\n      }\r\n    },\r\n    //2.2新增 在组件内定义 指定父组件调用时候的传值属性和事件类型 这个牛逼\r\n    model: {\r\n      prop: 'value',\r\n      event: 'change'\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/components/jeecg"}]}