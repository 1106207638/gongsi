{"remainingRequest":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\zbtest\\JDemo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\zbtest\\JDemo.vue","mtime":1615948822822},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZ2V0QWN0aW9uLCBwb3N0QWN0aW9uLCBwdXRBY3Rpb24gfSBmcm9tICdAYXBpL21hbmFnZSc7CmltcG9ydCB7IEpWWEVUeXBlcyB9IGZyb20gJ0AvY29tcG9uZW50cy9qZWVjZy9KVnhlVGFibGUnOwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7IC8vIOWNs+aXtuS/neWtmOekuuS+iwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdKRGVtbycsCiAgcHJvcHM6IFsnY29sdW1ucycsICdkYXRhU291cmNlJywgJ2Zvcm1EYXRhJywgJ2ltcG9ydEJ0biddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2x1bW5zczogW10sCiAgICAgIG9wZW46IGZhbHNlLAogICAgICBpbmRleHByb3A6IHt9LAogICAgICAvLyDlt6XlhbfmoI/nmoTmjInpkq7phY3nva4KICAgICAgdG9vbGJhckNvbmZpZzogewogICAgICAgIC8vIGFkZCDmlrDlop7mjInpkq7vvJtyZW1vdmUg5Yig6Zmk5oyJ6ZKu77ybY2xlYXJTZWxlY3Rpb24g5riF56m66YCJ5oup5oyJ6ZKuCiAgICAgICAgYnRuOiBbJ2FkZCcsICdzYXZlJywgJ3JlbW92ZScsICdjbGVhclNlbGVjdGlvbiddCiAgICAgIH0sCiAgICAgIC8vIOaYr+WQpuato+WcqOWKoOi9vQogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgLy8g5YiG6aG15Zmo5Y+C5pWwCiAgICAgIHBhZ2luYXRpb246IHsKICAgICAgICAvLyDlvZPliY3pobXnoIEKICAgICAgICBjdXJyZW50OiAxLAogICAgICAgIC8vIOavj+mhteeahOadoeaVsAogICAgICAgIHBhZ2VTaXplOiAxMCwKICAgICAgICAvLyDmlbDmja7mgLvmlbDvvIjnm67liY3lubbkuI3nn6XpgZPnnJ/lrp7nmoTmgLvmlbDvvIzmiYDku6XlhYjloavlhpkw77yM5Zyo5ZCO5Y+w5p+l5Ye65p2l5ZCO5YaN6LWL5YC877yJCiAgICAgICAgdG90YWw6IDAKICAgICAgfSwKICAgICAgLy8g6YCJ5oup55qE6KGMCiAgICAgIHNlbGVjdGVkUm93czogW10sCiAgICAgIC8vIOaVsOaNrua6kO+8jOaOp+WItuihqOagvOeahOaVsOaNrgogICAgICAvLyDliJfphY3nva7vvIzmjqfliLbooajmoLzmmL7npLrnmoTliJcKICAgICAgLy8gY29sdW1uczogWwogICAgICAvLyAgIHtrZXk6ICdjYWxsJywgdGl0bGU6ICfml7bpl7QnLHR5cGU6IEpWWEVUeXBlcy50aW1lLHNsb3ROYW1lOidjYWxsJyxvcGVuOmZhbHNlfSwKICAgICAgLy8gICB7a2V5OiAnbGVuJywgdGl0bGU6ICfkuovku7YnLCB0eXBlOiBKVlhFVHlwZXMuaW5wdXR9LAogICAgICAvLyAgIHtrZXk6ICd0b24nLCB0aXRsZTogJ+WFt+S9k+iQveWunuaDheWGtScsICAgdHlwZTogSlZYRVR5cGVzLmlucHV0fSwKICAgICAgLy8gICB7a2V5OiAncGF5ZXInLCB0aXRsZTogJ+W4reS9jeWQjeensCcsICB0eXBlOiBKVlhFVHlwZXMuaW5wdXR9LAogICAgICAvLyAgIHsKICAgICAgLy8gICAgIGtleTogJ2NvbXBhbnknLAogICAgICAvLyAgICAgdGl0bGU6ICflgLznj63lkZgnLAogICAgICAvLyAgICAgLy8g5pyA5bCP5a695bqm77yM5LiO5a695bqm5LiN5ZCM55qE5piv77yM6L+Z5Liq5LiN5piv5Zu65a6a55qE5a695bqm77yM5aaC5p6c6KGo5qC85pyJ5aSa5L2Z55qE56m66Ze077yM5Lya5bmz5Z2H5YiG6YWN57uZ6K6+572u5LqGIG1pbldpZHRoIOeahOWIlwogICAgICAvLyAgICAgLy8g5aaC5p6c6KaB5YGa5Y2g5ruh6KGo5qC855qE5YiX5Y+v5Lul6L+Z5LmI5YaZCiAgICAgIC8vICAgICB0eXBlOiBKVlhFVHlwZXMuaW5wdXQKICAgICAgLy8gICB9LAogICAgICAvLyAgIHtrZXk6ICd0cmVuZCcsIHRpdGxlOiAn5aSH5rOoJyx0eXBlOiBKVlhFVHlwZXMuaW5wdXR9LAogICAgICAvLyBdLAogICAgICAvLyDmn6Xor6J1cmzlnLDlnYAKICAgICAgdXJsOiB7CiAgICAgICAgZ2V0RGF0YTogJy9yZXBvcnRGb3JtL2xpc3QnLAogICAgICAgIGxpc3Q6ICcvcmVwb3J0Rm9ybS9saXN0JywKICAgICAgICAvLyDmqKHmi5/kv53lrZjljZXooYzmlbDmja7vvIjljbPml7bkv53lrZjvvIkKICAgICAgICBzYXZlUm93OiAnL21vY2svdnhlL2ltbWVkaWF0ZVNhdmVSb3cnLAogICAgICAgIC8vIOaooeaLn+S/neWtmOaVtOS4quihqOagvOeahOaVsOaNrgogICAgICAgIHNhdmVBbGw6ICcvc291dGhUYWJsZS9yZXBvcnRGcm9tRGF0YVNhdmUnCiAgICAgIH0KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sCiAgd2F0Y2g6IHsKICAgIGNvbHVtbnM6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcihuZXdWYWx1ZSwgb2xkVmFsdWUpIHsKICAgICAgICB0aGlzLmNvbHVtbnMgPSBuZXdWYWx1ZTsKICAgICAgICB0aGlzLmluaXQobmV3VmFsdWUpOwogICAgICB9LAogICAgICBkZWVwOiB0cnVlCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0OiBmdW5jdGlvbiBpbml0KGFycikgewogICAgICBjb25zb2xlLmxvZyhhcnIpOwogICAgICB0aGlzLmNvbHVtbnMgPSBhcnI7CiAgICB9LAogICAgbG9hZERhdGFVcGxvYWQ6IGZ1bmN0aW9uIGxvYWREYXRhVXBsb2FkKG9iaikgewogICAgICB0aGlzLiRlbWl0KCdsb2FkRGF0YVVwbG9hZCcsIG9iaik7CiAgICB9LAogICAgdXBsb2Fkc3M6IGZ1bmN0aW9uIHVwbG9hZHNzKG9iaikgewogICAgICBjb25zb2xlLmxvZyhvYmopOwogICAgfSwKICAgIG1vbWVudDogbW9tZW50LAogICAgdmFsaWRBbGxFdmVudDogZnVuY3Rpb24gdmFsaWRBbGxFdmVudCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJlZnMueFRhYmxlLmdldFRhYmxlRGF0YSgpOwogICAgfSwKICAgIGNoYW5nZTogZnVuY3Rpb24gY2hhbmdlKHRpbWUsIHRpbWVTdHJpbmcpIHsKICAgICAgY29uc29sZS5sb2codGltZSwgdGltZVN0cmluZyk7CiAgICAgIHRoaXMuaW5kZXhwcm9wLnZhbHVlID0gdGltZVN0cmluZzsKICAgICAgdGhpcy5pbmRleHByb3AucGFyYW1zLmNhbGwgPSB0aW1lU3RyaW5nOwogICAgICB0aGlzLmluZGV4cHJvcC5yb3cuY2FsbCA9IHRpbWVTdHJpbmc7CiAgICB9LAogICAgaGFuZGxlT3BlbkNoYW5nZTogZnVuY3Rpb24gaGFuZGxlT3BlbkNoYW5nZShwcm9wcykgewogICAgICBjb25zb2xlLmxvZyhwcm9wcyk7CiAgICAgIHRoaXMuaW5kZXhwcm9wID0gcHJvcHM7CiAgICB9LAogICAgaGFuZGxlQ2xvc2U6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKHByb3BzKSB7CiAgICAgIGNvbnNvbGUubG9nKDEpOwogICAgfSwKICAgIGhhbmRsZVZpZXc6IGZ1bmN0aW9uIGhhbmRsZVZpZXcocHJvcHMpIHsKICAgICAgLy8g5Y+C5pWw5LuL57uN77yaCiAgICAgIC8vIHByb3BzLnZhbHVlICAgICAgICAgIOW9k+WJjeWNleWFg+agvOeahOWAvAogICAgICAvLyBwcm9wcy5yb3cgICAgICAgICAgICDlvZPliY3ooYznmoTmlbDmja4KICAgICAgLy8gcHJvcHMucm93SWQgICAgICAgICAg5b2T5YmN6KGMSUQKICAgICAgLy8gcHJvcHMucm93SW5kZXggICAgICAg5b2T5YmN6KGM5LiL5qCHCiAgICAgIC8vIHByb3BzLmNvbHVtbiAgICAgICAgIOW9k+WJjeWIl+eahOmFjee9rgogICAgICAvLyBwcm9wcy5jb2x1bW5JbmRleCAgICDlvZPliY3liJfkuIvmoIcKICAgICAgLy8gcHJvcHMuJHRhYmxlICAgICAgICAgdnhl5a6e5L6L77yM5Y+v5Lul6LCD55Sodnhl5YaF572u5pa55rOVCiAgICAgIC8vIHByb3BzLnRhcmdldCAgICAgICAgIEpWWEXlrp7kvovvvIzlj6/ku6XosIPnlKhKVlhF5YaF572u5pa55rOVCiAgICAgIC8vIHByb3BzLmNhc2VJZCAgICAgICAgIEpWWEXlrp7kvovllK/kuIBJRAogICAgICAvLyBwcm9wcy5zY3JvbGxpbmcgICAgICDmmK/lkKbmraPlnKjmu5rliqgKICAgICAgLy8gcHJvcHMudHJpZ2dlckNoYW5nZSAg6Kem5Y+RY2hhbmdl5LqL5Lu277yM55So5LqO5pu05pS5c2xvdOeahOWAvAogICAgICBjb25zb2xlLmxvZyhwcm9wcywgcHJvcHMpOwogICAgfSwKICAgIGdldFZhbHVlc3M6IGZ1bmN0aW9uIGdldFZhbHVlc3MoX3JlZikgewogICAgICB2YXIgJHRhYmxlID0gX3JlZi4kdGFibGUsCiAgICAgICAgICB0YXJnZXQgPSBfcmVmLnRhcmdldDsKICAgICAgJHRhYmxlLnZhbGlkYXRlKCkudGhlbihmdW5jdGlvbiAoZXJyTWFwKSB7CiAgICAgICAgLy8g5qCh6aqM6YCa6L+HCiAgICAgICAgaWYgKCFlcnJNYXApIHsKICAgICAgICAgIC8vIOiOt+WPluaJgOacieaVsOaNrgogICAgICAgICAgdmFyIHRhYmxlRGF0YSA9IHRhcmdldC5nZXRUYWJsZURhdGEoKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCflvZPliY3kv53lrZjnmoTmlbDmja7mmK/vvJonLCB0YWJsZURhdGEpOyAvLyDojrflj5bmlrDlop7nmoTmlbDmja4KCiAgICAgICAgICB2YXIgbmV3RGF0YSA9IHRhcmdldC5nZXROZXdEYXRhKCk7CiAgICAgICAgICBjb25zb2xlLmxvZygnLS0g5paw5aKe55qE5pWw5o2u77yaJywgbmV3RGF0YSk7IC8vIOiOt+WPluWIoOmZpOeahOaVsOaNrgoKICAgICAgICAgIHZhciBkZWxldGVEYXRhID0gdGFyZ2V0LmdldERlbGV0ZURhdGEoKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCctLSDliKDpmaTnmoTmlbDmja7vvJonLCBkZWxldGVEYXRhKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZURlbGV0ZTogZnVuY3Rpb24gaGFuZGxlRGVsZXRlKHByb3BzKSB7CiAgICAgIC8vIOS9v+eUqOWunuS+i++8muWIoOmZpOW9k+WJjeaTjeS9nOeahOihjAogICAgICBwcm9wcy50YXJnZXQucmVtb3ZlUm93cyhwcm9wcy5yb3cpOwogICAgfSwKICAgIC8vIOOAkOaVtOS9k+S/neWtmOOAkeeCueWHu+S/neWtmOaMiemSruaXtuinpuWPkeeahOS6i+S7tgogICAgaGFuZGxlVGFibGVTYXZlOiBmdW5jdGlvbiBoYW5kbGVUYWJsZVNhdmUoX3JlZjIpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciAkdGFibGUgPSBfcmVmMi4kdGFibGUsCiAgICAgICAgICB0YXJnZXQgPSBfcmVmMi50YXJnZXQ7CiAgICAgIGNvbnNvbGUubG9nKCR0YWJsZSk7CiAgICAgIGNvbnNvbGUubG9nKHRhcmdldCk7CgogICAgICBpZiAodGhpcy5mb3JtRGF0YS50eXBlID09ICdTeW50aGVzaXplTG9nZ2luZycgfHwgdGhpcy5mb3JtRGF0YS50eXBlID09ICdXZWVrU3RhdGlzdGljcycpIHsKICAgICAgICAvLyDmoKHpqozmlbTkuKrooajmoLwKICAgICAgICAkdGFibGUudmFsaWRhdGUoKS50aGVuKGZ1bmN0aW9uIChlcnJNYXApIHsKICAgICAgICAgIC8vIOagoemqjOmAmui/hwogICAgICAgICAgaWYgKCFlcnJNYXApIHsKICAgICAgICAgICAgLy8g6I635Y+W5omA5pyJ5pWw5o2uCiAgICAgICAgICAgIHZhciB0YWJsZURhdGEgPSB0YXJnZXQuZ2V0VGFibGVEYXRhKCk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCflvZPliY3kv53lrZjnmoTmlbDmja7mmK/vvJonLCB0YWJsZURhdGEpOyAvLyDojrflj5bmlrDlop7nmoTmlbDmja4KCiAgICAgICAgICAgIHZhciBuZXdEYXRhID0gdGFyZ2V0LmdldE5ld0RhdGEoKTsKICAgICAgICAgICAgY29uc29sZS5sb2coJy0tIOaWsOWinueahOaVsOaNru+8micsIG5ld0RhdGEpOyAvLyDojrflj5bliKDpmaTnmoTmlbDmja4KCiAgICAgICAgICAgIHZhciBkZWxldGVEYXRhID0gdGFyZ2V0LmdldERlbGV0ZURhdGEoKTsKICAgICAgICAgICAgY29uc29sZS5sb2coJy0tIOWIoOmZpOeahOaVsOaNru+8micsIGRlbGV0ZURhdGEpOwogICAgICAgICAgICB2YXIgb2JqID0gewogICAgICAgICAgICAgIHRlbXBsYXRlVHlwZTogX3RoaXMuZm9ybURhdGEudGVtcGxhdGUsCiAgICAgICAgICAgICAgcmVwb3J0RnJvbVR5cGU6IF90aGlzLmZvcm1EYXRhLnR5cGUsCiAgICAgICAgICAgICAgbGlzdDogdGFibGVEYXRhCiAgICAgICAgICAgIH07CgogICAgICAgICAgICBpZiAoX3RoaXMuZm9ybURhdGEudHlwZSA9PSAnU3ludGhlc2l6ZUxvZ2dpbmcnKSB7CiAgICAgICAgICAgICAgb2JqLnRpbWUgPSBfdGhpcy5mb3JtRGF0YS5jcmVhdGVUaW1lOwogICAgICAgICAgICB9IC8vIOOAkOaooeaLn+S/neWtmOOAkQoKCiAgICAgICAgICAgIF90aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICBwb3N0QWN0aW9uKF90aGlzLnVybC5zYXZlQWxsLCBvYmopLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgIGlmIChyZXMuc3VjY2VzcykgewogICAgICAgICAgICAgICAgX3RoaXMuJG1lc3NhZ2Uuc3VjY2VzcygiXHU0RkREXHU1QjU4XHU2MjEwXHU1MjlGXHVGRjAxIik7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlLndhcm4oIlx1NEZERFx1NUI1OFx1NTkzMVx1OEQyNVx1RkYxQSIgKyByZXMubWVzc2FnZSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJGVtaXQoJ2dldERhdGFzJyk7CiAgICAgIH0KICAgIH0sCiAgICAvLyDop6blj5HljZXlhYPmoLzliKDpmaTkuovku7YKICAgIGhhbmRsZVRhYmxlUmVtb3ZlOiBmdW5jdGlvbiBoYW5kbGVUYWJsZVJlbW92ZShldmVudCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIC8vIOaKiiBldmVudC5kZWxldGVSb3dzIOS8oOe7meWQjuWPsOi/m+ihjOWIoOmZpO+8iOazqOaEj++8mui/memHjOS4jeS8muS8oOmAkuWJjeerr+mAu+i+keaWsOWinueahOaVsOaNru+8jOWboOS4uuS4jemcgOimgeivt+axguWQjuWPsOWIoOmZpO+8iQogICAgICBjb25zb2xlLmxvZygn5b6F5Yig6Zmk55qE5pWw5o2uOiAnLCBldmVudC5kZWxldGVSb3dzKTsgLy8g5Lmf5Y+v5Lul5Y+q5LygSUTvvIzlm6DkuLrlj6/ku6XmoLnmja5JROWIoOmZpAoKICAgICAgdmFyIGRlbGV0ZUlkcyA9IGV2ZW50LmRlbGV0ZVJvd3MubWFwKGZ1bmN0aW9uIChyb3cpIHsKICAgICAgICByZXR1cm4gcm93LmlkOwogICAgICB9KTsKICAgICAgY29uc29sZS5sb2coJ+W+heWIoOmZpOeahOaVsOaNrmlkczogJywgZGVsZXRlSWRzKTsgLy8g5qih5ouf6K+35rGC5ZCO5Y+w5Yig6ZmkCgogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMyLmxvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgX3RoaXMyLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WIoOmZpOaIkOWKnycpOyAvLyDlgYforr7lkI7lj7Dov5Tlm57liKDpmaTmiJDlip/vvIzlv4XpobvopoHosIPnlKggY29uZmlybVJlbW92ZSgpIOaWueazle+8jOaJjeS8muecn+ato+WcqOihqOagvOmHjOenu+mZpO+8iOS8muWQjOaXtuWIoOmZpOmAieS4reeahOmAu+i+keaWsOWinueahOaVsOaNru+8iQoKCiAgICAgICAgZXZlbnQuY29uZmlybVJlbW92ZSgpOwogICAgICB9LCAxMDAwKTsKICAgIH0sCiAgICAvLyDljZXlhYPmoLznvJbovpHlrozmiJDkuYvlkI7op6blj5HnmoTkuovku7YKICAgIGhhbmRsZUVkaXRDbG9zZWQ6IGZ1bmN0aW9uIGhhbmRsZUVkaXRDbG9zZWQoZXZlbnQpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgJHRhYmxlID0gZXZlbnQuJHRhYmxlLAogICAgICAgICAgcm93ID0gZXZlbnQucm93LAogICAgICAgICAgY29sdW1uID0gZXZlbnQuY29sdW1uOwogICAgICB2YXIgZmllbGQgPSBjb2x1bW4ucHJvcGVydHk7CiAgICAgIHZhciBjZWxsVmFsdWUgPSByb3dbZmllbGRdOyAvLyDliKTmlq3ljZXlhYPmoLzlgLzmmK/lkKbooqvkv67mlLkKCiAgICAgIGlmICgkdGFibGUuaXNVcGRhdGVCeVJvdyhyb3csIGZpZWxkKSkgewogICAgICAgIC8vIOagoemqjOW9k+WJjeihjAogICAgICAgICR0YWJsZS52YWxpZGF0ZShyb3cpLnRoZW4oZnVuY3Rpb24gKGVyck1hcCkgewogICAgICAgICAgLy8g5qCh6aqM6YCa6L+HCiAgICAgICAgICBpZiAoIWVyck1hcCkgewogICAgICAgICAgICAvLyDjgJDmqKHmi5/kv53lrZjjgJEKICAgICAgICAgICAgdmFyIGhpZGVMb2FkaW5nID0gX3RoaXMzLiRtZXNzYWdlLmxvYWRpbmcoIlx1NkI2M1x1NTcyOFx1NEZERFx1NUI1OFwiIi5jb25jYXQoY29sdW1uLnRpdGxlLCAiXCIiKSwgMCk7CgogICAgICAgICAgICBjb25zb2xlLmxvZygn5Y2z5pe25L+d5a2Y5pWw5o2u77yaJywgcm93KTsKICAgICAgICAgICAgcHV0QWN0aW9uKF90aGlzMy51cmwuc2F2ZVJvdywgcm93KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICBpZiAocmVzLnN1Y2Nlc3MpIHsKICAgICAgICAgICAgICAgIF90aGlzMy4kbWVzc2FnZS5zdWNjZXNzKCJcIiIuY29uY2F0KGNvbHVtbi50aXRsZSwgIlwiXHU0RkREXHU1QjU4XHU2MjEwXHU1MjlGXHVGRjAxIikpOyAvLyDlsYDpg6jmm7TmlrDljZXlhYPmoLzkuLrlt7Lkv53lrZjnirbmgIEKCgogICAgICAgICAgICAgICAgJHRhYmxlLnJlbG9hZFJvdyhyb3csIG51bGwsIGZpZWxkKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgX3RoaXMzLiRtZXNzYWdlLndhcm4oIlwiIi5jb25jYXQoY29sdW1uLnRpdGxlLCAiXCJcdTRGRERcdTVCNThcdTU5MzFcdThEMjVcdUZGMUEiKSArIHJlcy5tZXNzYWdlKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIGhpZGVMb2FkaW5nKCk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgLy8g5b2T5YiG6aG15Y+C5pWw5Y+Y5YyW5pe26Kem5Y+R55qE5LqL5Lu2CiAgICBoYW5kbGVQYWdlQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVQYWdlQ2hhbmdlKGV2ZW50KSB7CiAgICAgIC8vIOmHjeaWsOi1i+WAvAogICAgICB0aGlzLnBhZ2luYXRpb24uY3VycmVudCA9IGV2ZW50LmN1cnJlbnQ7CiAgICAgIHRoaXMucGFnaW5hdGlvbi5wYWdlU2l6ZSA9IGV2ZW50LnBhZ2VTaXplOyAvLyDmn6Xor6LmlbDmja4KCiAgICAgIHRoaXMubG9hZERhdGEoKTsKICAgIH0sCiAgICAvLyDlvZPpgInmi6nnmoTooYzlj5jljJbml7bop6blj5HnmoTkuovku7YKICAgIGhhbmRsZVNlbGVjdFJvd0NoYW5nZTogZnVuY3Rpb24gaGFuZGxlU2VsZWN0Um93Q2hhbmdlKGV2ZW50KSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRSb3dzID0gZXZlbnQuc2VsZWN0ZWRSb3dzOwogICAgfQogIH0KfTs="},{"version":3,"sources":["JDemo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAA,SAAA,EAAA,UAAA,EAAA,SAAA,QAAA,aAAA;AACA,SAAA,SAAA,QAAA,8BAAA;AACA,OAAA,MAAA,MAAA,QAAA,C,CACA;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,KAAA,EAAA,CAAA,SAAA,EAAA,YAAA,EAAA,UAAA,EAAA,WAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA,KAFA;AAGA,MAAA,SAAA,EAAA,EAHA;AAIA;AACA,MAAA,aAAA,EAAA;AACA;AACA,QAAA,GAAA,EAAA,CAAA,KAAA,EAAA,MAAA,EAAA,QAAA,EAAA,gBAAA;AAFA,OALA;AASA;AACA,MAAA,OAAA,EAAA,KAVA;AAWA;AACA,MAAA,UAAA,EAAA;AACA;AACA,QAAA,OAAA,EAAA,CAFA;AAGA;AACA,QAAA,QAAA,EAAA,EAJA;AAKA;AACA,QAAA,KAAA,EAAA;AANA,OAZA;AAoBA;AACA,MAAA,YAAA,EAAA,EArBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,GAAA,EAAA;AACA,QAAA,OAAA,EAAA,kBADA;AAEA,QAAA,IAAA,EAAA,kBAFA;AAGA;AACA,QAAA,OAAA,EAAA,4BAJA;AAKA;AACA,QAAA,OAAA,EAAA;AANA;AAvCA,KAAA;AAgDA,GApDA;AAqDA,EAAA,OArDA,qBAqDA,CACA,CAtDA;AAuDA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,OADA,mBACA,QADA,EACA,QADA,EACA;AACA,aAAA,OAAA,GAAA,QAAA;AACA,aAAA,IAAA,CAAA,QAAA;AACA,OAJA;AAKA,MAAA,IAAA,EAAA;AALA;AADA,GAvDA;AAgEA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,gBACA,GADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,WAAA,OAAA,GAAA,GAAA;AACA,KAJA;AAKA,IAAA,cALA,0BAKA,GALA,EAKA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,GAAA;AACA,KAPA;AAQA,IAAA,QARA,oBAQA,GARA,EAQA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,KAVA;AAWA,IAAA,MAAA,EAAA,MAXA;AAYA,IAAA,aAZA,2BAYA;AACA,aAAA,KAAA,KAAA,CAAA,MAAA,CAAA,YAAA,EAAA;AACA,KAdA;AAeA,IAAA,MAfA,kBAeA,IAfA,EAeA,UAfA,EAeA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,EAAA,UAAA;AACA,WAAA,SAAA,CAAA,KAAA,GAAA,UAAA;AACA,WAAA,SAAA,CAAA,MAAA,CAAA,IAAA,GAAA,UAAA;AACA,WAAA,SAAA,CAAA,GAAA,CAAA,IAAA,GAAA,UAAA;AACA,KApBA;AAqBA,IAAA,gBArBA,4BAqBA,KArBA,EAqBA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,WAAA,SAAA,GAAA,KAAA;AACA,KAxBA;AAyBA,IAAA,WAzBA,uBAyBA,KAzBA,EAyBA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,KA3BA;AA4BA,IAAA,UA5BA,sBA4BA,KA5BA,EA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,EAAA,KAAA;AACA,KA1CA;AA2CA,IAAA,UA3CA,4BA2CA;AAAA,UAAA,MAAA,QAAA,MAAA;AAAA,UAAA,MAAA,QAAA,MAAA;AACA,MAAA,MAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA;AACA,YAAA,CAAA,MAAA,EAAA;AACA;AACA,cAAA,SAAA,GAAA,MAAA,CAAA,YAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,SAAA,EAHA,CAIA;;AACA,cAAA,OAAA,GAAA,MAAA,CAAA,UAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,OAAA,EANA,CAOA;;AACA,cAAA,UAAA,GAAA,MAAA,CAAA,aAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,UAAA;AAEA;AACA,OAdA;AAeA,KA3DA;AA4DA,IAAA,YA5DA,wBA4DA,KA5DA,EA4DA;AACA;AACA,MAAA,KAAA,CAAA,MAAA,CAAA,UAAA,CAAA,KAAA,CAAA,GAAA;AACA,KA/DA;AAkEA;AACA,IAAA,eAnEA,kCAmEA;AAAA;;AAAA,UAAA,MAAA,SAAA,MAAA;AAAA,UAAA,MAAA,SAAA,MAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA;;AACA,UAAA,KAAA,QAAA,CAAA,IAAA,IAAA,mBAAA,IAAA,KAAA,QAAA,CAAA,IAAA,IAAA,gBAAA,EAAA;AACA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA;AACA,cAAA,CAAA,MAAA,EAAA;AACA;AACA,gBAAA,SAAA,GAAA,MAAA,CAAA,YAAA,EAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,SAAA,EAHA,CAIA;;AACA,gBAAA,OAAA,GAAA,MAAA,CAAA,UAAA,EAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,OAAA,EANA,CAOA;;AACA,gBAAA,UAAA,GAAA,MAAA,CAAA,aAAA,EAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,UAAA;AACA,gBAAA,GAAA,GAAA;AACA,cAAA,YAAA,EAAA,KAAA,CAAA,QAAA,CAAA,QADA;AAEA,cAAA,cAAA,EAAA,KAAA,CAAA,QAAA,CAAA,IAFA;AAGA,cAAA,IAAA,EAAA;AAHA,aAAA;;AAKA,gBAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,mBAAA,EAAA;AACA,cAAA,GAAA,CAAA,IAAA,GAAA,KAAA,CAAA,QAAA,CAAA,UAAA;AACA,aAjBA,CAmBA;;;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA,YAAA,UAAA,CAAA,KAAA,CAAA,GAAA,CAAA,OAAA,EAAA,GAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,GAAA,CAAA,OAAA,EAAA;AACA,gBAAA,KAAA,CAAA,QAAA,CAAA,OAAA;AACA,eAFA,MAEA;AACA,gBAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,mCAAA,GAAA,CAAA,OAAA;AACA;AACA,aANA,EAMA,OANA,CAMA,YAAA;AACA,cAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,aARA;AASA;AACA,SAjCA;AAkCA,OApCA,MAoCA;AACA,aAAA,KAAA,CAAA,UAAA;AACA;AAEA,KA9GA;AAgHA;AACA,IAAA,iBAjHA,6BAiHA,KAjHA,EAiHA;AAAA;;AAEA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,UAAA,EAAA,KAAA,CAAA,UAAA,EAHA,CAIA;;AACA,UAAA,SAAA,GAAA,KAAA,CAAA,UAAA,CAAA,GAAA,CAAA,UAAA,GAAA;AAAA,eAAA,GAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,aAAA,EAAA,SAAA,EANA,CAQA;;AACA,WAAA,OAAA,GAAA,IAAA;AACA,MAAA,MAAA,CAAA,UAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,KAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,EAFA,CAGA;;;AACA,QAAA,KAAA,CAAA,aAAA;AACA,OALA,EAKA,IALA;AAMA,KAjIA;AAmIA;AACA,IAAA,gBApIA,4BAoIA,KApIA,EAoIA;AAAA;;AAAA,UACA,MADA,GACA,KADA,CACA,MADA;AAAA,UACA,GADA,GACA,KADA,CACA,GADA;AAAA,UACA,MADA,GACA,KADA,CACA,MADA;AAGA,UAAA,KAAA,GAAA,MAAA,CAAA,QAAA;AACA,UAAA,SAAA,GAAA,GAAA,CAAA,KAAA,CAAA,CAJA,CAKA;;AACA,UAAA,MAAA,CAAA,aAAA,CAAA,GAAA,EAAA,KAAA,CAAA,EAAA;AACA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,GAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA;AACA,cAAA,CAAA,MAAA,EAAA;AACA;AACA,gBAAA,WAAA,GAAA,MAAA,CAAA,QAAA,CAAA,OAAA,qCAAA,MAAA,CAAA,KAAA,SAAA,CAAA,CAAA;;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA,GAAA;AACA,YAAA,SAAA,CAAA,MAAA,CAAA,GAAA,CAAA,OAAA,EAAA,GAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,GAAA,CAAA,OAAA,EAAA;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,OAAA,aAAA,MAAA,CAAA,KAAA,uCADA,CAEA;;;AACA,gBAAA,MAAA,CAAA,SAAA,CAAA,GAAA,EAAA,IAAA,EAAA,KAAA;AACA,eAJA,MAIA;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,YAAA,MAAA,CAAA,KAAA,wCAAA,GAAA,CAAA,OAAA;AACA;AACA,aARA,EAQA,OARA,CAQA,YAAA;AACA,cAAA,WAAA;AACA,aAVA;AAWA;AACA,SAlBA;AAmBA;AACA,KAhKA;AAkKA;AACA,IAAA,gBAnKA,4BAmKA,KAnKA,EAmKA;AACA;AACA,WAAA,UAAA,CAAA,OAAA,GAAA,KAAA,CAAA,OAAA;AACA,WAAA,UAAA,CAAA,QAAA,GAAA,KAAA,CAAA,QAAA,CAHA,CAIA;;AACA,WAAA,QAAA;AACA,KAzKA;AA2KA;AACA,IAAA,qBA5KA,iCA4KA,KA5KA,EA4KA;AACA,WAAA,YAAA,GAAA,KAAA,CAAA,YAAA;AACA;AA9KA;AAhEA,CAAA","sourcesContent":["<template>\r\n  <j-vxe-table\r\n      toolbar\r\n      :importBtn=\"importBtn\"\r\n      :toolbarConfig=\"toolbarConfig\"\r\n      keep-source\r\n      async-remove\r\n      ref=\"xTable\"\r\n      row-selection\r\n      :loading=\"loading\"\r\n      :columns=\"columns\"\r\n      :dataSource=\"dataSource\"\r\n      @loadDataUpload=\"loadDataUpload\"\r\n      @save=\"handleTableSave\"\r\n      @remove=\"handleTableRemove\"\r\n      @edit-closed=\"handleEditClosed\"\r\n      @pageChange=\"handlePageChange\"\r\n      @selectRowChange=\"handleSelectRowChange\"\r\n      @upload=\"uploadss\"\r\n  >\r\n    <template v-slot:call=\"props\">\r\n      <a-time-picker :default-value=\"moment(props.value, 'HH:mm:ss')\"    @openChange=\"handleOpenChange(props)\" @change=\"change\">\r\n      </a-time-picker>\r\n    </template>\r\n  </j-vxe-table>\r\n</template>\r\n\r\n<script>\r\nimport { getAction, postAction, putAction } from '@api/manage'\r\nimport { JVXETypes } from '@/components/jeecg/JVxeTable'\r\nimport moment from 'moment';\r\n// 即时保存示例\r\nexport default {\r\n  name: 'JDemo',\r\n  props:['columns','dataSource','formData','importBtn'],\r\n  data() {\r\n    return {\r\n      columnss:[],\r\n      open: false,\r\n      indexprop:{},\r\n      // 工具栏的按钮配置\r\n      toolbarConfig: {\r\n        // add 新增按钮；remove 删除按钮；clearSelection 清空选择按钮\r\n        btn: ['add', 'save', 'remove', 'clearSelection']\r\n      },\r\n      // 是否正在加载\r\n      loading: false,\r\n      // 分页器参数\r\n      pagination: {\r\n        // 当前页码\r\n        current: 1,\r\n        // 每页的条数\r\n        pageSize: 10,\r\n        // 数据总数（目前并不知道真实的总数，所以先填写0，在后台查出来后再赋值）\r\n        total: 0,\r\n      },\r\n      // 选择的行\r\n      selectedRows: [],\r\n      // 数据源，控制表格的数据\r\n      // 列配置，控制表格显示的列\r\n      // columns: [\r\n      //   {key: 'call', title: '时间',type: JVXETypes.time,slotName:'call',open:false},\r\n      //   {key: 'len', title: '事件', type: JVXETypes.input},\r\n      //   {key: 'ton', title: '具体落实情况',   type: JVXETypes.input},\r\n      //   {key: 'payer', title: '席位名称',  type: JVXETypes.input},\r\n      //   {\r\n      //     key: 'company',\r\n      //     title: '值班员',\r\n      //     // 最小宽度，与宽度不同的是，这个不是固定的宽度，如果表格有多余的空间，会平均分配给设置了 minWidth 的列\r\n      //     // 如果要做占满表格的列可以这么写\r\n      //     type: JVXETypes.input\r\n      //   },\r\n      //   {key: 'trend', title: '备注',type: JVXETypes.input},\r\n      // ],\r\n      // 查询url地址\r\n      url: {\r\n        getData: '/reportForm/list',\r\n        list: '/reportForm/list',\r\n        // 模拟保存单行数据（即时保存）\r\n        saveRow: '/mock/vxe/immediateSaveRow',\r\n        // 模拟保存整个表格的数据\r\n        saveAll: '/southTable/reportFromDataSave',\r\n      },\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  watch:{\r\n    columns: {\r\n      handler(newValue, oldValue) {\r\n        this.columns = newValue\r\n        this.init(newValue)\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  methods: {\r\n    init(arr) {\r\n      console.log(arr)\r\n      this.columns = arr\r\n    },\r\n    loadDataUpload(obj) {\r\n      this.$emit('loadDataUpload',obj)\r\n    },\r\n    uploadss(obj) {\r\n      console.log(obj)\r\n    },\r\n    moment,\r\n    validAllEvent () {\r\n      return this.$refs.xTable.getTableData()\r\n    },\r\n    change(time, timeString) {\r\n      console.log(time, timeString);\r\n      this.indexprop.value = timeString\r\n      this.indexprop.params.call = timeString\r\n      this.indexprop.row.call = timeString\r\n    },\r\n    handleOpenChange(props) {\r\n      console.log(props)\r\n      this.indexprop = props\r\n    },\r\n    handleClose(props) {\r\n      console.log(1)\r\n    },\r\n    handleView(props) {\r\n      // 参数介绍：\r\n      // props.value          当前单元格的值\r\n      // props.row            当前行的数据\r\n      // props.rowId          当前行ID\r\n      // props.rowIndex       当前行下标\r\n      // props.column         当前列的配置\r\n      // props.columnIndex    当前列下标\r\n      // props.$table         vxe实例，可以调用vxe内置方法\r\n      // props.target         JVXE实例，可以调用JVXE内置方法\r\n      // props.caseId         JVXE实例唯一ID\r\n      // props.scrolling      是否正在滚动\r\n      // props.triggerChange  触发change事件，用于更改slot的值\r\n      console.log(props, props)\r\n    },\r\n    getValuess({$table, target}) {\r\n      $table.validate().then((errMap) => {\r\n        // 校验通过\r\n        if (!errMap) {\r\n          // 获取所有数据\r\n          let tableData = target.getTableData()\r\n          console.log('当前保存的数据是：', tableData)\r\n          // 获取新增的数据\r\n          let newData = target.getNewData()\r\n          console.log('-- 新增的数据：', newData)\r\n          // 获取删除的数据\r\n          let deleteData = target.getDeleteData()\r\n          console.log('-- 删除的数据：', deleteData)\r\n\r\n        }\r\n      })\r\n    },\r\n    handleDelete(props) {\r\n      // 使用实例：删除当前操作的行\r\n      props.target.removeRows(props.row)\r\n    },\r\n\r\n\r\n    // 【整体保存】点击保存按钮时触发的事件\r\n    handleTableSave({$table, target}) {\r\n      console.log($table)\r\n      console.log(target)\r\n      if(this.formData.type == 'SynthesizeLogging'||this.formData.type=='WeekStatistics') {\r\n        // 校验整个表格\r\n        $table.validate().then((errMap) => {\r\n          // 校验通过\r\n          if (!errMap) {\r\n            // 获取所有数据\r\n            let tableData = target.getTableData()\r\n            console.log('当前保存的数据是：', tableData)\r\n            // 获取新增的数据\r\n            let newData = target.getNewData()\r\n            console.log('-- 新增的数据：', newData)\r\n            // 获取删除的数据\r\n            let deleteData = target.getDeleteData()\r\n            console.log('-- 删除的数据：', deleteData)\r\n            var obj = {\r\n              templateType: this.formData.template,\r\n              reportFromType: this.formData.type,\r\n              list:tableData\r\n            }\r\n            if(this.formData.type == 'SynthesizeLogging') {\r\n              obj.time = this.formData.createTime\r\n            }\r\n\r\n            // 【模拟保存】\r\n            this.loading = true\r\n            postAction(this.url.saveAll, obj).then(res => {\r\n              if (res.success) {\r\n                this.$message.success(`保存成功！`)\r\n              } else {\r\n                this.$message.warn(`保存失败：` + res.message)\r\n              }\r\n            }).finally(() => {\r\n              this.loading = false\r\n            })\r\n          }\r\n        })\r\n      }else {\r\n          this.$emit('getDatas')\r\n      }\r\n\r\n    },\r\n\r\n    // 触发单元格删除事件\r\n    handleTableRemove(event) {\r\n\r\n      // 把 event.deleteRows 传给后台进行删除（注意：这里不会传递前端逻辑新增的数据，因为不需要请求后台删除）\r\n      console.log('待删除的数据: ', event.deleteRows)\r\n      // 也可以只传ID，因为可以根据ID删除\r\n      let deleteIds = event.deleteRows.map(row => row.id)\r\n      console.log('待删除的数据ids: ', deleteIds)\r\n\r\n      // 模拟请求后台删除\r\n      this.loading = true\r\n      window.setTimeout(() => {\r\n        this.loading = false\r\n        this.$message.success('删除成功')\r\n        // 假设后台返回删除成功，必须要调用 confirmRemove() 方法，才会真正在表格里移除（会同时删除选中的逻辑新增的数据）\r\n        event.confirmRemove()\r\n      }, 1000)\r\n    },\r\n\r\n    // 单元格编辑完成之后触发的事件\r\n    handleEditClosed(event) {\r\n      let {$table, row, column} = event\r\n\r\n      let field = column.property\r\n      let cellValue = row[field]\r\n      // 判断单元格值是否被修改\r\n      if ($table.isUpdateByRow(row, field)) {\r\n        // 校验当前行\r\n        $table.validate(row).then((errMap) => {\r\n          // 校验通过\r\n          if (!errMap) {\r\n            // 【模拟保存】\r\n            let hideLoading = this.$message.loading(`正在保存\"${column.title}\"`, 0)\r\n            console.log('即时保存数据：', row)\r\n            putAction(this.url.saveRow, row).then(res => {\r\n              if (res.success) {\r\n                this.$message.success(`\"${column.title}\"保存成功！`)\r\n                // 局部更新单元格为已保存状态\r\n                $table.reloadRow(row, null, field)\r\n              } else {\r\n                this.$message.warn(`\"${column.title}\"保存失败：` + res.message)\r\n              }\r\n            }).finally(() => {\r\n              hideLoading()\r\n            })\r\n          }\r\n        })\r\n      }\r\n    },\r\n\r\n    // 当分页参数变化时触发的事件\r\n    handlePageChange(event) {\r\n      // 重新赋值\r\n      this.pagination.current = event.current\r\n      this.pagination.pageSize = event.pageSize\r\n      // 查询数据\r\n      this.loadData()\r\n    },\r\n\r\n    // 当选择的行变化时触发的事件\r\n    handleSelectRowChange(event) {\r\n      this.selectedRows = event.selectedRows\r\n    },\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/zbtest"}]}