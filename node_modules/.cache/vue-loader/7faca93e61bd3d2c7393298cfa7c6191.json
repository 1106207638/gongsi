{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\modules\\monitor\\JvmInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\modules\\monitor\\JvmInfo.vue","mtime":1615948820445},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JwppbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICdAL2FwaS9tYW5hZ2UnCgptb21lbnQubG9jYWxlKCd6aC1jbicpCgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpbWU6ICcnLAogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICB0YWJsZUxvYWRpbmc6IHRydWUsCiAgICAgIGNvbHVtbnM6IFt7CiAgICAgICAgdGl0bGU6ICflj4LmlbAnLAogICAgICAgIHdpZHRoOiAnMzAlJywKICAgICAgICBkYXRhSW5kZXg6ICdwYXJhbScsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsgY3VzdG9tUmVuZGVyOiAncGFyYW0nIH0KICAgICAgfSwgewogICAgICAgIHRpdGxlOiAn5o+P6L+wJywKICAgICAgICB3aWR0aDogJzQwJScsCiAgICAgICAgZGF0YUluZGV4OiAndGV4dCcsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsgY3VzdG9tUmVuZGVyOiAndGV4dCcgfQogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICflvZPliY3lgLwnLAogICAgICAgIHdpZHRoOiAnMzAlJywKICAgICAgICBkYXRhSW5kZXg6ICd2YWx1ZScsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsgY3VzdG9tUmVuZGVyOiAndmFsdWUnIH0KICAgICAgfV0sCiAgICAgIGRhdGFTb3VyY2U6IFtdLAogICAgICAvLyDliJfooajpgJrov4cgdGV4dEluZm8g5riy5p+T5Ye66aKc6Imy44CB5o+P6L+w5ZKM5Y2V5L2NCiAgICAgIHRleHRJbmZvOiB7CiAgICAgICAgJ2p2bS5tZW1vcnkubWF4JzogeyBjb2xvcjogJ3B1cnBsZScsIHRleHQ6ICdKVk0g5pyA5aSn5YaF5a2YJywgdW5pdDogJ01CJyB9LAogICAgICAgICdqdm0ubWVtb3J5LmNvbW1pdHRlZCc6IHsgY29sb3I6ICdwdXJwbGUnLCB0ZXh0OiAnSlZNIOWPr+eUqOWGheWtmCcsIHVuaXQ6ICdNQicgfSwKICAgICAgICAnanZtLm1lbW9yeS51c2VkJzogeyBjb2xvcjogJ3B1cnBsZScsIHRleHQ6ICdKVk0g5bey55So5YaF5a2YJywgdW5pdDogJ01CJyB9LAogICAgICAgICdqdm0uYnVmZmVyLm1lbW9yeS51c2VkJzogeyBjb2xvcjogJ2N5YW4nLCB0ZXh0OiAnSlZNIOe8k+WGsuWMuuW3sueUqOWGheWtmCcsIHVuaXQ6ICdNQicgfSwKICAgICAgICAnanZtLmJ1ZmZlci5jb3VudCc6IHsgY29sb3I6ICdjeWFuJywgdGV4dDogJ+W9k+WJjee8k+WGsuWMuuaVsOmHjycsIHVuaXQ6ICfkuKonIH0sCiAgICAgICAgJ2p2bS50aHJlYWRzLmRhZW1vbic6IHsgY29sb3I6ICdncmVlbicsIHRleHQ6ICdKVk0g5a6I5oqk57q/56iL5pWw6YePJywgdW5pdDogJ+S4qicgfSwKICAgICAgICAnanZtLnRocmVhZHMubGl2ZSc6IHsgY29sb3I6ICdncmVlbicsIHRleHQ6ICdKVk0g5b2T5YmN5rS76LeD57q/56iL5pWw6YePJywgdW5pdDogJ+S4qicgfSwKICAgICAgICAnanZtLnRocmVhZHMucGVhayc6IHsgY29sb3I6ICdncmVlbicsIHRleHQ6ICdKVk0g5bOw5YC857q/56iL5pWw6YePJywgdW5pdDogJ+S4qicgfSwKICAgICAgICAnanZtLmNsYXNzZXMubG9hZGVkJzogeyBjb2xvcjogJ29yYW5nZScsIHRleHQ6ICdKVk0g5bey5Yqg6L29IENsYXNzIOaVsOmHjycsIHVuaXQ6ICfkuKonIH0sCiAgICAgICAgJ2p2bS5jbGFzc2VzLnVubG9hZGVkJzogeyBjb2xvcjogJ29yYW5nZScsIHRleHQ6ICdKVk0g5pyq5Yqg6L29IENsYXNzIOaVsOmHjycsIHVuaXQ6ICfkuKonIH0sCiAgICAgICAgJ2p2bS5nYy5tZW1vcnkuYWxsb2NhdGVkJzogeyBjb2xvcjogJ3BpbmsnLCB0ZXh0OiAnR0Mg5pe2LCDlubTovbvku6PliIbphY3nmoTlhoXlrZjnqbrpl7QnLCB1bml0OiAnTUInIH0sCiAgICAgICAgJ2p2bS5nYy5tZW1vcnkucHJvbW90ZWQnOiB7IGNvbG9yOiAncGluaycsIHRleHQ6ICdHQyDml7YsIOiAgeW5tOS7o+WIhumFjeeahOWGheWtmOepuumXtCcsIHVuaXQ6ICdNQicgfSwKICAgICAgICAnanZtLmdjLm1heC5kYXRhLnNpemUnOiB7IGNvbG9yOiAncGluaycsIHRleHQ6ICdHQyDml7YsIOiAgeW5tOS7o+eahOacgOWkp+WGheWtmOepuumXtCcsIHVuaXQ6ICdNQicgfSwKICAgICAgICAnanZtLmdjLmxpdmUuZGF0YS5zaXplJzogeyBjb2xvcjogJ3BpbmsnLCB0ZXh0OiAnRnVsbEdDIOaXtiwg6ICB5bm05Luj55qE5YaF5a2Y56m66Ze0JywgdW5pdDogJ01CJyB9LAogICAgICAgICdqdm0uZ2MucGF1c2UuY291bnQnOiB7IGNvbG9yOiAnYmx1ZScsIHRleHQ6ICfns7vnu5/lkK/liqjku6XmnaVHQyDmrKHmlbAnLCB1bml0OiAn5qyhJyB9LAogICAgICAgICdqdm0uZ2MucGF1c2UudG90YWxUaW1lJzogeyBjb2xvcjogJ2JsdWUnLCB0ZXh0OiAn57O757uf5ZCv5Yqo5Lul5p2lR0Mg5oC76ICX5pe2JywgdW5pdDogJ+enkicgfQogICAgICB9LAogICAgICAvLyDlvZPkuIDmnaHorrDlvZXkuK3pnIDopoHlj5blh7rlpJrmnaHmlbDmja7nmoTml7blgJnpnIDopoHphY3nva7or6XlrZfmrrUKICAgICAgbW9yZUluZm86IHsKICAgICAgICAnanZtLmdjLnBhdXNlJzogWycuY291bnQnLCAnLnRvdGFsVGltZSddCiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmxvYWRUb21jYXRJbmZvKCkKICB9LAogIG1ldGhvZHM6IHsKCiAgICBoYW5kbGVDbGlja1VwZGF0ZSgpIHsKICAgICAgdGhpcy5sb2FkVG9tY2F0SW5mbygpCiAgICB9LAoKICAgIGxvYWRUb21jYXRJbmZvKCkgewogICAgICB0aGlzLnRhYmxlTG9hZGluZyA9IHRydWUKICAgICAgdGhpcy50aW1lID0gbW9tZW50KCkuZm9ybWF0KCdZWVlZ5bm0TU3mnIhEROaXpSBISOaXtm1t5YiGc3Pnp5InKQogICAgICBQcm9taXNlLmFsbChbCiAgICAgICAgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL2p2bS5tZW1vcnkubWF4JyksCiAgICAgICAgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL2p2bS5tZW1vcnkuY29tbWl0dGVkJyksCiAgICAgICAgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL2p2bS5tZW1vcnkudXNlZCcpLAogICAgICAgIGdldEFjdGlvbignYWN0dWF0b3IvbWV0cmljcy9qdm0uYnVmZmVyLm1lbW9yeS51c2VkJyksCiAgICAgICAgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL2p2bS5idWZmZXIuY291bnQnKSwKICAgICAgICBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvanZtLnRocmVhZHMuZGFlbW9uJyksCiAgICAgICAgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL2p2bS50aHJlYWRzLmxpdmUnKSwKICAgICAgICBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvanZtLnRocmVhZHMucGVhaycpLAogICAgICAgIGdldEFjdGlvbignYWN0dWF0b3IvbWV0cmljcy9qdm0uY2xhc3Nlcy5sb2FkZWQnKSwKICAgICAgICBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvanZtLmNsYXNzZXMudW5sb2FkZWQnKSwKICAgICAgICBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvanZtLmdjLm1lbW9yeS5hbGxvY2F0ZWQnKSwKICAgICAgICBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvanZtLmdjLm1lbW9yeS5wcm9tb3RlZCcpLAogICAgICAgIGdldEFjdGlvbignYWN0dWF0b3IvbWV0cmljcy9qdm0uZ2MubWF4LmRhdGEuc2l6ZScpLAogICAgICAgIGdldEFjdGlvbignYWN0dWF0b3IvbWV0cmljcy9qdm0uZ2MubGl2ZS5kYXRhLnNpemUnKSwKICAgICAgICBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvanZtLmdjLnBhdXNlJykKICAgICAgXSkudGhlbigocmVzKSA9PiB7CgogICAgICAgIGxldCBpbmZvID0gW10KICAgICAgICByZXMuZm9yRWFjaCgodmFsdWUsIGlkKSA9PiB7CiAgICAgICAgICBsZXQgbW9yZSA9IHRoaXMubW9yZUluZm9bdmFsdWUubmFtZV0KICAgICAgICAgIGlmICghKG1vcmUgaW5zdGFuY2VvZiBBcnJheSkpIHsKICAgICAgICAgICAgbW9yZSA9IFsnJ10KICAgICAgICAgIH0KICAgICAgICAgIG1vcmUuZm9yRWFjaCgoaXRlbSwgaWR4KSA9PiB7CiAgICAgICAgICAgIGxldCBwYXJhbSA9IHZhbHVlLm5hbWUgKyBpdGVtCiAgICAgICAgICAgIGxldCB2YWwgPSB2YWx1ZS5tZWFzdXJlbWVudHNbaWR4XS52YWx1ZQoKICAgICAgICAgICAgaWYgKHBhcmFtID09PSAnanZtLm1lbW9yeS5tYXgnCiAgICAgICAgICAgICAgfHwgcGFyYW0gPT09ICdqdm0ubWVtb3J5LmNvbW1pdHRlZCcKICAgICAgICAgICAgICB8fCBwYXJhbSA9PT0gJ2p2bS5tZW1vcnkudXNlZCcKICAgICAgICAgICAgICB8fCBwYXJhbSA9PT0gJ2p2bS5idWZmZXIubWVtb3J5LnVzZWQnCiAgICAgICAgICAgICAgfHwgcGFyYW0gPT09ICdqdm0uZ2MubWVtb3J5LmFsbG9jYXRlZCcKICAgICAgICAgICAgICB8fCBwYXJhbSA9PT0gJ2p2bS5nYy5tZW1vcnkucHJvbW90ZWQnCiAgICAgICAgICAgICAgfHwgcGFyYW0gPT09ICdqdm0uZ2MubWF4LmRhdGEuc2l6ZScKICAgICAgICAgICAgICB8fCBwYXJhbSA9PT0gJ2p2bS5nYy5saXZlLmRhdGEuc2l6ZScKICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgdmFsID0gdGhpcy5jb252ZXJ0KHZhbCwgTnVtYmVyKQogICAgICAgICAgICB9CiAgICAgICAgICAgIGluZm8ucHVzaCh7IGlkOiBwYXJhbSArIGlkLCBwYXJhbSwgdGV4dDogJ2ZhbHNlIHZhbHVlJywgdmFsdWU6IHZhbCB9KQogICAgICAgICAgfSkKICAgICAgICB9KQogICAgICAgIHRoaXMuZGF0YVNvdXJjZSA9IGluZm8KCgogICAgICB9KS5jYXRjaCgoZSkgPT4gewogICAgICAgIGNvbnNvbGUuZXJyb3IoZSkKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfojrflj5ZKVk3kv6Hmga/lpLHotKUnKQogICAgICB9KS5maW5hbGx5KCgpID0+IHsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgICAgIHRoaXMudGFibGVMb2FkaW5nID0gZmFsc2UKICAgICAgfSkKICAgIH0sCgogICAgY29udmVydCh2YWx1ZSwgdHlwZSkgewogICAgICBpZiAodHlwZSA9PT0gTnVtYmVyKSB7CiAgICAgICAgcmV0dXJuIE51bWJlcih2YWx1ZSAvIDEwNDg1NzYpLnRvRml4ZWQoMykKICAgICAgfSBlbHNlIGlmICh0eXBlID09PSBEYXRlKSB7CiAgICAgICAgcmV0dXJuIG1vbWVudCh2YWx1ZSAqIDEwMDApLmZvcm1hdCgnWVlZWS1NTS1ERCBISDptbTpzcycpCiAgICAgIH0KICAgICAgcmV0dXJuIHZhbHVlCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["JvmInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"JvmInfo.vue","sourceRoot":"src/views/modules/monitor","sourcesContent":["<template>\r\n  <a-skeleton active :loading=\"loading\" :paragraph=\"{rows: 17}\">\r\n    <a-card :bordered=\"false\">\r\n\r\n      <a-alert type=\"info\" :showIcon=\"true\">\r\n        <div slot=\"message\">\r\n          上次更新时间：{{ this.time }}\r\n          <a-divider type=\"vertical\"/>\r\n          <a @click=\"handleClickUpdate\">立即更新</a>\r\n        </div>\r\n      </a-alert>\r\n\r\n      <a-table\r\n        rowKey=\"id\"\r\n        size=\"middle\"\r\n        :columns=\"columns\"\r\n        :dataSource=\"dataSource\"\r\n        :pagination=\"false\"\r\n        :loading=\"tableLoading\"\r\n        style=\"margin-top: 20px;\">\r\n\r\n        <template slot=\"param\" slot-scope=\"text, record\">\r\n          <a-tag :color=\"textInfo[record.param].color\">{{ text }}</a-tag>\r\n        </template>\r\n\r\n        <template slot=\"text\" slot-scope=\"text, record\">\r\n          {{ textInfo[record.param].text }}\r\n        </template>\r\n\r\n        <template slot=\"value\" slot-scope=\"text, record\">\r\n          {{ text }} {{ textInfo[record.param].unit }}\r\n        </template>\r\n\r\n      </a-table>\r\n    </a-card>\r\n  </a-skeleton>\r\n</template>\r\n<script>\r\n  import moment from 'moment'\r\n  import { getAction } from '@/api/manage'\r\n\r\n  moment.locale('zh-cn')\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        time: '',\r\n        loading: true,\r\n        tableLoading: true,\r\n        columns: [{\r\n          title: '参数',\r\n          width: '30%',\r\n          dataIndex: 'param',\r\n          scopedSlots: { customRender: 'param' }\r\n        }, {\r\n          title: '描述',\r\n          width: '40%',\r\n          dataIndex: 'text',\r\n          scopedSlots: { customRender: 'text' }\r\n        }, {\r\n          title: '当前值',\r\n          width: '30%',\r\n          dataIndex: 'value',\r\n          scopedSlots: { customRender: 'value' }\r\n        }],\r\n        dataSource: [],\r\n        // 列表通过 textInfo 渲染出颜色、描述和单位\r\n        textInfo: {\r\n          'jvm.memory.max': { color: 'purple', text: 'JVM 最大内存', unit: 'MB' },\r\n          'jvm.memory.committed': { color: 'purple', text: 'JVM 可用内存', unit: 'MB' },\r\n          'jvm.memory.used': { color: 'purple', text: 'JVM 已用内存', unit: 'MB' },\r\n          'jvm.buffer.memory.used': { color: 'cyan', text: 'JVM 缓冲区已用内存', unit: 'MB' },\r\n          'jvm.buffer.count': { color: 'cyan', text: '当前缓冲区数量', unit: '个' },\r\n          'jvm.threads.daemon': { color: 'green', text: 'JVM 守护线程数量', unit: '个' },\r\n          'jvm.threads.live': { color: 'green', text: 'JVM 当前活跃线程数量', unit: '个' },\r\n          'jvm.threads.peak': { color: 'green', text: 'JVM 峰值线程数量', unit: '个' },\r\n          'jvm.classes.loaded': { color: 'orange', text: 'JVM 已加载 Class 数量', unit: '个' },\r\n          'jvm.classes.unloaded': { color: 'orange', text: 'JVM 未加载 Class 数量', unit: '个' },\r\n          'jvm.gc.memory.allocated': { color: 'pink', text: 'GC 时, 年轻代分配的内存空间', unit: 'MB' },\r\n          'jvm.gc.memory.promoted': { color: 'pink', text: 'GC 时, 老年代分配的内存空间', unit: 'MB' },\r\n          'jvm.gc.max.data.size': { color: 'pink', text: 'GC 时, 老年代的最大内存空间', unit: 'MB' },\r\n          'jvm.gc.live.data.size': { color: 'pink', text: 'FullGC 时, 老年代的内存空间', unit: 'MB' },\r\n          'jvm.gc.pause.count': { color: 'blue', text: '系统启动以来GC 次数', unit: '次' },\r\n          'jvm.gc.pause.totalTime': { color: 'blue', text: '系统启动以来GC 总耗时', unit: '秒' }\r\n        },\r\n        // 当一条记录中需要取出多条数据的时候需要配置该字段\r\n        moreInfo: {\r\n          'jvm.gc.pause': ['.count', '.totalTime']\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.loadTomcatInfo()\r\n    },\r\n    methods: {\r\n\r\n      handleClickUpdate() {\r\n        this.loadTomcatInfo()\r\n      },\r\n\r\n      loadTomcatInfo() {\r\n        this.tableLoading = true\r\n        this.time = moment().format('YYYY年MM月DD日 HH时mm分ss秒')\r\n        Promise.all([\r\n          getAction('actuator/metrics/jvm.memory.max'),\r\n          getAction('actuator/metrics/jvm.memory.committed'),\r\n          getAction('actuator/metrics/jvm.memory.used'),\r\n          getAction('actuator/metrics/jvm.buffer.memory.used'),\r\n          getAction('actuator/metrics/jvm.buffer.count'),\r\n          getAction('actuator/metrics/jvm.threads.daemon'),\r\n          getAction('actuator/metrics/jvm.threads.live'),\r\n          getAction('actuator/metrics/jvm.threads.peak'),\r\n          getAction('actuator/metrics/jvm.classes.loaded'),\r\n          getAction('actuator/metrics/jvm.classes.unloaded'),\r\n          getAction('actuator/metrics/jvm.gc.memory.allocated'),\r\n          getAction('actuator/metrics/jvm.gc.memory.promoted'),\r\n          getAction('actuator/metrics/jvm.gc.max.data.size'),\r\n          getAction('actuator/metrics/jvm.gc.live.data.size'),\r\n          getAction('actuator/metrics/jvm.gc.pause')\r\n        ]).then((res) => {\r\n\r\n          let info = []\r\n          res.forEach((value, id) => {\r\n            let more = this.moreInfo[value.name]\r\n            if (!(more instanceof Array)) {\r\n              more = ['']\r\n            }\r\n            more.forEach((item, idx) => {\r\n              let param = value.name + item\r\n              let val = value.measurements[idx].value\r\n\r\n              if (param === 'jvm.memory.max'\r\n                || param === 'jvm.memory.committed'\r\n                || param === 'jvm.memory.used'\r\n                || param === 'jvm.buffer.memory.used'\r\n                || param === 'jvm.gc.memory.allocated'\r\n                || param === 'jvm.gc.memory.promoted'\r\n                || param === 'jvm.gc.max.data.size'\r\n                || param === 'jvm.gc.live.data.size'\r\n              ) {\r\n                val = this.convert(val, Number)\r\n              }\r\n              info.push({ id: param + id, param, text: 'false value', value: val })\r\n            })\r\n          })\r\n          this.dataSource = info\r\n\r\n\r\n        }).catch((e) => {\r\n          console.error(e)\r\n          this.$message.error('获取JVM信息失败')\r\n        }).finally(() => {\r\n          this.loading = false\r\n          this.tableLoading = false\r\n        })\r\n      },\r\n\r\n      convert(value, type) {\r\n        if (type === Number) {\r\n          return Number(value / 1048576).toFixed(3)\r\n        } else if (type === Date) {\r\n          return moment(value * 1000).format('YYYY-MM-DD HH:mm:ss')\r\n        }\r\n        return value\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style></style>\r\n"]}]}