{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\jeecg\\JVxeDemo\\layout-demo\\Template3.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\jeecg\\JVxeDemo\\layout-demo\\Template3.vue","mtime":1615948818976},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Template3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Template3.vue","sourceRoot":"src/views/jeecg/JVxeDemo/layout-demo","sourcesContent":["<template>\r\n\r\n  <a-card :bordered=\"false\">\r\n    <a-row :gutter=\"8\">\r\n      <a-col :span=\"12\">\r\n        <!-- 左上父 -->\r\n        <j-vxe-table\r\n          toolbar\r\n          row-number\r\n          row-selection\r\n          click-select-row\r\n          highlight-current-row\r\n          :radio-config=\"{highlight: false}\"\r\n          :checkbox-config=\"{highlight: false}\"\r\n          :height=\"357\"\r\n          :loading=\"table1.loading\"\r\n          :columns=\"table1.columns\"\r\n          :dataSource=\"table1.dataSource\"\r\n          :pagination=\"table1.pagination\"\r\n          style=\"margin-bottom: 8px;\"\r\n          @pageChange=\"handleTable1PageChange\"\r\n          @selectRowChange=\"handleTable1SelectRowChange\"\r\n        />\r\n\r\n        <!-- 左下子 -->\r\n        <j-vxe-table\r\n          toolbar\r\n          row-number\r\n          row-selection\r\n          click-select-row\r\n          :height=\"356\"\r\n          :loading=\"table2.loading\"\r\n          :columns=\"table2.columns\"\r\n          :dataSource=\"table2.dataSource\"\r\n          :pagination=\"table2.pagination\"\r\n          @pageChange=\"handleTable2PageChange\"\r\n        />\r\n      </a-col>\r\n      <!-- 左侧父选择的数据展示在这里 -->\r\n      <a-col :span=\"12\">\r\n        <j-vxe-table\r\n          row-number\r\n          :height=\"800\"\r\n          :columns=\"table1.columns\"\r\n          :dataSource=\"table1.selectedRows\"\r\n          style=\"margin-top: 40px;\"\r\n        />\r\n      </a-col>\r\n    </a-row>\r\n\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\n  import { getAction } from '@api/manage'\r\n  import { JVXETypes } from '@/components/jeecg/JVxeTable'\r\n\r\n  // 【多种布局模板】左侧上边是主表、下边是子表，右侧是选中数据\r\n  export default {\r\n    name: 'Template3',\r\n    components: {},\r\n    data() {\r\n      return {\r\n        // 主表的配置信息\r\n        table1: {\r\n          // 是否正在加载\r\n          loading: false,\r\n          // 分页器参数\r\n          pagination: {\r\n            // 当前页码\r\n            current: 1,\r\n            // 每页的条数\r\n            pageSize: 200,\r\n            // 可切换的条数\r\n            pageSizeOptions: ['10', '20', '30', '100', '200'],\r\n            // 数据总数（目前并不知道真实的总数，所以先填写0，在后台查出来后再赋值）\r\n            total: 0,\r\n          },\r\n          // 最后选中的行\r\n          lastRow: null,\r\n          // 选择的行\r\n          selectedRows: [],\r\n          // 数据源，控制表格的数据\r\n          dataSource: [],\r\n          // 列配置，控制表格显示的列\r\n          columns: [\r\n            {key: 'num', title: '序号', width: '80px'},\r\n            {\r\n              // 字段key，跟后台数据的字段名匹配\r\n              key: 'ship_name',\r\n              // 列的标题\r\n              title: '船名',\r\n              // 列的宽度\r\n              width: '180px',\r\n              // 如果加上了该属性，就代表当前单元格是可编辑的，type就是表单的类型，input就是简单的输入框\r\n              type: JVXETypes.input\r\n            },\r\n            {key: 'call', title: '呼叫', width: '80px', type: JVXETypes.input},\r\n            {key: 'len', title: '长', width: '80px', type: JVXETypes.input},\r\n            {key: 'ton', title: '吨', width: '120px', type: JVXETypes.input},\r\n            {key: 'payer', title: '付款方', width: '120px', type: JVXETypes.input},\r\n            {key: 'count', title: '数', width: '40px'},\r\n            {key: 'company', title: '公司', width: '180px', type: JVXETypes.input},\r\n            {key: 'trend', title: '动向', width: '120px', type: JVXETypes.input},\r\n          ],\r\n        },\r\n        // 子表的配置信息 （配置和主表的完全一致，就不写冗余的注释了）\r\n        table2: {\r\n          loading: false,\r\n          pagination: {current: 1, pageSize: 200, pageSizeOptions: ['100', '200'], total: 0},\r\n          dataSource: [],\r\n          columns: [\r\n            {key: 'dd_num', title: '调度序号', width: '120px'},\r\n            {key: 'tug', title: '拖轮', width: '180px', type: JVXETypes.input},\r\n            {key: 'work_start_time', title: '作业开始时间', width: '180px', type: JVXETypes.input},\r\n            {key: 'work_stop_time', title: '作业结束时间', width: '180px', type: JVXETypes.input},\r\n            {key: 'type', title: '船舶分类', width: '120px', type: JVXETypes.input},\r\n            {key: 'port_area', title: '所属港区', width: '120px', type: JVXETypes.input},\r\n          ],\r\n        },\r\n        // 查询url地址\r\n        url: {\r\n          getData: '/mock/vxe/getData',\r\n        },\r\n      }\r\n    },\r\n\r\n    // 监听器\r\n    watch: {\r\n      // 监听table1 【主表】选择的数据发生了变化\r\n      ['table1.lastRow'](row) {\r\n        this.loadTable2Data()\r\n      },\r\n    },\r\n    created() {\r\n      this.loadTable1Data()\r\n    },\r\n    methods: {\r\n\r\n      // 加载table1（主表）的数据\r\n      loadTable1Data() {\r\n        // 封装查询条件\r\n        let formData = {\r\n          pageNo: this.table1.pagination.current,\r\n          pageSize: this.table1.pagination.pageSize\r\n        }\r\n        // 调用查询数据接口\r\n        this.table1.loading = true\r\n        getAction(this.url.getData, formData).then(res => {\r\n          if (res.success) {\r\n            // 后台查询回来的 total，数据总数量\r\n            this.table1.pagination.total = res.result.total\r\n            // 将查询的数据赋值给 dataSource\r\n            this.table1.dataSource = res.result.records\r\n          } else {\r\n            this.$error({title: '主表查询失败', content: res.message})\r\n          }\r\n        }).finally(() => {\r\n          // 这里是无论成功或失败都会执行的方法，在这里关闭loading\r\n          this.table1.loading = false\r\n        })\r\n      },\r\n      // 加载table2（子表）的数据，根据主表的id进行查询\r\n      loadTable2Data() {\r\n        // 如果主表没有选择，则不查询\r\n        let selectedRows = this.table1.selectedRows\r\n        if (!selectedRows || selectedRows.length === 0) {\r\n          this.table2.pagination.total = 0\r\n          this.table2.dataSource = []\r\n          return\r\n        } else if (this.table1.lastRow == null) {\r\n          this.table1.lastRow = selectedRows[selectedRows.length - 1]\r\n        }\r\n        let formData = {\r\n          parentId: this.table1.lastRow.id,\r\n          pageNo: this.table2.pagination.current,\r\n          pageSize: this.table2.pagination.pageSize\r\n        }\r\n        this.table2.loading = true\r\n        getAction(this.url.getData, formData).then(res => {\r\n          if (res.success) {\r\n            this.table2.pagination.total = res.result.total\r\n            this.table2.dataSource = res.result.records\r\n          } else {\r\n            this.$error({title: '子表查询失败', content: res.message})\r\n          }\r\n        }).finally(() => {\r\n          this.table2.loading = false\r\n        })\r\n      },\r\n\r\n      // table1【主表】当分页参数变化时触发的事件\r\n      handleTable1PageChange(event) {\r\n        // 重新赋值\r\n        this.table1.pagination.current = event.current\r\n        this.table1.pagination.pageSize = event.pageSize\r\n        // 查询数据\r\n        this.loadTable1Data()\r\n        // 分页后重置选择\r\n        this.table1.selectedRows = []\r\n        this.loadTable2Data()\r\n      },\r\n\r\n      // table2【子表】当分页参数变化时触发的事件\r\n      handleTable2PageChange(event) {\r\n        // 重新赋值\r\n        this.table1.pagination.current = event.current\r\n        this.table1.pagination.pageSize = event.pageSize\r\n        // 查询数据\r\n        this.loadTable2Data()\r\n      },\r\n\r\n      // table1【主表】当选择的行变化时触发的事件\r\n      handleTable1SelectRowChange(event) {\r\n        this.handleTableSelectRowChange(this.table1, event)\r\n      },\r\n\r\n      /** 公共方法：处理表格选中变化事件 */\r\n      handleTableSelectRowChange(table, event) {\r\n        let {row, action, selectedRows, $table} = event\r\n        // 获取最后一个选中的\r\n        let lastSelected = selectedRows[selectedRows.length - 1]\r\n        if (action === 'selected') {\r\n          table.lastRow = row\r\n        } else if (action === 'selected-all') {\r\n          // 取消全选\r\n          if (selectedRows.length === 0) {\r\n            table.lastRow = null\r\n          } else if (!table.lastRow) {\r\n            table.lastRow = lastSelected\r\n          }\r\n        } else if (action === 'unselected' && row === table.lastRow) {\r\n          table.lastRow = lastSelected\r\n        }\r\n        $table.setCurrentRow(table.lastRow)\r\n        table.selectedRows = selectedRows\r\n      },\r\n\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}