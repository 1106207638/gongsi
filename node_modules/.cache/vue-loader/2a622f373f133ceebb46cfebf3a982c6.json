{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\jeecg\\JTreeSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\JTreeSelect.vue","mtime":1615948815751},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgovKgoqIOW8guatpeagkeWKoOi9vee7hOS7tiDpgJrov4fkvKDlhaXooajlkI0g5pi+56S65a2X5q61IOWtmOWCqOWtl+autSDliqDovb3kuIDkuKrmoJHmjqfku7YKKiA8ai10cmVlLXNlbGVjdCBkaWN0PSJhYV90cmVlX3Rlc3QsYWFkLGlkIiBwaWQtZmllbGQ9InBpZCIgPjwvai10cmVlLXNlbGVjdD4KKiAqLwppbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICdAL2FwaS9tYW5hZ2UnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0pUcmVlU2VsZWN0JywKICBwcm9wczogewogICAgdmFsdWU6ewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiBmYWxzZQogICAgfSwKICAgIHBsYWNlaG9sZGVyOnsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAn6K+36YCJ5oupJywKICAgICAgcmVxdWlyZWQ6IGZhbHNlCiAgICB9LAogICAgZGljdDp7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycsCiAgICAgIHJlcXVpcmVkOiBmYWxzZQogICAgfSwKICAgIHBpZEZpZWxkOnsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAncGlkJywKICAgICAgcmVxdWlyZWQ6IGZhbHNlCiAgICB9LAogICAgcGlkVmFsdWU6ewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgICByZXF1aXJlZDogZmFsc2UKICAgIH0sCiAgICBkaXNhYmxlZDp7CiAgICAgIHR5cGU6Qm9vbGVhbiwKICAgICAgZGVmYXVsdDpmYWxzZSwKICAgICAgcmVxdWlyZWQ6ZmFsc2UKICAgIH0sCiAgICBoYXNDaGlsZEZpZWxkOnsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJywKICAgICAgcmVxdWlyZWQ6IGZhbHNlCiAgICB9LAogICAgY29uZGl0aW9uOnsKICAgICAgdHlwZTpTdHJpbmcsCiAgICAgIGRlZmF1bHQ6JycsCiAgICAgIHJlcXVpcmVkOmZhbHNlCiAgICB9LAogICAgLy8g5piv5ZCm5pSv5oyB5aSa6YCJCiAgICBtdWx0aXBsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgIH0sCiAgICBsb2FkVHJpZ2dsZUNoYW5nZTp7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgICByZXF1aXJlZDpmYWxzZQogICAgfQogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICB0cmVlVmFsdWU6IG51bGwsCiAgICAgIHRyZWVEYXRhOltdLAogICAgICB1cmw6Ii9zeXMvZGljdC9sb2FkVHJlZURhdGEiLAogICAgICB2aWV3Oicvc3lzL2RpY3QvbG9hZERpY3RJdGVtLycsCiAgICAgIHRhYmxlTmFtZToiIiwKICAgICAgdGV4dDoiIiwKICAgICAgY29kZToiIiwKCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgdmFsdWUgKCkgewogICAgICB0aGlzLmxvYWRJdGVtQnlDb2RlKCkKICAgIH0sCiAgICBkaWN0KCl7CiAgICAgIHRoaXMuaW5pdERpY3RJbmZvKCkKICAgICAgdGhpcy5sb2FkUm9vdCgpOwogICAgfQogIH0sCiAgY3JlYXRlZCgpewogICAgdGhpcy52YWxpZGF0ZVByb3AoKS50aGVuKCgpPT57CiAgICAgIHRoaXMuaW5pdERpY3RJbmZvKCkKICAgICAgdGhpcy5sb2FkUm9vdCgpCiAgICAgIHRoaXMubG9hZEl0ZW1CeUNvZGUoKQogICAgfSkKICB9LAogIG1ldGhvZHM6IHsKICAgIGxvYWRJdGVtQnlDb2RlKCl7CiAgICAgIGlmKCF0aGlzLnZhbHVlIHx8IHRoaXMudmFsdWU9PSIwIil7CiAgICAgICAgdGhpcy50cmVlVmFsdWUgPSBudWxsCiAgICAgIH1lbHNlewogICAgICAgIGdldEFjdGlvbihgJHt0aGlzLnZpZXd9JHt0aGlzLmRpY3R9YCx7a2V5OnRoaXMudmFsdWV9KS50aGVuKHJlcz0+ewogICAgICAgICAgaWYocmVzLnN1Y2Nlc3MpewogICAgICAgICAgICBsZXQgdmFsdWVzID0gdGhpcy52YWx1ZS5zcGxpdCgnLCcpCiAgICAgICAgICAgIHRoaXMudHJlZVZhbHVlID0gcmVzLnJlc3VsdC5tYXAoKGl0ZW0sIGluZGV4KSA9PiAoewogICAgICAgICAgICAgIGtleTogdmFsdWVzW2luZGV4XSwKICAgICAgICAgICAgICB2YWx1ZTogdmFsdWVzW2luZGV4XSwKICAgICAgICAgICAgICBsYWJlbDogaXRlbQogICAgICAgICAgICB9KSkKICAgICAgICAgICAgdGhpcy5vbkxvYWRUcmlnZ2xlQ2hhbmdlKHJlcy5yZXN1bHRbMF0pOwogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIH0KICAgIH0sCiAgICBvbkxvYWRUcmlnZ2xlQ2hhbmdlKHRleHQpewogICAgICAvL+WPquacieWNlemAieaJjeS8muinpuWPkQogICAgICBpZighdGhpcy5tdWx0aXBsZSAmJiB0aGlzLmxvYWRUcmlnZ2xlQ2hhbmdlKXsKICAgICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB0aGlzLnZhbHVlLHRleHQpCiAgICAgIH0KICAgIH0sCiAgICBpbml0RGljdEluZm8oKXsKICAgICAgbGV0IGFyciA9IHRoaXMuZGljdC5zcGxpdCgiLCIpCiAgICAgIHRoaXMudGFibGVOYW1lID0gYXJyWzBdCiAgICAgIHRoaXMudGV4dCA9IGFyclsxXQogICAgICB0aGlzLmNvZGUgPSBhcnJbMl0KICAgIH0sCiAgICBhc3luY0xvYWRUcmVlRGF0YSAodHJlZU5vZGUpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgICAgaWYgKHRyZWVOb2RlLiR2bm9kZS5jaGlsZHJlbikgewogICAgICAgICAgcmVzb2x2ZSgpCiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgbGV0IHBpZCA9IHRyZWVOb2RlLiR2bm9kZS5rZXkKICAgICAgICBsZXQgcGFyYW0gPSB7CiAgICAgICAgICBwaWQ6cGlkLAogICAgICAgICAgdGFibGVOYW1lOnRoaXMudGFibGVOYW1lLAogICAgICAgICAgdGV4dDp0aGlzLnRleHQsCiAgICAgICAgICBjb2RlOnRoaXMuY29kZSwKICAgICAgICAgIHBpZEZpZWxkOnRoaXMucGlkRmllbGQsCiAgICAgICAgICBoYXNDaGlsZEZpZWxkOnRoaXMuaGFzQ2hpbGRGaWVsZCwKICAgICAgICAgIGNvbmRpdGlvbjp0aGlzLmNvbmRpdGlvbgogICAgICAgIH0KICAgICAgICBnZXRBY3Rpb24odGhpcy51cmwscGFyYW0pLnRoZW4ocmVzPT57CiAgICAgICAgICBpZihyZXMuc3VjY2Vzcyl7CiAgICAgICAgICAgIGZvcihsZXQgaSBvZiByZXMucmVzdWx0KXsKICAgICAgICAgICAgICBpLnZhbHVlID0gaS5rZXkKICAgICAgICAgICAgICBpZihpLmxlYWY9PWZhbHNlKXsKICAgICAgICAgICAgICAgIGkuaXNMZWFmPWZhbHNlCiAgICAgICAgICAgICAgfWVsc2UgaWYoaS5sZWFmPT10cnVlKXsKICAgICAgICAgICAgICAgIGkuaXNMZWFmPXRydWUKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5hZGRDaGlsZHJlbihwaWQscmVzLnJlc3VsdCx0aGlzLnRyZWVEYXRhKQogICAgICAgICAgICB0aGlzLnRyZWVEYXRhID0gWy4uLnRoaXMudHJlZURhdGFdCiAgICAgICAgICB9CiAgICAgICAgICByZXNvbHZlKCkKICAgICAgICB9KQogICAgICB9KQogICAgfSwKICAgIGFkZENoaWxkcmVuKHBpZCxjaGlsZHJlbix0cmVlQXJyYXkpewogICAgICBpZih0cmVlQXJyYXkgJiYgdHJlZUFycmF5Lmxlbmd0aD4wKXsKICAgICAgICBmb3IobGV0IGl0ZW0gb2YgdHJlZUFycmF5KXsKICAgICAgICAgIGlmKGl0ZW0ua2V5ID09IHBpZCl7CiAgICAgICAgICAgIGlmKCFjaGlsZHJlbiB8fCBjaGlsZHJlbi5sZW5ndGg9PTApewogICAgICAgICAgICAgIGl0ZW0uaXNMZWFmPXRydWUKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgaXRlbS5jaGlsZHJlbiA9IGNoaWxkcmVuCiAgICAgICAgICAgIH0KICAgICAgICAgICAgYnJlYWsKICAgICAgICAgIH1lbHNlewogICAgICAgICAgICB0aGlzLmFkZENoaWxkcmVuKHBpZCxjaGlsZHJlbixpdGVtLmNoaWxkcmVuKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGxvYWRSb290KCl7CiAgICAgIGxldCBwYXJhbSA9IHsKICAgICAgICBwaWQ6dGhpcy5waWRWYWx1ZSwKICAgICAgICB0YWJsZU5hbWU6dGhpcy50YWJsZU5hbWUsCiAgICAgICAgdGV4dDp0aGlzLnRleHQsCiAgICAgICAgY29kZTp0aGlzLmNvZGUsCiAgICAgICAgcGlkRmllbGQ6dGhpcy5waWRGaWVsZCwKICAgICAgICBoYXNDaGlsZEZpZWxkOnRoaXMuaGFzQ2hpbGRGaWVsZCwKICAgICAgICBjb25kaXRpb246dGhpcy5jb25kaXRpb24KICAgICAgfQogICAgICBnZXRBY3Rpb24odGhpcy51cmwscGFyYW0pLnRoZW4ocmVzPT57CiAgICAgICAgaWYocmVzLnN1Y2Nlc3MgJiYgcmVzLnJlc3VsdCl7CiAgICAgICAgICBmb3IobGV0IGkgb2YgcmVzLnJlc3VsdCl7CiAgICAgICAgICAgIGkudmFsdWUgPSBpLmtleQogICAgICAgICAgICBpZihpLmxlYWY9PWZhbHNlKXsKICAgICAgICAgICAgICBpLmlzTGVhZj1mYWxzZQogICAgICAgICAgICB9ZWxzZSBpZihpLmxlYWY9PXRydWUpewogICAgICAgICAgICAgIGkuaXNMZWFmPXRydWUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgICAgdGhpcy50cmVlRGF0YSA9IFsuLi5yZXMucmVzdWx0XQogICAgICAgIH1lbHNlewogICAgICAgICAgY29uc29sZS5sb2coIuaVsOagueiKgueCueafpeivoue7k+aenC1lbHNlIixyZXMpCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIG9uQ2hhbmdlKHZhbHVlKXsKICAgICAgaWYoIXZhbHVlKXsKICAgICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCAnJyk7CiAgICAgICAgdGhpcy50cmVlVmFsdWUgPSBudWxsCiAgICAgIH0gZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBBcnJheSkgewogICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIHZhbHVlLm1hcChpdGVtID0+IGl0ZW0udmFsdWUpLmpvaW4oJywnKSkKICAgICAgICB0aGlzLnRyZWVWYWx1ZSA9IHZhbHVlCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgdmFsdWUudmFsdWUsdmFsdWUubGFiZWwpCiAgICAgICAgdGhpcy50cmVlVmFsdWUgPSB2YWx1ZQogICAgICB9CgogICAgfSwKICAgIG9uU2VhcmNoKHZhbHVlKXsKICAgICAgY29uc29sZS5sb2codmFsdWUpCiAgICB9LAogICAgZ2V0Q3VyclRyZWVEYXRhKCl7CiAgICAgIHJldHVybiB0aGlzLnRyZWVEYXRhCiAgICB9LAogICAgdmFsaWRhdGVQcm9wKCl7CiAgICAgIGxldCBteWNvbmRpdGlvbiA9IHRoaXMuY29uZGl0aW9uCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSxyZWplY3QpPT57CiAgICAgICAgaWYoIW15Y29uZGl0aW9uKXsKICAgICAgICAgIHJlc29sdmUoKTsKICAgICAgICB9ZWxzZXsKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIGxldCB0ZXN0PUpTT04ucGFyc2UobXljb25kaXRpb24pOwogICAgICAgICAgICBpZih0eXBlb2YgdGVzdCA9PSAnb2JqZWN0JyAmJiB0ZXN0KXsKICAgICAgICAgICAgICByZXNvbHZlKCkKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi57uE5Lu2SlRyZWVTZWxlY3QtY29uZGl0aW9u5Lyg5YC85pyJ6K+v77yM6ZyA6KaB5LiA5LiqanNvbuWtl+espuS4siEiKQogICAgICAgICAgICAgIHJlamVjdCgpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0gY2F0Y2goZSkgewogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLnu4Tku7ZKVHJlZVNlbGVjdC1jb25kaXRpb27kvKDlgLzmnInor6/vvIzpnIDopoHkuIDkuKpqc29u5a2X56ym5LiyISIpCiAgICAgICAgICAgIHJlamVjdCgpCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KQogICAgfQogIH0sCiAgLy8yLjLmlrDlop4g5Zyo57uE5Lu25YaF5a6a5LmJIOaMh+WumueItue7hOS7tuiwg+eUqOaXtuWAmeeahOS8oOWAvOWxnuaAp+WSjOS6i+S7tuexu+WeiyDov5nkuKrniZvpgLwKICBtb2RlbDogewogICAgcHJvcDogJ3ZhbHVlJywKICAgIGV2ZW50OiAnY2hhbmdlJwogIH0KfQo="},{"version":3,"sources":["JTreeSelect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmfile":"JTreeSelect.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\r\n  <a-tree-select\r\n    allowClear\r\n    labelInValue\r\n    :getPopupContainer=\"(node) => node.parentNode\"\r\n    style=\"width: 100%\"\r\n    :disabled=\"disabled\"\r\n    :dropdownStyle=\"{ maxHeight: '400px', overflow: 'auto' }\"\r\n    :placeholder=\"placeholder\"\r\n    :loadData=\"asyncLoadTreeData\"\r\n    :value=\"treeValue\"\r\n    :treeData=\"treeData\"\r\n    :multiple=\"multiple\"\r\n    @change=\"onChange\"\r\n    @search=\"onSearch\">\r\n  </a-tree-select>\r\n</template>\r\n<script>\r\n\r\n  /*\r\n  * 异步树加载组件 通过传入表名 显示字段 存储字段 加载一个树控件\r\n  * <j-tree-select dict=\"aa_tree_test,aad,id\" pid-field=\"pid\" ></j-tree-select>\r\n  * */\r\n  import { getAction } from '@/api/manage'\r\n\r\n  export default {\r\n    name: 'JTreeSelect',\r\n    props: {\r\n      value:{\r\n        type: String,\r\n        required: false\r\n      },\r\n      placeholder:{\r\n        type: String,\r\n        default: '请选择',\r\n        required: false\r\n      },\r\n      dict:{\r\n        type: String,\r\n        default: '',\r\n        required: false\r\n      },\r\n      pidField:{\r\n        type: String,\r\n        default: 'pid',\r\n        required: false\r\n      },\r\n      pidValue:{\r\n        type: String,\r\n        default: '',\r\n        required: false\r\n      },\r\n      disabled:{\r\n        type:Boolean,\r\n        default:false,\r\n        required:false\r\n      },\r\n      hasChildField:{\r\n        type: String,\r\n        default: '',\r\n        required: false\r\n      },\r\n      condition:{\r\n        type:String,\r\n        default:'',\r\n        required:false\r\n      },\r\n      // 是否支持多选\r\n      multiple: {\r\n        type: Boolean,\r\n        default: false,\r\n      },\r\n      loadTriggleChange:{\r\n        type: Boolean,\r\n        default: false,\r\n        required:false\r\n      }\r\n    },\r\n    data () {\r\n      return {\r\n        treeValue: null,\r\n        treeData:[],\r\n        url:\"/sys/dict/loadTreeData\",\r\n        view:'/sys/dict/loadDictItem/',\r\n        tableName:\"\",\r\n        text:\"\",\r\n        code:\"\",\r\n\r\n      }\r\n    },\r\n    watch: {\r\n      value () {\r\n        this.loadItemByCode()\r\n      },\r\n      dict(){\r\n        this.initDictInfo()\r\n        this.loadRoot();\r\n      }\r\n    },\r\n    created(){\r\n      this.validateProp().then(()=>{\r\n        this.initDictInfo()\r\n        this.loadRoot()\r\n        this.loadItemByCode()\r\n      })\r\n    },\r\n    methods: {\r\n      loadItemByCode(){\r\n        if(!this.value || this.value==\"0\"){\r\n          this.treeValue = null\r\n        }else{\r\n          getAction(`${this.view}${this.dict}`,{key:this.value}).then(res=>{\r\n            if(res.success){\r\n              let values = this.value.split(',')\r\n              this.treeValue = res.result.map((item, index) => ({\r\n                key: values[index],\r\n                value: values[index],\r\n                label: item\r\n              }))\r\n              this.onLoadTriggleChange(res.result[0]);\r\n            }\r\n          })\r\n        }\r\n      },\r\n      onLoadTriggleChange(text){\r\n        //只有单选才会触发\r\n        if(!this.multiple && this.loadTriggleChange){\r\n          this.$emit('change', this.value,text)\r\n        }\r\n      },\r\n      initDictInfo(){\r\n        let arr = this.dict.split(\",\")\r\n        this.tableName = arr[0]\r\n        this.text = arr[1]\r\n        this.code = arr[2]\r\n      },\r\n      asyncLoadTreeData (treeNode) {\r\n        return new Promise((resolve) => {\r\n          if (treeNode.$vnode.children) {\r\n            resolve()\r\n            return\r\n          }\r\n          let pid = treeNode.$vnode.key\r\n          let param = {\r\n            pid:pid,\r\n            tableName:this.tableName,\r\n            text:this.text,\r\n            code:this.code,\r\n            pidField:this.pidField,\r\n            hasChildField:this.hasChildField,\r\n            condition:this.condition\r\n          }\r\n          getAction(this.url,param).then(res=>{\r\n            if(res.success){\r\n              for(let i of res.result){\r\n                i.value = i.key\r\n                if(i.leaf==false){\r\n                  i.isLeaf=false\r\n                }else if(i.leaf==true){\r\n                  i.isLeaf=true\r\n                }\r\n              }\r\n              this.addChildren(pid,res.result,this.treeData)\r\n              this.treeData = [...this.treeData]\r\n            }\r\n            resolve()\r\n          })\r\n        })\r\n      },\r\n      addChildren(pid,children,treeArray){\r\n        if(treeArray && treeArray.length>0){\r\n          for(let item of treeArray){\r\n            if(item.key == pid){\r\n              if(!children || children.length==0){\r\n                item.isLeaf=true\r\n              }else{\r\n                item.children = children\r\n              }\r\n              break\r\n            }else{\r\n              this.addChildren(pid,children,item.children)\r\n            }\r\n          }\r\n        }\r\n      },\r\n      loadRoot(){\r\n        let param = {\r\n          pid:this.pidValue,\r\n          tableName:this.tableName,\r\n          text:this.text,\r\n          code:this.code,\r\n          pidField:this.pidField,\r\n          hasChildField:this.hasChildField,\r\n          condition:this.condition\r\n        }\r\n        getAction(this.url,param).then(res=>{\r\n          if(res.success && res.result){\r\n            for(let i of res.result){\r\n              i.value = i.key\r\n              if(i.leaf==false){\r\n                i.isLeaf=false\r\n              }else if(i.leaf==true){\r\n                i.isLeaf=true\r\n              }\r\n            }\r\n            this.treeData = [...res.result]\r\n          }else{\r\n            console.log(\"数根节点查询结果-else\",res)\r\n          }\r\n        })\r\n      },\r\n      onChange(value){\r\n        if(!value){\r\n          this.$emit('change', '');\r\n          this.treeValue = null\r\n        } else if (value instanceof Array) {\r\n          this.$emit('change', value.map(item => item.value).join(','))\r\n          this.treeValue = value\r\n        } else {\r\n          this.$emit('change', value.value,value.label)\r\n          this.treeValue = value\r\n        }\r\n\r\n      },\r\n      onSearch(value){\r\n        console.log(value)\r\n      },\r\n      getCurrTreeData(){\r\n        return this.treeData\r\n      },\r\n      validateProp(){\r\n        let mycondition = this.condition\r\n        return new Promise((resolve,reject)=>{\r\n          if(!mycondition){\r\n            resolve();\r\n          }else{\r\n            try {\r\n              let test=JSON.parse(mycondition);\r\n              if(typeof test == 'object' && test){\r\n                resolve()\r\n              }else{\r\n                this.$message.error(\"组件JTreeSelect-condition传值有误，需要一个json字符串!\")\r\n                reject()\r\n              }\r\n            } catch(e) {\r\n              this.$message.error(\"组件JTreeSelect-condition传值有误，需要一个json字符串!\")\r\n              reject()\r\n            }\r\n          }\r\n        })\r\n      }\r\n    },\r\n    //2.2新增 在组件内定义 指定父组件调用时候的传值属性和事件类型 这个牛逼\r\n    model: {\r\n      prop: 'value',\r\n      event: 'change'\r\n    }\r\n  }\r\n</script>\r\n"]}]}