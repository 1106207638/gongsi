{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\modules\\monitor\\TomcatInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\modules\\monitor\\TomcatInfo.vue","mtime":1615948820457},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JwppbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICdAL2FwaS9tYW5hZ2UnCgptb21lbnQubG9jYWxlKCd6aC1jbicpCgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpbWU6ICcnLAogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICB0YWJsZUxvYWRpbmc6IHRydWUsCiAgICAgIGNvbHVtbnM6IFt7CiAgICAgICAgdGl0bGU6ICflj4LmlbAnLAogICAgICAgIHdpZHRoOiAnMzAlJywKICAgICAgICBkYXRhSW5kZXg6ICdwYXJhbScsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsgY3VzdG9tUmVuZGVyOiAncGFyYW0nIH0KICAgICAgfSwgewogICAgICAgIHRpdGxlOiAn5o+P6L+wJywKICAgICAgICB3aWR0aDogJzQwJScsCiAgICAgICAgZGF0YUluZGV4OiAndGV4dCcsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsgY3VzdG9tUmVuZGVyOiAndGV4dCcgfQogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICflvZPliY3lgLwnLAogICAgICAgIHdpZHRoOiAnMzAlJywKICAgICAgICBkYXRhSW5kZXg6ICd2YWx1ZScsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsgY3VzdG9tUmVuZGVyOiAndmFsdWUnIH0KICAgICAgfV0sCiAgICAgIGRhdGFTb3VyY2U6IFtdLAogICAgICAvLyDliJfooajpgJrov4cgdGV4dEluZm8g5riy5p+T5Ye66aKc6Imy44CB5o+P6L+w5ZKM5Y2V5L2NCiAgICAgIHRleHRJbmZvOiB7CiAgICAgICAgJ3RvbWNhdC5zZXNzaW9ucy5jcmVhdGVkJzogeyBjb2xvcjogJ2dyZWVuJywgdGV4dDogJ3RvbWNhdCDlt7LliJvlu7ogc2Vzc2lvbiDmlbAnLCB1bml0OiAn5LiqJyB9LAogICAgICAgICd0b21jYXQuc2Vzc2lvbnMuZXhwaXJlZCc6IHsgY29sb3I6ICdncmVlbicsIHRleHQ6ICd0b21jYXQg5bey6L+H5pyfIHNlc3Npb24g5pWwJywgdW5pdDogJ+S4qicgfSwKICAgICAgICAndG9tY2F0LnNlc3Npb25zLmFjdGl2ZS5jdXJyZW50JzogeyBjb2xvcjogJ2dyZWVuJywgdGV4dDogJ3RvbWNhdCDlvZPliY3mtLvot4Mgc2Vzc2lvbiDmlbAnLCB1bml0OiAn5LiqJyB9LAogICAgICAgICd0b21jYXQuc2Vzc2lvbnMuYWN0aXZlLm1heCc6IHsgY29sb3I6ICdncmVlbicsIHRleHQ6ICd0b21jYXQg5rS76LeDIHNlc3Npb24g5pWw5bOw5YC8JywgdW5pdDogJ+S4qicgfSwKICAgICAgICAndG9tY2F0LnNlc3Npb25zLnJlamVjdGVkJzogeyBjb2xvcjogJ2dyZWVuJywgdGV4dDogJ+i2hei/h3Nlc3Npb24g5pyA5aSn6YWN572u5ZCO77yM5ouS57ud55qEIHNlc3Npb24g5Liq5pWwJywgdW5pdDogJ+S4qicgfSwKCiAgICAgICAgJ3RvbWNhdC5nbG9iYWwuc2VudCc6IHsgY29sb3I6ICdwdXJwbGUnLCB0ZXh0OiAn5Y+R6YCB55qE5a2X6IqC5pWwJywgdW5pdDogJ2J5dGVzJyB9LAogICAgICAgICd0b21jYXQuZ2xvYmFsLnJlcXVlc3QubWF4JzogeyBjb2xvcjogJ3B1cnBsZScsIHRleHQ6ICdyZXF1ZXN0IOivt+axguacgOmVv+iAl+aXticsIHVuaXQ6ICfnp5InIH0sCiAgICAgICAgJ3RvbWNhdC5nbG9iYWwucmVxdWVzdC5jb3VudCc6IHsgY29sb3I6ICdwdXJwbGUnLCB0ZXh0OiAn5YWo5bGAIHJlcXVlc3Qg6K+35rGC5qyh5pWwJywgdW5pdDogJ+asoScgfSwKICAgICAgICAndG9tY2F0Lmdsb2JhbC5yZXF1ZXN0LnRvdGFsVGltZSc6IHsgY29sb3I6ICdwdXJwbGUnLCB0ZXh0OiAn5YWo5bGAIHJlcXVlc3Qg6K+35rGC5oC76ICX5pe2JywgdW5pdDogJ+enkicgfSwKCiAgICAgICAgJ3RvbWNhdC5zZXJ2bGV0LnJlcXVlc3QubWF4JzogeyBjb2xvcjogJ2N5YW4nLCB0ZXh0OiAnc2VydmxldCDor7fmsYLmnIDplb/ogJfml7YnLCB1bml0OiAn56eSJyB9LAogICAgICAgICd0b21jYXQuc2VydmxldC5yZXF1ZXN0LmNvdW50JzogeyBjb2xvcjogJ2N5YW4nLCB0ZXh0OiAnc2VydmxldCDmgLvor7fmsYLmrKHmlbAnLCB1bml0OiAn5qyhJyB9LAogICAgICAgICd0b21jYXQuc2VydmxldC5yZXF1ZXN0LnRvdGFsVGltZSc6IHsgY29sb3I6ICdjeWFuJywgdGV4dDogJ3NlcnZsZXQg6K+35rGC5oC76ICX5pe2JywgdW5pdDogJ+enkicgfSwKCiAgICAgICAgJ3RvbWNhdC50aHJlYWRzLmN1cnJlbnQnOiB7IGNvbG9yOiAncGluaycsIHRleHQ6ICd0b21jYXQg5b2T5YmN57q/56iL5pWw77yI5YyF5ous5a6I5oqk57q/56iL77yJJywgdW5pdDogJ+S4qicgfSwKICAgICAgICAndG9tY2F0LnRocmVhZHMuY29uZmlnLm1heCc6IHsgY29sb3I6ICdwaW5rJywgdGV4dDogJ3RvbWNhdCDphY3nva7nmoTnur/nqIvmnIDlpKfmlbAnLCB1bml0OiAn5LiqJyB9CiAgICAgIH0sCiAgICAgIC8vIOW9k+S4gOadoeiusOW9leS4remcgOimgeWPluWHuuWkmuadoeaVsOaNrueahOaXtuWAmemcgOimgemFjee9ruivpeWtl+autQogICAgICBtb3JlSW5mbzogewogICAgICAgICd0b21jYXQuZ2xvYmFsLnJlcXVlc3QnOiBbJy5jb3VudCcsICcudG90YWxUaW1lJ10sCiAgICAgICAgJ3RvbWNhdC5zZXJ2bGV0LnJlcXVlc3QnOiBbJy5jb3VudCcsICcudG90YWxUaW1lJ10KICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMubG9hZFRvbWNhdEluZm8oKQogIH0sCiAgbWV0aG9kczogewoKICAgIGhhbmRsZUNsaWNrVXBkYXRlKCkgewogICAgICB0aGlzLmxvYWRUb21jYXRJbmZvKCkKICAgIH0sCgogICAgbG9hZFRvbWNhdEluZm8oKSB7CiAgICAgIHRoaXMudGFibGVMb2FkaW5nID0gdHJ1ZQogICAgICB0aGlzLnRpbWUgPSBtb21lbnQoKS5mb3JtYXQoJ1lZWVnlubRNTeaciERE5pelIEhI5pe2bW3liIZzc+enkicpCiAgICAgIFByb21pc2UuYWxsKFsKICAgICAgICBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvdG9tY2F0LnNlc3Npb25zLmNyZWF0ZWQnKSwKICAgICAgICBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvdG9tY2F0LnNlc3Npb25zLmV4cGlyZWQnKSwKICAgICAgICBnZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvdG9tY2F0LnNlc3Npb25zLmFjdGl2ZS5jdXJyZW50JyksCiAgICAgICAgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL3RvbWNhdC5zZXNzaW9ucy5hY3RpdmUubWF4JyksCiAgICAgICAgZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL3RvbWNhdC5zZXNzaW9ucy5yZWplY3RlZCcpLAogICAgICAgIC8vIDIuMy41LlJFTEVBU0Ug5peg5q2kQVBJCiAgICAgICAgLy8gZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL3RvbWNhdC5nbG9iYWwuc2VudCcpLAogICAgICAgIC8vIGdldEFjdGlvbignYWN0dWF0b3IvbWV0cmljcy90b21jYXQuZ2xvYmFsLnJlcXVlc3QubWF4JyksCiAgICAgICAgLy8gZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL3RvbWNhdC5nbG9iYWwucmVxdWVzdCcpLAogICAgICAgIC8vIGdldEFjdGlvbignYWN0dWF0b3IvbWV0cmljcy90b21jYXQudGhyZWFkcy5jdXJyZW50JyksCiAgICAgICAgLy8gZ2V0QWN0aW9uKCdhY3R1YXRvci9tZXRyaWNzL3RvbWNhdC50aHJlYWRzLmNvbmZpZy5tYXgnKQogICAgICAgIC8vIDIuMS4zLlJFTEVBU0Ug5peg5q2kQVBJCiAgICAgICAgLy9nZXRBY3Rpb24oJ2FjdHVhdG9yL21ldHJpY3MvdG9tY2F0LnNlcnZsZXQucmVxdWVzdCcpLAogICAgICAgIC8vIGdldEFjdGlvbignYWN0dWF0b3IvbWV0cmljcy90b21jYXQuc2VydmxldC5yZXF1ZXN0Lm1heCcpLAogICAgICBdKS50aGVuKChyZXMpID0+IHsKICAgICAgICBsZXQgdG9tY2F0SW5mbyA9IFtdCiAgICAgICAgcmVzLmZvckVhY2goKHZhbHVlLCBpZCkgPT4gewogICAgICAgICAgbGV0IG1vcmUgPSB0aGlzLm1vcmVJbmZvW3ZhbHVlLm5hbWVdCiAgICAgICAgICBpZiAoIShtb3JlIGluc3RhbmNlb2YgQXJyYXkpKSB7CiAgICAgICAgICAgIG1vcmUgPSBbJyddCiAgICAgICAgICB9CiAgICAgICAgICBtb3JlLmZvckVhY2goKGl0ZW0sIGlkeCkgPT4gewogICAgICAgICAgICBsZXQgcGFyYW0gPSB2YWx1ZS5uYW1lICsgaXRlbQogICAgICAgICAgICB0b21jYXRJbmZvLnB1c2goewogICAgICAgICAgICAgIGlkOiBwYXJhbSArIGlkLCBwYXJhbSwKICAgICAgICAgICAgICB0ZXh0OiAnZmFsc2UgdmFsdWUnLAogICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZS5tZWFzdXJlbWVudHNbaWR4XS52YWx1ZQogICAgICAgICAgICB9KQogICAgICAgICAgfSkKICAgICAgICB9KQogICAgICAgIHRoaXMuZGF0YVNvdXJjZSA9IHRvbWNhdEluZm8KICAgICAgfSkuY2F0Y2goKGUpID0+IHsKICAgICAgICBjb25zb2xlLmVycm9yKGUpCiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6I635Y+WVG9tY2F05L+h5oGv5aSx6LSlJykKICAgICAgfSkuZmluYWxseSgoKSA9PiB7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UKICAgICAgICB0aGlzLnRhYmxlTG9hZGluZyA9IGZhbHNlCiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["TomcatInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TomcatInfo.vue","sourceRoot":"src/views/modules/monitor","sourcesContent":["<template>\r\n  <a-skeleton active :loading=\"loading\" :paragraph=\"{rows: 17}\">\r\n    <a-card :bordered=\"false\">\r\n\r\n      <a-alert type=\"info\" :showIcon=\"true\">\r\n        <div slot=\"message\">\r\n          上次更新时间：{{ this.time }}\r\n          <a-divider type=\"vertical\"/>\r\n          <a @click=\"handleClickUpdate\">立即更新</a>\r\n        </div>\r\n      </a-alert>\r\n\r\n      <a-table\r\n        rowKey=\"id\"\r\n        size=\"middle\"\r\n        :columns=\"columns\"\r\n        :dataSource=\"dataSource\"\r\n        :pagination=\"false\"\r\n        :loading=\"tableLoading\"\r\n        style=\"margin-top: 20px;\">\r\n\r\n        <template slot=\"param\" slot-scope=\"text, record\">\r\n          <a-tag :color=\"textInfo[record.param].color\">{{ text }}</a-tag>\r\n        </template>\r\n\r\n        <template slot=\"text\" slot-scope=\"text, record\">\r\n          {{ textInfo[record.param].text }}\r\n        </template>\r\n\r\n        <template slot=\"value\" slot-scope=\"text, record\">\r\n          {{ text }} {{ textInfo[record.param].unit }}\r\n        </template>\r\n\r\n      </a-table>\r\n\r\n    </a-card>\r\n  </a-skeleton>\r\n</template>\r\n<script>\r\n  import moment from 'moment'\r\n  import { getAction } from '@/api/manage'\r\n\r\n  moment.locale('zh-cn')\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        time: '',\r\n        loading: true,\r\n        tableLoading: true,\r\n        columns: [{\r\n          title: '参数',\r\n          width: '30%',\r\n          dataIndex: 'param',\r\n          scopedSlots: { customRender: 'param' }\r\n        }, {\r\n          title: '描述',\r\n          width: '40%',\r\n          dataIndex: 'text',\r\n          scopedSlots: { customRender: 'text' }\r\n        }, {\r\n          title: '当前值',\r\n          width: '30%',\r\n          dataIndex: 'value',\r\n          scopedSlots: { customRender: 'value' }\r\n        }],\r\n        dataSource: [],\r\n        // 列表通过 textInfo 渲染出颜色、描述和单位\r\n        textInfo: {\r\n          'tomcat.sessions.created': { color: 'green', text: 'tomcat 已创建 session 数', unit: '个' },\r\n          'tomcat.sessions.expired': { color: 'green', text: 'tomcat 已过期 session 数', unit: '个' },\r\n          'tomcat.sessions.active.current': { color: 'green', text: 'tomcat 当前活跃 session 数', unit: '个' },\r\n          'tomcat.sessions.active.max': { color: 'green', text: 'tomcat 活跃 session 数峰值', unit: '个' },\r\n          'tomcat.sessions.rejected': { color: 'green', text: '超过session 最大配置后，拒绝的 session 个数', unit: '个' },\r\n\r\n          'tomcat.global.sent': { color: 'purple', text: '发送的字节数', unit: 'bytes' },\r\n          'tomcat.global.request.max': { color: 'purple', text: 'request 请求最长耗时', unit: '秒' },\r\n          'tomcat.global.request.count': { color: 'purple', text: '全局 request 请求次数', unit: '次' },\r\n          'tomcat.global.request.totalTime': { color: 'purple', text: '全局 request 请求总耗时', unit: '秒' },\r\n\r\n          'tomcat.servlet.request.max': { color: 'cyan', text: 'servlet 请求最长耗时', unit: '秒' },\r\n          'tomcat.servlet.request.count': { color: 'cyan', text: 'servlet 总请求次数', unit: '次' },\r\n          'tomcat.servlet.request.totalTime': { color: 'cyan', text: 'servlet 请求总耗时', unit: '秒' },\r\n\r\n          'tomcat.threads.current': { color: 'pink', text: 'tomcat 当前线程数（包括守护线程）', unit: '个' },\r\n          'tomcat.threads.config.max': { color: 'pink', text: 'tomcat 配置的线程最大数', unit: '个' }\r\n        },\r\n        // 当一条记录中需要取出多条数据的时候需要配置该字段\r\n        moreInfo: {\r\n          'tomcat.global.request': ['.count', '.totalTime'],\r\n          'tomcat.servlet.request': ['.count', '.totalTime']\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.loadTomcatInfo()\r\n    },\r\n    methods: {\r\n\r\n      handleClickUpdate() {\r\n        this.loadTomcatInfo()\r\n      },\r\n\r\n      loadTomcatInfo() {\r\n        this.tableLoading = true\r\n        this.time = moment().format('YYYY年MM月DD日 HH时mm分ss秒')\r\n        Promise.all([\r\n          getAction('actuator/metrics/tomcat.sessions.created'),\r\n          getAction('actuator/metrics/tomcat.sessions.expired'),\r\n          getAction('actuator/metrics/tomcat.sessions.active.current'),\r\n          getAction('actuator/metrics/tomcat.sessions.active.max'),\r\n          getAction('actuator/metrics/tomcat.sessions.rejected'),\r\n          // 2.3.5.RELEASE 无此API\r\n          // getAction('actuator/metrics/tomcat.global.sent'),\r\n          // getAction('actuator/metrics/tomcat.global.request.max'),\r\n          // getAction('actuator/metrics/tomcat.global.request'),\r\n          // getAction('actuator/metrics/tomcat.threads.current'),\r\n          // getAction('actuator/metrics/tomcat.threads.config.max')\r\n          // 2.1.3.RELEASE 无此API\r\n          //getAction('actuator/metrics/tomcat.servlet.request'),\r\n          // getAction('actuator/metrics/tomcat.servlet.request.max'),\r\n        ]).then((res) => {\r\n          let tomcatInfo = []\r\n          res.forEach((value, id) => {\r\n            let more = this.moreInfo[value.name]\r\n            if (!(more instanceof Array)) {\r\n              more = ['']\r\n            }\r\n            more.forEach((item, idx) => {\r\n              let param = value.name + item\r\n              tomcatInfo.push({\r\n                id: param + id, param,\r\n                text: 'false value',\r\n                value: value.measurements[idx].value\r\n              })\r\n            })\r\n          })\r\n          this.dataSource = tomcatInfo\r\n        }).catch((e) => {\r\n          console.error(e)\r\n          this.$message.error('获取Tomcat信息失败')\r\n        }).finally(() => {\r\n          this.loading = false\r\n          this.tableLoading = false\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style></style>\r\n"]}]}