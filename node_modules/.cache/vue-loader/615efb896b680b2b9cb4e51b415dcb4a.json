{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\jeecg\\JCategorySelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\JCategorySelect.vue","mtime":1615948815715},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICdAL2FwaS9tYW5hZ2UnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0pDYXRlZ29yeVNlbGVjdCcsCiAgcHJvcHM6IHsKICAgIHZhbHVlOnsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogZmFsc2UKICAgIH0sCiAgICBwbGFjZWhvbGRlcjp7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ+ivt+mAieaLqScsCiAgICAgIHJlcXVpcmVkOiBmYWxzZQogICAgfSwKICAgIGRpc2FibGVkOnsKICAgICAgdHlwZTpCb29sZWFuLAogICAgICBkZWZhdWx0OmZhbHNlLAogICAgICByZXF1aXJlZDpmYWxzZQogICAgfSwKICAgIGNvbmRpdGlvbjp7CiAgICAgIHR5cGU6U3RyaW5nLAogICAgICBkZWZhdWx0OicnLAogICAgICByZXF1aXJlZDpmYWxzZQogICAgfSwKICAgIC8vIOaYr+WQpuaUr+aMgeWkmumAiQogICAgbXVsdGlwbGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICB9LAogICAgbG9hZFRyaWdnbGVDaGFuZ2U6ewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgICAgcmVxdWlyZWQ6ZmFsc2UKICAgIH0sCiAgICBwaWQ6ewogICAgICB0eXBlOlN0cmluZywKICAgICAgZGVmYXVsdDonJywKICAgICAgcmVxdWlyZWQ6ZmFsc2UKICAgIH0sCiAgICBwY29kZTp7CiAgICAgIHR5cGU6U3RyaW5nLAogICAgICBkZWZhdWx0OicnLAogICAgICByZXF1aXJlZDpmYWxzZQogICAgfSwKICAgIGJhY2s6ewogICAgICB0eXBlOlN0cmluZywKICAgICAgZGVmYXVsdDonJywKICAgICAgcmVxdWlyZWQ6ZmFsc2UKICAgIH0KICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgdHJlZVZhbHVlOiIiLAogICAgICB0cmVlRGF0YTpbXSwKICAgICAgdXJsOiIvc3lzL2NhdGVnb3J5L2xvYWRUcmVlRGF0YSIsCiAgICAgIHZpZXc6Jy9zeXMvY2F0ZWdvcnkvbG9hZERpY3RJdGVtLycsCiAgICAgIHRhYmxlTmFtZToiIiwKICAgICAgdGV4dDoiIiwKICAgICAgY29kZToiIiwKCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgdmFsdWUgKCkgewogICAgICB0aGlzLmxvYWRJdGVtQnlDb2RlKCkKICAgIH0sCiAgICBwY29kZSgpewogICAgICB0aGlzLmxvYWRSb290KCk7CiAgICB9CiAgfSwKICBjcmVhdGVkKCl7CiAgICB0aGlzLnZhbGlkYXRlUHJvcCgpLnRoZW4oKCk9PnsKICAgICAgdGhpcy5sb2FkUm9vdCgpCiAgICAgIHRoaXMubG9hZEl0ZW1CeUNvZGUoKQogICAgfSkKICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKuWKoOi9veS4gOe6p+iKgueCuSAqLwogICAgbG9hZFJvb3QoKXsKICAgICAgbGV0IHBhcmFtID0gewogICAgICAgIHBpZDp0aGlzLnBpZCwKICAgICAgICBwY29kZTohdGhpcy5wY29kZT8nMCc6dGhpcy5wY29kZSwKICAgICAgICBjb25kaXRpb246dGhpcy5jb25kaXRpb24KICAgICAgfQogICAgICBnZXRBY3Rpb24odGhpcy51cmwscGFyYW0pLnRoZW4ocmVzPT57CiAgICAgICAgaWYocmVzLnN1Y2Nlc3MgJiYgcmVzLnJlc3VsdCl7CiAgICAgICAgICBmb3IobGV0IGkgb2YgcmVzLnJlc3VsdCl7CiAgICAgICAgICAgIGkudmFsdWUgPSBpLmtleQogICAgICAgICAgICBpZihpLmxlYWY9PWZhbHNlKXsKICAgICAgICAgICAgICBpLmlzTGVhZj1mYWxzZQogICAgICAgICAgICB9ZWxzZSBpZihpLmxlYWY9PXRydWUpewogICAgICAgICAgICAgIGkuaXNMZWFmPXRydWUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgICAgdGhpcy50cmVlRGF0YSA9IFsuLi5yZXMucmVzdWx0XQogICAgICAgIH1lbHNlewogICAgICAgICAgY29uc29sZS5sb2coIuagkeS4gOe6p+iKgueCueafpeivoue7k+aenC1lbHNlIixyZXMpCiAgICAgICAgfQogICAgICB9KQogICAgfSwKCiAgICAvKiog5pWw5o2u5Zue5pi+Ki8KICAgIGxvYWRJdGVtQnlDb2RlKCl7CiAgICAgIGlmKCF0aGlzLnZhbHVlIHx8IHRoaXMudmFsdWU9PSIwIil7CiAgICAgICAgdGhpcy50cmVlVmFsdWUgPSBbXQogICAgICB9ZWxzZXsKICAgICAgICBnZXRBY3Rpb24odGhpcy52aWV3LHtpZHM6dGhpcy52YWx1ZX0pLnRoZW4ocmVzPT57CiAgICAgICAgICBpZihyZXMuc3VjY2Vzcyl7CiAgICAgICAgICAgIGxldCB2YWx1ZXMgPSB0aGlzLnZhbHVlLnNwbGl0KCcsJykKICAgICAgICAgICAgdGhpcy50cmVlVmFsdWUgPSByZXMucmVzdWx0Lm1hcCgoaXRlbSwgaW5kZXgpID0+ICh7CiAgICAgICAgICAgICAga2V5OiB2YWx1ZXNbaW5kZXhdLAogICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZXNbaW5kZXhdLAogICAgICAgICAgICAgIGxhYmVsOiBpdGVtCiAgICAgICAgICAgIH0pKQogICAgICAgICAgICB0aGlzLm9uTG9hZFRyaWdnbGVDaGFuZ2UocmVzLnJlc3VsdFswXSk7CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgfQogICAgfSwKICAgIG9uTG9hZFRyaWdnbGVDaGFuZ2UodGV4dCl7CiAgICAgIC8v5Y+q5pyJ5Y2V6YCJ5omN5Lya6Kem5Y+RCiAgICAgIGlmKCF0aGlzLm11bHRpcGxlICYmIHRoaXMubG9hZFRyaWdnbGVDaGFuZ2UpewogICAgICAgIHRoaXMuYmFja1ZhbHVlKHRoaXMudmFsdWUsdGV4dCkKICAgICAgfQogICAgfSwKICAgIGJhY2tWYWx1ZSh2YWx1ZSxsYWJlbCl7CiAgICAgIGxldCBvYmogPSB7fQogICAgICBpZih0aGlzLmJhY2spewogICAgICAgIG9ialt0aGlzLmJhY2tdID0gbGFiZWwKICAgICAgfQogICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB2YWx1ZSwgb2JqKQogICAgfSwKICAgIGFzeW5jTG9hZFRyZWVEYXRhICh0cmVlTm9kZSkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgICBpZiAodHJlZU5vZGUuJHZub2RlLmNoaWxkcmVuKSB7CiAgICAgICAgICByZXNvbHZlKCkKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICBsZXQgcGlkID0gdHJlZU5vZGUuJHZub2RlLmtleQogICAgICAgIGxldCBwYXJhbSA9IHsKICAgICAgICAgIHBpZDpwaWQsCiAgICAgICAgICBjb25kaXRpb246dGhpcy5jb25kaXRpb24KICAgICAgICB9CiAgICAgICAgZ2V0QWN0aW9uKHRoaXMudXJsLHBhcmFtKS50aGVuKHJlcz0+ewogICAgICAgICAgaWYocmVzLnN1Y2Nlc3MpewogICAgICAgICAgICBmb3IobGV0IGkgb2YgcmVzLnJlc3VsdCl7CiAgICAgICAgICAgICAgaS52YWx1ZSA9IGkua2V5CiAgICAgICAgICAgICAgaWYoaS5sZWFmPT1mYWxzZSl7CiAgICAgICAgICAgICAgICBpLmlzTGVhZj1mYWxzZQogICAgICAgICAgICAgIH1lbHNlIGlmKGkubGVhZj09dHJ1ZSl7CiAgICAgICAgICAgICAgICBpLmlzTGVhZj10cnVlCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuYWRkQ2hpbGRyZW4ocGlkLHJlcy5yZXN1bHQsdGhpcy50cmVlRGF0YSkKICAgICAgICAgICAgdGhpcy50cmVlRGF0YSA9IFsuLi50aGlzLnRyZWVEYXRhXQogICAgICAgICAgfQogICAgICAgICAgcmVzb2x2ZSgpCiAgICAgICAgfSkKICAgICAgfSkKICAgIH0sCiAgICBhZGRDaGlsZHJlbihwaWQsY2hpbGRyZW4sdHJlZUFycmF5KXsKICAgICAgaWYodHJlZUFycmF5ICYmIHRyZWVBcnJheS5sZW5ndGg+MCl7CiAgICAgICAgZm9yKGxldCBpdGVtIG9mIHRyZWVBcnJheSl7CiAgICAgICAgICBpZihpdGVtLmtleSA9PSBwaWQpewogICAgICAgICAgICBpZighY2hpbGRyZW4gfHwgY2hpbGRyZW4ubGVuZ3RoPT0wKXsKICAgICAgICAgICAgICBpdGVtLmlzTGVhZj10cnVlCiAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgIGl0ZW0uY2hpbGRyZW4gPSBjaGlsZHJlbgogICAgICAgICAgICB9CiAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgdGhpcy5hZGRDaGlsZHJlbihwaWQsY2hpbGRyZW4saXRlbS5jaGlsZHJlbikKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCgogICAgb25DaGFuZ2UodmFsdWUpewogICAgICBpZighdmFsdWUpewogICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsICcnKTsKICAgICAgICB0aGlzLnRyZWVWYWx1ZSA9ICcnCiAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHsKICAgICAgICBsZXQgbGFiZWxzID0gW10KICAgICAgICBsZXQgdmFsdWVzID0gdmFsdWUubWFwKGl0ZW0gPT4gewogICAgICAgICAgbGFiZWxzLnB1c2goaXRlbS5sYWJlbCkKICAgICAgICAgIHJldHVybiBpdGVtLnZhbHVlCiAgICAgICAgfSkKICAgICAgICB0aGlzLmJhY2tWYWx1ZSh2YWx1ZXMuam9pbignLCcpLCBsYWJlbHMuam9pbignLCcpKQogICAgICAgIHRoaXMudHJlZVZhbHVlID0gdmFsdWUKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmJhY2tWYWx1ZSh2YWx1ZS52YWx1ZSx2YWx1ZS5sYWJlbCkKICAgICAgICB0aGlzLnRyZWVWYWx1ZSA9IHZhbHVlCiAgICAgIH0KICAgIH0sCiAgICBnZXRDdXJyVHJlZURhdGEoKXsKICAgICAgcmV0dXJuIHRoaXMudHJlZURhdGEKICAgIH0sCiAgICB2YWxpZGF0ZVByb3AoKXsKICAgICAgbGV0IG15Y29uZGl0aW9uID0gdGhpcy5jb25kaXRpb24KICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PnsKICAgICAgICBpZighbXljb25kaXRpb24pewogICAgICAgICAgcmVzb2x2ZSgpOwogICAgICAgIH1lbHNlewogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgbGV0IHRlc3Q9SlNPTi5wYXJzZShteWNvbmRpdGlvbik7CiAgICAgICAgICAgIGlmKHR5cGVvZiB0ZXN0ID09ICdvYmplY3QnICYmIHRlc3QpewogICAgICAgICAgICAgIHJlc29sdmUoKQogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLnu4Tku7ZKVHJlZVNlbGVjdC1jb25kaXRpb27kvKDlgLzmnInor6/vvIzpnIDopoHkuIDkuKpqc29u5a2X56ym5LiyISIpCiAgICAgICAgICAgICAgcmVqZWN0KCkKICAgICAgICAgICAgfQogICAgICAgICAgfSBjYXRjaChlKSB7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIue7hOS7tkpUcmVlU2VsZWN0LWNvbmRpdGlvbuS8oOWAvOacieivr++8jOmcgOimgeS4gOS4qmpzb27lrZfnrKbkuLIhIikKICAgICAgICAgICAgcmVqZWN0KCkKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pCiAgICB9CiAgfSwKICAvLzIuMuaWsOWiniDlnKjnu4Tku7blhoXlrprkuYkg5oyH5a6a54i257uE5Lu26LCD55So5pe25YCZ55qE5Lyg5YC85bGe5oCn5ZKM5LqL5Lu257G75Z6LIOi/meS4queJm+mAvAogIG1vZGVsOiB7CiAgICBwcm9wOiAndmFsdWUnLAogICAgZXZlbnQ6ICdjaGFuZ2UnCiAgfQp9Cg=="},{"version":3,"sources":["JCategorySelect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"JCategorySelect.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\r\n  <a-tree-select\r\n    allowClear\r\n    labelInValue\r\n    style=\"width: 100%\"\r\n    :disabled=\"disabled\"\r\n    :dropdownStyle=\"{ maxHeight: '400px', overflow: 'auto' }\"\r\n    :placeholder=\"placeholder\"\r\n    :loadData=\"asyncLoadTreeData\"\r\n    :value=\"treeValue\"\r\n    :treeData=\"treeData\"\r\n    :multiple=\"multiple\"\r\n    @change=\"onChange\">\r\n  </a-tree-select>\r\n</template>\r\n<script>\r\n\r\n  import { getAction } from '@/api/manage'\r\n\r\n  export default {\r\n    name: 'JCategorySelect',\r\n    props: {\r\n      value:{\r\n        type: String,\r\n        required: false\r\n      },\r\n      placeholder:{\r\n        type: String,\r\n        default: '请选择',\r\n        required: false\r\n      },\r\n      disabled:{\r\n        type:Boolean,\r\n        default:false,\r\n        required:false\r\n      },\r\n      condition:{\r\n        type:String,\r\n        default:'',\r\n        required:false\r\n      },\r\n      // 是否支持多选\r\n      multiple: {\r\n        type: Boolean,\r\n        default: false,\r\n      },\r\n      loadTriggleChange:{\r\n        type: Boolean,\r\n        default: false,\r\n        required:false\r\n      },\r\n      pid:{\r\n        type:String,\r\n        default:'',\r\n        required:false\r\n      },\r\n      pcode:{\r\n        type:String,\r\n        default:'',\r\n        required:false\r\n      },\r\n      back:{\r\n        type:String,\r\n        default:'',\r\n        required:false\r\n      }\r\n    },\r\n    data () {\r\n      return {\r\n        treeValue:\"\",\r\n        treeData:[],\r\n        url:\"/sys/category/loadTreeData\",\r\n        view:'/sys/category/loadDictItem/',\r\n        tableName:\"\",\r\n        text:\"\",\r\n        code:\"\",\r\n\r\n      }\r\n    },\r\n    watch: {\r\n      value () {\r\n        this.loadItemByCode()\r\n      },\r\n      pcode(){\r\n        this.loadRoot();\r\n      }\r\n    },\r\n    created(){\r\n      this.validateProp().then(()=>{\r\n        this.loadRoot()\r\n        this.loadItemByCode()\r\n      })\r\n    },\r\n    methods: {\r\n      /**加载一级节点 */\r\n      loadRoot(){\r\n        let param = {\r\n          pid:this.pid,\r\n          pcode:!this.pcode?'0':this.pcode,\r\n          condition:this.condition\r\n        }\r\n        getAction(this.url,param).then(res=>{\r\n          if(res.success && res.result){\r\n            for(let i of res.result){\r\n              i.value = i.key\r\n              if(i.leaf==false){\r\n                i.isLeaf=false\r\n              }else if(i.leaf==true){\r\n                i.isLeaf=true\r\n              }\r\n            }\r\n            this.treeData = [...res.result]\r\n          }else{\r\n            console.log(\"树一级节点查询结果-else\",res)\r\n          }\r\n        })\r\n      },\r\n\r\n      /** 数据回显*/\r\n      loadItemByCode(){\r\n        if(!this.value || this.value==\"0\"){\r\n          this.treeValue = []\r\n        }else{\r\n          getAction(this.view,{ids:this.value}).then(res=>{\r\n            if(res.success){\r\n              let values = this.value.split(',')\r\n              this.treeValue = res.result.map((item, index) => ({\r\n                key: values[index],\r\n                value: values[index],\r\n                label: item\r\n              }))\r\n              this.onLoadTriggleChange(res.result[0]);\r\n            }\r\n          })\r\n        }\r\n      },\r\n      onLoadTriggleChange(text){\r\n        //只有单选才会触发\r\n        if(!this.multiple && this.loadTriggleChange){\r\n          this.backValue(this.value,text)\r\n        }\r\n      },\r\n      backValue(value,label){\r\n        let obj = {}\r\n        if(this.back){\r\n          obj[this.back] = label\r\n        }\r\n        this.$emit('change', value, obj)\r\n      },\r\n      asyncLoadTreeData (treeNode) {\r\n        return new Promise((resolve) => {\r\n          if (treeNode.$vnode.children) {\r\n            resolve()\r\n            return\r\n          }\r\n          let pid = treeNode.$vnode.key\r\n          let param = {\r\n            pid:pid,\r\n            condition:this.condition\r\n          }\r\n          getAction(this.url,param).then(res=>{\r\n            if(res.success){\r\n              for(let i of res.result){\r\n                i.value = i.key\r\n                if(i.leaf==false){\r\n                  i.isLeaf=false\r\n                }else if(i.leaf==true){\r\n                  i.isLeaf=true\r\n                }\r\n              }\r\n              this.addChildren(pid,res.result,this.treeData)\r\n              this.treeData = [...this.treeData]\r\n            }\r\n            resolve()\r\n          })\r\n        })\r\n      },\r\n      addChildren(pid,children,treeArray){\r\n        if(treeArray && treeArray.length>0){\r\n          for(let item of treeArray){\r\n            if(item.key == pid){\r\n              if(!children || children.length==0){\r\n                item.isLeaf=true\r\n              }else{\r\n                item.children = children\r\n              }\r\n              break\r\n            }else{\r\n              this.addChildren(pid,children,item.children)\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      onChange(value){\r\n        if(!value){\r\n          this.$emit('change', '');\r\n          this.treeValue = ''\r\n        } else if (Array.isArray(value)) {\r\n          let labels = []\r\n          let values = value.map(item => {\r\n            labels.push(item.label)\r\n            return item.value\r\n          })\r\n          this.backValue(values.join(','), labels.join(','))\r\n          this.treeValue = value\r\n        } else {\r\n          this.backValue(value.value,value.label)\r\n          this.treeValue = value\r\n        }\r\n      },\r\n      getCurrTreeData(){\r\n        return this.treeData\r\n      },\r\n      validateProp(){\r\n        let mycondition = this.condition\r\n        return new Promise((resolve,reject)=>{\r\n          if(!mycondition){\r\n            resolve();\r\n          }else{\r\n            try {\r\n              let test=JSON.parse(mycondition);\r\n              if(typeof test == 'object' && test){\r\n                resolve()\r\n              }else{\r\n                this.$message.error(\"组件JTreeSelect-condition传值有误，需要一个json字符串!\")\r\n                reject()\r\n              }\r\n            } catch(e) {\r\n              this.$message.error(\"组件JTreeSelect-condition传值有误，需要一个json字符串!\")\r\n              reject()\r\n            }\r\n          }\r\n        })\r\n      }\r\n    },\r\n    //2.2新增 在组件内定义 指定父组件调用时候的传值属性和事件类型 这个牛逼\r\n    model: {\r\n      prop: 'value',\r\n      event: 'change'\r\n    }\r\n  }\r\n</script>\r\n"]}]}