{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\system\\modules\\SysDataSourceModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\system\\modules\\SysDataSourceModal.vue","mtime":1615948821514},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBwaWNrIGZyb20gJ2xvZGFzaC5waWNrJwppbXBvcnQgeyBodHRwQWN0aW9uLCBwb3N0QWN0aW9uIH0gZnJvbSAnQC9hcGkvbWFuYWdlJwppbXBvcnQgeyB2YWxpZGF0ZUR1cGxpY2F0ZVZhbHVlIH0gZnJvbSAnQC91dGlscy91dGlsJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTeXNEYXRhU291cmNlTW9kYWwnLAogIGNvbXBvbmVudHM6IHt9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0aXRsZTogJ+aTjeS9nCcsCiAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICBtb2RlbDoge30sCiAgICAgIGxhYmVsQ29sOiB7CiAgICAgICAgeHM6IHsgc3BhbjogMjQgfSwKICAgICAgICBzbTogeyBzcGFuOiA1IH0sCiAgICAgIH0sCiAgICAgIHdyYXBwZXJDb2w6IHsKICAgICAgICB4czogeyBzcGFuOiAyNCB9LAogICAgICAgIHNtOiB7IHNwYW46IDE2IH0sCiAgICAgIH0sCgogICAgICBjb25maXJtTG9hZGluZzogZmFsc2UsCiAgICAgIGZvcm06IHRoaXMuJGZvcm0uY3JlYXRlRm9ybSh0aGlzKSwKICAgICAgdmFsaWRhdG9yUnVsZXM6IHsKICAgICAgICBjb2RlOiB7CiAgICAgICAgICB2YWxpZGF0ZUZpcnN0OiB0cnVlLAogICAgICAgICAgcnVsZXM6IFsKICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeaVsOaNrua6kOe8lueggSEnIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICB2YWxpZGF0b3I6IChydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHsKICAgICAgICAgICAgICAgIGxldCBwYXR0ZXJuID0gL15bYS16fEEtWl1bYS16fEEtWlxkXy1dezAsfSQvCiAgICAgICAgICAgICAgICBpZiAoIXBhdHRlcm4udGVzdCh2YWx1ZSkpIHsKICAgICAgICAgICAgICAgICAgY2FsbGJhY2soJ+e8lueggeW/hemhu+S7peWtl+avjeW8gOWktO+8jOWPr+WMheWQq+aVsOWtl+OAgeS4i+WIkue6v+OAgeaoquadoCcpCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICB2YWxpZGF0ZUR1cGxpY2F0ZVZhbHVlKCdzeXNfZGF0YV9zb3VyY2UnLCAnY29kZScsIHZhbHVlLCB0aGlzLm1vZGVsLmlkLCBjYWxsYmFjaykKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIG5hbWU6IHsgcnVsZXM6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl5pWw5o2u5rqQ5ZCN56ewIScgfV0gfSwKICAgICAgICBkYlR5cGU6IHsgcnVsZXM6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36YCJ5oup5pWw5o2u5bqT57G75Z6LIScgfV0gfSwKICAgICAgICBkYkRyaXZlcjogeyBydWxlczogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXpqbHliqjnsbshJyB9XSB9LAogICAgICAgIGRiVXJsOiB7IHJ1bGVzOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeaVsOaNrua6kOWcsOWdgCEnIH1dIH0sCiAgICAgICAgZGJOYW1lOiB7IHJ1bGVzOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeaVsOaNruW6k+WQjeensCEnIH1dIH0sCiAgICAgICAgZGJVc2VybmFtZTogeyBydWxlczogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXnlKjmiLflkI0hJyB9XSB9LAogICAgICAgIGRiUGFzc3dvcmQ6IHsgcnVsZXM6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl5a+G56CBIScgfV0gfQogICAgICB9LAogICAgICB1cmw6IHsKICAgICAgICBhZGQ6ICcvc3lzL2RhdGFTb3VyY2UvYWRkJywKICAgICAgICBlZGl0OiAnL3N5cy9kYXRhU291cmNlL2VkaXQnLAogICAgICB9LAogICAgICBkYkRyaXZlck1hcDogewogICAgICAgIC8vIE15U1FMIOaVsOaNruW6kwogICAgICAgICcxJzogeyBkYkRyaXZlcjogJ2NvbS5teXNxbC5qZGJjLkRyaXZlcicgfSwKICAgICAgICAvLyBPcmFjbGUKICAgICAgICAnMic6IHsgZGJEcml2ZXI6ICdvcmFjbGUuamRiYy5PcmFjbGVEcml2ZXInIH0sCiAgICAgICAgLy8gU1FMU2VydmVyIOaVsOaNruW6kwogICAgICAgICczJzogeyBkYkRyaXZlcjogJ2NvbS5taWNyb3NvZnQuc3Fsc2VydmVyLmpkYmMuU1FMU2VydmVyRHJpdmVyJyB9LAogICAgICB9LAogICAgICBkYlVybE1hcDogewogICAgICAgIC8vIE15U1FMIOaVsOaNruW6kwogICAgICAgICcxJzogeyBkYlVybDogJ2pkYmM6bXlzcWw6Ly8xMjcuMC4wLjE6MzMwNi9qZWVjZy1ib290P2NoYXJhY3RlckVuY29kaW5nPVVURi04JnVzZVVuaWNvZGU9dHJ1ZSZ1c2VTU0w9ZmFsc2UnIH0sCiAgICAgICAgLy8gT3JhY2xlCiAgICAgICAgJzInOiB7IGRiVXJsOiAnamRiYzpvcmFjbGU6dGhpbjpAMTI3LjAuMC4xOjE1MjE6T1JDTCcgfSwKICAgICAgICAvLyBTUUxTZXJ2ZXIg5pWw5o2u5bqTCiAgICAgICAgJzMnOiB7IGRiVXJsOiAnamRiYzpzcWxzZXJ2ZXI6Ly8xMjcuMC4wLjE6MTQzMztTZWxlY3RNZXRob2Q9Y3Vyc29yO0RhdGFiYXNlTmFtZT1qZWVjZ2Jvb3QnIH0KICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFkZCgpIHsKICAgICAgdGhpcy5lZGl0KHt9KQogICAgfSwKICAgIGVkaXQocmVjb3JkKSB7CiAgICAgIHRoaXMuZm9ybS5yZXNldEZpZWxkcygpCiAgICAgIHRoaXMubW9kZWwgPSBPYmplY3QuYXNzaWduKHt9LCByZWNvcmQpCiAgICAgIHRoaXMudmlzaWJsZSA9IHRydWUKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIHRoaXMuZm9ybS5zZXRGaWVsZHNWYWx1ZShwaWNrKHRoaXMubW9kZWwsICdjb2RlJywgJ25hbWUnLCAncmVtYXJrJywgJ2RiVHlwZScsICdkYkRyaXZlcicsICdkYlVybCcsICdkYk5hbWUnLCAnZGJVc2VybmFtZScsICdkYlBhc3N3b3JkJykpCiAgICAgIH0pCiAgICB9LAogICAgY2xvc2UoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2Nsb3NlJykKICAgICAgdGhpcy52aXNpYmxlID0gZmFsc2UKICAgIH0sCiAgICBoYW5kbGVPaygpIHsKICAgICAgLy8g6Kem5Y+R6KGo5Y2V6aqM6K+BCiAgICAgIHRoaXMuZm9ybS52YWxpZGF0ZUZpZWxkcygoZXJyLCB2YWx1ZXMpID0+IHsKICAgICAgICBpZiAoIWVycikgewogICAgICAgICAgdGhpcy5jb25maXJtTG9hZGluZyA9IHRydWUKICAgICAgICAgIGxldCBmb3JtRGF0YSA9IE9iamVjdC5hc3NpZ24odGhpcy5tb2RlbCwgdmFsdWVzKQogICAgICAgICAgbGV0IGh0dHBVcmwgPSB0aGlzLnVybC5hZGQsIG1ldGhvZCA9ICdwb3N0JwogICAgICAgICAgaWYgKHRoaXMubW9kZWwuaWQpIHsKICAgICAgICAgICAgaHR0cFVybCA9IHRoaXMudXJsLmVkaXQKICAgICAgICAgICAgbWV0aG9kID0gJ3B1dCcKICAgICAgICAgICAgLy8g55Sx5LqO57yW56CB55qE54m55q6K5oCn77yM5omA5Lul5LiN6IO95pu05pS5CiAgICAgICAgICAgIGZvcm1EYXRhWydjb2RlJ10gPSB1bmRlZmluZWQKICAgICAgICAgIH0KICAgICAgICAgIGh0dHBBY3Rpb24oaHR0cFVybCwgZm9ybURhdGEsIG1ldGhvZCkudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgIGlmIChyZXMuc3VjY2VzcykgewogICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhyZXMubWVzc2FnZSkKICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdvaycpCiAgICAgICAgICAgICAgdGhpcy5jbG9zZSgpCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKHJlcy5tZXNzYWdlKQogICAgICAgICAgICB9CiAgICAgICAgICB9KS5maW5hbGx5KCgpID0+IHsKICAgICAgICAgICAgdGhpcy5jb25maXJtTG9hZGluZyA9IGZhbHNlCiAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgfSkKICAgIH0sCiAgICBoYW5kbGVDYW5jZWwoKSB7CiAgICAgIHRoaXMuY2xvc2UoKQogICAgfSwKICAgIC8vIOa1i+ivleaVsOaNrua6kOmFjee9ruaYr+WQpuWPr+S7peato+W4uOi/nuaOpQogICAgaGFuZGxlVGVzdCgpIHsKICAgICAgbGV0IGtleXMgPSBbJ2RiVHlwZScsICdkYkRyaXZlcicsICdkYlVybCcsICdkYk5hbWUnLCAnZGJVc2VybmFtZScsICdkYlBhc3N3b3JkJ10KICAgICAgLy8g6I635Y+W5Lul5LiK5a2X5q6155qE5YC877yM5bm25riF6Zmk5qCh6aqM54q25oCBCiAgICAgIGxldCBmaWVsZHNWYWx1ZXMgPSB0aGlzLmZvcm0uZ2V0RmllbGRzVmFsdWUoa2V5cykKICAgICAgbGV0IHNldEZpZWxkcyA9IHt9CiAgICAgIGtleXMuZm9yRWFjaChrZXkgPT4gc2V0RmllbGRzW2tleV0gPSB7IHZhbHVlOiBmaWVsZHNWYWx1ZXNba2V5XSwgZXJyb3JzOiBudWxsIH0pCiAgICAgIC8vIOa4hemZpOagoemqjOeKtuaAge+8jOebrueahOaYr+WPr+S7peiuqemUmeivr+aWh+Wtl+mXqueDgQogICAgICB0aGlzLmZvcm0uc2V0RmllbGRzKHNldEZpZWxkcykKICAgICAgLy8g6YeN5paw5qCh6aqMCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICB0aGlzLmZvcm0udmFsaWRhdGVGaWVsZHMoa2V5cywgKGVycm9ycywgdmFsdWVzKSA9PiB7CiAgICAgICAgICBpZiAoIWVycm9ycykgewogICAgICAgICAgICBsZXQgbG9hZGluZyA9IHRoaXMuJG1lc3NhZ2UubG9hZGluZygn6L+e5o6l5Lit4oCm4oCmJywgMCkKICAgICAgICAgICAgcG9zdEFjdGlvbignL29ubGluZS9jZ3JlcG9ydC9hcGkvdGVzdENvbm5lY3Rpb24nLCBmaWVsZHNWYWx1ZXMpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICBpZiAocmVzLnN1Y2Nlc3MpIHsKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn6L+e5o6l5oiQ5YqfJykKICAgICAgICAgICAgICB9IGVsc2UgdGhyb3cgbmV3IEVycm9yKHJlcy5tZXNzYWdlKQogICAgICAgICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgICAgICAgdGhpcy4kd2FybmluZyh7IHRpdGxlOiAn6L+e5o6l5aSx6LSlJywgY29udGVudDogZXJyb3IubWVzc2FnZSB8fCBlcnJvciB9KQogICAgICAgICAgICB9KS5maW5hbGx5KCgpID0+IGxvYWRpbmcoKSkKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9KQogICAgfSwKICAgIC8vIOaVsOaNruW6k+exu+Wei+abtOaUueaXtu+8jOiBlOWKqOabtOaUueaVsOaNruW6k+mpseWKqAogICAgaGFuZGxlRGJUeXBlQ2hhbmdlKHZhbCkgewogICAgICBsZXQgZGJEcml2ZXIgPSB0aGlzLmRiRHJpdmVyTWFwW3ZhbF0KICAgICAgbGV0IGRiVXJsID0gdGhpcy5kYlVybE1hcFt2YWxdCiAgICAgIGlmIChkYkRyaXZlcikgewogICAgICAgIHRoaXMuZm9ybS5zZXRGaWVsZHNWYWx1ZShkYkRyaXZlcikKICAgICAgfQogICAgICBpZiAoZGJVcmwpIHsKICAgICAgICB0aGlzLmZvcm0uc2V0RmllbGRzVmFsdWUoZGJVcmwpCiAgICAgIH0KICAgIH0sCiAgfQp9Cg=="},{"version":3,"sources":["SysDataSourceModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"SysDataSourceModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"数据源编码\">\r\n          <a-input placeholder=\"请输入数据源编码\" :disabled=\"!!model.id\" v-decorator=\"['code', validatorRules.code]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"数据源名称\">\r\n          <a-input placeholder=\"请输入数据源名称\" v-decorator=\"['name', validatorRules.name]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"数据库类型\">\r\n          <j-dict-select-tag placeholder=\"请选择数据库类型\" dict-code=\"database_type\" triggerChange v-decorator=\"['dbType', validatorRules.dbType]\" @change=\"handleDbTypeChange\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"驱动类\">\r\n          <a-input placeholder=\"请输入驱动类\" v-decorator=\"['dbDriver', validatorRules.dbDriver]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"数据源地址\">\r\n          <a-input placeholder=\"请输入数据源地址\" v-decorator=\"['dbUrl', validatorRules.dbUrl]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"数据库名称\">\r\n          <a-input placeholder=\"请输入数据库名称\" v-decorator=\"['dbName', validatorRules.dbName]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"用户名\">\r\n          <a-input placeholder=\"请输入用户名\" v-decorator=\"['dbUsername', validatorRules.dbUsername]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"密码\">\r\n          <a-row :gutter=\"8\">\r\n            <a-col :span=\"21\">\r\n              <a-input-password placeholder=\"请输入密码\" v-decorator=\"['dbPassword', validatorRules.dbPassword]\"/>\r\n            </a-col>\r\n            <a-col :span=\"3\">\r\n              <a-button type=\"primary\" size=\"small\" style=\"width: 100%\" @click=\"handleTest\">测试</a-button>\r\n            </a-col>\r\n          </a-row>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"备注\">\r\n          <a-textarea placeholder=\"请输入备注\" v-decorator=\"['remark', {}]\"/>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import pick from 'lodash.pick'\r\n  import { httpAction, postAction } from '@/api/manage'\r\n  import { validateDuplicateValue } from '@/utils/util'\r\n\r\n  export default {\r\n    name: 'SysDataSourceModal',\r\n    components: {},\r\n    data() {\r\n      return {\r\n        title: '操作',\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules: {\r\n          code: {\r\n            validateFirst: true,\r\n            rules: [\r\n              { required: true, message: '请输入数据源编码!' },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  let pattern = /^[a-z|A-Z][a-z|A-Z\\d_-]{0,}$/\r\n                  if (!pattern.test(value)) {\r\n                    callback('编码必须以字母开头，可包含数字、下划线、横杠')\r\n                  } else {\r\n                    validateDuplicateValue('sys_data_source', 'code', value, this.model.id, callback)\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          },\r\n          name: { rules: [{ required: true, message: '请输入数据源名称!' }] },\r\n          dbType: { rules: [{ required: true, message: '请选择数据库类型!' }] },\r\n          dbDriver: { rules: [{ required: true, message: '请输入驱动类!' }] },\r\n          dbUrl: { rules: [{ required: true, message: '请输入数据源地址!' }] },\r\n          dbName: { rules: [{ required: true, message: '请输入数据库名称!' }] },\r\n          dbUsername: { rules: [{ required: true, message: '请输入用户名!' }] },\r\n          dbPassword: { rules: [{ required: true, message: '请输入密码!' }] }\r\n        },\r\n        url: {\r\n          add: '/sys/dataSource/add',\r\n          edit: '/sys/dataSource/edit',\r\n        },\r\n        dbDriverMap: {\r\n          // MySQL 数据库\r\n          '1': { dbDriver: 'com.mysql.jdbc.Driver' },\r\n          // Oracle\r\n          '2': { dbDriver: 'oracle.jdbc.OracleDriver' },\r\n          // SQLServer 数据库\r\n          '3': { dbDriver: 'com.microsoft.sqlserver.jdbc.SQLServerDriver' },\r\n        },\r\n        dbUrlMap: {\r\n          // MySQL 数据库\r\n          '1': { dbUrl: 'jdbc:mysql://127.0.0.1:3306/jeecg-boot?characterEncoding=UTF-8&useUnicode=true&useSSL=false' },\r\n          // Oracle\r\n          '2': { dbUrl: 'jdbc:oracle:thin:@127.0.0.1:1521:ORCL' },\r\n          // SQLServer 数据库\r\n          '3': { dbUrl: 'jdbc:sqlserver://127.0.0.1:1433;SelectMethod=cursor;DatabaseName=jeecgboot' }\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n      add() {\r\n        this.edit({})\r\n      },\r\n      edit(record) {\r\n        this.form.resetFields()\r\n        this.model = Object.assign({}, record)\r\n        this.visible = true\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model, 'code', 'name', 'remark', 'dbType', 'dbDriver', 'dbUrl', 'dbName', 'dbUsername', 'dbPassword'))\r\n        })\r\n      },\r\n      close() {\r\n        this.$emit('close')\r\n        this.visible = false\r\n      },\r\n      handleOk() {\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            this.confirmLoading = true\r\n            let formData = Object.assign(this.model, values)\r\n            let httpUrl = this.url.add, method = 'post'\r\n            if (this.model.id) {\r\n              httpUrl = this.url.edit\r\n              method = 'put'\r\n              // 由于编码的特殊性，所以不能更改\r\n              formData['code'] = undefined\r\n            }\r\n            httpAction(httpUrl, formData, method).then((res) => {\r\n              if (res.success) {\r\n                this.$message.success(res.message)\r\n                this.$emit('ok')\r\n                this.close()\r\n              } else {\r\n                this.$message.warning(res.message)\r\n              }\r\n            }).finally(() => {\r\n              this.confirmLoading = false\r\n            })\r\n          }\r\n        })\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n      // 测试数据源配置是否可以正常连接\r\n      handleTest() {\r\n        let keys = ['dbType', 'dbDriver', 'dbUrl', 'dbName', 'dbUsername', 'dbPassword']\r\n        // 获取以上字段的值，并清除校验状态\r\n        let fieldsValues = this.form.getFieldsValue(keys)\r\n        let setFields = {}\r\n        keys.forEach(key => setFields[key] = { value: fieldsValues[key], errors: null })\r\n        // 清除校验状态，目的是可以让错误文字闪烁\r\n        this.form.setFields(setFields)\r\n        // 重新校验\r\n        this.$nextTick(() => {\r\n          this.form.validateFields(keys, (errors, values) => {\r\n            if (!errors) {\r\n              let loading = this.$message.loading('连接中……', 0)\r\n              postAction('/online/cgreport/api/testConnection', fieldsValues).then(res => {\r\n                if (res.success) {\r\n                  this.$message.success('连接成功')\r\n                } else throw new Error(res.message)\r\n              }).catch(error => {\r\n                this.$warning({ title: '连接失败', content: error.message || error })\r\n              }).finally(() => loading())\r\n            }\r\n          })\r\n        })\r\n      },\r\n      // 数据库类型更改时，联动更改数据库驱动\r\n      handleDbTypeChange(val) {\r\n        let dbDriver = this.dbDriverMap[val]\r\n        let dbUrl = this.dbUrlMap[val]\r\n        if (dbDriver) {\r\n          this.form.setFieldsValue(dbDriver)\r\n        }\r\n        if (dbUrl) {\r\n          this.form.setFieldsValue(dbUrl)\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped></style>"]}]}