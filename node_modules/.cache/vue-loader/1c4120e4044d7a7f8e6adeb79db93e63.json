{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\zbtest\\JDemo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\zbtest\\JDemo.vue","mtime":1615948822822},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["JDemo.vue"],"names":[],"mappingsfile":"JDemo.vue","sourceRoot":"src/views/zbtest","sourcesContent":["<template>\r\n  <j-vxe-table\r\n      toolbar\r\n      :importBtn=\"importBtn\"\r\n      :toolbarConfig=\"toolbarConfig\"\r\n      keep-source\r\n      async-remove\r\n      ref=\"xTable\"\r\n      row-selection\r\n      :loading=\"loading\"\r\n      :columns=\"columns\"\r\n      :dataSource=\"dataSource\"\r\n      @loadDataUpload=\"loadDataUpload\"\r\n      @save=\"handleTableSave\"\r\n      @remove=\"handleTableRemove\"\r\n      @edit-closed=\"handleEditClosed\"\r\n      @pageChange=\"handlePageChange\"\r\n      @selectRowChange=\"handleSelectRowChange\"\r\n      @upload=\"uploadss\"\r\n  >\r\n    <template v-slot:call=\"props\">\r\n      <a-time-picker :default-value=\"moment(props.value, 'HH:mm:ss')\"    @openChange=\"handleOpenChange(props)\" @change=\"change\">\r\n      </a-time-picker>\r\n    </template>\r\n  </j-vxe-table>\r\n</template>\r\n\r\n<script>\r\nimport { getAction, postAction, putAction } from '@api/manage'\r\nimport { JVXETypes } from '@/components/jeecg/JVxeTable'\r\nimport moment from 'moment';\r\n// 即时保存示例\r\nexport default {\r\n  name: 'JDemo',\r\n  props:['columns','dataSource','formData','importBtn'],\r\n  data() {\r\n    return {\r\n      columnss:[],\r\n      open: false,\r\n      indexprop:{},\r\n      // 工具栏的按钮配置\r\n      toolbarConfig: {\r\n        // add 新增按钮；remove 删除按钮；clearSelection 清空选择按钮\r\n        btn: ['add', 'save', 'remove', 'clearSelection']\r\n      },\r\n      // 是否正在加载\r\n      loading: false,\r\n      // 分页器参数\r\n      pagination: {\r\n        // 当前页码\r\n        current: 1,\r\n        // 每页的条数\r\n        pageSize: 10,\r\n        // 数据总数（目前并不知道真实的总数，所以先填写0，在后台查出来后再赋值）\r\n        total: 0,\r\n      },\r\n      // 选择的行\r\n      selectedRows: [],\r\n      // 数据源，控制表格的数据\r\n      // 列配置，控制表格显示的列\r\n      // columns: [\r\n      //   {key: 'call', title: '时间',type: JVXETypes.time,slotName:'call',open:false},\r\n      //   {key: 'len', title: '事件', type: JVXETypes.input},\r\n      //   {key: 'ton', title: '具体落实情况',   type: JVXETypes.input},\r\n      //   {key: 'payer', title: '席位名称',  type: JVXETypes.input},\r\n      //   {\r\n      //     key: 'company',\r\n      //     title: '值班员',\r\n      //     // 最小宽度，与宽度不同的是，这个不是固定的宽度，如果表格有多余的空间，会平均分配给设置了 minWidth 的列\r\n      //     // 如果要做占满表格的列可以这么写\r\n      //     type: JVXETypes.input\r\n      //   },\r\n      //   {key: 'trend', title: '备注',type: JVXETypes.input},\r\n      // ],\r\n      // 查询url地址\r\n      url: {\r\n        getData: '/reportForm/list',\r\n        list: '/reportForm/list',\r\n        // 模拟保存单行数据（即时保存）\r\n        saveRow: '/mock/vxe/immediateSaveRow',\r\n        // 模拟保存整个表格的数据\r\n        saveAll: '/southTable/reportFromDataSave',\r\n      },\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  watch:{\r\n    columns: {\r\n      handler(newValue, oldValue) {\r\n        this.columns = newValue\r\n        this.init(newValue)\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  methods: {\r\n    init(arr) {\r\n      console.log(arr)\r\n      this.columns = arr\r\n    },\r\n    loadDataUpload(obj) {\r\n      this.$emit('loadDataUpload',obj)\r\n    },\r\n    uploadss(obj) {\r\n      console.log(obj)\r\n    },\r\n    moment,\r\n    validAllEvent () {\r\n      return this.$refs.xTable.getTableData()\r\n    },\r\n    change(time, timeString) {\r\n      console.log(time, timeString);\r\n      this.indexprop.value = timeString\r\n      this.indexprop.params.call = timeString\r\n      this.indexprop.row.call = timeString\r\n    },\r\n    handleOpenChange(props) {\r\n      console.log(props)\r\n      this.indexprop = props\r\n    },\r\n    handleClose(props) {\r\n      console.log(1)\r\n    },\r\n    handleView(props) {\r\n      // 参数介绍：\r\n      // props.value          当前单元格的值\r\n      // props.row            当前行的数据\r\n      // props.rowId          当前行ID\r\n      // props.rowIndex       当前行下标\r\n      // props.column         当前列的配置\r\n      // props.columnIndex    当前列下标\r\n      // props.$table         vxe实例，可以调用vxe内置方法\r\n      // props.target         JVXE实例，可以调用JVXE内置方法\r\n      // props.caseId         JVXE实例唯一ID\r\n      // props.scrolling      是否正在滚动\r\n      // props.triggerChange  触发change事件，用于更改slot的值\r\n      console.log(props, props)\r\n    },\r\n    getValuess({$table, target}) {\r\n      $table.validate().then((errMap) => {\r\n        // 校验通过\r\n        if (!errMap) {\r\n          // 获取所有数据\r\n          let tableData = target.getTableData()\r\n          console.log('当前保存的数据是：', tableData)\r\n          // 获取新增的数据\r\n          let newData = target.getNewData()\r\n          console.log('-- 新增的数据：', newData)\r\n          // 获取删除的数据\r\n          let deleteData = target.getDeleteData()\r\n          console.log('-- 删除的数据：', deleteData)\r\n\r\n        }\r\n      })\r\n    },\r\n    handleDelete(props) {\r\n      // 使用实例：删除当前操作的行\r\n      props.target.removeRows(props.row)\r\n    },\r\n\r\n\r\n    // 【整体保存】点击保存按钮时触发的事件\r\n    handleTableSave({$table, target}) {\r\n      console.log($table)\r\n      console.log(target)\r\n      if(this.formData.type == 'SynthesizeLogging'||this.formData.type=='WeekStatistics') {\r\n        // 校验整个表格\r\n        $table.validate().then((errMap) => {\r\n          // 校验通过\r\n          if (!errMap) {\r\n            // 获取所有数据\r\n            let tableData = target.getTableData()\r\n            console.log('当前保存的数据是：', tableData)\r\n            // 获取新增的数据\r\n            let newData = target.getNewData()\r\n            console.log('-- 新增的数据：', newData)\r\n            // 获取删除的数据\r\n            let deleteData = target.getDeleteData()\r\n            console.log('-- 删除的数据：', deleteData)\r\n            var obj = {\r\n              templateType: this.formData.template,\r\n              reportFromType: this.formData.type,\r\n              list:tableData\r\n            }\r\n            if(this.formData.type == 'SynthesizeLogging') {\r\n              obj.time = this.formData.createTime\r\n            }\r\n\r\n            // 【模拟保存】\r\n            this.loading = true\r\n            postAction(this.url.saveAll, obj).then(res => {\r\n              if (res.success) {\r\n                this.$message.success(`保存成功！`)\r\n              } else {\r\n                this.$message.warn(`保存失败：` + res.message)\r\n              }\r\n            }).finally(() => {\r\n              this.loading = false\r\n            })\r\n          }\r\n        })\r\n      }else {\r\n          this.$emit('getDatas')\r\n      }\r\n\r\n    },\r\n\r\n    // 触发单元格删除事件\r\n    handleTableRemove(event) {\r\n\r\n      // 把 event.deleteRows 传给后台进行删除（注意：这里不会传递前端逻辑新增的数据，因为不需要请求后台删除）\r\n      console.log('待删除的数据: ', event.deleteRows)\r\n      // 也可以只传ID，因为可以根据ID删除\r\n      let deleteIds = event.deleteRows.map(row => row.id)\r\n      console.log('待删除的数据ids: ', deleteIds)\r\n\r\n      // 模拟请求后台删除\r\n      this.loading = true\r\n      window.setTimeout(() => {\r\n        this.loading = false\r\n        this.$message.success('删除成功')\r\n        // 假设后台返回删除成功，必须要调用 confirmRemove() 方法，才会真正在表格里移除（会同时删除选中的逻辑新增的数据）\r\n        event.confirmRemove()\r\n      }, 1000)\r\n    },\r\n\r\n    // 单元格编辑完成之后触发的事件\r\n    handleEditClosed(event) {\r\n      let {$table, row, column} = event\r\n\r\n      let field = column.property\r\n      let cellValue = row[field]\r\n      // 判断单元格值是否被修改\r\n      if ($table.isUpdateByRow(row, field)) {\r\n        // 校验当前行\r\n        $table.validate(row).then((errMap) => {\r\n          // 校验通过\r\n          if (!errMap) {\r\n            // 【模拟保存】\r\n            let hideLoading = this.$message.loading(`正在保存\"${column.title}\"`, 0)\r\n            console.log('即时保存数据：', row)\r\n            putAction(this.url.saveRow, row).then(res => {\r\n              if (res.success) {\r\n                this.$message.success(`\"${column.title}\"保存成功！`)\r\n                // 局部更新单元格为已保存状态\r\n                $table.reloadRow(row, null, field)\r\n              } else {\r\n                this.$message.warn(`\"${column.title}\"保存失败：` + res.message)\r\n              }\r\n            }).finally(() => {\r\n              hideLoading()\r\n            })\r\n          }\r\n        })\r\n      }\r\n    },\r\n\r\n    // 当分页参数变化时触发的事件\r\n    handlePageChange(event) {\r\n      // 重新赋值\r\n      this.pagination.current = event.current\r\n      this.pagination.pageSize = event.pageSize\r\n      // 查询数据\r\n      this.loadData()\r\n    },\r\n\r\n    // 当选择的行变化时触发的事件\r\n    handleSelectRowChange(event) {\r\n      this.selectedRows = event.selectedRows\r\n    },\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}