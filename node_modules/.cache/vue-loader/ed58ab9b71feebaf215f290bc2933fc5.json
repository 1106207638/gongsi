{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\system\\modules\\GateWayRouteModal.vue?vue&type=style&index=0&id=594fb2ba&lang=less&scoped=true&","dependencies":[{"path":"D:\\vue\\src\\views\\system\\modules\\GateWayRouteModal.vue","mtime":1615948821495},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\dist\\cjs.js","mtime":1615952641773},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1615952643260},{"path":"D:\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1615952643158},{"path":"D:\\vue\\node_modules\\less-loader\\dist\\cjs.js","mtime":1615952670554},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRyYXdlci1ib290b20tYnV0dG9uIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgYm90dG9tOiAwOwogIHdpZHRoOiAxMDAlOwogIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZThlOGU4OwogIHBhZGRpbmc6IDEwcHggMTZweDsKICB0ZXh0LWFsaWduOiByaWdodDsKICBsZWZ0OiAwOwogIGJhY2tncm91bmQ6ICNmZmY7CiAgYm9yZGVyLXJhZGl1czogMCAwIDJweCAycHg7Cn0K"},{"version":3,"sources":["GateWayRouteModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GateWayRouteModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\r\n  <a-drawer\r\n    :title=\"title\"\r\n    :maskClosable=\"true\"\r\n    width=\"45%\"\r\n    placement=\"right\"\r\n    v-if=\"visible\"\r\n    :closable=\"true\"\r\n    @close=\"handleCancel\"\r\n    :visible=\"visible\"\r\n    style=\"overflow: auto;padding-bottom: 53px;\">\r\n    <a-form-model ref=\"form\" :layout=\"layout\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" :model=\"router\">\r\n      <a-form-model-item label=\"路由ID\">\r\n        <a-input v-model=\"router.routerId\" placeholder=\"路由唯一ID\"/>\r\n      </a-form-model-item>\r\n      <a-form-model-item label=\"路由名称\">\r\n        <a-input v-model=\"router.name\" placeholder=\"路由名称\"/>\r\n      </a-form-model-item>\r\n      <a-form-model-item label=\"路由URI\">\r\n        <a-input v-model=\"router.uri\" placeholder=\"路由URL\"/>\r\n      </a-form-model-item>\r\n      <a-form-model-item label=\"路由状态\" prop=\"status\">\r\n        <a-switch default-checked v-model=\"router.status\"/>\r\n      </a-form-model-item>\r\n\r\n      <a-form-model-item prop=\"predicates\" label=\"路由条件\">\r\n        <div v-for=\"(item,index) in router.predicates\">\r\n          <a-divider>{{item.name}}\r\n            <a-icon type=\"delete\" size=\"22\" @click=\"removePredicate(router,index)\"/>\r\n          </a-divider>\r\n          <div>\r\n            <template v-for=\"(tag, index) in item.args\">\r\n              <a-input v-if=\"index==currentTagIndex\" ref=\"input\" type=\"text\" size=\"small\"\r\n                       :style=\"{ width: '190px' }\"\r\n                       :value=\"tag\"\r\n                       @change=\"handleInputChange\" @blur=\"handleInputEditConfirm(item,tag,index)\"\r\n                       @keyup.enter=\"handleInputEditConfirm(item,tag,index)\"/>\r\n              <a-tag v-else :key=\"tag\" :closable=\"true\" @close=\"() => removeTag(item,tag)\" @click=\"editTag(tag,index)\">\r\n                {{ tag }}\r\n              </a-tag>\r\n            </template>\r\n            <a-input v-if=\"inputVisible&&index==currentNameIndex\" ref=\"input\" type=\"text\" size=\"small\"\r\n                     :style=\"{ width: '100px' }\"\r\n                     :value=\"inputValue\"\r\n                     @change=\"handleInputChange\" @blur=\"handleInputConfirm(item)\"\r\n                     @keyup.enter=\"handleInputConfirm(item)\"/>\r\n            <a-tag v-else style=\"background: #fff; borderStyle: dashed;\" @click=\"showInput(item,index)\">\r\n              <a-icon type=\"plus\"/>\r\n              新建{{item.name}}\r\n            </a-tag>\r\n          </div>\r\n        </div>\r\n        <p class=\"btn\" style=\"padding-top: 10px\">\r\n          <a-dropdown>\r\n            <a-menu slot=\"overlay\" @click=\"predicatesHandleMenuClick\">\r\n              <a-menu-item :key=\"item\" v-for=\"item in tagArray\">{{item}}</a-menu-item>\r\n            </a-menu>\r\n            <a-button type=\"dashed\" style=\"margin-left: 8px;width:100%\"> 添加路由条件\r\n              <a-icon type=\"down\"/>\r\n            </a-button>\r\n          </a-dropdown>\r\n        </p>\r\n      </a-form-model-item>\r\n      <a-form-model-item prop=\"predicates\" label=\"过滤器\">\r\n        <div v-for=\"(item,index) in router.filters\">\r\n          <a-divider>{{item.name}}\r\n            <a-icon type=\"delete\" size=\"22\" @click=\"removeFilter(router,index)\"/>\r\n          </a-divider>\r\n          <div v-for=\"(tag, index) in item.args\" :key=\"tag.key\">\r\n            <a-input v-model=\"tag.key\" placeholder=\"参数键\" style=\"width: 45%; margin-right: 8px\"/>\r\n            <a-input v-model=\"tag.value\" placeholder=\"参数值\" style=\"width: 40%; margin-right: 8px\"/>\r\n            <a-icon class=\"dynamic-delete-button\" type=\"minus-circle-o\" @click=\"removeFilterParams(item,index)\"/>\r\n          </div>\r\n          <a-button type=\"dashed\" style=\"margin-left:28%;width: 30%\" size=\"small\" @click=\"addFilterParams(item)\">\r\n            <a-icon type=\"plus\"/>\r\n            添加参数\r\n          </a-button>\r\n        </div>\r\n        <p class=\"btn\" style=\"padding-top: 10px\">\r\n          <a-dropdown>\r\n            <a-menu slot=\"overlay\" @click=\"filterHandleMenuClick\">\r\n              <a-menu-item :key=\"item.key\" :name=\"item.name\" v-for=\"item in filterArray\">{{item.name}}</a-menu-item>\r\n            </a-menu>\r\n            <a-button type=\"dashed\" style=\"margin-left: 8px;width:100%\"> 添加过滤器\r\n              <a-icon type=\"down\"/>\r\n            </a-button>\r\n          </a-dropdown>\r\n        </p>\r\n      </a-form-model-item>\r\n      <a-row :style=\"{textAlign:'right'}\" class=\"drawer-bootom-button\">\r\n        <a-button :style=\"{marginRight: '8px'}\" @click=\"handleCancel\">\r\n          关闭\r\n        </a-button>\r\n        <a-button @click=\"handleSubmit\" type=\"primary\">确定</a-button>\r\n      </a-row>\r\n    </a-form-model>\r\n\r\n  </a-drawer>\r\n\r\n</template>\r\n<script>\r\n\r\n  import { postAction } from '@/api/manage'\r\n\r\n  export default {\r\n    name: 'GateWayRouteModal',\r\n    components: {},\r\n    data() {\r\n      return {\r\n        layout: 'horizontal',\r\n        labelCol: { span: 3 },\r\n        wrapperCol: { span: 14 },\r\n        currentNameIndex: 0,\r\n        currentTagIndex:-1,\r\n        predicates: {},\r\n        filterArray: [{ key: 0, name: '熔断器' }, { key: 1, name: '限流过滤器' }],\r\n        tagArray: ['Path', 'Host', 'Cookie', 'Header', 'Method', 'Query', 'After', 'Before', 'Between', 'RemoteAddr'],\r\n        inputVisible: false,\r\n        inputValue: '',\r\n        url: {\r\n          update: '/sys/gatewayRoute/updateAll',\r\n          clear: '/sys/gatewayRoute/clearRedis'\r\n        },\r\n        router: this.getRouter(),\r\n        title: '路由编辑',\r\n        visible: false,\r\n        loading: false\r\n      }\r\n    },\r\n    methods: {\r\n      getRouter() {\r\n        return {\r\n          routerId: '',\r\n          name: '',\r\n          uri: '',\r\n          predicates: [],\r\n          filters: []\r\n        }\r\n      },\r\n      show(router) {\r\n        if (router) {\r\n          router.status=Boolean(router.status)\r\n          this.router = router\r\n        } else {\r\n          this.router = this.getRouter()\r\n          this.inputValue=''\r\n        }\r\n        this.visible = true\r\n        this.currentTagIndex=-1\r\n        this.currentNameIndex=-1\r\n      },\r\n      close() {\r\n        this.reset()\r\n        this.$emit('close')\r\n        this.$refs['form'].resetFields()\r\n        this.visible = false\r\n      },\r\n      //删除路由条件配置项\r\n      removeTag(item, removedTag) {\r\n        const tags = item.args.filter(tag => tag !== removedTag)\r\n        item.args = tags\r\n      },\r\n      //添加路由选项\r\n      predicatesHandleMenuClick(e) {\r\n        this.router.predicates.push({\r\n          args: [],\r\n          name: e.key\r\n        })\r\n      },\r\n      editTag(tag,index){\r\n        this.currentTagIndex=index\r\n      },\r\n      //显示输入框\r\n      showInput(item, index) {\r\n        this.inputVisible = true\r\n        this.currentNameIndex = index\r\n      },\r\n      //路由选项输入框失去焦点事件\r\n      handleInputChange(e) {\r\n        this.inputValue = e.target.value\r\n      },\r\n      //删除路由条件\r\n      removePredicate(item, index) {\r\n        item.predicates.splice(index, 1)\r\n      },\r\n      //删除过滤器参数\r\n      removeFilterParams(item, index) {\r\n        item.args.splice(index, 1)\r\n      },\r\n      //删除过滤器\r\n      removeFilter(item, index) {\r\n        item.filters.splice(index, 1)\r\n      },\r\n      //添加过滤器参数\r\n      addFilterParams(item) {\r\n        item.args.push({\r\n          key: 'key' + item.args.length + 1,\r\n          value: ''\r\n        })\r\n      },\r\n      //过滤器添加事件\r\n      filterHandleMenuClick(e) {\r\n        if (e.key == 0) {\r\n          this.router.filters.push({\r\n            args: [  {\r\n              key: 'name',\r\n              value: 'default'\r\n            },{\r\n              key: 'fallbackUri',\r\n              value: 'forward:/fallback'\r\n            }],\r\n            name:'Hystrix',\r\n            title: this.filterArray[0].name\r\n          })\r\n        }\r\n        if (e.key == 1) {\r\n          this.router.filters.push({\r\n            args: [ {\r\n              key: 'key-resolver',\r\n              value: '#{@ipKeyResolver}'\r\n            }, {\r\n              key: 'redis-rate-limiter.replenishRate',\r\n              value: 20\r\n            }, {\r\n              key: 'redis-rate-limiter.burstCapacity',\r\n              value: 20\r\n            }],\r\n            name:\"RequestRateLimiter\",\r\n            title: this.filterArray[1].name\r\n          })\r\n        }\r\n      },\r\n      //输入框确认\r\n      handleInputConfirm(item) {\r\n        const inputValue = this.inputValue\r\n        let tags = item.args\r\n        if (inputValue && tags.indexOf(inputValue) === -1) {\r\n          item.args = [...tags, inputValue]\r\n        }\r\n        console.log(tags)\r\n        Object.assign(this, {\r\n          tags,\r\n          inputVisible: false,\r\n          inputValue: ''\r\n        })\r\n        this.currentTagIndex=-1\r\n      },\r\n      //输入框确认\r\n      handleInputEditConfirm(item,tag,index) {\r\n        if(this.inputValue)\r\n        {\r\n          const inputValue = this.inputValue\r\n          item.args[index]=inputValue\r\n        }\r\n        this.currentTagIndex=-1\r\n\r\n      },\r\n      reset() {\r\n        this.expandedKeysss = []\r\n        this.checkedKeys = []\r\n        this.defaultCheckedKeys = []\r\n        this.loading = false\r\n      },\r\n      //关闭弹窗\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n      //提交路由\r\n      handleSubmit() {\r\n        let { predicates, filters, ...other } = this.router\r\n        let router = other\r\n        router.predicates = JSON.stringify(this.router.predicates)\r\n        router.filters = JSON.stringify(this.router.filters)\r\n        postAction(this.url.update, {\r\n          router\r\n        }).then(res => {\r\n          if (res.success) {\r\n            this.close()\r\n            this.$emit('ok')\r\n            this.$message.success(res.message)\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n        })\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n</script>\r\n<style lang=\"less\" scoped>\r\n  .drawer-bootom-button {\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    border-top: 1px solid #e8e8e8;\r\n    padding: 10px 16px;\r\n    text-align: right;\r\n    left: 0;\r\n    background: #fff;\r\n    border-radius: 0 0 2px 2px;\r\n  }\r\n</style>"]}]}