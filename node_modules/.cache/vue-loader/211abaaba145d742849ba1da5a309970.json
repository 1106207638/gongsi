{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\zbtest\\zxtb.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\zbtest\\zxtb.vue","mtime":1615948822838},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgaW5pdERpY3RPcHRpb25zLAogIGZpbHRlckRpY3RUZXh0LAogIGZpbHRlckRpY3RUZXh0QnlDYWNoZQp9IGZyb20gJ0AvY29tcG9uZW50cy9kaWN0L0pEaWN0U2VsZWN0VXRpbCcKaW1wb3J0IHtKZWVjZ0xpc3RNaXhpbn0gZnJvbSAnQC9taXhpbnMvSmVlY2dMaXN0TWl4aW4nCmltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQge2ZpbHRlck9ian0gZnJvbSAnQC91dGlscy91dGlsJzsKaW1wb3J0IEpEZW1vIGZyb20gJy4vSkRlbW8udnVlJzsKaW1wb3J0IFVwbG9hZERlbW8gZnJvbSAnLi91cGxvYWREZW1vLnZ1ZSc7CmltcG9ydCB7Z2V0QWN0aW9uLHBvc3RBY3Rpb259IGZyb20gIkBhcGkvbWFuYWdlIjsKaW1wb3J0IHtKVlhFVHlwZXN9IGZyb20gIkBjb21wL2plZWNnL0pWeGVUYWJsZSI7CmltcG9ydCB7SkVkaXRhYmxlVGFibGVNaXhpbn0gZnJvbSAnQC9taXhpbnMvSkVkaXRhYmxlVGFibGVNaXhpbicKaW1wb3J0IHtGb3JtVHlwZXMsIGdldFJlZlByb21pc2V9IGZyb20gJ0AvdXRpbHMvSkVkaXRhYmxlVGFibGVVdGlsJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJKZWVjZ0RlbW9MaXN0IiwKICBtaXhpbnM6IFtKZWVjZ0xpc3RNaXhpbiwgSkVkaXRhYmxlVGFibGVNaXhpbl0sCiAgY29tcG9uZW50czogewogICAgSkRlbW8sCiAgICBVcGxvYWREZW1vCiAgfSwKICB3YXRjaDogewogICAgImNvbHVtbnNzIjogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiAodmFsLCBvbGRWYWwpIHsKICAgICAgICB0aGlzLmNvbHVtbnNzID0gdmFsCiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbXBvcnRCdG46ZmFsc2UsCiAgICAgIGRpc2FibGVNaXhpbkNyZWF0ZWQ6IHRydWUsCiAgICAgIC8vIOaooeadv+WIl+ihqAogICAgICBqZGVtb3Nob3c6IGZhbHNlLAogICAgICB0ZW1wbGF0ZUxpc3Q6IFtdLAogICAgICBpc3R5cGU6IHRydWUsCiAgICAgIC8vIOmAieaLqeWMuuWfnwogICAgICBmb3JtRGF0YTogewogICAgICAgIGNyZWF0ZVRpbWU6ICcnLC8v5pe26Ze0CiAgICAgICAgdHlwZTogJ1N5bnRoZXNpemVMb2dnaW5nJywvL+mHh+aKpeexu+WeiwogICAgICAgIHRlbXBsYXRlOiAnJy8v5qih5p2/CiAgICAgIH0sCgogICAgICB0eXBlb3B0aW9uOiBbewogICAgICAgIG5hbWU6ICfnu7zlkIjml6Xlv5cnLAogICAgICAgIHZhbHVlOiAwCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn5omn5Yuk5pWw5o2uJywKICAgICAgICB2YWx1ZTogMQogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ+aJp+WLpOaKpeaWhycsCiAgICAgICAgdmFsdWU6IDIKICAgICAgfSwgewogICAgICAgIG5hbWU6ICflhpvlp5TloavmiqXooagnLAogICAgICAgIHZhbHVlOiAzCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn5Yab5aeU57O757uf6KGoJywKICAgICAgICB2YWx1ZTogNAogICAgICB9XSwKICAgICAgc3R5cGVvcHRpb246IFt7CiAgICAgICAgbmFtZTogJ+aooeWei+S4gCcsCiAgICAgICAgdmFsdWU6IDAKICAgICAgfSwgewogICAgICAgIG5hbWU6ICfmqKHlnovkuownLAogICAgICAgIHZhbHVlOiAxCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn5qih5Z6L5LiJJywKICAgICAgICB2YWx1ZTogMgogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ+aooeWei+WbmycsCiAgICAgICAgdmFsdWU6IDMKICAgICAgfSwgewogICAgICAgIG5hbWU6ICfmqKHlnovkupQnLAogICAgICAgIHZhbHVlOiA0CiAgICAgIH1dLAogICAgICAvL+WIl+WumuS5iQogICAgICB1cmw6IHsKICAgICAgICBsaXN0OiAiL3NvdXRoVGFibGUvcXVlcnlUYWJsZURhdGEiLCAvL+aVsOaNrgogICAgICAgIHN0cnVjdHVyZTogJy9zb3V0aFRhYmxlL3F1ZXJ5VGFibGVTdHJ1Y3R1cmUnLC8v57uT5p6ECiAgICAgICAgZGVsZXRlOiAiL3Rlc3QvamVlY2dEZW1vL2RlbGV0ZSIsCiAgICAgICAgZGVsZXRlQmF0Y2g6ICIvdGVzdC9qZWVjZ0RlbW8vZGVsZXRlQmF0Y2giLAogICAgICAgIGV4cG9ydFhsc1VybDogIi90ZXN0L2plZWNnRGVtby9leHBvcnRYbHMiLAogICAgICAgIHRlbXBsYXRlVXJsOiAnL3JlcG9ydEZvcm1Nb2RlbC9xdWVyeUFsbE1vZGVsJywKICAgICAgICB1c2VySW5mbzogJy9zb3V0aFRhYmxlL3F1ZXJ5VXNlckluZm8nLC8v5Z+65pys5L+h5oGvCiAgICAgICAgc2F2ZTogJy9zb3V0aFRhYmxlL3JlcG9ydEZyb21EYXRhU2F2ZScKICAgICAgfSwKICAgICAgaXNzaG93bGlzdDogdHJ1ZSwKICAgICAgLy8g5pWw5o2u5rqQ77yM5o6n5Yi26KGo5qC855qE5pWw5o2uCiAgICAgIGRhdGFTb3VyY2U6IFtdLAogICAgICAvLyDliJfphY3nva7vvIzmjqfliLbooajmoLzmmL7npLrnmoTliJcKICAgICAgY29sdW1uczogW10sCiAgICAgIGNvbHVtbnNzOiBbXSwKICAgICAgdXNlckluZm86IG51bGwsCiAgICAgIHJlZktleXM6IFsncmVmMCcsICdyZWYxJ10sCiAgICAgIGRhdGVEaXNhYmxlOmZhbHNlLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgbG9hZERhdGFVcGxvYWQoYXJyKSB7CiAgICAgIHRoaXMuamRlbW9zaG93ID0gdHJ1ZQogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykgewogICAgICAgIHRoaXMuY29sdW1uc3NbaV0uZGF0YVNvdXJjZSA9IGFycltpXQogICAgICB9CgogICAgICB0aGlzLmpkZW1vc2hvdyA9IGZhbHNlCiAgICB9LAogICAgZ2V0RGF0YXMoKSB7CiAgICAgIHRoaXMuZ2V0RGF0YXNzKCkudGhlbih0YWJsZXMgPT4gewogICAgICAgIHZhciBhcnIgPSBbXQogICAgICAgIGNvbnNvbGUubG9nKHRhYmxlcykKICAgICAgICBmb3IodmFyIGkgPSAwIDsgaSA8IHRhYmxlcy5sZW5ndGg7aSsrKSB7CiAgICAgICAgICBhcnIucHVzaCh0YWJsZXNbaV1bMF0udmFsaWRBbGxFdmVudCgpKQogICAgICAgIH0KICAgICAgICBmb3IodmFyIGkgPSAwIDtpPCBhcnIubGVuZ3RoO2krKykgewogICAgICAgICAgZm9yKHZhciBqICA9MDtqPCBhcnJbaV0ubGVuZ3RoO2orKykgewogICAgICAgICAgICBpZihhcnJbaV1bal0ucGFyZW50X2lkKSB7CiAgICAgICAgICAgICAgdmFyIGlkID0gYXJyW2ldW2pdLnBhcmVudF9pZAogICAgICAgICAgICB9ZWxzZSB7CiAgICAgICAgICAgICAgdmFyIGlkID0gJycKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBsZXQgb2JqZWN0ID0gewogICAgICAgICAgaWQ6ImlkIiwKICAgICAgICAgIGxpc3Q6W1tdLFtdXQogICAgICAgIH0KICAgICAgICAgdmFyIG9iaiA9IHsKICAgICAgICAgICAgICB0ZW1wbGF0ZVR5cGU6IHRoaXMuZm9ybURhdGEudGVtcGxhdGUsCiAgICAgICAgICAgICAgcmVwb3J0RnJvbVR5cGU6IHRoaXMuZm9ybURhdGEudHlwZSwKICAgICAgICAgICAgICBsaXN0OmFyciwKICAgICAgICAgICAgICBpZAogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIOOAkOaooeaLn+S/neWtmOOAkQogICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlCiAgICAgICAgICAgIHBvc3RBY3Rpb24odGhpcy51cmwuc2F2ZSwgb2JqKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgaWYgKHJlcy5zdWNjZXNzKSB7CiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoYOS/neWtmOaIkOWKn++8gWApCiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uud2Fybihg5L+d5a2Y5aSx6LSl77yaYCArIHJlcy5tZXNzYWdlKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkuZmluYWxseSgoKSA9PiB7CiAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UKICAgICAgICAgICAgfSkKICAgICAgfSkKICAgIH0sCiAgICBnZXREYXRhc3MoKSB7CiAgICAgIHZhciBhcnIgPSBbJ3JlZjAnLCAncmVmMSddCiAgICAgIGxldCB2YWx1ZXMgPSBhcnIubWFwKGtleSA9PiBnZXRSZWZQcm9taXNlKHRoaXMsIGtleSkpCiAgICAgIHJldHVybiBQcm9taXNlLmFsbCh2YWx1ZXMpCiAgICB9CiAgICAsCiAgICBjYWxsYmFjaygpIHsKICAgIH0KICAgICwKICAgIC8vIOiOt+WPluaooeadv+exu+WeiwogICAgZ2V0VGVtcGxhdGVMaXN0KCkgewogICAgICB2YXIgZm9ybURhdGEgPSB7fQogICAgICBnZXRBY3Rpb24odGhpcy51cmwudGVtcGxhdGVVcmwsIGZvcm1EYXRhKS50aGVuKHJlcyA9PiB7CiAgICAgICAgaWYgKHJlcy5zdWNjZXNzKSB7CiAgICAgICAgICAvLyDlsIbmn6Xor6LnmoTmlbDmja7otYvlgLznu5kgZGF0YVNvdXJjZQogICAgICAgICAgdGhpcy50ZW1wbGF0ZUxpc3QgPSByZXMucmVzdWx0CiAgICAgICAgICAvLyDph43nva7pgInmi6kKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kZXJyb3Ioe3RpdGxlOiAn5Li76KGo5p+l6K+i5aSx6LSlJywgY29udGVudDogcmVzLm1lc3NhZ2V9KQogICAgICAgIH0KICAgICAgfSkuZmluYWxseSgoKSA9PiB7CiAgICAgICAgLy8g6L+Z6YeM5piv5peg6K665oiQ5Yqf5oiW5aSx6LSl6YO95Lya5omn6KGM55qE5pa55rOV77yM5Zyo6L+Z6YeM5YWz6ZetbG9hZGluZwogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlCiAgICAgIH0pCiAgICAgIGdldEFjdGlvbih0aGlzLnVybC51c2VySW5mbywgZm9ybURhdGEpLnRoZW4ocmVzID0+IHsKICAgICAgICBpZiAocmVzLnN1Y2Nlc3MpIHsKICAgICAgICAgIC8vIOWwhuafpeivoueahOaVsOaNrui1i+WAvOe7mSBkYXRhU291cmNlCiAgICAgICAgICB0aGlzLnVzZXJJbmZvID0gcmVzLnJlc3VsdAogICAgICAgICAgLy8g6YeN572u6YCJ5oupCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJGVycm9yKHt0aXRsZTogJ+S4u+ihqOafpeivouWksei0pScsIGNvbnRlbnQ6IHJlcy5tZXNzYWdlfSkKICAgICAgICB9CiAgICAgIH0pLmZpbmFsbHkoKCkgPT4gewogICAgICAgIC8vIOi/memHjOaYr+aXoOiuuuaIkOWKn+aIluWksei0pemDveS8muaJp+ihjOeahOaWueazle+8jOWcqOi/memHjOWFs+mXrWxvYWRpbmcKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgICB9KQogICAgfQogICAgLAogICAgLy8g6YCJ5oup5pel5pyf55qE5Zue6LCDCiAgICBvbkNoYW5nZShkYXRlLCBkYXRlU3RyaW5nKSB7CiAgICAgIHRoaXMuZm9ybURhdGEuY3JlYXRlVGltZSA9IGRhdGVTdHJpbmcKICAgICAgdmFyIGUgPSB0aGlzLmZvcm1EYXRhLnR5cGUKICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdmb3JtRGF0YScsIEpTT04uc3RyaW5naWZ5KHRoaXMuZm9ybURhdGEpKQogICAgICBpZiAoZSA9PSAnU3ludGhlc2l6ZUxvZ2dpbmcnKSB7CiAgICAgICAgdGhpcy5sb2FkRGF0YSgpCiAgICAgIH0gZWxzZSBpZiAoZSA9PSAnRHV0eURhdGEnKSB7CiAgICAgIH0gZWxzZSBpZiAoZSA9PSAnV2Vla1N0YXRpc3RpY3MnKSB7CgogICAgICB9CiAgICB9CiAgICAsCiAgICAvLyDpgInmi6nnsbvlnosKICAgIGNoYW5nZVR5cGUoZSkgewogICAgICB0aGlzLmpkZW1vc2hvdyA9IGZhbHNlCiAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoKTsKICAgICAgdmFyIHNlcGVyYXRvcjEgPSAiLSI7CiAgICAgIHZhciB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOwogICAgICB2YXIgbW9udGggPSBkYXRlLmdldE1vbnRoKCkgKyAxOwogICAgICB2YXIgc3RyRGF0ZSA9IGRhdGUuZ2V0RGF0ZSgpOwogICAgICBpZiAobW9udGggPj0gMSAmJiBtb250aCA8PSA5KSB7CiAgICAgICAgbW9udGggPSAiMCIgKyBtb250aDsKICAgICAgfQogICAgICBpZiAoc3RyRGF0ZSA+PSAwICYmIHN0ckRhdGUgPD0gOSkgewogICAgICAgIHN0ckRhdGUgPSAiMCIgKyBzdHJEYXRlOwogICAgICB9CiAgICAgIHZhciBjdXJyZW50ZGF0ZSA9IHllYXIgKyBzZXBlcmF0b3IxICsgbW9udGggKyBzZXBlcmF0b3IxICsgc3RyRGF0ZTsKICAgICAgY29uc29sZS5sb2coZSkKICAgICAgaWYgKGUgPT0gJ1N5bnRoZXNpemVMb2dnaW5nJykgewogICAgICAgIHRoaXMuaXN0eXBlID0gdHJ1ZQogICAgICAgIHRoaXMuZm9ybURhdGEudGVtcGxhdGUgPSAnJwogICAgICAgIHRoaXMuZGF0ZURpc2FibGUgPSBmYWxzZQogICAgICAgIHRoaXMuaW1wb3J0QnRuID0gZmFsc2UKICAgICAgfSBlbHNlIGlmIChlID09ICdEdXR5RGF0YScpIHsKICAgICAgICB0aGlzLmZvcm1EYXRhLnRlbXBsYXRlID0gdGhpcy50ZW1wbGF0ZUxpc3RbMF0uaGVhZElkCiAgICAgICAgdGhpcy5pc3R5cGUgPSBmYWxzZQogICAgICAgIHRoaXMuZm9ybURhdGEuY3JlYXRlVGltZSA9IGN1cnJlbnRkYXRlCiAgICAgICAgdGhpcy5kYXRlRGlzYWJsZSA9IHRydWUKICAgICAgfSBlbHNlIGlmIChlID09ICdXZWVrU3RhdGlzdGljcycpIHsKICAgICAgICB0aGlzLmZvcm1EYXRhLnRlbXBsYXRlID0gJycKICAgICAgICB0aGlzLmlzdHlwZSA9IHRydWUKICAgICAgICB0aGlzLmZvcm1EYXRhLmNyZWF0ZVRpbWUgPSBjdXJyZW50ZGF0ZQogICAgICAgIHRoaXMuZGF0ZURpc2FibGUgPSB0cnVlCiAgICAgICAgdGhpcy5pbXBvcnRCdG4gPSB0cnVlCgogICAgICB9CiAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnZm9ybURhdGEnLCBKU09OLnN0cmluZ2lmeSh0aGlzLmZvcm1EYXRhKSkKICAgICAgdGhpcy5nZXRTdHJ1Y3R1cmUoKQogICAgICB0aGlzLmxvYWREYXRhKCkKICAgIH0KICAgICwKICAgIC8vIOmAieaLqeaooeadvwogICAgdGVtcGxhdGVDaGFuZ2UoZSkgewogICAgICB0aGlzLmpkZW1vc2hvdyA9IHRydWUKICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCdmb3JtRGF0YScsIEpTT04uc3RyaW5naWZ5KHRoaXMuZm9ybURhdGEpKQogICAgICB0aGlzLmdldFN0cnVjdHVyZSgpCiAgICAgIC8vIOWPkemAgeivt+axguWktOmDqO+8jOivt+axguaVsOaNrueahOivt+axggogICAgfQogICAgLAogICAgY2hhbmdlVXBsb2FkTWV0aG9kKGUpIHsKICAgICAgY29uc29sZS5sb2coZSkKICAgIH0KICAgICwKICAgIC8vIOafpeivoue7k+aehO+8iHRhYmxl55qE5aS06YOo77yJCiAgICBnZXRTdHJ1Y3R1cmUoKSB7CiAgICAgIC8vIOWwgeijheafpeivouadoeS7tgogICAgICBsZXQgZm9ybURhdGEgPSB7CiAgICAgICAgcmVwb3J0RnJvbVR5cGU6IHRoaXMuZm9ybURhdGEudHlwZSwKICAgICAgICB0ZW1wbGF0ZVR5cGU6IHRoaXMuZm9ybURhdGEudGVtcGxhdGUKICAgICAgfQogICAgICAvLyDosIPnlKjmn6Xor6LmlbDmja7mjqXlj6MKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZQogICAgICBnZXRBY3Rpb24odGhpcy51cmwuc3RydWN0dXJlLCBmb3JtRGF0YSkudGhlbihyZXMgPT4gewogICAgICAgIGlmIChyZXMuc3VjY2VzcykgewogICAgICAgICAgaWYgKHRoaXMuZm9ybURhdGEudHlwZSAhPSAnRHV0eURhdGEnKSB7CiAgICAgICAgICAgIHZhciByZXN1bHQgPSByZXMucmVzdWx0CiAgICAgICAgICAgIC8vIOWwhuafpeivoueahOaVsOaNrui1i+WAvOe7mSBkYXRhU291cmNlCiAgICAgICAgICAgIHZhciBhcnIgPSBbXQogICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdC5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgIGlmIChyZXN1bHRbaV0uaXNTaG93Rm9ybSA9PSAxKSB7CiAgICAgICAgICAgICAgICBhcnIucHVzaCh7CiAgICAgICAgICAgICAgICAgIGtleTogcmVzdWx0W2ldLmRiRmllbGROYW1lLAogICAgICAgICAgICAgICAgICB0aXRsZTogcmVzdWx0W2ldLmRiRmllbGRUeHQsCiAgICAgICAgICAgICAgICAgIHR5cGU6IEpWWEVUeXBlc1tyZXN1bHRbaV0uZmllbGRTaG93VHlwZV0sCiAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogcmVzdWx0W2ldLmZpZWxkRGVmYXVsdFZhbHVlCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmpkZW1vc2hvdyA9IHRydWUKICAgICAgICAgICAgdGhpcy5jb2x1bW5zID0gYXJyCiAgICAgICAgICAgIHRoaXMuY29sdW1uc3MgPSBbXQogICAgICAgICAgfSBlbHNlIHsvL+aJp+WLpOaVsOaNrgogICAgICAgICAgICB2YXIgcmVzdWx0ID0gcmVzLnJlc3VsdAogICAgICAgICAgICB2YXIgY29sdW1ucyA9IFtdCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzdWx0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgdmFyIGFyciA9IFtdCiAgICAgICAgICAgICAgdmFyIG9iaiA9IHsKICAgICAgICAgICAgICAgIG5hbWU6IHJlc3VsdFtpXS5zaGVldE5hbWUsCiAgICAgICAgICAgICAgICBkYXRhU291cmNlOltdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHZhciByZXN1bHRzID0gcmVzdWx0W2ldLmZpZWxkcwogICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgcmVzdWx0cy5sZW5ndGg7IGorKykgewogICAgICAgICAgICAgICAgaWYgKHJlc3VsdHNbal0uaXNTaG93Rm9ybSA9PSAxKSB7CiAgICAgICAgICAgICAgICAgIGFyci5wdXNoKHsKICAgICAgICAgICAgICAgICAgICBrZXk6IHJlc3VsdHNbal0uZGJGaWVsZE5hbWUsCiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHJlc3VsdHNbal0uZGJGaWVsZFR4dCwKICAgICAgICAgICAgICAgICAgICB0eXBlOiBKVlhFVHlwZXNbcmVzdWx0c1tqXS5maWVsZFNob3dUeXBlXSwKICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU6IHJlc3VsdHNbal0uZmllbGREZWZhdWx0VmFsdWUKICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgb2JqLmNvbHVtbnMgPSBhcnIKICAgICAgICAgICAgICBjb2x1bW5zLnB1c2gob2JqKQogICAgICAgICAgICB9CiAgICAgICAgICAgICAgdGhpcy5jb2x1bW5zcyA9IGNvbHVtbnMKICAgICAgICAgICAgICB0aGlzLmpkZW1vc2hvdyA9IGZhbHNlCiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJGVycm9yKHt0aXRsZTogJ+S4u+ihqOafpeivouWksei0pScsIGNvbnRlbnQ6IHJlcy5tZXNzYWdlfSkKICAgICAgICB9CiAgICAgIH0pLmZpbmFsbHkoKCkgPT4gewogICAgICAgIC8vIOi/memHjOaYr+aXoOiuuuaIkOWKn+aIluWksei0pemDveS8muaJp+ihjOeahOaWueazle+8jOWcqOi/memHjOWFs+mXrWxvYWRpbmcKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgICB9KQogICAgfQogICAgLAogICAgLy8g5p+l6K+i5pWw5o2uCiAgICBsb2FkRGF0YSgpIHsKICAgICAgLy8g5bCB6KOF5p+l6K+i5p2h5Lu2CiAgICAgIGxldCBmb3JtRGF0YSA9IHsKICAgICAgICBjcmVhdGVUaW1lOiB0aGlzLmZvcm1EYXRhLmNyZWF0ZVRpbWUKICAgICAgfQogICAgICAvLyDosIPnlKjmn6Xor6LmlbDmja7mjqXlj6MKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZQogICAgICBpZiAodGhpcy5mb3JtRGF0YS50eXBlID09ICdTeW50aGVzaXplTG9nZ2luZycpIHsKICAgICAgICBnZXRBY3Rpb24odGhpcy51cmwubGlzdCwgZm9ybURhdGEpLnRoZW4ocmVzID0+IHsKICAgICAgICAgIGlmIChyZXMuc3VjY2VzcykgewogICAgICAgICAgICAvLyDlsIbmn6Xor6LnmoTmlbDmja7otYvlgLznu5kgZGF0YVNvdXJjZQogICAgICAgICAgICB0aGlzLmRhdGFTb3VyY2UgPSByZXMucmVzdWx0CiAgICAgICAgICAgIC8vIOmHjee9rumAieaLqQogICAgICAgICAgICB0aGlzLnNlbGVjdGVkUm93cyA9IFtdCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLiRlcnJvcih7dGl0bGU6ICfkuLvooajmn6Xor6LlpLHotKUnLCBjb250ZW50OiByZXMubWVzc2FnZX0pCiAgICAgICAgICB9CiAgICAgICAgfSkuZmluYWxseSgoKSA9PiB7CiAgICAgICAgICAvLyDov5nph4zmmK/ml6DorrrmiJDlip/miJblpLHotKXpg73kvJrmiafooYznmoTmlrnms5XvvIzlnKjov5nph4zlhbPpl61sb2FkaW5nCiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgICAgIH0pCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5kYXRhU291cmNlID0gW10KICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHZhciBkYXRlID0gbmV3IERhdGUoKTsKICAgIHZhciBzZXBlcmF0b3IxID0gIi0iOwogICAgdmFyIHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7CiAgICB2YXIgbW9udGggPSBkYXRlLmdldE1vbnRoKCkgKyAxOwogICAgdmFyIHN0ckRhdGUgPSBkYXRlLmdldERhdGUoKTsKICAgIGlmIChtb250aCA+PSAxICYmIG1vbnRoIDw9IDkpIHsKICAgICAgbW9udGggPSAiMCIgKyBtb250aDsKICAgIH0KICAgIGlmIChzdHJEYXRlID49IDAgJiYgc3RyRGF0ZSA8PSA5KSB7CiAgICAgIHN0ckRhdGUgPSAiMCIgKyBzdHJEYXRlOwogICAgfQogICAgdmFyIGN1cnJlbnRkYXRlID0geWVhciArIHNlcGVyYXRvcjEgKyBtb250aCArIHNlcGVyYXRvcjEgKyBzdHJEYXRlOwogICAgdGhpcy5mb3JtRGF0YS5jcmVhdGVUaW1lID0gY3VycmVudGRhdGUKICB9LAogIG1vdW50ZWQoKSB7CiAgICAvLyDojrflj5blpLTpg6jmlbDmja4KICAgIHRoaXMuZ2V0U3RydWN0dXJlKCkKICAgIC8vIOiOt+WPluaVsOaNru+8iGxpc3TvvIkKICAgIHRoaXMubG9hZERhdGEoKQogICAgLy8g6I635Y+W5qih5p2/5YiX6KGoCiAgICB0aGlzLmdldFRlbXBsYXRlTGlzdCgpCiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2Zvcm1EYXRhJywgSlNPTi5zdHJpbmdpZnkodGhpcy5mb3JtRGF0YSkpCiAgfQp9Cg=="},{"version":3,"sources":["zxtb.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"zxtb.vue","sourceRoot":"src/views/zbtest","sourcesContent":["<template>\n  <a-card :bordered=\"false\" v-if=\"columns\">\n    <!-- 查询区域 -->\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\" @keyup.enter.native=\"searchQuery\">\n        <a-row :gutter=\"24\">\n          <a-col :xl=\"3\" :lg=\"6\" :md=\"8\" :sm=\"24\">\n            <a-form-item label=\"席位\">\n              <!-- <j-input placeholder=\"请输入名称模糊查询\" v-model=\"queryParam.name\"></j-input> -->\n              {{ userInfo.departName }}\n            </a-form-item>\n          </a-col>\n          <a-col :xl=\"3\" :lg=\"6\" :md=\"8\" :sm=\"24\">\n            <a-form-item label=\"报告人\">\n              <!-- <a-input placeholder=\"请输入名称查询\" v-model=\"queryParam.age\"></a-input>-->\n              <!-- <a-input placeholder=\"最小年龄\" type=\"ge\" v-model=\"queryParam.age_begin\" style=\"width:calc(50% - 15px);\"></a-input>\n              <span class=\"group-query-strig\">~</span>\n              <a-input placeholder=\"最大年龄\" type=\"le\" v-model=\"queryParam.age_end\" style=\"width:calc(50% - 15px);\"></a-input> -->\n              {{ userInfo.realName }}\n            </a-form-item>\n          </a-col>\n          <a-col :xl=\"6\" :lg=\"6\" :md=\"8\" :sm=\"24\">\n            <a-form-item label=\"报告日期\">\n              <a-date-picker v-model=\"formData.createTime\"\n                             :disabled=\"dateDisable\"\n                             format=\"YYYY-MM-DD\"\n                             @change=\"onChange\"\n              />\n            </a-form-item>\n          </a-col>\n          <a-col :xl=\"6\" :lg=\"6\" :md=\"8\" :sm=\"24\">\n            <a-form-item label=\"采报类型\">\n              <j-dict-select-tag @input=\"changeType\" v-model=\"formData.type\" :moren=\"false\" placeholder=\"请选择采报类型\"\n                                 dictCode=\"ReportType\"/>\n\n            </a-form-item>\n          </a-col>\n          <a-col :xl=\"6\" :lg=\"6\" :md=\"8\" :sm=\"24\">\n            <a-form-item label=\"采报模型\">\n              <a-select @change=\"templateChange\" v-model=\"formData.template\" :disabled=\"istype\"\n                        placeholder=\"请选择采报模型\">\n                <a-select-option :value=\"item.headId\" :key=\"index\" v-for=\"(item,index) in templateList\">\n                  {{ item.headName }}\n                </a-select-option>\n              </a-select>\n            </a-form-item>\n          </a-col>\n          <!-- <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\n            <a-col :xl=\"4\" :lg=\"6\" :md=\"8\" :sm=\"24\">\n              <a-button type=\"primary\" @click=\"searchQuery\" icon=\"search\">查询</a-button>\n              <a-button type=\"primary\" @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\n            </a-col>\n          </span> -->\n        </a-row>\n      </a-form>\n    </div>\n    <j-demo ref=\"zxcb\" v-if=\"jdemoshow\" :formData=\"formData\" :columns=\"columns\" :importBtn=\"importBtn\"\n            :dataSource=\"dataSource\"></j-demo>\n    <a-tabs default-active-key=\"0\" @change=\"callback\" >\n      <a-tab-pane :key=\"index\" :tab=\"item.name\" v-for=\"(item,index) in columnss\" :forceRender=\"true\" v-if=\"!jdemoshow\">\n        <j-demo :columns=\"item.columns\"  :importBtn=\"true\" :ref=\"'ref'+index\" @loadDataUpload=\"loadDataUpload\"\n                @getDatas=\"getDatas\" :formData=\"formData\" :dataSource=\"item.dataSource\"></j-demo>\n      </a-tab-pane>\n    </a-tabs>\n  </a-card>\n</template>\n\n<script>\nimport {\n  initDictOptions,\n  filterDictText,\n  filterDictTextByCache\n} from '@/components/dict/JDictSelectUtil'\nimport {JeecgListMixin} from '@/mixins/JeecgListMixin'\nimport Vue from 'vue'\nimport {filterObj} from '@/utils/util';\nimport JDemo from './JDemo.vue';\nimport UploadDemo from './uploadDemo.vue';\nimport {getAction,postAction} from \"@api/manage\";\nimport {JVXETypes} from \"@comp/jeecg/JVxeTable\";\nimport {JEditableTableMixin} from '@/mixins/JEditableTableMixin'\nimport {FormTypes, getRefPromise} from '@/utils/JEditableTableUtil'\n\nexport default {\n  name: \"JeecgDemoList\",\n  mixins: [JeecgListMixin, JEditableTableMixin],\n  components: {\n    JDemo,\n    UploadDemo\n  },\n  watch: {\n    \"columnss\": {\n      handler: function (val, oldVal) {\n        this.columnss = val\n      },\n      deep: true\n    }\n  },\n  data() {\n    return {\n      importBtn:false,\n      disableMixinCreated: true,\n      // 模板列表\n      jdemoshow: false,\n      templateList: [],\n      istype: true,\n      // 选择区域\n      formData: {\n        createTime: '',//时间\n        type: 'SynthesizeLogging',//采报类型\n        template: ''//模板\n      },\n\n      typeoption: [{\n        name: '综合日志',\n        value: 0\n      }, {\n        name: '执勤数据',\n        value: 1\n      }, {\n        name: '执勤报文',\n        value: 2\n      }, {\n        name: '军委填报表',\n        value: 3\n      }, {\n        name: '军委系统表',\n        value: 4\n      }],\n      stypeoption: [{\n        name: '模型一',\n        value: 0\n      }, {\n        name: '模型二',\n        value: 1\n      }, {\n        name: '模型三',\n        value: 2\n      }, {\n        name: '模型四',\n        value: 3\n      }, {\n        name: '模型五',\n        value: 4\n      }],\n      //列定义\n      url: {\n        list: \"/southTable/queryTableData\", //数据\n        structure: '/southTable/queryTableStructure',//结构\n        delete: \"/test/jeecgDemo/delete\",\n        deleteBatch: \"/test/jeecgDemo/deleteBatch\",\n        exportXlsUrl: \"/test/jeecgDemo/exportXls\",\n        templateUrl: '/reportFormModel/queryAllModel',\n        userInfo: '/southTable/queryUserInfo',//基本信息\n        save: '/southTable/reportFromDataSave'\n      },\n      isshowlist: true,\n      // 数据源，控制表格的数据\n      dataSource: [],\n      // 列配置，控制表格显示的列\n      columns: [],\n      columnss: [],\n      userInfo: null,\n      refKeys: ['ref0', 'ref1'],\n      dateDisable:false,\n    }\n  },\n  methods: {\n    loadDataUpload(arr) {\n      this.jdemoshow = true\n      for (var i = 0; i < arr.length; i++) {\n        this.columnss[i].dataSource = arr[i]\n      }\n\n      this.jdemoshow = false\n    },\n    getDatas() {\n      this.getDatass().then(tables => {\n        var arr = []\n        console.log(tables)\n        for(var i = 0 ; i < tables.length;i++) {\n          arr.push(tables[i][0].validAllEvent())\n        }\n        for(var i = 0 ;i< arr.length;i++) {\n          for(var j  =0;j< arr[i].length;j++) {\n            if(arr[i][j].parent_id) {\n              var id = arr[i][j].parent_id\n            }else {\n              var id = ''\n            }\n          }\n        }\n        let object = {\n          id:\"id\",\n          list:[[],[]]\n        }\n         var obj = {\n              templateType: this.formData.template,\n              reportFromType: this.formData.type,\n              list:arr,\n              id\n            }\n            // 【模拟保存】\n            this.loading = true\n            postAction(this.url.save, obj).then(res => {\n              if (res.success) {\n                this.$message.success(`保存成功！`)\n              } else {\n                this.$message.warn(`保存失败：` + res.message)\n              }\n            }).finally(() => {\n              this.loading = false\n            })\n      })\n    },\n    getDatass() {\n      var arr = ['ref0', 'ref1']\n      let values = arr.map(key => getRefPromise(this, key))\n      return Promise.all(values)\n    }\n    ,\n    callback() {\n    }\n    ,\n    // 获取模板类型\n    getTemplateList() {\n      var formData = {}\n      getAction(this.url.templateUrl, formData).then(res => {\n        if (res.success) {\n          // 将查询的数据赋值给 dataSource\n          this.templateList = res.result\n          // 重置选择\n        } else {\n          this.$error({title: '主表查询失败', content: res.message})\n        }\n      }).finally(() => {\n        // 这里是无论成功或失败都会执行的方法，在这里关闭loading\n        this.loading = false\n      })\n      getAction(this.url.userInfo, formData).then(res => {\n        if (res.success) {\n          // 将查询的数据赋值给 dataSource\n          this.userInfo = res.result\n          // 重置选择\n        } else {\n          this.$error({title: '主表查询失败', content: res.message})\n        }\n      }).finally(() => {\n        // 这里是无论成功或失败都会执行的方法，在这里关闭loading\n        this.loading = false\n      })\n    }\n    ,\n    // 选择日期的回调\n    onChange(date, dateString) {\n      this.formData.createTime = dateString\n      var e = this.formData.type\n      window.localStorage.setItem('formData', JSON.stringify(this.formData))\n      if (e == 'SynthesizeLogging') {\n        this.loadData()\n      } else if (e == 'DutyData') {\n      } else if (e == 'WeekStatistics') {\n\n      }\n    }\n    ,\n    // 选择类型\n    changeType(e) {\n      this.jdemoshow = false\n      var date = new Date();\n      var seperator1 = \"-\";\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n      var strDate = date.getDate();\n      if (month >= 1 && month <= 9) {\n        month = \"0\" + month;\n      }\n      if (strDate >= 0 && strDate <= 9) {\n        strDate = \"0\" + strDate;\n      }\n      var currentdate = year + seperator1 + month + seperator1 + strDate;\n      console.log(e)\n      if (e == 'SynthesizeLogging') {\n        this.istype = true\n        this.formData.template = ''\n        this.dateDisable = false\n        this.importBtn = false\n      } else if (e == 'DutyData') {\n        this.formData.template = this.templateList[0].headId\n        this.istype = false\n        this.formData.createTime = currentdate\n        this.dateDisable = true\n      } else if (e == 'WeekStatistics') {\n        this.formData.template = ''\n        this.istype = true\n        this.formData.createTime = currentdate\n        this.dateDisable = true\n        this.importBtn = true\n\n      }\n      window.localStorage.setItem('formData', JSON.stringify(this.formData))\n      this.getStructure()\n      this.loadData()\n    }\n    ,\n    // 选择模板\n    templateChange(e) {\n      this.jdemoshow = true\n      window.localStorage.setItem('formData', JSON.stringify(this.formData))\n      this.getStructure()\n      // 发送请求头部，请求数据的请求\n    }\n    ,\n    changeUploadMethod(e) {\n      console.log(e)\n    }\n    ,\n    // 查询结构（table的头部）\n    getStructure() {\n      // 封装查询条件\n      let formData = {\n        reportFromType: this.formData.type,\n        templateType: this.formData.template\n      }\n      // 调用查询数据接口\n      this.loading = true\n      getAction(this.url.structure, formData).then(res => {\n        if (res.success) {\n          if (this.formData.type != 'DutyData') {\n            var result = res.result\n            // 将查询的数据赋值给 dataSource\n            var arr = []\n            for (var i = 0; i < result.length; i++) {\n              if (result[i].isShowForm == 1) {\n                arr.push({\n                  key: result[i].dbFieldName,\n                  title: result[i].dbFieldTxt,\n                  type: JVXETypes[result[i].fieldShowType],\n                  defaultValue: result[i].fieldDefaultValue\n                })\n              }\n            }\n            this.jdemoshow = true\n            this.columns = arr\n            this.columnss = []\n          } else {//执勤数据\n            var result = res.result\n            var columns = []\n            for (var i = 0; i < result.length; i++) {\n              var arr = []\n              var obj = {\n                name: result[i].sheetName,\n                dataSource:[]\n              }\n              var results = result[i].fields\n              for (var j = 0; j < results.length; j++) {\n                if (results[j].isShowForm == 1) {\n                  arr.push({\n                    key: results[j].dbFieldName,\n                    title: results[j].dbFieldTxt,\n                    type: JVXETypes[results[j].fieldShowType],\n                    defaultValue: results[j].fieldDefaultValue\n                  })\n                }\n              }\n              obj.columns = arr\n              columns.push(obj)\n            }\n              this.columnss = columns\n              this.jdemoshow = false\n          }\n        } else {\n          this.$error({title: '主表查询失败', content: res.message})\n        }\n      }).finally(() => {\n        // 这里是无论成功或失败都会执行的方法，在这里关闭loading\n        this.loading = false\n      })\n    }\n    ,\n    // 查询数据\n    loadData() {\n      // 封装查询条件\n      let formData = {\n        createTime: this.formData.createTime\n      }\n      // 调用查询数据接口\n      this.loading = true\n      if (this.formData.type == 'SynthesizeLogging') {\n        getAction(this.url.list, formData).then(res => {\n          if (res.success) {\n            // 将查询的数据赋值给 dataSource\n            this.dataSource = res.result\n            // 重置选择\n            this.selectedRows = []\n          } else {\n            this.$error({title: '主表查询失败', content: res.message})\n          }\n        }).finally(() => {\n          // 这里是无论成功或失败都会执行的方法，在这里关闭loading\n          this.loading = false\n        })\n      } else {\n        this.dataSource = []\n      }\n    }\n  },\n  created() {\n    var date = new Date();\n    var seperator1 = \"-\";\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var strDate = date.getDate();\n    if (month >= 1 && month <= 9) {\n      month = \"0\" + month;\n    }\n    if (strDate >= 0 && strDate <= 9) {\n      strDate = \"0\" + strDate;\n    }\n    var currentdate = year + seperator1 + month + seperator1 + strDate;\n    this.formData.createTime = currentdate\n  },\n  mounted() {\n    // 获取头部数据\n    this.getStructure()\n    // 获取数据（list）\n    this.loadData()\n    // 获取模板列表\n    this.getTemplateList()\n    window.localStorage.setItem('formData', JSON.stringify(this.formData))\n  }\n}\n</script>\n<style scoped>\n@import '~@assets/less/common.less';\n</style>"]}]}