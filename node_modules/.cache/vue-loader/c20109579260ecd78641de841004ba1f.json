{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\online\\modules\\catalog.vue?vue&type=style&index=0&id=1019b9ef&scoped=true&lang=css&","dependencies":[{"path":"D:\\vue\\src\\views\\online\\modules\\catalog.vue","mtime":1615948820501},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\dist\\cjs.js","mtime":1615952641773},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1615952643260},{"path":"D:\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1615952643158},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmZvcm0taXRlbSB7DQogIG1hcmdpbi1sZWZ0OiAxNXB4DQp9DQovZGVlcC8gLmZvcm0taXRlbSB7DQogIG1hcmdpbi1sZWZ0OiAwOw0KfQ0KDQo="},{"version":3,"sources":["catalog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyIA;AACA;AACA;AACA;AACA;AACA","file":"catalog.vue","sourceRoot":"src/views/online/modules","sourcesContent":["<template>\r\n  <j-modal\r\n      :title=\"title\"\r\n      :width=\"width\"\r\n      :visible=\"visible\"\r\n      :fullscreen=\"false\"\r\n      :confirmLoading=\"confirmLoading\"\r\n      switchFullscreen\r\n      @ok=\"handleOk\"\r\n      @cancel=\"handleCancel\"\r\n      cancelText=\"关闭\">\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-directory-tree multiple default-expand-all :tree-data=\"treeData\"\r\n                        :load-data=\"onLoadData\" @select=\"onSelect\" @expand=\"onExpand\">\r\n\r\n      </a-directory-tree>\r\n    </a-spin>\r\n  </j-modal>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {getAction, httpAction} from '@/api/manage'\r\nimport pick from 'lodash.pick'\r\nimport {validateDuplicateValue} from '@/utils/util'\r\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\"\r\n\r\n\r\nexport default {\r\n  name: \"catalog\",\r\n  components: {\r\n    JDictSelectTag,\r\n  },\r\n  prop: {\r\n    taskId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      treeData:[],\r\n      pf:null,\r\n      value:'normal',\r\n      record:null,\r\n      title: \"操作\",\r\n      width: 500,\r\n      visible: false,\r\n      model: {},\r\n      labelCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 5},\r\n      },\r\n      wrapperCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 16},\r\n      },\r\n      form: this.$form.createForm(this),\r\n      confirmLoading: false,\r\n      validatorRules: {},\r\n      url: {\r\n        // 获取盘符\r\n        getpf: \"online/cgform/head/rootFile\",\r\n        getup:'online/cgform/head/fileTree'\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n  },\r\n  methods: {\r\n    onLoadData(treeNode) {\r\n      return new Promise(resolve => {\r\n        if (treeNode.dataRef.children) {\r\n          resolve();\r\n          return;\r\n        }\r\n        var obj = {\r\n          parentPath:treeNode.dataRef.key\r\n        }\r\n        getAction(this.url.getup, obj).then((res) => {\r\n          if (res.success) {\r\n            treeNode.dataRef.children = res.result\r\n            this.treeData = [...this.treeData];\r\n            resolve();\r\n          } else {\r\n            this.$message.warning(res.message);\r\n          }\r\n        }).finally(() => {\r\n        })\r\n      });\r\n    },\r\n    onSelect(keys, event) {\r\n      console.log('Trigger Select', keys, event);\r\n      this.pf = keys\r\n    },\r\n    onExpand() {\r\n    },\r\n    edit(record) {\r\n      this.visible = true;\r\n      var url = this.url.getpf\r\n      getAction(url, {}).then((res) => {\r\n        console.log(res)\r\n        if (res.success) {\r\n          this.treeData = res.result\r\n        } else {\r\n          this.$message.warning(res.message);\r\n        }\r\n      }).finally(() => {\r\n      })\r\n    },\r\n    close() {\r\n      this.$emit('close');\r\n      this.visible = false;\r\n    },\r\n    handleOk() {\r\n      const that = this;\r\n      if(that.pf) {\r\n        that.$emit('ok',that.pf);\r\n        that.visible = false;\r\n      }else {\r\n        that.$message.warning('请选择目录！');\r\n      }\r\n      // 触发表单验证\r\n\r\n\r\n    },\r\n    handleCancel() {\r\n      this.close()\r\n    },\r\n    popupCallback(row) {\r\n      this.form.setFieldsValue(pick(row, 'name'))\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.form-item {\r\n  margin-left: 15px\r\n}\r\n/deep/ .form-item {\r\n  margin-left: 0;\r\n}\r\n\r\n</style>"]}]}