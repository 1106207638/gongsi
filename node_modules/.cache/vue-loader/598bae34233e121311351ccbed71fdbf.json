{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\jeecg\\modules\\JEditableTable\\DefaultTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\jeecg\\modules\\JEditableTable\\DefaultTable.vue","mtime":1615948819013},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JwppbXBvcnQgeyBGb3JtVHlwZXMgfSBmcm9tICdAL3V0aWxzL0pFZGl0YWJsZVRhYmxlVXRpbCcKaW1wb3J0IHsgcmFuZG9tVVVJRCwgcmFuZG9tTnVtYmVyIH0gZnJvbSAnQC91dGlscy91dGlsJwppbXBvcnQgSkVkaXRhYmxlVGFibGUgZnJvbSAnQC9jb21wb25lbnRzL2plZWNnL0pFZGl0YWJsZVRhYmxlJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEZWZhdWx0VGFibGUnLAogIGNvbXBvbmVudHM6IHsgSkVkaXRhYmxlVGFibGUgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIGNvbHVtbnM6IFsKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+Wtl+auteWQjeensCcsCiAgICAgICAgICBrZXk6ICdkYkZpZWxkTmFtZScsCiAgICAgICAgICAvLyB3aWR0aDogJzE5JScsCiAgICAgICAgICB3aWR0aDogJzMwMHB4JywKICAgICAgICAgIHR5cGU6IEZvcm1UeXBlcy5pbnB1dCwKICAgICAgICAgIGRlZmF1bHRWYWx1ZTogJycsCiAgICAgICAgICBwbGFjZWhvbGRlcjogJ+ivt+i+k+WFpSR7dGl0bGV9JywKICAgICAgICAgIHZhbGlkYXRlUnVsZXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLCAvLyDlv4XloasKICAgICAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWlJHt0aXRsZX0nIC8vIOaYvuekuueahOaWh+acrAogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgcGF0dGVybjogL15bYS16fEEtWl1bYS16fEEtWlxkXy1dezAsfSQvLCAvLyDmraPliJkKICAgICAgICAgICAgICBtZXNzYWdlOiAnJHt0aXRsZX3lv4Xpobvku6XlrZfmr43lvIDlpLTvvIzlj6/ljIXlkKvmlbDlrZfjgIHkuIvliJLnur/jgIHmqKrmnaAnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICB1bmlxdWU6IHRydWUsCiAgICAgICAgICAgICAgbWVzc2FnZTogJyR7dGl0bGV95LiN6IO96YeN5aSNJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgaGFuZGxlcih0eXBlLCB2YWx1ZSwgcm93LCBjb2x1bW4sIGNhbGxiYWNrLCB0YXJnZXQpIHsKICAgICAgICAgICAgICAgIC8vIHR5cGUg6Kem5Y+R5qCh6aqM55qE57G75Z6L77yIaW5wdXTjgIFjaGFuZ2XjgIFibHVy77yJCiAgICAgICAgICAgICAgICAvLyB2YWx1ZSDlvZPliY3moKHpqoznmoTlgLwKICAgICAgICAgICAgICAgIC8vIGNhbGxiYWNrKGZsYWcsIG1lc3NhZ2UpIOaWueazleW/hemhu+aJp+ihjOS4lOWPquiDveaJp+ihjOS4gOasoQogICAgICAgICAgICAgICAgLy8gICAgICAgICAgZmxhZyA9IOaYr+WQpumAmui/h+S6huagoemqjO+8jOS4jeWhq+WGmeaIluiAheWhq+WGmSBudWxsIOS7o+ihqOS4jei/m+ihjOS7u+S9leaTjeS9nAogICAgICAgICAgICAgICAgLy8gICAgICAgICAgbWVzc2FnZSA9IOaPkOekuueahOexu+Wei++8jOm7mOiupOS9v+eUqOmFjee9rueahCBtZXNzYWdlCiAgICAgICAgICAgICAgICAvLyB0YXJnZXQg6KGM57yW6L6R55qE5a6e5L6L5a+56LGhCgogICAgICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdibHVyJykgewogICAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT09ICdhYmMnKSB7CiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZmFsc2UsICcke3RpdGxlfeS4jeiDveaYr2FiYycpICAvLyBmYWxzZSA9IOacqumAmui/h+agoemqjAogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKHRydWUpIC8vIHRydWUgPSDpgJrov4fpqozor4EKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgY2FsbGJhY2sodHJ1ZSkgLy8g5LiN5aGr5YaZ5oiW6ICF5aGr5YaZIG51bGwg5Luj6KGo5LiN6L+b6KGM5Lu75L2V5pON5L2cCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBtZXNzYWdlOiAnJHt0aXRsZX3pu5jorqTmj5DnpLonCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAn5paH5Lu25Z+fJywKICAgICAgICAgIGtleTogJ3VwbG9hZCcsCiAgICAgICAgICB0eXBlOiBGb3JtVHlwZXMudXBsb2FkLAogICAgICAgICAgLy8gd2lkdGg6ICcxOSUnLAogICAgICAgICAgd2lkdGg6ICczMDBweCcsCiAgICAgICAgICBwbGFjZWhvbGRlcjogJ+eCueWHu+S4iuS8oCcsCiAgICAgICAgICB0b2tlbjogdHJ1ZSwKICAgICAgICAgIHJlc3BvbnNlTmFtZTogJ21lc3NhZ2UnLAogICAgICAgICAgYWN0aW9uOiB3aW5kb3cuX0NPTkZJR1snZG9taWFuVVJMJ10gKyAnL3N5cy9jb21tb24vdXBsb2FkJwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICflrZfmrrXnsbvlnosnLAogICAgICAgICAga2V5OiAnZGJGaWVsZFR5cGUnLAogICAgICAgICAgLy8gd2lkdGg6ICcxOCUnLAogICAgICAgICAgd2lkdGg6ICczMDBweCcsCiAgICAgICAgICB0eXBlOiBGb3JtVHlwZXMuc2VsZWN0LAogICAgICAgICAgb3B0aW9uczogWyAvLyDkuIvmi4npgInpobkKICAgICAgICAgICAgeyB0aXRsZTogJ1N0cmluZycsIHZhbHVlOiAnc3RyaW5nJyB9LAogICAgICAgICAgICB7IHRpdGxlOiAnSW50ZWdlcicsIHZhbHVlOiAnaW50JyB9LAogICAgICAgICAgICB7IHRpdGxlOiAnRG91YmxlJywgdmFsdWU6ICdkb3VibGUnIH0sCiAgICAgICAgICAgIHsgdGl0bGU6ICdCb29sZWFuJywgdmFsdWU6ICdib29sZWFuJyB9CiAgICAgICAgICBdLAogICAgICAgICAgYWxsb3dJbnB1dDogdHJ1ZSwKICAgICAgICAgIGRlZmF1bHRWYWx1ZTogJycsCiAgICAgICAgICBwbGFjZWhvbGRlcjogJ+ivt+mAieaLqSR7dGl0bGV9JywKICAgICAgICAgIHZhbGlkYXRlUnVsZXM6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36YCJ5oupJHt0aXRsZX0nIH1dCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+aAp+WIq++8iOWtl+WFuO+8iScsCiAgICAgICAgICBrZXk6ICdzZXhfZGljdCcsCiAgICAgICAgICB3aWR0aDogJzMwMHB4JywKICAgICAgICAgIHR5cGU6IEZvcm1UeXBlcy5zZWxlY3QsCiAgICAgICAgICBvcHRpb25zOiBbXSwKICAgICAgICAgIGRpY3RDb2RlOiAnc2V4JywKICAgICAgICAgIHBsYWNlaG9sZGVyOiAn6K+36YCJ5oupJHt0aXRsZX0nLAogICAgICAgICAgdmFsaWRhdGVSdWxlczogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fpgInmi6kke3RpdGxlfScgfV0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAn5aSa6YCJ5rWL6K+VJywKICAgICAgICAgIGtleTogJ211bHRpcGxlU2VsZWN0JywKICAgICAgICAgIC8vIHdpZHRoOiAnMTglJywKICAgICAgICAgIHdpZHRoOiAnMzAwcHgnLAogICAgICAgICAgdHlwZTogRm9ybVR5cGVzLnNlbGVjdCwKICAgICAgICAgIHByb3BzOiB7ICdtb2RlJzogJ211bHRpcGxlJyB9LCAvLyDmlK/mjIHlpJrpgIkKICAgICAgICAgIG9wdGlvbnM6IFsKICAgICAgICAgICAgeyB0aXRsZTogJ1N0cmluZycsIHZhbHVlOiAnc3RyaW5nJyB9LAogICAgICAgICAgICB7IHRpdGxlOiAnSW50ZWdlcicsIHZhbHVlOiAnaW50JyB9LAogICAgICAgICAgICB7IHRpdGxlOiAnRG91YmxlJywgdmFsdWU6ICdkb3VibGUnIH0sCiAgICAgICAgICAgIHsgdGl0bGU6ICdCb29sZWFuJywgdmFsdWU6ICdib29sZWFuJyB9CiAgICAgICAgICBdLAogICAgICAgICAgZGVmYXVsdFZhbHVlOiBbJ2ludCcsICdib29sZWFuJ10sIC8vIOWkmuS4qum7mOiupOmhuQogICAgICAgICAgLy8gZGVmYXVsdFZhbHVlOiAnc3RyaW5nLGRvdWJsZSxpbnQnLCAvLyDkuZ/lj6/kvb/nlKjov5nnp43mlrnlvI8KICAgICAgICAgIHBsYWNlaG9sZGVyOiAn6L+Z6YeM5Y+v5Lul5aSa6YCJJywKICAgICAgICAgIHZhbGlkYXRlUnVsZXM6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36YCJ5oupJHt0aXRsZX0nIH1dCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+Wtl+autemVv+W6picsCiAgICAgICAgICBrZXk6ICdkYkxlbmd0aCcsCiAgICAgICAgICAvLyB3aWR0aDogJzglJywKICAgICAgICAgIHdpZHRoOiAnMTAwcHgnLAogICAgICAgICAgdHlwZTogRm9ybVR5cGVzLmlucHV0TnVtYmVyLAogICAgICAgICAgZGVmYXVsdFZhbHVlOiAzMiwKICAgICAgICAgIHBsYWNlaG9sZGVyOiAnJHt0aXRsZX0nLAogICAgICAgICAgLy8g5piv5ZCm5piv57uf6K6h5YiX77yM5Y+q5pyJIGlucHV0TnVtYmVyIOaJjeiDveiuvue9rue7n+iuoeWIlwogICAgICAgICAgc3RhdGlzdGljczogdHJ1ZSwKICAgICAgICAgIHZhbGlkYXRlUnVsZXM6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWlJHt0aXRsZX0nIH1dCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+aXpeacnycsCiAgICAgICAgICBrZXk6ICdkYXRldGltZScsCiAgICAgICAgICAvLyB3aWR0aDogJzIyJScsCiAgICAgICAgICB3aWR0aDogJzMyMHB4JywKICAgICAgICAgIHR5cGU6IEZvcm1UeXBlcy5kYXRldGltZSwKICAgICAgICAgIGRlZmF1bHRWYWx1ZTogJzIwMTktNC0zMCAxNDo1MjoyMicsCiAgICAgICAgICBwbGFjZWhvbGRlcjogJ+ivt+mAieaLqSR7dGl0bGV9JywKICAgICAgICAgIHZhbGlkYXRlUnVsZXM6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36YCJ5oupJHt0aXRsZX0nIH1dCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+aVsOWtlycsCiAgICAgICAgICBrZXk6ICdtb25leScsCiAgICAgICAgICB3aWR0aDogJzMyMHB4JywKICAgICAgICAgIHR5cGU6IEZvcm1UeXBlcy5pbnB1dE51bWJlciwKICAgICAgICAgIGRlZmF1bHRWYWx1ZTogJzEwMC4zMicsCiAgICAgICAgICBwbGFjZWhvbGRlcjogJ+ivt+mAieaLqSR7dGl0bGV9JywKICAgICAgICAgIHZhbGlkYXRlUnVsZXM6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36YCJ5oupJHt0aXRsZX0nIH1dCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+WPr+S7peS4uuepuicsCiAgICAgICAgICBrZXk6ICdpc051bGwnLAogICAgICAgICAgLy8gd2lkdGg6ICc4JScsCiAgICAgICAgICB3aWR0aDogJzEwMHB4JywKICAgICAgICAgIHR5cGU6IEZvcm1UeXBlcy5jaGVja2JveCwKICAgICAgICAgIGN1c3RvbVZhbHVlOiBbJ1knLCAnTiddLCAvLyB0cnVlICxmYWxzZQogICAgICAgICAgZGVmYXVsdENoZWNrZWQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0eXBlOiBGb3JtVHlwZXMucG9wdXAsCiAgICAgICAgICBrZXk6ICdwb3B1cCcsCiAgICAgICAgICB0aXRsZTogJ0pQb3B1cCcsCiAgICAgICAgICB3aWR0aDogJzE4MHB4JywKICAgICAgICAgIHBvcHVwQ29kZTogJ2RlbW8nLAogICAgICAgICAgZmllbGQ6ICduYW1lJywKICAgICAgICAgIG9yZ0ZpZWxkczogJ25hbWUnLAogICAgICAgICAgZGVzdEZpZWxkczogJ25hbWUnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+aTjeS9nCcsCiAgICAgICAgICBrZXk6ICdhY3Rpb24nLAogICAgICAgICAgLy8gd2lkdGg6ICc4JScsCiAgICAgICAgICB3aWR0aDogJzEwMHB4JywKICAgICAgICAgIHR5cGU6IEZvcm1UeXBlcy5zbG90LAogICAgICAgICAgc2xvdE5hbWU6ICdhY3Rpb24nLAogICAgICAgIH0KCiAgICAgIF0sCiAgICAgIGRhdGFTb3VyY2U6IFtdLAogICAgICBzZWxlY3RlZFJvd0lkczogW10KICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLnJhbmRvbURhdGEoMjMsIGZhbHNlKQogIH0sCiAgbWV0aG9kczogewoKICAgIC8qKiDooajljZXpqozor4EgKi8KICAgIGhhbmRsZVRhYmxlQ2hlY2soKSB7CiAgICAgIHRoaXMuJHJlZnMuZWRpdGFibGVUYWJsZS5nZXRWYWx1ZXMoKGVycm9yKSA9PiB7CiAgICAgICAgaWYgKGVycm9yID09PSAwKSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+mqjOivgemAmui/hycpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+mqjOivgeacqumAmui/hycpCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIC8qKiDojrflj5blgLzvvIzlv73nlaXooajljZXpqozor4EgKi8KICAgIGhhbmRsZVRhYmxlR2V0KCkgewogICAgICB0aGlzLiRyZWZzLmVkaXRhYmxlVGFibGUuZ2V0VmFsdWVzKChlcnJvciwgdmFsdWVzKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2coJ3ZhbHVlczonLCB2YWx1ZXMpCiAgICAgIH0sIGZhbHNlKQogICAgICBjb25zb2xlLmxvZygnZGVsZXRlSWRzOicsIHRoaXMuJHJlZnMuZWRpdGFibGVUYWJsZS5nZXREZWxldGVJZHMoKSkKCiAgICAgIHRoaXMuJG1lc3NhZ2UuaW5mbygn6I635Y+W5YC85oiQ5Yqf77yM6K+355yL5o6n5Yi25Y+w6L6T5Ye6JykKCiAgICB9LAogICAgLyoqIOaooeaLn+WKoOi9vTEwMDDmnaHmlbDmja4gKi8KICAgIGhhbmRsZVRhYmxlU2V0KCkgewogICAgICB0aGlzLnJhbmRvbURhdGEoMTAwMCwgdHJ1ZSkKICAgIH0sCgogICAgaGFuZGxlU2VsZWN0Um93Q2hhbmdlKHNlbGVjdGVkUm93SWRzKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRSb3dJZHMgPSBzZWxlY3RlZFJvd0lkcwogICAgfSwKCiAgICAvKiDpmo/mnLrnlJ/miJDmlbDmja4gKi8KICAgIHJhbmRvbURhdGEoc2l6ZSwgbG9hZGluZyA9IGZhbHNlKSB7CiAgICAgIGlmIChsb2FkaW5nKSB7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZQogICAgICB9CgogICAgICBsZXQgcmFuZG9tRGF0ZXRpbWUgPSAoKSA9PiB7CiAgICAgICAgbGV0IHRpbWUgPSBwYXJzZUludChyYW5kb21OdW1iZXIoMTAwMCwgOTk5OTk5OTk5OTk5OSkpCiAgICAgICAgcmV0dXJuIG1vbWVudChuZXcgRGF0ZSh0aW1lKSkuZm9ybWF0KCdZWVlZLU1NLUREIEhIOm1tOnNzJykKICAgICAgfQoKICAgICAgbGV0IGJlZ2luID0gRGF0ZS5ub3coKQogICAgICBsZXQgdmFsdWVzID0gW10KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaXplOyBpKyspIHsKICAgICAgICB2YWx1ZXMucHVzaCh7CiAgICAgICAgICBpZDogcmFuZG9tVVVJRCgpLAogICAgICAgICAgZGJGaWVsZE5hbWU6IGBuYW1lXyR7aSArIDF9YCwKICAgICAgICAgIC8vIGRiRmllbGRUeHQ6IHJhbmRvbVN0cmluZygxMCksCiAgICAgICAgICBtdWx0aXBsZVNlbGVjdDogWydzdHJpbmcnLCBbJ2ludCcsICdkb3VibGUnLCAnYm9vbGVhbiddW3JhbmRvbU51bWJlcigwLCAyKV1dLAogICAgICAgICAgZGJGaWVsZFR5cGU6IFsnc3RyaW5nJywgJ2ludCcsICdkb3VibGUnLCAnYm9vbGVhbiddW3JhbmRvbU51bWJlcigwLCAzKV0sCiAgICAgICAgICBkYkxlbmd0aDogcmFuZG9tTnVtYmVyKDAsIDIzMyksCiAgICAgICAgICBkYXRldGltZTogcmFuZG9tRGF0ZXRpbWUoKSwKICAgICAgICAgIGlzTnVsbDogWydZJywgJ04nXVtyYW5kb21OdW1iZXIoMCwgMSldCiAgICAgICAgfSkKICAgICAgfQoKICAgICAgdGhpcy5kYXRhU291cmNlID0gdmFsdWVzCiAgICAgIGxldCBlbmQgPSBEYXRlLm5vdygpCiAgICAgIGxldCBkaWZmID0gZW5kIC0gYmVnaW4KCiAgICAgIGlmIChsb2FkaW5nICYmIGRpZmYgPCBzaXplKSB7CiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgICAgIH0sIHNpemUgLSBkaWZmKQogICAgICB9CgogICAgfSwKCiAgICBoYW5kbGVEZWxldGUocHJvcHMpIHsKICAgICAgbGV0IHsgcm93SWQsIHRhcmdldCB9ID0gcHJvcHMKICAgICAgdGFyZ2V0LnJlbW92ZVJvd3Mocm93SWQpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["DefaultTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"DefaultTable.vue","sourceRoot":"src/views/jeecg/modules/JEditableTable","sourcesContent":["<template>\r\n\r\n  <div>\r\n    <a-button @click=\"handleTableCheck\" type=\"primary\">表单验证</a-button>\r\n    <span style=\"padding-left:8px;\"></span>\r\n    <a-tooltip placement=\"top\" title=\"获取值，忽略表单验证\" :autoAdjustOverflow=\"true\">\r\n      <a-button @click=\"handleTableGet\" type=\"primary\">获取值</a-button>\r\n    </a-tooltip>\r\n    <span style=\"padding-left:8px;\"></span>\r\n    <a-tooltip placement=\"top\" title=\"模拟加载1000条数据\" :autoAdjustOverflow=\"true\">\r\n      <a-button @click=\"handleTableSet\" type=\"primary\">设置值</a-button>\r\n    </a-tooltip>\r\n\r\n\r\n    <j-editable-table\r\n      ref=\"editableTable\"\r\n      :loading=\"loading\"\r\n      :columns=\"columns\"\r\n      :dataSource=\"dataSource\"\r\n      :rowNumber=\"true\"\r\n      :rowSelection=\"true\"\r\n      :actionButton=\"true\"\r\n      :dragSort=\"true\"\r\n      style=\"margin-top: 8px;\"\r\n      @selectRowChange=\"handleSelectRowChange\">\r\n\r\n      <template v-slot:action=\"props\">\r\n        <a @click=\"handleDelete(props)\">删除</a>\r\n      </template>\r\n\r\n    </j-editable-table>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n  import moment from 'moment'\r\n  import { FormTypes } from '@/utils/JEditableTableUtil'\r\n  import { randomUUID, randomNumber } from '@/utils/util'\r\n  import JEditableTable from '@/components/jeecg/JEditableTable'\r\n\r\n  export default {\r\n    name: 'DefaultTable',\r\n    components: { JEditableTable },\r\n    data() {\r\n      return {\r\n        loading: false,\r\n        columns: [\r\n          {\r\n            title: '字段名称',\r\n            key: 'dbFieldName',\r\n            // width: '19%',\r\n            width: '300px',\r\n            type: FormTypes.input,\r\n            defaultValue: '',\r\n            placeholder: '请输入${title}',\r\n            validateRules: [\r\n              {\r\n                required: true, // 必填\r\n                message: '请输入${title}' // 显示的文本\r\n              },\r\n              {\r\n                pattern: /^[a-z|A-Z][a-z|A-Z\\d_-]{0,}$/, // 正则\r\n                message: '${title}必须以字母开头，可包含数字、下划线、横杠'\r\n              },\r\n              {\r\n                unique: true,\r\n                message: '${title}不能重复'\r\n              },\r\n              {\r\n                handler(type, value, row, column, callback, target) {\r\n                  // type 触发校验的类型（input、change、blur）\r\n                  // value 当前校验的值\r\n                  // callback(flag, message) 方法必须执行且只能执行一次\r\n                  //          flag = 是否通过了校验，不填写或者填写 null 代表不进行任何操作\r\n                  //          message = 提示的类型，默认使用配置的 message\r\n                  // target 行编辑的实例对象\r\n\r\n                  if (type === 'blur') {\r\n                    if (value === 'abc') {\r\n                      callback(false, '${title}不能是abc')  // false = 未通过校验\r\n                    } else {\r\n                      callback(true) // true = 通过验证\r\n                    }\r\n                  } else {\r\n                    callback(true) // 不填写或者填写 null 代表不进行任何操作\r\n                  }\r\n                },\r\n                message: '${title}默认提示'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: '文件域',\r\n            key: 'upload',\r\n            type: FormTypes.upload,\r\n            // width: '19%',\r\n            width: '300px',\r\n            placeholder: '点击上传',\r\n            token: true,\r\n            responseName: 'message',\r\n            action: window._CONFIG['domianURL'] + '/sys/common/upload'\r\n          },\r\n          {\r\n            title: '字段类型',\r\n            key: 'dbFieldType',\r\n            // width: '18%',\r\n            width: '300px',\r\n            type: FormTypes.select,\r\n            options: [ // 下拉选项\r\n              { title: 'String', value: 'string' },\r\n              { title: 'Integer', value: 'int' },\r\n              { title: 'Double', value: 'double' },\r\n              { title: 'Boolean', value: 'boolean' }\r\n            ],\r\n            allowInput: true,\r\n            defaultValue: '',\r\n            placeholder: '请选择${title}',\r\n            validateRules: [{ required: true, message: '请选择${title}' }]\r\n          },\r\n          {\r\n            title: '性别（字典）',\r\n            key: 'sex_dict',\r\n            width: '300px',\r\n            type: FormTypes.select,\r\n            options: [],\r\n            dictCode: 'sex',\r\n            placeholder: '请选择${title}',\r\n            validateRules: [{ required: true, message: '请选择${title}' }]\r\n          },\r\n          {\r\n            title: '多选测试',\r\n            key: 'multipleSelect',\r\n            // width: '18%',\r\n            width: '300px',\r\n            type: FormTypes.select,\r\n            props: { 'mode': 'multiple' }, // 支持多选\r\n            options: [\r\n              { title: 'String', value: 'string' },\r\n              { title: 'Integer', value: 'int' },\r\n              { title: 'Double', value: 'double' },\r\n              { title: 'Boolean', value: 'boolean' }\r\n            ],\r\n            defaultValue: ['int', 'boolean'], // 多个默认项\r\n            // defaultValue: 'string,double,int', // 也可使用这种方式\r\n            placeholder: '这里可以多选',\r\n            validateRules: [{ required: true, message: '请选择${title}' }]\r\n          },\r\n          {\r\n            title: '字段长度',\r\n            key: 'dbLength',\r\n            // width: '8%',\r\n            width: '100px',\r\n            type: FormTypes.inputNumber,\r\n            defaultValue: 32,\r\n            placeholder: '${title}',\r\n            // 是否是统计列，只有 inputNumber 才能设置统计列\r\n            statistics: true,\r\n            validateRules: [{ required: true, message: '请输入${title}' }]\r\n          },\r\n          {\r\n            title: '日期',\r\n            key: 'datetime',\r\n            // width: '22%',\r\n            width: '320px',\r\n            type: FormTypes.datetime,\r\n            defaultValue: '2019-4-30 14:52:22',\r\n            placeholder: '请选择${title}',\r\n            validateRules: [{ required: true, message: '请选择${title}' }]\r\n          },\r\n          {\r\n            title: '数字',\r\n            key: 'money',\r\n            width: '320px',\r\n            type: FormTypes.inputNumber,\r\n            defaultValue: '100.32',\r\n            placeholder: '请选择${title}',\r\n            validateRules: [{ required: true, message: '请选择${title}' }]\r\n          },\r\n          {\r\n            title: '可以为空',\r\n            key: 'isNull',\r\n            // width: '8%',\r\n            width: '100px',\r\n            type: FormTypes.checkbox,\r\n            customValue: ['Y', 'N'], // true ,false\r\n            defaultChecked: false\r\n          },\r\n          {\r\n            type: FormTypes.popup,\r\n            key: 'popup',\r\n            title: 'JPopup',\r\n            width: '180px',\r\n            popupCode: 'demo',\r\n            field: 'name',\r\n            orgFields: 'name',\r\n            destFields: 'name'\r\n          },\r\n          {\r\n            title: '操作',\r\n            key: 'action',\r\n            // width: '8%',\r\n            width: '100px',\r\n            type: FormTypes.slot,\r\n            slotName: 'action',\r\n          }\r\n\r\n        ],\r\n        dataSource: [],\r\n        selectedRowIds: []\r\n      }\r\n    },\r\n    mounted() {\r\n      this.randomData(23, false)\r\n    },\r\n    methods: {\r\n\r\n      /** 表单验证 */\r\n      handleTableCheck() {\r\n        this.$refs.editableTable.getValues((error) => {\r\n          if (error === 0) {\r\n            this.$message.success('验证通过')\r\n          } else {\r\n            this.$message.error('验证未通过')\r\n          }\r\n        })\r\n      },\r\n      /** 获取值，忽略表单验证 */\r\n      handleTableGet() {\r\n        this.$refs.editableTable.getValues((error, values) => {\r\n          console.log('values:', values)\r\n        }, false)\r\n        console.log('deleteIds:', this.$refs.editableTable.getDeleteIds())\r\n\r\n        this.$message.info('获取值成功，请看控制台输出')\r\n\r\n      },\r\n      /** 模拟加载1000条数据 */\r\n      handleTableSet() {\r\n        this.randomData(1000, true)\r\n      },\r\n\r\n      handleSelectRowChange(selectedRowIds) {\r\n        this.selectedRowIds = selectedRowIds\r\n      },\r\n\r\n      /* 随机生成数据 */\r\n      randomData(size, loading = false) {\r\n        if (loading) {\r\n          this.loading = true\r\n        }\r\n\r\n        let randomDatetime = () => {\r\n          let time = parseInt(randomNumber(1000, 9999999999999))\r\n          return moment(new Date(time)).format('YYYY-MM-DD HH:mm:ss')\r\n        }\r\n\r\n        let begin = Date.now()\r\n        let values = []\r\n        for (let i = 0; i < size; i++) {\r\n          values.push({\r\n            id: randomUUID(),\r\n            dbFieldName: `name_${i + 1}`,\r\n            // dbFieldTxt: randomString(10),\r\n            multipleSelect: ['string', ['int', 'double', 'boolean'][randomNumber(0, 2)]],\r\n            dbFieldType: ['string', 'int', 'double', 'boolean'][randomNumber(0, 3)],\r\n            dbLength: randomNumber(0, 233),\r\n            datetime: randomDatetime(),\r\n            isNull: ['Y', 'N'][randomNumber(0, 1)]\r\n          })\r\n        }\r\n\r\n        this.dataSource = values\r\n        let end = Date.now()\r\n        let diff = end - begin\r\n\r\n        if (loading && diff < size) {\r\n          setTimeout(() => {\r\n            this.loading = false\r\n          }, size - diff)\r\n        }\r\n\r\n      },\r\n\r\n      handleDelete(props) {\r\n        let { rowId, target } = props\r\n        target.removeRows(rowId)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}