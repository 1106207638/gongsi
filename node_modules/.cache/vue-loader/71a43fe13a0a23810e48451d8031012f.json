{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\dict\\JMultiSelectTag.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\dict\\JMultiSelectTag.vue","mtime":1615948814057},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7YWpheEdldERpY3RJdGVtcyxnZXREaWN0SXRlbXNGcm9tQ2FjaGV9IGZyb20gJ0AvYXBpL2FwaScKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdKTXVsdGlTZWxlY3RUYWcnLAogIHByb3BzOiB7CiAgICBkaWN0Q29kZTogU3RyaW5nLAogICAgcGxhY2Vob2xkZXI6IFN0cmluZywKICAgIGRpc2FibGVkOiBCb29sZWFuLAogICAgdmFsdWU6IFN0cmluZywKICAgIHR5cGU6IFN0cmluZywKICAgIG9wdGlvbnM6QXJyYXkKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkaWN0T3B0aW9uczogW10sCiAgICAgIHRhZ1R5cGU6IiIsCiAgICAgIGFycmF5VmFsdWU6IXRoaXMudmFsdWU/W106dGhpcy52YWx1ZS5zcGxpdCgiLCIpCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgaWYoIXRoaXMudHlwZSB8fCB0aGlzLnR5cGU9PT0ibGlzdF9tdWx0aSIpewogICAgICB0aGlzLnRhZ1R5cGUgPSAic2VsZWN0IgogICAgfWVsc2V7CiAgICAgIHRoaXMudGFnVHlwZSA9IHRoaXMudHlwZQogICAgfQogICAgLy/ojrflj5blrZflhbjmlbDmja4KICAgIC8vdGhpcy5pbml0RGljdERhdGEoKTsKICB9LAogIHdhdGNoOnsKICAgIG9wdGlvbnM6IGZ1bmN0aW9uKHZhbCl7CiAgICAgIHRoaXMuc2V0Q3VycmVudERpY3RPcHRpb25zKHZhbCk7CiAgICB9LAogICAgZGljdENvZGU6ewogICAgICBpbW1lZGlhdGU6dHJ1ZSwKICAgICAgaGFuZGxlcigpIHsKICAgICAgICB0aGlzLmluaXREaWN0RGF0YSgpCiAgICAgIH0sCiAgICB9LAogICAgdmFsdWUgKHZhbCkgewogICAgICBpZighdmFsKXsKICAgICAgICB0aGlzLmFycmF5VmFsdWUgPSBbXQogICAgICB9ZWxzZXsKICAgICAgICB0aGlzLmFycmF5VmFsdWUgPSB0aGlzLnZhbHVlLnNwbGl0KCIsIikKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgaW5pdERpY3REYXRhKCkgewogICAgICBpZih0aGlzLm9wdGlvbnMgJiYgdGhpcy5vcHRpb25zLmxlbmd0aD4wKXsKICAgICAgICB0aGlzLmRpY3RPcHRpb25zID0gWy4uLnRoaXMub3B0aW9uc10KICAgICAgfWVsc2V7CiAgICAgICAgLy/kvJjlhYjku47nvJPlrZjkuK3or7vlj5blrZflhbjphY3nva4KICAgICAgICBpZihnZXREaWN0SXRlbXNGcm9tQ2FjaGUodGhpcy5kaWN0Q29kZSkpewogICAgICAgICAgdGhpcy5kaWN0T3B0aW9ucyA9IGdldERpY3RJdGVtc0Zyb21DYWNoZSh0aGlzLmRpY3RDb2RlKTsKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICAvL+agueaNruWtl+WFuENvZGUsIOWIneWni+WMluWtl+WFuOaVsOe7hAogICAgICAgIGFqYXhHZXREaWN0SXRlbXModGhpcy5kaWN0Q29kZSwgbnVsbCkudGhlbigocmVzKSA9PiB7CiAgICAgICAgICBpZiAocmVzLnN1Y2Nlc3MpIHsKICAgICAgICAgICAgdGhpcy5kaWN0T3B0aW9ucyA9IHJlcy5yZXN1bHQ7CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgfQoKICAgIH0sCiAgICBvbkNoYW5nZSAoc2VsZWN0ZWRWYWx1ZSkgewogICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCBzZWxlY3RlZFZhbHVlLmpvaW4oIiwiKSk7CiAgICB9LAogICAgc2V0Q3VycmVudERpY3RPcHRpb25zKGRpY3RPcHRpb25zKXsKICAgICAgdGhpcy5kaWN0T3B0aW9ucyA9IGRpY3RPcHRpb25zCiAgICB9LAogICAgZ2V0Q3VycmVudERpY3RPcHRpb25zKCl7CiAgICAgIHJldHVybiB0aGlzLmRpY3RPcHRpb25zCiAgICB9LAogICAgLy8gdXBkYXRlLS1iZWdpbi0tYXV0b3I6bHZkYW5kYW4tLS0tLWRhdGU6MjAyMDExMjAtLS0tLS1mb3LvvJpMT1dDT0QtMTA4NiDkuIvmi4nlpJrpgInmoYYs5pCc57Si5pe25Y+q5a2X5YW4Y29kZei/m+ihjOaQnOe0ouS4jeiDvemAmui/h+Wtl+WFuHRleHTmkJzntKIKICAgIGZpbHRlck9wdGlvbihpbnB1dCwgb3B0aW9uKSB7CiAgICAgIHJldHVybiBvcHRpb24uY29tcG9uZW50T3B0aW9ucy5jaGlsZHJlblswXS5jaGlsZHJlblswXS50ZXh0LnRvTG93ZXJDYXNlKCkuaW5kZXhPZihpbnB1dC50b0xvd2VyQ2FzZSgpKSA+PSAwCiAgICB9CiAgICAvLyB1cGRhdGUtLWVuZC0tYXV0b3I6bHZkYW5kYW4tLS0tLWRhdGU6MjAyMDExMjAtLS0tLS1mb3LvvJpMT1dDT0QtMTA4NiDkuIvmi4nlpJrpgInmoYYs5pCc57Si5pe25Y+q5a2X5YW4Y29kZei/m+ihjOaQnOe0ouS4jeiDvemAmui/h+Wtl+WFuHRleHTmkJzntKIKICB9LAogIG1vZGVsOiB7CiAgICBwcm9wOiAndmFsdWUnLAogICAgZXZlbnQ6ICdjaGFuZ2UnCiAgfQp9Cg=="},{"version":3,"sources":["JMultiSelectTag.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JMultiSelectTag.vue","sourceRoot":"src/components/dict","sourcesContent":["<template>\r\n  <a-checkbox-group v-if=\"tagType=='checkbox'\" @change=\"onChange\" :value=\"arrayValue\" :disabled=\"disabled\">\r\n    <a-checkbox v-for=\"(item, key) in dictOptions\" :key=\"key\" :value=\"item.value\">{{ item.text || item.label }}</a-checkbox>\r\n  </a-checkbox-group>\r\n\r\n  <a-select\r\n    v-else-if=\"tagType=='select'\"\r\n    :value=\"arrayValue\"\r\n    @change=\"onChange\"\r\n    :disabled=\"disabled\"\r\n    mode=\"multiple\"\r\n    :placeholder=\"placeholder\"\r\n    :getPopupContainer=\"(node) => node.parentNode\"\r\n    optionFilterProp=\"children\"\r\n    :filterOption=\"filterOption\"\r\n    allowClear>\r\n    <a-select-option\r\n      v-for=\"(item,index) in dictOptions\"\r\n      :key=\"index\"\r\n      :value=\"item.value\">\r\n      <span style=\"display: inline-block;width: 100%\" :title=\" item.text || item.label \">\r\n        {{ item.text || item.label }}\r\n      </span>\r\n    </a-select-option>\r\n  </a-select>\r\n\r\n</template>\r\n\r\n<script>\r\n  import {ajaxGetDictItems,getDictItemsFromCache} from '@/api/api'\r\n  export default {\r\n    name: 'JMultiSelectTag',\r\n    props: {\r\n      dictCode: String,\r\n      placeholder: String,\r\n      disabled: Boolean,\r\n      value: String,\r\n      type: String,\r\n      options:Array\r\n    },\r\n    data() {\r\n      return {\r\n        dictOptions: [],\r\n        tagType:\"\",\r\n        arrayValue:!this.value?[]:this.value.split(\",\")\r\n      }\r\n    },\r\n    created() {\r\n      if(!this.type || this.type===\"list_multi\"){\r\n        this.tagType = \"select\"\r\n      }else{\r\n        this.tagType = this.type\r\n      }\r\n      //获取字典数据\r\n      //this.initDictData();\r\n    },\r\n    watch:{\r\n      options: function(val){\r\n        this.setCurrentDictOptions(val);\r\n      },\r\n      dictCode:{\r\n        immediate:true,\r\n        handler() {\r\n          this.initDictData()\r\n        },\r\n      },\r\n      value (val) {\r\n        if(!val){\r\n          this.arrayValue = []\r\n        }else{\r\n          this.arrayValue = this.value.split(\",\")\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      initDictData() {\r\n        if(this.options && this.options.length>0){\r\n          this.dictOptions = [...this.options]\r\n        }else{\r\n          //优先从缓存中读取字典配置\r\n          if(getDictItemsFromCache(this.dictCode)){\r\n            this.dictOptions = getDictItemsFromCache(this.dictCode);\r\n            return\r\n          }\r\n          //根据字典Code, 初始化字典数组\r\n          ajaxGetDictItems(this.dictCode, null).then((res) => {\r\n            if (res.success) {\r\n              this.dictOptions = res.result;\r\n            }\r\n          })\r\n        }\r\n\r\n      },\r\n      onChange (selectedValue) {\r\n        this.$emit('change', selectedValue.join(\",\"));\r\n      },\r\n      setCurrentDictOptions(dictOptions){\r\n        this.dictOptions = dictOptions\r\n      },\r\n      getCurrentDictOptions(){\r\n        return this.dictOptions\r\n      },\r\n      // update--begin--autor:lvdandan-----date:20201120------for：LOWCOD-1086 下拉多选框,搜索时只字典code进行搜索不能通过字典text搜索\r\n      filterOption(input, option) {\r\n        return option.componentOptions.children[0].children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n      // update--end--autor:lvdandan-----date:20201120------for：LOWCOD-1086 下拉多选框,搜索时只字典code进行搜索不能通过字典text搜索\r\n    },\r\n    model: {\r\n      prop: 'value',\r\n      event: 'change'\r\n    }\r\n  }\r\n</script>\r\n"]}]}