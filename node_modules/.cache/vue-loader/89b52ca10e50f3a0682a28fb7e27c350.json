{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\jeecg\\JVxeDemo\\layout-demo\\Template5.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\views\\jeecg\\JVxeDemo\\layout-demo\\Template5.vue","mtime":1615948818983},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Template5.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Template5.vue","sourceRoot":"src/views/jeecg/JVxeDemo/layout-demo","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\">\r\n\r\n    <a-row :gutter=\"8\">\r\n      <a-col :span=\"6\">\r\n        <!-- 加上 show-line 属性后，展开收起图标自动变成 +- 样式 -->\r\n        <a-tree\r\n          class=\"template-5-tree\"\r\n          :tree-data=\"treeData\"\r\n          show-icon\r\n          show-line\r\n          :expandedKeys=\"treeExpandedKeys\"\r\n          :selectedKeys=\"[pagination.current]\"\r\n          @expand=\"handleTreeExpand\"\r\n          @select=\"handleTreeSelect\"\r\n        >\r\n          <!-- 自定义子节点图标 -->\r\n          <a-icon slot=\"myIcon\" type=\"unordered-list\" style=\"color:#0c8fcf;\"/>\r\n        </a-tree>\r\n      </a-col>\r\n      <a-col :span=\"18\">\r\n        <j-vxe-table\r\n          row-number\r\n          row-selection\r\n          :height=\"750\"\r\n          :loading=\"loading\"\r\n          :columns=\"columns\"\r\n          :dataSource=\"dataSource\"\r\n          :pagination=\"pagination\"\r\n          @pageChange=\"handleTablePageChange\"\r\n        />\r\n      </a-col>\r\n    </a-row>\r\n\r\n\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\n  import { getAction } from '@api/manage'\r\n  import { JVXETypes } from '@/components/jeecg/JVxeTable'\r\n\r\n  // 【多种布局模板】左侧为树，右侧为行编辑\r\n  export default {\r\n    name: 'Template5',\r\n    data() {\r\n      return {\r\n        // 是否正在加载\r\n        loading: false,\r\n        // 分页器参数\r\n        pagination: {\r\n          // 当前页码\r\n          current: 1,\r\n          // 每页的条数\r\n          pageSize: 50,\r\n          // 可切换的条数\r\n          pageSizeOptions: ['50'],\r\n          // 数据总数（目前并不知道真实的总数，所以先填写0，在后台查出来后再赋值）\r\n          total: 0,\r\n        },\r\n        // 选择的行\r\n        selectedRows: [],\r\n        // 数据源，控制表格的数据\r\n        dataSource: [],\r\n        // 列配置，控制表格显示的列\r\n        columns: [\r\n          {key: 'num', title: '序号', width: '80px'},\r\n          {\r\n            // 字段key，跟后台数据的字段名匹配\r\n            key: 'ship_name',\r\n            // 列的标题\r\n            title: '船名',\r\n            // 列的宽度\r\n            width: '180px',\r\n            // 如果加上了该属性，就代表当前单元格是可编辑的，type就是表单的类型，input就是简单的输入框\r\n            type: JVXETypes.input\r\n          },\r\n          {key: 'call', title: '呼叫', width: '80px', type: JVXETypes.input},\r\n          {key: 'len', title: '长', width: '80px', type: JVXETypes.input},\r\n          {key: 'ton', title: '吨', width: '120px', type: JVXETypes.input},\r\n          {key: 'payer', title: '付款方', width: '120px', type: JVXETypes.input},\r\n          {key: 'count', title: '数', width: '40px'},\r\n          {\r\n            key: 'company',\r\n            title: '公司',\r\n            // 最小宽度，与宽度不同的是，这个不是固定的宽度，如果表格有多余的空间，会平均分配给设置了 minWidth 的列\r\n            // 如果要做占满表格的列可以这么写\r\n            minWidth: '180px',\r\n            type: JVXETypes.input\r\n          },\r\n          {key: 'trend', title: '动向', width: '120px', type: JVXETypes.input},\r\n        ],\r\n        // 树的数据，这里模拟分页固定数据，实际情况应该是后台查出来的数据\r\n        treeData: [\r\n          // 第1级数据\r\n          {\r\n            title: '1-10页',\r\n            key: '1-10',\r\n            // 第2级数据\r\n            children: [\r\n              {title: '第 1 页', key: 1, slots: {icon: 'myIcon'}},\r\n              {title: '第 2 页', key: 2, slots: {icon: 'myIcon'}},\r\n              {\r\n                title: '第 3 页',\r\n                key: 3,\r\n                slots: {icon: 'myIcon'},\r\n                // 第3级数据\r\n                children: [\r\n                  {title: '第 333 页', key: 333, slots: {icon: 'myIcon'}},\r\n                  {title: '第 444 页', key: 444, slots: {icon: 'myIcon'}},\r\n                  {title: '第 555 页', key: 555, slots: {icon: 'myIcon'}},\r\n                  // 第4第5级以此类推，加上 children 属性即可\r\n                ],\r\n              },\r\n              {title: '第 4 页', key: 4, slots: {icon: 'myIcon'}},\r\n              {title: '第 5 页', key: 5, slots: {icon: 'myIcon'}},\r\n              {title: '第 6 页', key: 6, slots: {icon: 'myIcon'}},\r\n              {title: '第 7 页', key: 7, slots: {icon: 'myIcon'}},\r\n              {title: '第 8 页', key: 8, slots: {icon: 'myIcon'}},\r\n              {title: '第 9 页', key: 9, slots: {icon: 'myIcon'}},\r\n              {title: '第 10 页', key: 10, slots: {icon: 'myIcon'}},\r\n            ],\r\n            slots: {icon: 'myIcon'},\r\n          },\r\n          {\r\n            title: '11-20页',\r\n            key: '11-20',\r\n            children: [\r\n              {title: '第 11 页', key: 11, slots: {icon: 'myIcon'}},\r\n              {title: '第 12 页', key: 12, slots: {icon: 'myIcon'}},\r\n              {title: '第 13 页', key: 13, slots: {icon: 'myIcon'}},\r\n              {title: '第 14 页', key: 14, slots: {icon: 'myIcon'}},\r\n              {title: '第 15 页', key: 15, slots: {icon: 'myIcon'}},\r\n              {title: '第 16 页', key: 16, slots: {icon: 'myIcon'}},\r\n              {title: '第 17 页', key: 17, slots: {icon: 'myIcon'}},\r\n              {title: '第 18 页', key: 18, slots: {icon: 'myIcon'}},\r\n              {title: '第 19 页', key: 19, slots: {icon: 'myIcon'}},\r\n              {title: '第 20 页', key: 20, slots: {icon: 'myIcon'}},\r\n            ],\r\n            slots: {icon: 'myIcon'},\r\n          },\r\n        ],\r\n        // 树展开的列，默认 1-10\r\n        treeExpandedKeys: ['1-10'],\r\n        // 查询url地址\r\n        url: {\r\n          getData: '/mock/vxe/getData',\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n      this.loadData()\r\n    },\r\n    methods: {\r\n\r\n      // 加载行编辑的数据\r\n      loadData() {\r\n        // 封装查询条件\r\n        let formData = {\r\n          pageNo: this.pagination.current,\r\n          pageSize: this.pagination.pageSize\r\n        }\r\n        // 调用查询数据接口\r\n        this.loading = true\r\n        getAction(this.url.getData, formData).then(res => {\r\n          if (res.success) {\r\n            // 后台查询回来的 total，数据总数量\r\n            this.pagination.total = res.result.total\r\n            // 将查询的数据赋值给 dataSource\r\n            this.dataSource = res.result.records\r\n            // 重置选择\r\n            this.selectedRows = []\r\n          } else {\r\n            this.$error({title: '主表查询失败', content: res.message})\r\n          }\r\n        }).finally(() => {\r\n          // 这里是无论成功或失败都会执行的方法，在这里关闭loading\r\n          this.loading = false\r\n        })\r\n      },\r\n\r\n      handleTablePageChange(event) {\r\n        // 重新赋值\r\n        this.pagination.current = event.current\r\n        this.pagination.pageSize = event.pageSize\r\n        // 查询数据\r\n        this.loadData()\r\n        // 判断树展开的key\r\n        if (event.current <= 10) {\r\n          this.treeExpandedKeys = ['1-10']\r\n        } else {\r\n          this.treeExpandedKeys = ['11-20']\r\n        }\r\n      },\r\n\r\n      // 树被选择触发的事件\r\n      handleTreeSelect(selectedKeys) {\r\n        let key = selectedKeys[0]\r\n        if (typeof key === 'string') {\r\n          // 控制树展开为当前选择的列\r\n          this.treeExpandedKeys = selectedKeys\r\n        } else {\r\n          this.pagination.current = key\r\n          this.loadData()\r\n        }\r\n      },\r\n\r\n      // 树被选择触发的事件\r\n      handleTreeExpand(expandedKeys) {\r\n        this.treeExpandedKeys = expandedKeys\r\n      },\r\n\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\">\r\n  /** 隐藏文件小图标 */\r\n  .template-5-tree.ant-tree {\r\n    li span.ant-tree-switcher.ant-tree-switcher-noop {\r\n      display: none;\r\n    }\r\n  }\r\n</style>"]}]}