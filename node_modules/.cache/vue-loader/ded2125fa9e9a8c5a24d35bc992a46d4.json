{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\jeecg\\JImportModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\JImportModal.vue","mtime":1615948815736},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHBvc3RBY3Rpb24gfSBmcm9tICdAL2FwaS9tYW5hZ2UnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSkltcG9ydE1vZGFsJywKICBwcm9wczp7CiAgICB1cmw6ewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgICByZXF1aXJlZDogZmFsc2UKICAgIH0sCiAgICBiaXo6ewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgICByZXF1aXJlZDogZmFsc2UKICAgIH0KICB9LAogIGRhdGEoKXsKICAgIHJldHVybiB7CiAgICAgIHZpc2libGU6ZmFsc2UsCiAgICAgIHVwbG9hZGluZzpmYWxzZSwKICAgICAgZmlsZUxpc3Q6W10sCiAgICAgIHVwbG9hZEFjdGlvbjonJywKICAgICAgZm9yZWlnbktleXM6JycKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICB1cmwgKHZhbCkgewogICAgICBpZih2YWwpewogICAgICAgdGhpcy51cGxvYWRBY3Rpb24gPSB3aW5kb3cuX0NPTkZJR1snZG9taWFuVVJMJ10rdmFsCiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQgKCkgewogICAgdGhpcy51cGxvYWRBY3Rpb24gPSB3aW5kb3cuX0NPTkZJR1snZG9taWFuVVJMJ10rdGhpcy51cmwKICB9LAoKICBtZXRob2RzOnsKICAgIGhhbmRsZUNsb3NlKCl7CiAgICAgIHRoaXMudmlzaWJsZT1mYWxzZQogICAgfSwKICAgIHNob3coYXJnKXsKICAgICAgdGhpcy5maWxlTGlzdCA9IFtdCiAgICAgIHRoaXMudXBsb2FkaW5nID0gZmFsc2UKICAgICAgdGhpcy52aXNpYmxlID0gdHJ1ZQogICAgICB0aGlzLmZvcmVpZ25LZXlzID0gYXJnOwogICAgfSwKICAgIGhhbmRsZVJlbW92ZShmaWxlKSB7CiAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5maWxlTGlzdC5pbmRleE9mKGZpbGUpOwogICAgICBjb25zdCBuZXdGaWxlTGlzdCA9IHRoaXMuZmlsZUxpc3Quc2xpY2UoKTsKICAgICAgbmV3RmlsZUxpc3Quc3BsaWNlKGluZGV4LCAxKTsKICAgICAgdGhpcy5maWxlTGlzdCA9IG5ld0ZpbGVMaXN0CiAgICB9LAogICAgYmVmb3JlVXBsb2FkKGZpbGUpIHsKICAgICAgdGhpcy5maWxlTGlzdCA9IFsuLi50aGlzLmZpbGVMaXN0LCBmaWxlXQogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgaGFuZGxlSW1wb3J0KCkgewogICAgICBjb25zdCB7IGZpbGVMaXN0IH0gPSB0aGlzOwogICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICBpZih0aGlzLmJpeil7CiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdpc1NpbmdsZVRhYmxlSW1wb3J0Jyx0aGlzLmJpeik7CiAgICAgIH0KICAgICAgaWYodGhpcy5mb3JlaWduS2V5cyAmJiB0aGlzLmZvcmVpZ25LZXlzLmxlbmd0aD4wKXsKICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZvcmVpZ25LZXlzJyx0aGlzLmZvcmVpZ25LZXlzKTsKICAgICAgfQogICAgICBmaWxlTGlzdC5mb3JFYWNoKChmaWxlKSA9PiB7CiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlc1tdJywgZmlsZSk7CiAgICAgIH0pOwogICAgICB0aGlzLnVwbG9hZGluZyA9IHRydWUKICAgICAgcG9zdEFjdGlvbih0aGlzLnVwbG9hZEFjdGlvbiwgZm9ybURhdGEpLnRoZW4oKHJlcykgPT4gewogICAgICAgIHRoaXMudXBsb2FkaW5nID0gZmFsc2UKICAgICAgICBpZihyZXMuc3VjY2Vzcyl7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MocmVzLm1lc3NhZ2UpCiAgICAgICAgICB0aGlzLnZpc2libGU9ZmFsc2UKICAgICAgICAgIHRoaXMuJGVtaXQoJ29rJykKICAgICAgICB9ZWxzZXsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZyhyZXMubWVzc2FnZSkKICAgICAgICB9CiAgICAgIH0pCiAgICB9CgogIH0KfQo="},{"version":3,"sources":["JImportModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"JImportModal.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\r\n  <a-modal\r\n    title=\"导入EXCEL\"\r\n    :width=\"600\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"uploading\"\r\n    @cancel=\"handleClose\">\r\n\r\n    <a-upload\r\n      name=\"file\"\r\n      :multiple=\"true\"\r\n      accept=\".xls,.xlsx\"\r\n      :fileList=\"fileList\"\r\n      :remove=\"handleRemove\"\r\n      :beforeUpload=\"beforeUpload\">\r\n      <a-button>\r\n        <a-icon type=\"upload\" />\r\n        选择导入文件\r\n      </a-button>\r\n    </a-upload>\r\n\r\n    <template slot=\"footer\">\r\n      <a-button @click=\"handleClose\">关闭</a-button>\r\n      <a-button\r\n        type=\"primary\"\r\n        @click=\"handleImport\"\r\n        :disabled=\"fileList.length === 0\"\r\n        :loading=\"uploading\">\r\n        {{ uploading ? '上传中...' : '开始上传' }}\r\n      </a-button>\r\n    </template>\r\n\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import { postAction } from '@/api/manage'\r\n  export default {\r\n    name: 'JImportModal',\r\n    props:{\r\n      url:{\r\n        type: String,\r\n        default: '',\r\n        required: false\r\n      },\r\n      biz:{\r\n        type: String,\r\n        default: '',\r\n        required: false\r\n      }\r\n    },\r\n    data(){\r\n      return {\r\n        visible:false,\r\n        uploading:false,\r\n        fileList:[],\r\n        uploadAction:'',\r\n        foreignKeys:''\r\n      }\r\n    },\r\n    watch: {\r\n      url (val) {\r\n        if(val){\r\n         this.uploadAction = window._CONFIG['domianURL']+val\r\n        }\r\n      }\r\n    },\r\n    created () {\r\n      this.uploadAction = window._CONFIG['domianURL']+this.url\r\n    },\r\n\r\n    methods:{\r\n      handleClose(){\r\n        this.visible=false\r\n      },\r\n      show(arg){\r\n        this.fileList = []\r\n        this.uploading = false\r\n        this.visible = true\r\n        this.foreignKeys = arg;\r\n      },\r\n      handleRemove(file) {\r\n        const index = this.fileList.indexOf(file);\r\n        const newFileList = this.fileList.slice();\r\n        newFileList.splice(index, 1);\r\n        this.fileList = newFileList\r\n      },\r\n      beforeUpload(file) {\r\n        this.fileList = [...this.fileList, file]\r\n        return false;\r\n      },\r\n      handleImport() {\r\n        const { fileList } = this;\r\n        const formData = new FormData();\r\n        if(this.biz){\r\n          formData.append('isSingleTableImport',this.biz);\r\n        }\r\n        if(this.foreignKeys && this.foreignKeys.length>0){\r\n          formData.append('foreignKeys',this.foreignKeys);\r\n        }\r\n        fileList.forEach((file) => {\r\n          formData.append('files[]', file);\r\n        });\r\n        this.uploading = true\r\n        postAction(this.uploadAction, formData).then((res) => {\r\n          this.uploading = false\r\n          if(res.success){\r\n            this.$message.success(res.message)\r\n            this.visible=false\r\n            this.$emit('ok')\r\n          }else{\r\n            this.$message.warning(res.message)\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}