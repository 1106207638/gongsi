{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\jeecg\\JTreeDict.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\JTreeDict.vue","mtime":1615948815749},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldEFjdGlvbiB9IGZyb20gJ0AvYXBpL21hbmFnZScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSlRyZWVEaWN0JywKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICB0cmVlRGF0YTpbXSwKICAgICAgdHJlZVZhbHVlOiBudWxsLAogICAgICB1cmxfcm9vdDoiL3N5cy9jYXRlZ29yeS9sb2FkVHJlZVJvb3QiLAogICAgICB1cmxfY2hpbGRyZW46Ii9zeXMvY2F0ZWdvcnkvbG9hZFRyZWVDaGlsZHJlbiIsCiAgICAgIHVybF92aWV3Oicvc3lzL2NhdGVnb3J5L2xvYWRPbmUnLAogICAgfQogIH0sCiAgcHJvcHM6ewogICAgdmFsdWU6ewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiBmYWxzZQogICAgfSwKICAgIHBsYWNlaG9sZGVyOnsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAn6K+36YCJ5oupJywKICAgICAgcmVxdWlyZWQ6IGZhbHNlCiAgICB9LAogICAgcGFyZW50Q29kZTp7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycsCiAgICAgIHJlcXVpcmVkOiBmYWxzZQogICAgfSwKICAgIGZpZWxkOnsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnaWQnLAogICAgICByZXF1aXJlZDogZmFsc2UKICAgIH0sCiAgICByb290OnsKICAgICAgdHlwZTpPYmplY3QsCiAgICAgIHJlcXVpcmVkOmZhbHNlLAogICAgICBkZWZhdWx0OigpPT57CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHBpZDonMCcKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBhc3luYzp7CiAgICAgIHR5cGU6Qm9vbGVhbiwKICAgICAgZGVmYXVsdDpmYWxzZSwKICAgICAgcmVxdWlyZWQ6ZmFsc2UKICAgIH0sCiAgICBkaXNhYmxlZDp7CiAgICAgIHR5cGU6Qm9vbGVhbiwKICAgICAgZGVmYXVsdDpmYWxzZSwKICAgICAgcmVxdWlyZWQ6ZmFsc2UKICAgIH0KICB9LAogIHdhdGNoOnsKICAgIHJvb3Q6ewogICAgICBoYW5kbGVyKHZhbCl7CiAgICAgICAgY29uc29sZS5sb2coInJvb3QtY2hhbmdlIix2YWwpCiAgICAgIH0sCiAgICAgIGRlZXA6dHJ1ZQogICAgfSwKICAgIHBhcmVudENvZGU6ewogICAgICBoYW5kbGVyKCl7CiAgICAgICAgdGhpcy5sb2FkUm9vdCgpCiAgICAgIH0KICAgIH0sCiAgICB2YWx1ZTp7CiAgICAgIGhhbmRsZXIoKXsKICAgICAgICB0aGlzLmxvYWRWaWV3SW5mbygpCiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQoKXsKICAgIHRoaXMubG9hZFJvb3QoKQogICAgdGhpcy5sb2FkVmlld0luZm8oKQogIH0sCiAgbW9kZWw6IHsKICAgIHByb3A6ICd2YWx1ZScsCiAgICBldmVudDogJ2NoYW5nZScKICB9LAogIG1ldGhvZHM6ewogICAgbG9hZFZpZXdJbmZvKCl7CiAgICAgIGlmKCF0aGlzLnZhbHVlIHx8IHRoaXMudmFsdWU9PSIwIil7CiAgICAgICAgdGhpcy50cmVlVmFsdWUgPSBudWxsCiAgICAgIH1lbHNlewogICAgICAgIGxldCBwYXJhbSA9IHsKICAgICAgICAgIGZpZWxkOnRoaXMuZmllbGQsCiAgICAgICAgICB2YWw6dGhpcy52YWx1ZQogICAgICAgIH0KICAgICAgICBnZXRBY3Rpb24odGhpcy51cmxfdmlldyxwYXJhbSkudGhlbihyZXM9PnsKICAgICAgICAgIGlmKHJlcy5zdWNjZXNzKXsKICAgICAgICAgICAgdGhpcy50cmVlVmFsdWUgPSB7CiAgICAgICAgICAgICAgdmFsdWU6dGhpcy52YWx1ZSwKICAgICAgICAgICAgICBsYWJlbDpyZXMucmVzdWx0Lm5hbWUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIH0KICAgIH0sCiAgICBsb2FkUm9vdCgpewogICAgICBsZXQgcGFyYW0gPSB7CiAgICAgICAgYXN5bmM6dGhpcy5hc3luYywKICAgICAgICBwY29kZTp0aGlzLnBhcmVudENvZGUKICAgICAgfQogICAgICBnZXRBY3Rpb24odGhpcy51cmxfcm9vdCxwYXJhbSkudGhlbihyZXM9PnsKICAgICAgICBpZihyZXMuc3VjY2Vzcyl7CiAgICAgICAgICB0aGlzLmhhbmRsZVRyZWVOb2RlVmFsdWUocmVzLnJlc3VsdCkKICAgICAgICAgIHRoaXMudHJlZURhdGEgPSBbLi4ucmVzLnJlc3VsdF0KICAgICAgICB9ZWxzZXsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1lc3NhZ2UpCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIGFzeW5jTG9hZFRyZWVEYXRhICh0cmVlTm9kZSkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgICBpZighdGhpcy5hc3luYyl7CiAgICAgICAgICByZXNvbHZlKCkKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICBpZiAodHJlZU5vZGUuJHZub2RlLmNoaWxkcmVuKSB7CiAgICAgICAgICByZXNvbHZlKCkKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICBsZXQgcGlkID0gdHJlZU5vZGUuJHZub2RlLmtleQogICAgICAgIGxldCBwYXJhbSA9IHsKICAgICAgICAgIHBpZDpwaWQKICAgICAgICB9CiAgICAgICAgZ2V0QWN0aW9uKHRoaXMudXJsX2NoaWxkcmVuLHBhcmFtKS50aGVuKHJlcz0+ewogICAgICAgICAgaWYocmVzLnN1Y2Nlc3MpewogICAgICAgICAgICB0aGlzLmhhbmRsZVRyZWVOb2RlVmFsdWUocmVzLnJlc3VsdCkKICAgICAgICAgICAgdGhpcy5hZGRDaGlsZHJlbihwaWQscmVzLnJlc3VsdCx0aGlzLnRyZWVEYXRhKQogICAgICAgICAgICB0aGlzLnRyZWVEYXRhID0gWy4uLnRoaXMudHJlZURhdGFdCiAgICAgICAgICB9CiAgICAgICAgICByZXNvbHZlKCkKICAgICAgICB9KQogICAgICB9KQogICAgfSwKICAgIGFkZENoaWxkcmVuKHBpZCxjaGlsZHJlbix0cmVlQXJyYXkpewogICAgICBpZih0cmVlQXJyYXkgJiYgdHJlZUFycmF5Lmxlbmd0aD4wKXsKICAgICAgICBmb3IobGV0IGl0ZW0gb2YgdHJlZUFycmF5KXsKICAgICAgICAgIGlmKGl0ZW0ua2V5ID09IHBpZCl7CiAgICAgICAgICAgIGlmKCFjaGlsZHJlbiB8fCBjaGlsZHJlbi5sZW5ndGg9PTApewogICAgICAgICAgICAgIGl0ZW0ubGVhZiA9IHRydWUKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgaXRlbS5jaGlsZHJlbiA9IGNoaWxkcmVuCiAgICAgICAgICAgIH0KICAgICAgICAgICAgYnJlYWsKICAgICAgICAgIH1lbHNlewogICAgICAgICAgICB0aGlzLmFkZENoaWxkcmVuKHBpZCxjaGlsZHJlbixpdGVtLmNoaWxkcmVuKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGhhbmRsZVRyZWVOb2RlVmFsdWUocmVzdWx0KXsKICAgICAgbGV0IHN0b3JlRmllbGQgPSB0aGlzLmZpZWxkPT0nY29kZSc/J2NvZGUnOidrZXknCiAgICAgIGZvcihsZXQgaSBvZiByZXN1bHQpewogICAgICAgIGkudmFsdWUgPSBpW3N0b3JlRmllbGRdCiAgICAgICAgaS5pc0xlYWYgPSAoIWkubGVhZik/ZmFsc2U6dHJ1ZQogICAgICAgIGlmKGkuY2hpbGRyZW4gJiYgaS5jaGlsZHJlbi5sZW5ndGg+MCl7CiAgICAgICAgICB0aGlzLmhhbmRsZVRyZWVOb2RlVmFsdWUoaS5jaGlsZHJlbikKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBvbkNoYW5nZSh2YWx1ZSl7CiAgICAgIGNvbnNvbGUubG9nKHZhbHVlKQogICAgICBpZighdmFsdWUpewogICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsICcnKTsKICAgICAgfWVsc2V7CiAgICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgdmFsdWUudmFsdWUpOwogICAgICB9CiAgICAgIHRoaXMudHJlZVZhbHVlID0gdmFsdWUKICAgIH0sCiAgICBvblNlYXJjaCh2YWx1ZSl7CiAgICAgIGNvbnNvbGUubG9nKHZhbHVlKQogICAgfSwKICAgIGdldEN1cnJUcmVlRGF0YSgpewogICAgICByZXR1cm4gdGhpcy50cmVlRGF0YQogICAgfQogIH0KCn0K"},{"version":3,"sources":["JTreeDict.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"JTreeDict.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\r\n  <a-tree-select\r\n    allowClear\r\n    labelInValue\r\n    style=\"width: 100%\"\r\n    :disabled=\"disabled\"\r\n    :dropdownStyle=\"{ maxHeight: '400px', overflow: 'auto' }\"\r\n    :placeholder=\"placeholder\"\r\n    :loadData=\"asyncLoadTreeData\"\r\n    :value=\"treeValue\"\r\n    :treeData=\"treeData\"\r\n    @change=\"onChange\"\r\n    @search=\"onSearch\">\r\n  </a-tree-select>\r\n</template>\r\n\r\n<script>\r\n  import { getAction } from '@/api/manage'\r\n\r\n  export default {\r\n    name: 'JTreeDict',\r\n    data(){\r\n      return {\r\n        treeData:[],\r\n        treeValue: null,\r\n        url_root:\"/sys/category/loadTreeRoot\",\r\n        url_children:\"/sys/category/loadTreeChildren\",\r\n        url_view:'/sys/category/loadOne',\r\n      }\r\n    },\r\n    props:{\r\n      value:{\r\n        type: String,\r\n        required: false\r\n      },\r\n      placeholder:{\r\n        type: String,\r\n        default: '请选择',\r\n        required: false\r\n      },\r\n      parentCode:{\r\n        type: String,\r\n        default: '',\r\n        required: false\r\n      },\r\n      field:{\r\n        type: String,\r\n        default: 'id',\r\n        required: false\r\n      },\r\n      root:{\r\n        type:Object,\r\n        required:false,\r\n        default:()=>{\r\n          return {\r\n            pid:'0'\r\n          }\r\n        }\r\n      },\r\n      async:{\r\n        type:Boolean,\r\n        default:false,\r\n        required:false\r\n      },\r\n      disabled:{\r\n        type:Boolean,\r\n        default:false,\r\n        required:false\r\n      }\r\n    },\r\n    watch:{\r\n      root:{\r\n        handler(val){\r\n          console.log(\"root-change\",val)\r\n        },\r\n        deep:true\r\n      },\r\n      parentCode:{\r\n        handler(){\r\n          this.loadRoot()\r\n        }\r\n      },\r\n      value:{\r\n        handler(){\r\n          this.loadViewInfo()\r\n        }\r\n      }\r\n    },\r\n    created(){\r\n      this.loadRoot()\r\n      this.loadViewInfo()\r\n    },\r\n    model: {\r\n      prop: 'value',\r\n      event: 'change'\r\n    },\r\n    methods:{\r\n      loadViewInfo(){\r\n        if(!this.value || this.value==\"0\"){\r\n          this.treeValue = null\r\n        }else{\r\n          let param = {\r\n            field:this.field,\r\n            val:this.value\r\n          }\r\n          getAction(this.url_view,param).then(res=>{\r\n            if(res.success){\r\n              this.treeValue = {\r\n                value:this.value,\r\n                label:res.result.name\r\n              }\r\n            }\r\n          })\r\n        }\r\n      },\r\n      loadRoot(){\r\n        let param = {\r\n          async:this.async,\r\n          pcode:this.parentCode\r\n        }\r\n        getAction(this.url_root,param).then(res=>{\r\n          if(res.success){\r\n            this.handleTreeNodeValue(res.result)\r\n            this.treeData = [...res.result]\r\n          }else{\r\n            this.$message.error(res.message)\r\n          }\r\n        })\r\n      },\r\n      asyncLoadTreeData (treeNode) {\r\n        return new Promise((resolve) => {\r\n          if(!this.async){\r\n            resolve()\r\n            return\r\n          }\r\n          if (treeNode.$vnode.children) {\r\n            resolve()\r\n            return\r\n          }\r\n          let pid = treeNode.$vnode.key\r\n          let param = {\r\n            pid:pid\r\n          }\r\n          getAction(this.url_children,param).then(res=>{\r\n            if(res.success){\r\n              this.handleTreeNodeValue(res.result)\r\n              this.addChildren(pid,res.result,this.treeData)\r\n              this.treeData = [...this.treeData]\r\n            }\r\n            resolve()\r\n          })\r\n        })\r\n      },\r\n      addChildren(pid,children,treeArray){\r\n        if(treeArray && treeArray.length>0){\r\n          for(let item of treeArray){\r\n            if(item.key == pid){\r\n              if(!children || children.length==0){\r\n                item.leaf = true\r\n              }else{\r\n                item.children = children\r\n              }\r\n              break\r\n            }else{\r\n              this.addChildren(pid,children,item.children)\r\n            }\r\n          }\r\n        }\r\n      },\r\n      handleTreeNodeValue(result){\r\n        let storeField = this.field=='code'?'code':'key'\r\n        for(let i of result){\r\n          i.value = i[storeField]\r\n          i.isLeaf = (!i.leaf)?false:true\r\n          if(i.children && i.children.length>0){\r\n            this.handleTreeNodeValue(i.children)\r\n          }\r\n        }\r\n      },\r\n      onChange(value){\r\n        console.log(value)\r\n        if(!value){\r\n          this.$emit('change', '');\r\n        }else{\r\n          this.$emit('change', value.value);\r\n        }\r\n        this.treeValue = value\r\n      },\r\n      onSearch(value){\r\n        console.log(value)\r\n      },\r\n      getCurrTreeData(){\r\n        return this.treeData\r\n      }\r\n    }\r\n\r\n  }\r\n</script>"]}]}