{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\chart\\Pie.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\chart\\Pie.vue","mtime":1615948814018},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IERhdGFTZXQgPSByZXF1aXJlKCdAYW50di9kYXRhLXNldCcpCmltcG9ydCB7IENoYXJ0RXZlbnRNaXhpbnMgfSBmcm9tICcuL21peGlucy9DaGFydE1peGlucycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUGllJywKICBtaXhpbnM6IFtDaGFydEV2ZW50TWl4aW5zXSwKICBwcm9wczogewogICAgdGl0bGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIGhlaWdodDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDI1NAogICAgfSwKICAgIGRhdGFTb3VyY2U6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFsKICAgICAgICB7IGl0ZW06ICfnpLrkvovkuIAnLCBjb3VudDogNDAgfSwKICAgICAgICB7IGl0ZW06ICfnpLrkvovkuownLCBjb3VudDogMjEgfSwKICAgICAgICB7IGl0ZW06ICfnpLrkvovkuIknLCBjb3VudDogMTcgfSwKICAgICAgICB7IGl0ZW06ICfnpLrkvovlm5snLCBjb3VudDogMTMgfSwKICAgICAgICB7IGl0ZW06ICfnpLrkvovkupQnLCBjb3VudDogOSB9CiAgICAgIF0KICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzY2FsZTogW3sKICAgICAgICBkYXRhS2V5OiAncGVyY2VudCcsCiAgICAgICAgbWluOiAwLAogICAgICAgIGZvcm1hdHRlcjogJy4wJScKICAgICAgfV0sCiAgICAgIHBpZVN0eWxlOiB7CiAgICAgICAgc3Ryb2tlOiAnI2ZmZicsCiAgICAgICAgbGluZVdpZHRoOiAxCiAgICAgIH0sCiAgICAgIGxhYmVsQ29uZmlnOiBbJ3BlcmNlbnQnLCB7CiAgICAgICAgZm9ybWF0dGVyOiAodmFsLCBpdGVtKSA9PiB7CiAgICAgICAgICByZXR1cm4gaXRlbS5wb2ludC5pdGVtICsgJzogJyArIHZhbAogICAgICAgIH0KICAgICAgfV0KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBkYXRhKCkgewogICAgICBsZXQgZHYgPSBuZXcgRGF0YVNldC5WaWV3KCkuc291cmNlKHRoaXMuZGF0YVNvdXJjZSkKICAgICAgLy8g6K6h566X5pWw5o2u55m+5YiG5q+UCiAgICAgIGR2LnRyYW5zZm9ybSh7CiAgICAgICAgdHlwZTogJ3BlcmNlbnQnLAogICAgICAgIGZpZWxkOiAnY291bnQnLAogICAgICAgIGRpbWVuc2lvbjogJ2l0ZW0nLAogICAgICAgIGFzOiAncGVyY2VudCcKICAgICAgfSkKICAgICAgcmV0dXJuIGR2LnJvd3MKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Pie.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Pie.vue","sourceRoot":"src/components/chart","sourcesContent":["<template>\r\n  <v-chart :forceFit=\"true\" :height=\"height\" :data=\"data\" :scale=\"scale\" :onClick=\"handleClick\">\r\n    <v-tooltip :showTitle=\"false\" dataKey=\"item*percent\"/>\r\n    <v-axis/>\r\n    <v-legend dataKey=\"item\"/>\r\n    <v-pie position=\"percent\" color=\"item\" :v-style=\"pieStyle\" :label=\"labelConfig\"/>\r\n    <v-coord type=\"theta\"/>\r\n  </v-chart>\r\n</template>\r\n\r\n<script>\r\n  const DataSet = require('@antv/data-set')\r\n  import { ChartEventMixins } from './mixins/ChartMixins'\r\n\r\n  export default {\r\n    name: 'Pie',\r\n    mixins: [ChartEventMixins],\r\n    props: {\r\n      title: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      height: {\r\n        type: Number,\r\n        default: 254\r\n      },\r\n      dataSource: {\r\n        type: Array,\r\n        default: () => [\r\n          { item: '示例一', count: 40 },\r\n          { item: '示例二', count: 21 },\r\n          { item: '示例三', count: 17 },\r\n          { item: '示例四', count: 13 },\r\n          { item: '示例五', count: 9 }\r\n        ]\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        scale: [{\r\n          dataKey: 'percent',\r\n          min: 0,\r\n          formatter: '.0%'\r\n        }],\r\n        pieStyle: {\r\n          stroke: '#fff',\r\n          lineWidth: 1\r\n        },\r\n        labelConfig: ['percent', {\r\n          formatter: (val, item) => {\r\n            return item.point.item + ': ' + val\r\n          }\r\n        }]\r\n      }\r\n    },\r\n    computed: {\r\n      data() {\r\n        let dv = new DataSet.View().source(this.dataSource)\r\n        // 计算数据百分比\r\n        dv.transform({\r\n          type: 'percent',\r\n          field: 'count',\r\n          dimension: 'item',\r\n          as: 'percent'\r\n        })\r\n        return dv.rows\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}