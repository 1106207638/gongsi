{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\jeecg\\minipop\\JFilePop.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\minipop\\JFilePop.vue","mtime":1615948814849},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBKVXBsb2FkIGZyb20gJ0AvY29tcG9uZW50cy9qZWVjZy9KVXBsb2FkJwppbXBvcnQgeyBnZXRGaWxlQWNjZXNzSHR0cFVybCB9IGZyb20gJ0AvYXBpL21hbmFnZSc7Cgpjb25zdCBnZXRGaWxlTmFtZT0ocGF0aCk9PnsKICBpZihwYXRoLmxhc3RJbmRleE9mKCJcXCIpPj0wKXsKICAgIGxldCByZWc9bmV3IFJlZ0V4cCgiXFxcXCIsImciKTsKICAgIHBhdGggPSBwYXRoLnJlcGxhY2UocmVnLCIvIik7CiAgfQogIHJldHVybiBwYXRoLnN1YnN0cmluZyhwYXRoLmxhc3RJbmRleE9mKCIvIikrMSk7Cn0KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSkZpbGVQb3AnLAogIGNvbXBvbmVudHM6IHsgSlVwbG9hZCB9LAogIHByb3BzOnsKICAgIHRpdGxlOnsKICAgICAgdHlwZTpTdHJpbmcsCiAgICAgIGRlZmF1bHQ6JycsCiAgICAgIHJlcXVpcmVkOmZhbHNlCiAgICB9LAogICAgcG9zaXRpb246ewogICAgICB0eXBlOlN0cmluZywKICAgICAgZGVmYXVsdDoncmlnaHQnLAogICAgICByZXF1aXJlZDpmYWxzZQogICAgfSwKICAgIGhlaWdodDp7CiAgICAgIHR5cGU6TnVtYmVyLAogICAgICBkZWZhdWx0OjIwMCwKICAgICAgcmVxdWlyZWQ6ZmFsc2UKICAgIH0sCiAgICB3aWR0aDp7CiAgICAgIHR5cGU6TnVtYmVyLAogICAgICBkZWZhdWx0OjUyMCwKICAgICAgcmVxdWlyZWQ6ZmFsc2UKICAgIH0sCgogICAgcG9wQ29udGFpbmVyOnsKICAgICAgdHlwZTpTdHJpbmcsCiAgICAgIGRlZmF1bHQ6JycsCiAgICAgIHJlcXVpcmVkOmZhbHNlCiAgICB9LAogICAgZGlzYWJsZWQ6ewogICAgICB0eXBlOkJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6ZmFsc2UsCiAgICAgIHJlcXVpcmVkOmZhbHNlCiAgICB9LAogICAgbnVtYmVyOnsKICAgICAgdHlwZTpOdW1iZXIsCiAgICAgIHJlcXVpcmVkOmZhbHNlLAogICAgICBkZWZhdWx0OiAwCiAgICB9CiAgfSwKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICB2aXNpYmxlOmZhbHNlLAogICAgICBmaWxlUGF0aDonJywKICAgICAgaWQ6JycsCiAgICAgIGZpbGVUeXBlOidmaWxlJwoKICAgIH0KICB9LAogIG1ldGhvZHM6ewogICAgaGFuZGxlQ2hhbmdlKHZhbHVlKXsKICAgICAgdGhpcy5maWxlUGF0aCA9IHZhbHVlOwogICAgfSwKICAgIHNob3coaWQsdmFsdWUsZmxhZyl7CiAgICAgIHRoaXMuaWQgPSBpZDsKICAgICAgdGhpcy5maWxlUGF0aCA9IHZhbHVlOwogICAgICB0aGlzLnZpc2libGU9dHJ1ZQogICAgICBpZihmbGFnID09PSAnaW1nJyl7CiAgICAgICAgdGhpcy5maWxlVHlwZSA9ICdpbWFnZScKICAgICAgfWVsc2V7CiAgICAgICAgdGhpcy5maWxlVHlwZSA9ICdmaWxlJwogICAgICB9CgogICAgfSwKICAgIG9rKCl7CiAgICAgIGlmKCF0aGlzLmZpbGVQYXRoKXsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLmnKrkuIrkvKDku7vkvZXmlofku7YiKQogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgICBsZXQgYXJyID0gdGhpcy5maWxlUGF0aC5zcGxpdCgiLCIpCiAgICAgIGxldCBvYmogPSB7CiAgICAgICAgbmFtZTpnZXRGaWxlTmFtZShhcnJbMF0pLAogICAgICAgIHVybDpnZXRGaWxlQWNjZXNzSHR0cFVybChhcnJbMF0pLAogICAgICAgIHBhdGg6dGhpcy5maWxlUGF0aCwKICAgICAgICBzdGF0dXM6ICdkb25lJywKICAgICAgICBpZDp0aGlzLmlkCiAgICAgIH0KICAgICAgdGhpcy4kZW1pdCgnb2snLG9iaikKICAgICAgdGhpcy52aXNpYmxlPWZhbHNlCiAgICB9LAogICAgY2xvc2UoKXsKICAgICAgdGhpcy52aXNpYmxlPWZhbHNlCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["JFilePop.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JFilePop.vue","sourceRoot":"src/components/jeecg/minipop","sourcesContent":["<template>\r\n  <div>\r\n    <a-modal\r\n      :title=\"fileType === 'image' ? '图片上传' : '文件上传'\"\r\n      :width=\"width\"\r\n      :visible=\"visible\"\r\n      @ok=\"ok\"\r\n      cancelText=\"取消\"\r\n      @cancel=\"close\">\r\n      <!--style=\"top: 20px;\"-->\r\n      <j-upload :file-type=\"fileType\" :value=\"filePath\" @change=\"handleChange\" :disabled=\"disabled\" :number=\"number\"></j-upload>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import JUpload from '@/components/jeecg/JUpload'\r\n  import { getFileAccessHttpUrl } from '@/api/manage';\r\n\r\n  const getFileName=(path)=>{\r\n    if(path.lastIndexOf(\"\\\\\")>=0){\r\n      let reg=new RegExp(\"\\\\\\\\\",\"g\");\r\n      path = path.replace(reg,\"/\");\r\n    }\r\n    return path.substring(path.lastIndexOf(\"/\")+1);\r\n  }\r\n\r\n  export default {\r\n    name: 'JFilePop',\r\n    components: { JUpload },\r\n    props:{\r\n      title:{\r\n        type:String,\r\n        default:'',\r\n        required:false\r\n      },\r\n      position:{\r\n        type:String,\r\n        default:'right',\r\n        required:false\r\n      },\r\n      height:{\r\n        type:Number,\r\n        default:200,\r\n        required:false\r\n      },\r\n      width:{\r\n        type:Number,\r\n        default:520,\r\n        required:false\r\n      },\r\n\r\n      popContainer:{\r\n        type:String,\r\n        default:'',\r\n        required:false\r\n      },\r\n      disabled:{\r\n        type:Boolean,\r\n        default:false,\r\n        required:false\r\n      },\r\n      number:{\r\n        type:Number,\r\n        required:false,\r\n        default: 0\r\n      }\r\n    },\r\n    data(){\r\n      return {\r\n        visible:false,\r\n        filePath:'',\r\n        id:'',\r\n        fileType:'file'\r\n\r\n      }\r\n    },\r\n    methods:{\r\n      handleChange(value){\r\n        this.filePath = value;\r\n      },\r\n      show(id,value,flag){\r\n        this.id = id;\r\n        this.filePath = value;\r\n        this.visible=true\r\n        if(flag === 'img'){\r\n          this.fileType = 'image'\r\n        }else{\r\n          this.fileType = 'file'\r\n        }\r\n\r\n      },\r\n      ok(){\r\n        if(!this.filePath){\r\n          this.$message.error(\"未上传任何文件\")\r\n          return false;\r\n        }\r\n        let arr = this.filePath.split(\",\")\r\n        let obj = {\r\n          name:getFileName(arr[0]),\r\n          url:getFileAccessHttpUrl(arr[0]),\r\n          path:this.filePath,\r\n          status: 'done',\r\n          id:this.id\r\n        }\r\n        this.$emit('ok',obj)\r\n        this.visible=false\r\n      },\r\n      close(){\r\n        this.visible=false\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}