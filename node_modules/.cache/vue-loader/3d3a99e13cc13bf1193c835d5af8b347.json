{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\views\\online\\modules\\codeGeneration.vue?vue&type=style&index=0&id=2088b97f&scoped=true&lang=css&","dependencies":[{"path":"D:\\vue\\src\\views\\online\\modules\\codeGeneration.vue","mtime":1615948820503},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\dist\\cjs.js","mtime":1615952641773},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1615952643260},{"path":"D:\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1615952643158},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5mb3JtLWl0ZW0gew0KICBtYXJnaW4tbGVmdDogMTVweA0KfQ0KL2RlZXAvIC5mb3JtLWl0ZW0gew0KICBtYXJnaW4tbGVmdDogMDsNCn0NCg0K"},{"version":3,"sources":["codeGeneration.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmPA;AACA;AACA;AACA;AACA;AACA","file":"codeGeneration.vue","sourceRoot":"src/views/online/modules","sourcesContent":["<template>\r\n  <j-modal\r\n      :title=\"title\"\r\n      :width=\"width\"\r\n      :visible=\"visible\"\r\n      :fullscreen=\"false\"\r\n      :confirmLoading=\"confirmLoading\"\r\n      switchFullscreen\r\n      @ok=\"handleOk\"\r\n      @cancel=\"handleCancel\"\r\n      cancelText=\"关闭\">\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n        <a-form-item label=\"代码生成目录\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input-search  v-decorator=\"['projectPath',{}]\" size=\"normal\" @search=\"onSearch\">\r\n            <a-button slot=\"enterButton\" icon=\"folder-open\">\r\n              浏览\r\n            </a-button>\r\n          </a-input-search>\r\n        </a-form-item>\r\n        <a-form-item label=\"页面分格\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-select  v-decorator=\"['jspMode']\">\r\n            <a-select-option v-for=\"(item,index) in jspModeList\" :key=\"index\" :value=\"item.code\">\r\n              {{ item.note }}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <a-form-item label=\"功能说明\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input v-decorator=\"['ftlDescription',{}]\"></a-input>\r\n\r\n        </a-form-item>\r\n        <a-form-item label=\"表名\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input v-decorator=\"['tableName',{\r\n                 rules: [{ required: true, message: '请输入表名' }]\r\n              }]\"></a-input>\r\n        </a-form-item>\r\n        <a-form-item label=\"实体类名\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input v-decorator=\"['entityName',{\r\n                 rules: [{ required: true, message: '请输入实体类名' }]\r\n              }]\"></a-input>\r\n          <!--              <j-dict-select-tag type=\"list\" v-decorator=\"['idType']\" :trigger-change=\"true\"-->\r\n          <!--                                 dictCode=\"theme_Template\" placeholder=\"请选择检查结果\" class=\"form-item\"/>-->\r\n\r\n        </a-form-item>\r\n        <a-form-item label=\"包名（小写）\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input v-decorator=\"['entityPackage',{\r\n                 rules: [{ required: true, message: '请输入包名' }]\r\n              }]\"></a-input>\r\n        </a-form-item>\r\n        <a-form-item label=\"代码分层样式\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <!--              <j-dict-select-tag type=\"list\" v-decorator=\"['themeTemplate']\" :trigger-change=\"true\"-->\r\n          <!--                                 dictCode=\"theme__Template\" placeholder=\"请选择检查结果\" class=\"form-item\"/>-->\r\n          <a-select v-decorator=\"['packageStyle',{}]\" disabled >\r\n            <a-select-option value=\"service\">\r\n              业务分层\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n\r\n      </a-form>\r\n      <catalog ref=\"catalog\" @ok=\"toggleYES\" />\r\n      <result ref=\"result\" @ok=\"toggleYES\" />\r\n    </a-spin>\r\n  </j-modal>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport {getAction, httpAction} from '@/api/manage'\r\nimport pick from 'lodash.pick'\r\nimport {validateDuplicateValue} from '@/utils/util'\r\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\"\r\nimport catalog  from \"@views/online/modules/catalog\";\r\nimport result from \"@views/online/modules/result\";\r\nexport default {\r\n  name: \"codeGeneration\",\r\n  components: {\r\n    JDictSelectTag,\r\n    catalog,\r\n    result\r\n  },\r\n  prop: {\r\n    taskId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      jspModeList:[],\r\n      // 选中的行数\r\n      code:\"\",\r\n      selectedRowIds:[],\r\n      form: this.$form.createForm(this),\r\n      title: \"操作\",\r\n      width: 800,\r\n      visible: false,\r\n      model: {},\r\n      labelCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 5},\r\n      },\r\n      wrapperCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 16},\r\n      },\r\n      confirmLoading: false,\r\n      validatorRules: {},\r\n      url: {\r\n        form: \"/online/cgform/head/tableInfo\",\r\n        sc:'/online/cgform/api/codeGenerate',\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n  },\r\n  methods: {\r\n    // 选择完成\r\n    toggleYES(data) {\r\n      this.form.validateFields((error, values) => {//获取form表单中的数据\r\n        if (!error) {//当没有错误时调用提交方法\r\n          let formData = values\r\n          formData.projectPath = data[0]\r\n          this.edit(formData)\r\n        }\r\n      })\r\n\r\n    },\r\n    onSearch() {\r\n      this.$refs.catalog.edit()\r\n      this.$refs.catalog.title = '选择目录'\r\n    },\r\n    add(code) {\r\n      var httpurl = this.url.form\r\n      var obj = {\r\n        code: code\r\n      }\r\n      this.code = code\r\n      getAction(httpurl, obj).then((res) => {\r\n        console.log(res)\r\n        if (res.success) {\r\n          this.$message.success(res.message);\r\n          var mulu = res.result.projectPath\r\n          var xinxi = res.result.main\r\n          var jsplist = res.result.jspModeList\r\n          this.jspModeList = res.result.jspModeList\r\n          var name = xinxi.tableName\r\n          var str = ''\r\n          for(var i = 0 ; i < name.length;i++) {\r\n            if(i==0) {\r\n              str+=name[i].toUpperCase()\r\n            }else if(name[i]=='_') {\r\n              str+=name[i]\r\n              str+=name[i+1].toUpperCase()\r\n              i++\r\n            }else {\r\n              str+=name[i]\r\n            }\r\n          }\r\n          var record = {\r\n            code: this.code,\r\n            codeTypes:\"controller,service,dao,mapper,entity,vue\",\r\n            entityName:str,\r\n            entityPackage:'',\r\n            ftlDescription:xinxi.tableTxt,\r\n            jformType:'1',\r\n            jspMode:'one',\r\n            packageStyle:'service',\r\n            projectPath: mulu,\r\n            tableName:xinxi.tableName,\r\n            tableName_tmp:xinxi.tableName\r\n          }\r\n          this.edit(record);\r\n        } else {\r\n          that.$message.warning(res.message);\r\n        }\r\n      }).finally(() => {\r\n      })\r\n      this.edit({\r\n\r\n      });\r\n    },\r\n    edit(record) {\r\n      record.taskId = this.taskId;\r\n      this.taskId =\"\"\r\n      this.form.resetFields();\r\n      this.model = Object.assign({}, record);\r\n      this.visible = true;\r\n      this.$nextTick(() => {\r\n        this.form.setFieldsValue(pick(this.model,'code','codeTypes','entityName','entityPackage',\r\n            'ftlDescription','jformType','jspMode','packageStyle','projectPath','tableName','tableName_tmp'))\r\n      })\r\n    },\r\n    close() {\r\n      this.$emit('close');\r\n      this.visible = false;\r\n    },\r\n    handleOk() {\r\n      const that = this;\r\n      // 触发表单验证\r\n      this.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          that.confirmLoading = true;\r\n          let httpurl = '';\r\n          let method = '';\r\n          if (!this.model.id) {\r\n            httpurl += this.url.sc;\r\n            method = 'post';\r\n          } else {\r\n            httpurl += this.url.sc;\r\n            method = 'post';\r\n          }\r\n          let formData = Object.assign(this.model, values);\r\n          console.log(\"表单提交数据\", formData)\r\n\r\n          httpAction(httpurl, formData, method).then((res) => {\r\n            if (res.success) {\r\n              that.$message.success(res.message);\r\n              // that.$emit('ok');\r\n              that.$refs.result.add(res.result)\r\n            } else {\r\n              that.$message.warning(res.message);\r\n            }\r\n          }).finally(() => {\r\n            that.confirmLoading = false;\r\n            that.close();\r\n          })\r\n        }\r\n\r\n      })\r\n    },\r\n    handleCancel() {\r\n      this.close()\r\n    },\r\n    popupCallback(row) {\r\n      this.form.setFieldsValue(pick(row, 'name'))\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.form-item {\r\n  margin-left: 15px\r\n}\r\n/deep/ .form-item {\r\n  margin-left: 0;\r\n}\r\n\r\n</style>"]}]}