{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\jeecg\\JEditableTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\JEditableTable.vue","mtime":1615948815728},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1615952610415},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQgRHJhZ2dhYmxlIGZyb20gJ3Z1ZWRyYWdnYWJsZScKaW1wb3J0IHsgQUNDRVNTX1RPS0VOIH0gZnJvbSAnQC9zdG9yZS9tdXRhdGlvbi10eXBlcycKaW1wb3J0IHsgRm9ybVR5cGVzLCBWQUxJREFURV9OT19QQVNTRUQgfSBmcm9tICdAL3V0aWxzL0pFZGl0YWJsZVRhYmxlVXRpbCcKaW1wb3J0IHsgY2xvbmVPYmplY3QsIHJhbmRvbVN0cmluZywgcmFuZG9tTnVtYmVyLCBnZXRFdmVudFBhdGggfSBmcm9tICdAL3V0aWxzL3V0aWwnCmltcG9ydCBKRGF0ZSBmcm9tICdAL2NvbXBvbmVudHMvamVlY2cvSkRhdGUnCmltcG9ydCB7IGZpbHRlckRpY3RUZXh0LCBpbml0RGljdE9wdGlvbnMgfSBmcm9tICdAL2NvbXBvbmVudHMvZGljdC9KRGljdFNlbGVjdFV0aWwnCmltcG9ydCB7IGdldEZpbGVBY2Nlc3NIdHRwVXJsIH0gZnJvbSAnQC9hcGkvbWFuYWdlJzsKaW1wb3J0IEpJbnB1dFBvcCBmcm9tICdAL2NvbXBvbmVudHMvamVlY2cvbWluaXBvcC9KSW5wdXRQb3AnCmltcG9ydCBKRmlsZVBvcCBmcm9tICdAL2NvbXBvbmVudHMvamVlY2cvbWluaXBvcC9KRmlsZVBvcCcKCi8vIOihjOmrmO+8jOmcgOimgeWcqOWunuS+i+WKoOi9veWujOaIkOWJjeeUqOWIsApsZXQgcm93SGVpZ2h0ID0gNjEKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSkVkaXRhYmxlVGFibGUnLAogIGNvbXBvbmVudHM6IHsgSkRhdGUsIERyYWdnYWJsZSwgSklucHV0UG9wLCBKRmlsZVBvcCB9LAogIHByb3ZpZGUoKSB7CiAgICByZXR1cm4gewogICAgICBwYXJlbnRJc0pFZGl0YWJsZVRhYmxlOiB0cnVlLAogICAgICBnZXREZXN0cm95Q2xlYW5Hcm91cFJlcXVlc3Q6ICgpID0+IHRoaXMuZGVzdHJveUNsZWFuR3JvdXBSZXF1ZXN0LAogICAgfQogIH0sCiAgcHJvcHM6IHsKICAgIC8vIOWIl+S/oeaBrwogICAgY29sdW1uczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICAvLyDmlbDmja7mupAKICAgIGRhdGFTb3VyY2U6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICBkZWZhdWx0OiAoKSA9PiBbXQogICAgfSwKICAgIC8vIOaYr+WQpuaYvuekuuaTjeS9nOaMiemSrgogICAgYWN0aW9uQnV0dG9uOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgLy8g5piv5ZCm5pi+56S66KGM5Y+3CiAgICByb3dOdW1iZXI6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICAvLyDmmK/lkKblj6/pgInmi6nooYwKICAgIHJvd1NlbGVjdGlvbjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIC8vIOmhtemdouaYr+WQpuWcqOWKoOi9veS4rQogICAgbG9hZGluZzogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIC8vIOihqOagvOWGheWuueWMuuWfn+acgOWkp+mrmOW6pgogICAgbWF4SGVpZ2h0OiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogNDAwCiAgICB9LAogICAgLy8g6KaB56aB55So55qE6KGMCiAgICBkaXNhYmxlZFJvd3M6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fQogICAgICB9CiAgICB9LAogICAgLy8g5piv5ZCm56aB55So5YWo6YOo57uE5Lu2CiAgICBkaXNhYmxlZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIC8vIOaYr+WQpuWPr+aLluaLveaOkuW6jwogICAgZHJhZ1NvcnQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBkcmFnU29ydEtleTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdvcmRlck51bScKICAgIH0sCiAgICAvLyDmmK/lkKbkuIDnm7TmmL7npLrnvJbovpHmoYbvvIzlpoLmnpzkuLpmYWxzZeWImeWPquacieeCueWHu+eahOaXtuWAmeaJjeWHuueOsOi+k+WFpeahhgogICAgYWx3YXlzRWRpdDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8vIOaYr+WQpummluasoei/kOihjAogICAgICBpc0ZpcnN0OiB0cnVlLAogICAgICAvLyDlvZPliY3lrp7kvovmmK/lkKbmmK/ooYznvJbovpEKICAgICAgaXNKRWRpdGFibGVUYWJsZTogdHJ1ZSwKICAgICAgLy8gY2FzZUlk77yM55So5LqO6Ziy5q2i5pyJ5aSa5Liq5a6e5L6L55qE5pe25YCZ5Lya5Yay56qBCiAgICAgIGNhc2VJZDogYF9qZXQtJHtyYW5kb21TdHJpbmcoNil9LWAsCiAgICAgIC8vIOS4tOaXtklE5qCH6K+G77yM5Yeh5piv5Lul6K+l5qCH6K+G57uT5bC+55qESUTpg73mmK/kuLTml7ZJRO+8jOS4jea3u+WKoOWIsOaVsOaNruW6k+S4rQogICAgICB0ZW1wSWQ6IGBfdGlkLSR7cmFuZG9tU3RyaW5nKDYpfWAsCiAgICAgIC8vIOWtmOWCqGRvY3VtZW50IGVsZW1lbnQg5a+56LGhCiAgICAgIGVsOiB7CiAgICAgICAgaW5wdXRUYWJsZTogbnVsbCwKICAgICAgICB0Ym9keTogbnVsbAogICAgICB9LAogICAgICAvLyDlrZjlgqjlkITkuKpkaXbnmoRzdHlsZQogICAgICBzdHlsZTogewogICAgICAgIC8vICdtYXgtaGVpZ2h0JzogJzQwMHB4JwogICAgICAgIHRib2R5OiB7IGxlZnQ6ICcwcHgnIH0sCiAgICAgICAgLy8g5bem5L6n5Zu65a6adGTnmoRzdHlsZQogICAgICAgIHRkTGVmdDoge30sCiAgICAgIH0sCiAgICAgIC8vIOihqOWNleeahOexu+WeiwogICAgICBmb3JtVHlwZXM6IEZvcm1UeXBlcywKICAgICAgLy8g6KGM5pWw5o2uCiAgICAgIHJvd3M6IFtdLAogICAgICAvLyDooYzpq5jvvIxoZWlnaHQgKyBwYWRkaW5nICsgYm9yZGVyCiAgICAgIHJvd0hlaWdodCwKICAgICAgLy8g5rua5Yqo5p2h6aG26YOo6Led56a7CiAgICAgIHNjcm9sbFRvcDogMCwKICAgICAgLy8g57uR5a6aIHNlbGVjdCDnmoTlgLwKICAgICAgc2VsZWN0VmFsdWVzOiB7fSwKICAgICAgLy8g57uR5a6aIGNoZWNrYm94IOeahOWAvAogICAgICBjaGVja2JveFZhbHVlczoge30sCiAgICAgIC8vIOe7keWumiBqZGF0ZSDnmoTlgLwKICAgICAgamRhdGVWYWx1ZXM6IHt9LAogICAgICAvLyDnu5HlrppqaW5wdXRwb3AKICAgICAgaklucHV0UG9wVmFsdWVzOnt9LAogICAgICAvLyDnu5Hlrprmj5Lmp73mlbDmja4KICAgICAgc2xvdFZhbHVlczoge30sCiAgICAgIC8vIGZpbGUg5L+h5oGvCiAgICAgIHVwbG9hZFZhbHVlczoge30sCiAgICAgIC8vcG9wdXDkv6Hmga8KICAgICAgcG9wdXBWYWx1ZXM6IHt9LAoKICAgICAgcmFkaW9WYWx1ZXM6IHt9LAogICAgICBtZXRhQ2hlY2tib3hWYWx1ZXM6IHt9LAogICAgICBtdWx0aVNlbGVjdFZhbHVlczoge30sCiAgICAgIHNlYXJjaFNlbGVjdFZhbHVlczoge30sCiAgICAgIC8vIOe7keWumuW3puS+p+mAieaLqeahhuW3sumAieaLqeeahGlkCiAgICAgIHNlbGVjdGVkUm93SWRzOiBbXSwKICAgICAgLy8g5a2Y5YKo6KKr5Yig6Zmk6KGM55qEaWQKICAgICAgZGVsZXRlSWRzOiBbXSwKICAgICAgLy8g5a2Y5YKo5pi+56S6dG9vbHRpcOeahOS/oeaBrwogICAgICB0b29sdGlwczoge30sCiAgICAgIC8vIOWtmOWCqOayoeaciemAmui/h+mqjOivgeeahGlucHV0SWQKICAgICAgbm90UGFzc2VkSWRzOiBbXSwKCiAgICAgIC8vIOW9k+WJjeaYr+WQpuato+WcqOaLluaLveaOkuW6jwogICAgICBkcmFnZ2luZzogZmFsc2UsCiAgICAgIC8vIOaYr+WQpuaciee7n+iuoeWIlwogICAgICBoYXNTdGF0aXN0aWNzQ29sdW1uOiBmYWxzZSwKICAgICAgc3RhdGlzdGljc0NvbHVtbnM6IHt9LAogICAgICAvLyDlj6rmnInlnKjooYznvJbovpHooqvplIDmr4Hml7bmiY3kuLvliqjmuIXnqbpHcm91cFJlcXVlc3TnmoTlhoXlrZgKICAgICAgZGVzdHJveUNsZWFuR3JvdXBSZXF1ZXN0OiBmYWxzZSwKICAgICAgLy8g5b2T5YmN5q2j5Zyo57yW6L6R55qE6KGM55qEaWQKICAgICAgY3VycmVudEVkaXRSb3dzOiB7fSwKICAgICAgLy8g5LiK5qyhcHVzaOaVsOaNrueahOS6i+S7tu+8jOeUqOS6juWIpOaWreaYr+WQpueCueWHu+i/h+W/qwogICAgICBsYXN0UHVzaFRpbWVNYXA6IG5ldyBNYXAoKSwKICAgICAgbnVtYmVyOjAsCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5pbnB1dFZhbHVlcyA9IFtdCiAgICAvLyDlvZPliY3mmL7npLrnmoR0cgogICAgdGhpcy52aXNpYmxlVHJFbHMgPSBbXQogICAgdGhpcy5kaXNhYmxlZFJvd0lkcyA9ICh0aGlzLmRpc2FibGVkUm93SWRzIHx8IFtdKQogICAgLy8g6Kej5Yaz54Gr54uQ5rWP6KeI5Zmo5LiL5ouW5ou95Lya5omT5byA5paw55qEVGFi55qE6Zeu6aKYCiAgICBkb2N1bWVudC5ib2R5Lm9uZHJvcCA9IChldmVudCkgPT4gewogICAgICBpZiAodGhpcy5kcmFnZ2luZykgewogICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCkKICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKQogICAgICB9CiAgICB9CiAgfSwKICAvLyDorqHnrpflsZ7mgKcKICBjb21wdXRlZDogewogICAgLy8gZXhwYW5kSGVpZ2h0ID0gcm93cy5sZW5ndGggKiByb3dIZWlnaHQKICAgIGdldEV4cGFuZEhlaWdodCgpIHsKICAgICAgbGV0IGxlbmd0aCA9IHRoaXMucm93cy5sZW5ndGggKiB0aGlzLnJvd0hlaWdodAogICAgICBpZiAodGhpcy5zaG93U3RhdGlzdGljc1JvdykgewogICAgICAgIGxlbmd0aCArPSAzNAogICAgICB9CiAgICAgIHJldHVybiBsZW5ndGgKICAgIH0sCiAgICAvLyDmmK/lkKbmmL7npLrnu5/orqHooYwKICAgIHNob3dTdGF0aXN0aWNzUm93KCkgewogICAgICByZXR1cm4gdGhpcy5oYXNTdGF0aXN0aWNzQ29sdW1uICYmIHRoaXMucm93cy5sZW5ndGggPiAwCiAgICB9LAogICAgLy8g6I635Y+W5piv5ZCm6YCJ5oup5LqG6YOo5YiGCiAgICBnZXRTZWxlY3RJbmRldGVybWluYXRlKCkgewogICAgICByZXR1cm4gKHRoaXMuc2VsZWN0ZWRSb3dJZHMubGVuZ3RoID4gMCAmJgogICAgICAgIHRoaXMuc2VsZWN0ZWRSb3dJZHMubGVuZ3RoIDwgdGhpcy5yb3dzLmxlbmd0aCkKICAgIH0sCiAgICAvLyDojrflj5bmmK/lkKbpgInmi6nkuoblhajpg6gKICAgIGdldFNlbGVjdEFsbCgpIHsKICAgICAgcmV0dXJuICh0aGlzLnNlbGVjdGVkUm93SWRzLmxlbmd0aCA9PT0gdGhpcy5yb3dzLmxlbmd0aCkgJiYgdGhpcy5yb3dzLmxlbmd0aCA+IDAKICAgIH0sCiAgICB0Ym9keVN0eWxlKCkgewogICAgICBsZXQgc3R5bGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnN0eWxlLnRib2R5KQogICAgICAvLyBzdHlsZVsnbWF4LWhlaWdodCddID0gYCR7dGhpcy5tYXhIZWlnaHR9cHhgCiAgICAgIHN0eWxlWyd3aWR0aCddID0gdGhpcy5yZWFsVHJXaWR0aAogICAgICByZXR1cm4gc3R5bGUKICAgIH0sCiAgICBzaG93Q2xlYXJTZWxlY3RCdXR0b24oKSB7CiAgICAgIGxldCBjb3VudCA9IDAKICAgICAgZm9yIChsZXQga2V5IGluIHRoaXMuZGlzYWJsZWRSb3dzKSB7CiAgICAgICAgaWYgKHRoaXMuZGlzYWJsZWRSb3dzLmhhc093blByb3BlcnR5KGtleSkpIGNvdW50KysKICAgICAgfQogICAgICByZXR1cm4gY291bnQgPiAwCiAgICB9LAogICAgYWNjZXNzVG9rZW4oKSB7CiAgICAgIHJldHVybiBWdWUubHMuZ2V0KEFDQ0VTU19UT0tFTikKICAgIH0sCiAgICByZWFsVHJXaWR0aCgpIHsKICAgICAgbGV0IHNwbGljZSA9ICcgKyAnCiAgICAgIGxldCBjYWxjV2lkdGggPSAnY2FsYygnCiAgICAgIHRoaXMuY29sdW1ucy5mb3JFYWNoKChjb2x1bW4sIGkpID0+IHsKICAgICAgICBsZXQgeyB0eXBlLCB3aWR0aCB9ID0gY29sdW1uCiAgICAgICAgLy8g6ZqQ6JeP5a2X5q615LiN5Y+C5LiO6K6h566XCiAgICAgICAgaWYgKHR5cGUgIT09IEZvcm1UeXBlcy5oaWRkZW4pIHsKICAgICAgICAgIGlmICh0eXBlb2Ygd2lkdGggPT09ICdudW1iZXInKSB7CiAgICAgICAgICAgIGNhbGNXaWR0aCArPSB3aWR0aCArICdweCcKICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHdpZHRoID09PSAnc3RyaW5nJykgewogICAgICAgICAgICBjYWxjV2lkdGggKz0gd2lkdGgKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNhbGNXaWR0aCArPSAnMTIwcHgnCiAgICAgICAgICB9CiAgICAgICAgICBjYWxjV2lkdGggKz0gc3BsaWNlCiAgICAgICAgfQogICAgICB9KQogICAgICBpZiAoY2FsY1dpZHRoLmVuZHNXaXRoKHNwbGljZSkpIHsKICAgICAgICBjYWxjV2lkdGggPSBjYWxjV2lkdGguc3Vic3RyaW5nKDAsIGNhbGNXaWR0aC5sZW5ndGggLSBzcGxpY2UubGVuZ3RoKQogICAgICB9CiAgICAgIGNhbGNXaWR0aCArPSAnKScKICAgICAgLy8gY29uc29sZS5sb2coJ2NhbGNXaWR0aDogJywgY2FsY1dpZHRoKQogICAgICByZXR1cm4gY2FsY1dpZHRoCiAgICB9CiAgfSwKICAvLyDkvqblkKzlmagKICB3YXRjaDogewogICAgcm93czogewogICAgICBpbW1lZGlhdGU6IHRydWUsCiAgICAgIGhhbmRsZXIodmFsLCBvbGQpIHsKICAgICAgICAvLyB2YWwuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAvLyAgIGZvciAobGV0IGlucHV0VmFsdWUgb2YgIHRoaXMuaW5wdXRWYWx1ZXMpIHsKICAgICAgICAvLyAgICAgaWYgKGlucHV0VmFsdWUuaWQgPT09IGl0ZW0uaWQpIHsKICAgICAgICAvLyAgICAgICBpdGVtWydkYkZpZWxkTmFtZSddID0gaW5wdXRWYWx1ZVsnZGJGaWVsZE5hbWUnXQogICAgICAgIC8vICAgICAgIGJyZWFrCiAgICAgICAgLy8gICAgIH0KICAgICAgICAvLyAgIH0KICAgICAgICAvLyB9KQogICAgICAgIC8vIGNvbnNvbGUubG9nKCd3YXRjaC5yb3dzOicsIGNsb25lT2JqZWN0KHsgdmFsLCBvbGQgfSkpCiAgICAgIH0KICAgIH0sCiAgICBkYXRhU291cmNlOiB7CiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gKG5ld1ZhbHVlKSB7CiAgICAgICAgLy8g5YW85a65SUUKICAgICAgICB0aGlzLmdldEVsZW1lbnRQcm9taXNlKCd0Ym9keScpLnRoZW4oKCkgPT4gewogICAgICAgICAgdGhpcy5pbml0aWFsaXplKCkKICAgICAgICAgIHRoaXMuX3B1c2hCeURhdGFTb3VyY2UobmV3VmFsdWUpCiAgICAgICAgfSkKICAgICAgfQogICAgfSwKICAgIGNvbHVtbnM6IHsKICAgICAgaW1tZWRpYXRlOiB0cnVlLAogICAgICBoYW5kbGVyKGNvbHVtbnMpIHsKICAgICAgICAvLyDlhbzlrrlJRQogICAgICAgIHRoaXMuZ2V0RWxlbWVudFByb21pc2UoJ3Rib2R5JykudGhlbigoKSA9PiB7CiAgICAgICAgICBjb2x1bW5zLmZvckVhY2goY29sdW1uID0+IHsKICAgICAgICAgICAgaWYgKGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMuc2VsZWN0IHx8IGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMubGlzdF9tdWx0aSB8fCBjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLnNlbF9zZWFyY2gpIHsKICAgICAgICAgICAgICAvLyDlhbzlrrkg5pen54mI5pysIG9wdGlvbnMKICAgICAgICAgICAgICBpZiAoY29sdW1uLm9wdGlvbnMgaW5zdGFuY2VvZiBBcnJheSkgewogICAgICAgICAgICAgICAgY29sdW1uLm9wdGlvbnMgPSBjb2x1bW4ub3B0aW9ucy5tYXAoaXRlbSA9PiB7CiAgICAgICAgICAgICAgICAgIGlmIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgIC4uLml0ZW0sCiAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBpdGVtLnRleHQgfHwgaXRlbS50aXRsZSwKICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBpdGVtLnRleHQgfHwgaXRlbS50aXRsZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICByZXR1cm4ge30KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGlmIChjb2x1bW4uZGljdENvZGUpIHsKICAgICAgICAgICAgICAgIHRoaXMuX2xvYWREaWN0Q29uY2F0VG9PcHRpb25zKGNvbHVtbikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgfSkKICAgICAgfQogICAgfSwKICAgIC8vIOW9k3NlbGVjdFJvd0lkc+aUueWPmOaXtuinpuWPkeS6i+S7tgogICAgc2VsZWN0ZWRSb3dJZHMobmV3VmFsdWUpIHsKICAgICAgdGhpcy4kZW1pdCgnc2VsZWN0Um93Q2hhbmdlJywgY2xvbmVPYmplY3QobmV3VmFsdWUpLm1hcChpID0+IHRoaXMuZ2V0Q2xlYW5JZChpKSkpCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgbGV0IHZtID0gdGhpcwogICAgLyoqIOebkeWQrOa7muWKqOadoeS6i+S7tiAqLwogICAgdGhpcy5nZXRFbGVtZW50KCdpbnB1dFRhYmxlJykub25zY3JvbGwgPSBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgdm0uc3luY1Njcm9sbEJhcihldmVudC50YXJnZXQuc2Nyb2xsTGVmdCkKICAgIH0KICAgIHRoaXMuZ2V0RWxlbWVudCgndGJvZHknKS5vbnNjcm9sbCA9IGZ1bmN0aW9uIChldmVudCkgewogICAgICAvLyB2bS5yZWNhbGNUckhpZGRlbkl0ZW0oZXZlbnQudGFyZ2V0LnNjcm9sbFRvcCkKICAgIH0KCiAgICBsZXQgeyB0aGVhZCwgc2Nyb2xsVmlldyB9ID0gdGhpcy4kcmVmcwogICAgc2Nyb2xsVmlldy5vbnNjcm9sbCA9IGZ1bmN0aW9uIChldmVudCkgewoKICAgICAgLy8gY29uc29sZS5sb2coZXZlbnQudGFyZ2V0LnNjcm9sbFRvcCwgJyAtICcsIGV2ZW50LnRhcmdldC5zY3JvbGxMZWZ0KQoKICAgICAgdGhlYWQuc2Nyb2xsTGVmdCA9IGV2ZW50LnRhcmdldC5zY3JvbGxMZWZ0CgogICAgICB2bS5yZWNhbGNUckhpZGRlbkl0ZW0oZXZlbnQudGFyZ2V0LnNjcm9sbFRvcCkKCiAgICB9CgogICAgLy8g5re75Yqg5LqL5Lu255uR5ZCsCiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoKQoKICB9LAogIG1ldGhvZHM6IHsKCiAgICBnZXRFbGVtZW50KGlkLCBub0Nhc2VJZCA9IGZhbHNlKSB7CiAgICAgIGlmICghdGhpcy5lbFtpZF0pIHsKICAgICAgICB0aGlzLmVsW2lkXSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKChub0Nhc2VJZCA/ICcnIDogdGhpcy5jYXNlSWQpICsgaWQpCiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMuZWxbaWRdCiAgICB9LAoKICAgIGdldEVsZW1lbnRQcm9taXNlKGlkLCBub0Nhc2VJZCA9IGZhbHNlKSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgICAgIGxldCB0aW1lciA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgICAgIGxldCBlbGVtZW50ID0gdGhpcy5nZXRFbGVtZW50KGlkLCBub0Nhc2VJZCkKICAgICAgICAgIGlmIChlbGVtZW50KSB7CiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpCiAgICAgICAgICAgIHJlc29sdmUoZWxlbWVudCkKICAgICAgICAgIH0KICAgICAgICB9LCAxMCkKICAgICAgfSkKICAgIH0sCgogICAgLyoqIOWIneWni+WMluWIl+ihqCAqLwogICAgaW5pdGlhbGl6ZSgpIHsKICAgICAgdGhpcy52aXNpYmxlVHJFbHMgPSBbXQogICAgICAvLyDliKTmlq3mmK/lkKbmmK/pppbmrKHov5vlhaXor6Xmlrnms5XvvIzlpoLmnpzmmK/lsLHkuI3muIXnqbrooYzvvIzpmLLmraLliKDpmaTkuobpooTmt7vliqDnmoTmlbDmja4KICAgICAgaWYgKCF0aGlzLmlzRmlyc3QpIHsKICAgICAgICAvLyBpbnB1dFZhbHVlc++8mueUqOadpeWtmOWCqGlucHV06KGo5Y2V55qE5YC8CiAgICAgICAgLy8g5pWw57uE6YeM55qE5q+P6aG56YO95piv5LiA5Liq5a+56LGh77yM5a+56LGh6YeM5q+P5Liqa2V56YO95pivaW5wdXTnmoRyb3dLZXnvvIzlgLzlsLHmmK9pbnB1dOeahOWAvO+8jOWFtuS4reacieS4qmlk55qE5a2X5q615p2l5Yy65YiGCiAgICAgICAgLy8g56S65L6L77yaCiAgICAgICAgLy8gW3sKICAgICAgICAvLyAgICBpZDogIl9qZXQtNHNwMGl1LTE1NTQxNzcxMTExNzcwIgogICAgICAgIC8vICAgIGRiRGVmYXVsdFZhbDogImFhYSIsCiAgICAgICAgLy8gICAgZGJGaWVsZE5hbWU6ICJiYmIiLAogICAgICAgIC8vICAgIGRiRmllbGRUeHQ6ICJjY2MiLAogICAgICAgIC8vICAgIGRiTGVuZ3RoOiAzMgogICAgICAgIC8vIH1dCiAgICAgICAgdGhpcy5pbnB1dFZhbHVlcyA9IFtdCiAgICAgICAgdGhpcy5yb3dzID0gW10KICAgICAgICB0aGlzLmRlbGV0ZUlkcyA9IFtdCiAgICAgICAgdGhpcy5zZWxlY3RWYWx1ZXMgPSB7fQogICAgICAgIHRoaXMuY2hlY2tib3hWYWx1ZXMgPSB7fQogICAgICAgIHRoaXMuamRhdGVWYWx1ZXMgPSB7fQogICAgICAgIHRoaXMuaklucHV0UG9wVmFsdWVzID0ge30KICAgICAgICB0aGlzLnNsb3RWYWx1ZXMgPSB7fQogICAgICAgIHRoaXMuc2VsZWN0ZWRSb3dJZHMgPSBbXQogICAgICAgIHRoaXMudG9vbHRpcHMgPSB7fQogICAgICAgIHRoaXMubm90UGFzc2VkSWRzID0gW10KICAgICAgICB0aGlzLnVwbG9hZFZhbHVlcyA9IFtdCiAgICAgICAgdGhpcy5wb3B1cFZhbHVlcyA9IFtdCiAgICAgICAgdGhpcy5yYWRpb1ZhbHVlcyA9IFtdCiAgICAgICAgdGhpcy5tdWx0aVNlbGVjdFZhbHVlcyA9IFtdCiAgICAgICAgdGhpcy5zZWFyY2hTZWxlY3RWYWx1ZXMgPSBbXQogICAgICAgIHRoaXMuc2Nyb2xsVG9wID0gMAogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgIHRoaXMuZ2V0RWxlbWVudCgndGJvZHknKS5zY3JvbGxUb3AgPSAwCiAgICAgICAgfSkKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmlzRmlyc3QgPSBmYWxzZQogICAgICB9CiAgICB9LAoKICAgIC8qKiDlkIzmraXmu5rliqjmnaHnirbmgIEgKi8KICAgIHN5bmNTY3JvbGxCYXIoc2Nyb2xsTGVmdCkgewogICAgICAvLyB0aGlzLnN0eWxlLnRib2R5LmxlZnQgPSBgJHtzY3JvbGxMZWZ0fXB4YAogICAgICAvLyB0aGlzLmdldEVsZW1lbnQoJ3Rib2R5Jykuc2Nyb2xsTGVmdCA9IHNjcm9sbExlZnQKICAgIH0sCiAgICAvKiog6YeN572u5rua5Yqo5p2h5L2N572u77yM5Y+C5pWw55WZ56m65YiZ5rua5Yqo5Yiw5LiK5qyh6K6w5b2V55qE5L2N572uICovCiAgICByZXNldFNjcm9sbFRvcCh0b3ApIHsKICAgICAgbGV0IHsgc2Nyb2xsVmlldyB9ID0gdGhpcy4kcmVmcwogICAgICBpZiAodG9wICE9IG51bGwgJiYgdHlwZW9mIHRvcCA9PT0gJ251bWJlcicpIHsKICAgICAgICBzY3JvbGxWaWV3LnNjcm9sbFRvcCA9IHRvcAogICAgICB9IGVsc2UgewogICAgICAgIHNjcm9sbFZpZXcuc2Nyb2xsVG9wID0gdGhpcy5zY3JvbGxUb3AKICAgICAgfQogICAgfSwKICAgIC8qKiDph43mlrDorqHnrpfpnIDopoHpmpDol4/miJbmmL7npLrnmoR0ciAqLwogICAgcmVjYWxjVHJIaWRkZW5JdGVtKHRvcCkgewogICAgICBsZXQgZGlmZiA9IHRvcCAtIHRoaXMuc2Nyb2xsVG9wCiAgICAgIGlmIChkaWZmIDwgMCkgewogICAgICAgIGRpZmYgPSB0aGlzLnNjcm9sbFRvcCAtIHRvcAogICAgICB9CiAgICAgIC8vIOWPquacieWcqOa7muWKqOS6hueZvuWIhuS5i+S4ieWNgeeahOihjOmrmOeahOi3neemu+aXtuaJjei/m+ihjOabtOaWsAogICAgICBpZiAoZGlmZiA+PSB0aGlzLnJvd0hlaWdodCAqIDAuMykgewogICAgICAgIHRoaXMuc2Nyb2xsVG9wID0gdG9wCiAgICAgICAgLy8g5pu05pawZm9ybeihqOWNleeahOWAvAogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgIHRoaXMudXBkYXRlRm9ybVZhbHVlcygpCiAgICAgICAgfSkKICAgICAgfQogICAgfSwKICAgIC8qKiDnlJ/miJBpZCAqLwogICAgZ2VuZXJhdGVJZChyb3dzKSB7CiAgICAgIGlmICghKHJvd3MgaW5zdGFuY2VvZiBBcnJheSkpIHsKICAgICAgICByb3dzID0gdGhpcy5yb3dzIHx8IFtdCiAgICAgIH0KICAgICAgbGV0IHRpbWVzdGFtcCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpCiAgICAgIHJldHVybiBgJHt0aGlzLmNhc2VJZH0ke3RpbWVzdGFtcH0ke3Jvd3MubGVuZ3RofSR7cmFuZG9tTnVtYmVyKDYpfSR7dGhpcy50ZW1wSWR9YAogICAgfSwKICAgIC8qKiBwdXNoIOS4gOadoeaVsOaNriAqLwogICAgcHVzaChyZWNvcmQsIHVwZGF0ZSA9IHRydWUsIHJvd3MsIGluc2VydEluZGV4ID0gbnVsbCwgc2V0RGVmYXVsdFZhbHVlID0gdHJ1ZSkgewogICAgICByZXR1cm4gdGhpcy5fcHVzaEJ5RGF0YVNvdXJjZShbcmVjb3JkXSwgW2luc2VydEluZGV4XSwgdXBkYXRlLCByb3dzLCBzZXREZWZhdWx0VmFsdWUpCiAgICB9LAoKICAgIC8qKgogICAgICogcHVzaCDmlbDmja4KICAgICAqCiAgICAgKiBAcGFyYW0gZGF0YVNvdXJjZSDmlbDmja7mupAKICAgICAqIEBwYXJhbSBpbnNlcnRJbmRleGVzIOihjOaPkuWFpeS9jee9ru+8jOWSjGRhdGFTb3VyY2XnmoTkuIvmoIfkuIDkuIDlr7nlupQKICAgICAqIEBwYXJhbSB1cGRhdGUg5piv5ZCm5pu05pawCiAgICAgKiBAcGFyYW0gcm93cyDoi6XkuI3kvKDlsLHkvb/nlKggdGhpcy5yb3dzCiAgICAgKiBAcGFyYW0gc2V0RGVmYXVsdFZhbHVlIOaYr+WQpuWhq+WFhem7mOiupOWAvAogICAgICoKICAgICAqLwogICAgX3B1c2hCeURhdGFTb3VyY2UoZGF0YVNvdXJjZSwgaW5zZXJ0SW5kZXhlcyA9IG51bGwsIHVwZGF0ZSA9IHRydWUsIHJvd3MgPSBudWxsLCBzZXREZWZhdWx0VmFsdWUgPSBmYWxzZSkgewogICAgICBpZiAoIShyb3dzIGluc3RhbmNlb2YgQXJyYXkpKSB7CiAgICAgICAgcm93cyA9IFsuLi50aGlzLnJvd3NdIHx8IFtdCiAgICAgIH0KICAgICAgbGV0IGNoZWNrYm94VmFsdWVzID0geyAuLi50aGlzLmNoZWNrYm94VmFsdWVzIH0KICAgICAgbGV0IHNlbGVjdFZhbHVlcyA9IHsgLi4udGhpcy5zZWxlY3RWYWx1ZXMgfQogICAgICBsZXQgamRhdGVWYWx1ZXMgPSB7IC4uLnRoaXMuamRhdGVWYWx1ZXMgfQogICAgICBsZXQgaklucHV0UG9wVmFsdWVzID0geyAuLi50aGlzLmpJbnB1dFBvcFZhbHVlcyB9CiAgICAgIGxldCBzbG90VmFsdWVzID0geyAuLi50aGlzLnNsb3RWYWx1ZXMgfQogICAgICBsZXQgdXBsb2FkVmFsdWVzID0geyAuLi50aGlzLnVwbG9hZFZhbHVlcyB9CiAgICAgIGxldCBwb3B1cFZhbHVlcyA9IHsgLi4udGhpcy5wb3B1cFZhbHVlcyB9CiAgICAgIGxldCByYWRpb1ZhbHVlcyA9IHsgLi4udGhpcy5yYWRpb1ZhbHVlcyB9CiAgICAgIGxldCBtdWx0aVNlbGVjdFZhbHVlcyA9IHsgLi4udGhpcy5tdWx0aVNlbGVjdFZhbHVlcyB9CiAgICAgIGxldCBzZWFyY2hTZWxlY3RWYWx1ZXMgPSB7IC4uLnRoaXMuc2VhcmNoU2VsZWN0VmFsdWVzIH0KICAgICAgLy8g56aB55So6KGM55qEaWQKICAgICAgbGV0IGRpc2FibGVkUm93SWRzID0gKHRoaXMuZGlzYWJsZWRSb3dJZHMgfHwgW10pCiAgICAgIGRhdGFTb3VyY2UuZm9yRWFjaCgoZGF0YSwgbmV3VmFsdWVJbmRleCkgPT4gewogICAgICAgIC8vIOS4jeiDveebtOaOpeabtOaUueaVsOaNrua6kOeahGlkCiAgICAgICAgbGV0IGRhdGFJZCA9IGRhdGEuaWQKICAgICAgICAvLyDliKTmlq3mupDmlbDmja7mmK/lkKbluKbmnIlpZAogICAgICAgIGlmIChkYXRhSWQgPT0gbnVsbCB8fCBkYXRhSWQgPT09ICcnKSB7CiAgICAgICAgICBkYXRhSWQgPSB0aGlzLmdlbmVyYXRlSWQocm93cykKICAgICAgICB9IGVsc2UgaWYoIXRoaXMuaGFzQ2FzZUlkKGRhdGFJZCkpIHsKICAgICAgICAgIGRhdGFJZCA9IHRoaXMuY2FzZUlkICsgZGF0YUlkCiAgICAgICAgfQogICAgICAgIGxldCByb3cgPSB7IGlkOiBkYXRhSWQgfQogICAgICAgIGxldCB2YWx1ZSA9IHsgaWQ6IGRhdGFJZCB9CiAgICAgICAgbGV0IGRpc2FibGVkID0gZmFsc2UKICAgICAgICB0aGlzLmNvbHVtbnMuZm9yRWFjaChjb2x1bW4gPT4gewogICAgICAgICAgbGV0IGlucHV0SWQgPSBjb2x1bW4ua2V5ICsgdmFsdWUuaWQKICAgICAgICAgIGxldCBzb3VyY2VWYWx1ZSA9IChkYXRhW2NvbHVtbi5rZXldID09IG51bGwgPyAnJyA6IGRhdGFbY29sdW1uLmtleV0pLnRvU3RyaW5nKCkKCiAgICAgICAgICBsZXQgZGVmYXVsdFZhbHVlID0gbnVsbDsKICAgICAgICAgIGlmIChzZXREZWZhdWx0VmFsdWUpIHsKICAgICAgICAgICAgZGVmYXVsdFZhbHVlID0gY29sdW1uLmRlZmF1bHRWYWx1ZSB8fCAoY29sdW1uLmRlZmF1bHRWYWx1ZSA9PT0gMCA/IDAgOiAnJykKICAgICAgICAgICAgaWYgKGRlZmF1bHRWYWx1ZSBpbnN0YW5jZW9mIEFycmF5KSB7CiAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlID0gZGVmYXVsdFZhbHVlLmpvaW4oJywnKQogICAgICAgICAgICB9CgogICAgICAgICAgICBzb3VyY2VWYWx1ZSA9ICh0eXBlb2Ygc291cmNlVmFsdWUgPT09ICdudW1iZXInIHx8IHNvdXJjZVZhbHVlKSA/IHNvdXJjZVZhbHVlIDogZGVmYXVsdFZhbHVlCiAgICAgICAgICB9CiAgICAgICAgICBsZXQgc291cmNlVmFsdWVJc0VtcHR5ID0gKHNvdXJjZVZhbHVlID09IG51bGwgfHwgc291cmNlVmFsdWUgPT09ICcnKQoKICAgICAgICAgIGlmIChjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLmlucHV0TnVtYmVyKSB7CiAgICAgICAgICAgIC8vIOWIpOaWreaYr+WQpuaYr+aOkuW6j+Wtl+aute+8jOWmguaenOaYr+Wwsei1i+acgOWkp+WAvAogICAgICAgICAgICBpZiAoY29sdW1uLmlzT3JkZXIgPT09IHRydWUpIHsKICAgICAgICAgICAgICB2YWx1ZVtjb2x1bW4ua2V5XSA9IHRoaXMuZ2V0SW5wdXROdW1iZXJNYXhWYWx1ZShjb2x1bW4pICsgMQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHZhbHVlW2NvbHVtbi5rZXldID0gc291cmNlVmFsdWUKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyDliKTmlq3mmK/lkKbmmK/nu5/orqHliJcKICAgICAgICAgICAgaWYgKGNvbHVtbi5zdGF0aXN0aWNzKSB7CiAgICAgICAgICAgICAgdGhpcy5oYXNTdGF0aXN0aWNzQ29sdW1uID0gdHJ1ZQogICAgICAgICAgICAgIGlmICghdGhpcy5zdGF0aXN0aWNzQ29sdW1uc1tjb2x1bW4ua2V5XSkgewogICAgICAgICAgICAgICAgdGhpcy4kc2V0KHRoaXMuc3RhdGlzdGljc0NvbHVtbnMsIGNvbHVtbi5rZXksIDApCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgfSBlbHNlIGlmIChjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLmNoZWNrYm94KSB7CiAgICAgICAgICAgIC8vIOWIpOaWreaYr+WQpuiuvuWumuS6hmN1c3RvbVZhbHVl77yI6Ieq5a6a5LmJ5YC877yJCiAgICAgICAgICAgIGlmIChjb2x1bW4uY3VzdG9tVmFsdWUgaW5zdGFuY2VvZiBBcnJheSkgewogICAgICAgICAgICAgIGxldCBjdXN0b21WYWx1ZSA9IChjb2x1bW4uY3VzdG9tVmFsdWVbMF0gfHwgJycpLnRvU3RyaW5nKCkKICAgICAgICAgICAgICBpZiAoc291cmNlVmFsdWVJc0VtcHR5ICYmIHNldERlZmF1bHRWYWx1ZSkgewogICAgICAgICAgICAgICAgc291cmNlVmFsdWUgPSBjb2x1bW4uZGVmYXVsdENoZWNrZWQgPyBjdXN0b21WYWx1ZSA6IHNvdXJjZVZhbHVlCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGNoZWNrYm94VmFsdWVzW2lucHV0SWRdID0gKHNvdXJjZVZhbHVlID09PSBjdXN0b21WYWx1ZSkKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBpZiAoc291cmNlVmFsdWVJc0VtcHR5ICYmIHNldERlZmF1bHRWYWx1ZSkgewogICAgICAgICAgICAgICAgY2hlY2tib3hWYWx1ZXNbaW5wdXRJZF0gPSAhIWNvbHVtbi5kZWZhdWx0Q2hlY2tlZAogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjaGVja2JveFZhbHVlc1tpbnB1dElkXSA9IHNvdXJjZVZhbHVlCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgfSBlbHNlIGlmIChjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLnNlbGVjdCkgewogICAgICAgICAgICBpZiAoIXNvdXJjZVZhbHVlSXNFbXB0eSkgewogICAgICAgICAgICAgIC8vIOWIpOaWreaYr+WQpuaYr+WkmumAiQogICAgICAgICAgICAgIGlmICh0eXBlb2Ygc291cmNlVmFsdWUgPT09ICdzdHJpbmcnICYmIChjb2x1bW4ucHJvcHMgfHwge30pWydtb2RlJ10gPT09ICdtdWx0aXBsZScpIHsKICAgICAgICAgICAgICAgIHNvdXJjZVZhbHVlID0gc291cmNlVmFsdWUgPT09ICcnID8gW10gOiBzb3VyY2VWYWx1ZS5zcGxpdCgnLCcpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHNlbGVjdFZhbHVlc1tpbnB1dElkXSA9IHNvdXJjZVZhbHVlCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgc2VsZWN0VmFsdWVzW2lucHV0SWRdID0gdW5kZWZpbmVkCiAgICAgICAgICAgIH0KCiAgICAgICAgICB9IGVsc2UgaWYgKGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMuZGF0ZSB8fCBjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLmRhdGV0aW1lKSB7CiAgICAgICAgICAgIGpkYXRlVmFsdWVzW2lucHV0SWRdID0gc291cmNlVmFsdWUKCiAgICAgICAgICB9IGVsc2UgaWYgKGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMuc2xvdCkgewogICAgICAgICAgICBzbG90VmFsdWVzW2lucHV0SWRdID0gc291cmNlVmFsdWUKCiAgICAgICAgICB9IGVsc2UgaWYgKGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMucG9wdXApIHsKICAgICAgICAgICAgcG9wdXBWYWx1ZXNbaW5wdXRJZF0gPSBzb3VyY2VWYWx1ZQogICAgICAgICAgfSBlbHNlIGlmIChjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLmlucHV0X3BvcCkgewogICAgICAgICAgICBqSW5wdXRQb3BWYWx1ZXNbaW5wdXRJZF0gPSBzb3VyY2VWYWx1ZQogICAgICAgICAgfSBlbHNlIGlmIChjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLnJhZGlvKSB7CiAgICAgICAgICAgIHJhZGlvVmFsdWVzW2lucHV0SWRdID0gc291cmNlVmFsdWUKICAgICAgICAgIH0gZWxzZSBpZiAoY29sdW1uLnR5cGUgPT09IEZvcm1UeXBlcy5zZWxfc2VhcmNoKSB7CiAgICAgICAgICAgIHNlYXJjaFNlbGVjdFZhbHVlc1tpbnB1dElkXSA9IHNvdXJjZVZhbHVlCiAgICAgICAgICB9IGVsc2UgaWYgKGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMubGlzdF9tdWx0aSkgewogICAgICAgICAgICBpZiAodHlwZW9mIHNvdXJjZVZhbHVlID09PSAnc3RyaW5nJyAmJiBzb3VyY2VWYWx1ZS5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgbXVsdGlTZWxlY3RWYWx1ZXNbaW5wdXRJZF0gPSBzb3VyY2VWYWx1ZS5zcGxpdCgnLCcpCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgbXVsdGlTZWxlY3RWYWx1ZXNbaW5wdXRJZF0gPSBbXQogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgaWYgKGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMudXBsb2FkIHx8IGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMuZmlsZSB8fCBjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLmltYWdlKSB7CiAgICAgICAgICAgIGlmIChzb3VyY2VWYWx1ZSkgewogICAgICAgICAgICAgIGxldCBmaWxlTmFtZSA9ICcnCiAgICAgICAgICAgICAgaWYgKHNvdXJjZVZhbHVlLmluZGV4T2YoJywnKSA+IDApIHsKICAgICAgICAgICAgICAgIGxldCBzb3VyY2VWYWx1ZTIgPSBzb3VyY2VWYWx1ZS5zcGxpdCgnLCcpWzBdCiAgICAgICAgICAgICAgICBmaWxlTmFtZSA9IHNvdXJjZVZhbHVlMi5zdWJzdHJpbmcoc291cmNlVmFsdWUyLmxhc3RJbmRleE9mKCcvJykgKyAxKQogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBmaWxlTmFtZSA9IHNvdXJjZVZhbHVlLnN1YnN0cmluZyhzb3VyY2VWYWx1ZS5sYXN0SW5kZXhPZignLycpICsgMSkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgdXBsb2FkVmFsdWVzW2lucHV0SWRdID0gewogICAgICAgICAgICAgICAgbmFtZTogZmlsZU5hbWUsCiAgICAgICAgICAgICAgICBzdGF0dXM6ICdkb25lJywKICAgICAgICAgICAgICAgIHBhdGg6IHNvdXJjZVZhbHVlCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2YWx1ZVtjb2x1bW4ua2V5XSA9IHNvdXJjZVZhbHVlCiAgICAgICAgICB9CgogICAgICAgICAgLy8g6Kej5p6QZGlzYWJsZWRSb3dzCiAgICAgICAgICBmb3IgKGxldCBjb2x1bW5LZXkgaW4gdGhpcy5kaXNhYmxlZFJvd3MpIHsKICAgICAgICAgICAgLy8g5Yik5pat5piv5ZCm5pyJ6K+l5bGe5oCnCiAgICAgICAgICAgIGlmICh0aGlzLmRpc2FibGVkUm93cy5oYXNPd25Qcm9wZXJ0eShjb2x1bW5LZXkpICYmIGRhdGEuaGFzT3duUHJvcGVydHkoY29sdW1uS2V5KSkgewogICAgICAgICAgICAgIGlmIChkaXNhYmxlZCAhPT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgbGV0IHRlbXAgPSB0aGlzLmRpc2FibGVkUm93c1tjb2x1bW5LZXldCiAgICAgICAgICAgICAgICAvLyDnpoHnlKjop4TliJnlj6/ku6XmmK/kuIDkuKrmlbDnu4QKICAgICAgICAgICAgICAgIGlmICh0ZW1wIGluc3RhbmNlb2YgQXJyYXkpIHsKICAgICAgICAgICAgICAgICAgZGlzYWJsZWQgPSB0ZW1wLmluY2x1ZGVzKGRhdGFbY29sdW1uS2V5XSkKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIGRpc2FibGVkID0gKHRlbXAgPT09IGRhdGFbY29sdW1uS2V5XSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIChkaXNhYmxlZCkgewogICAgICAgICAgICAgICAgICBkaXNhYmxlZFJvd0lkcy5wdXNoKHJvdy5pZCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIC8vIOaPkuWFpeihjOiAjOS4jeaYr+a3u+WKoOWIsOacgOWQjgogICAgICAgIGxldCBhZGRlZCA9IGZhbHNlCiAgICAgICAgaWYgKGluc2VydEluZGV4ZXMgaW5zdGFuY2VvZiBBcnJheSkgewogICAgICAgICAgbGV0IGluc2VydEluZGV4ID0gaW5zZXJ0SW5kZXhlc1tuZXdWYWx1ZUluZGV4XQogICAgICAgICAgaWYgKHR5cGVvZiBpbnNlcnRJbmRleCA9PT0gJ251bWJlcicpIHsKICAgICAgICAgICAgYWRkZWQgPSB0cnVlCiAgICAgICAgICAgIHJvd3Muc3BsaWNlKGluc2VydEluZGV4LCAwLCByb3cpCiAgICAgICAgICAgIHRoaXMuaW5wdXRWYWx1ZXMuc3BsaWNlKGluc2VydEluZGV4LCAwLCB2YWx1ZSkKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgLy91cGRhdGUtYmVnaW4tYXV0aG9yOmx2ZGFuZGFuIGRhdGU6MjAyMDExMDUgZm9yOkxPV0NPRC05ODcg44CQb25saW5l44CRanPlop7lvLrnmoTpl67popgtLeaVsOaNruWvueixoeW4puaciWlk77yM5LiU5ZKM546w5pyJ5pWw5o2u5LiA6Ie05pe277yM5pu/5o2i5oKj5pyJ5pWw5o2uCiAgICAgICAgaWYoLTEgIT09IHJvd3MuZmluZEluZGV4KGl0ZW0gPT4gaXRlbS5pZCA9PT0gcm93LmlkKSl7CiAgICAgICAgICBhZGRlZCA9IHRydWUKICAgICAgICAgIHRoaXMuaW5wdXRWYWx1ZXMgPSB0aGlzLmlucHV0VmFsdWVzLm1hcChpdGVtID0+IGl0ZW0uaWQgPT09IHJvdy5pZCA/IHZhbHVlIDogaXRlbSkKICAgICAgICB9CiAgICAgICAgLy91cGRhdGUtYmVnaW4tYXV0aG9yOmx2ZGFuZGFuIGRhdGU6MjAyMDExMDUgZm9yOkxPV0NPRC05ODcg44CQb25saW5l44CRanPlop7lvLrnmoTpl67popgtLeaVsOaNruWvueixoeW4puaciWlk77yM5LiU5ZKM546w5pyJ5pWw5o2u5LiA6Ie05pe277yM5pu/5o2i5oKj5pyJ5pWw5o2uCiAgICAgICAgaWYgKCFhZGRlZCkgewogICAgICAgICAgcm93cy5wdXNoKHJvdykKICAgICAgICAgIHRoaXMuaW5wdXRWYWx1ZXMucHVzaCh2YWx1ZSkKICAgICAgICB9CiAgICAgIH0pCiAgICAgIC8vIOWQr+eUqOS6huaLluWKqOaOkuW6j++8jOWwsemHjeaWsOiuoeeul+aOkuW6j+e8luWPtwogICAgICBpZiAodGhpcy5kcmFnU29ydCkgewogICAgICAgIHRoaXMuaW5wdXRWYWx1ZXMuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHsKICAgICAgICAgIGl0ZW1bdGhpcy5kcmFnU29ydEtleV0gPSAoaW5kZXggKyAxKQogICAgICAgIH0pCiAgICAgIH0KICAgICAgdGhpcy5kaXNhYmxlZFJvd0lkcyA9IGRpc2FibGVkUm93SWRzCiAgICAgIHRoaXMuY2hlY2tib3hWYWx1ZXMgPSBjaGVja2JveFZhbHVlcwogICAgICB0aGlzLnNlbGVjdFZhbHVlcyA9IHNlbGVjdFZhbHVlcwogICAgICB0aGlzLmpkYXRlVmFsdWVzID0gamRhdGVWYWx1ZXMKICAgICAgdGhpcy5qSW5wdXRQb3BWYWx1ZXMgPSBqSW5wdXRQb3BWYWx1ZXMKICAgICAgdGhpcy5zbG90VmFsdWVzID0gc2xvdFZhbHVlcwogICAgICB0aGlzLnVwbG9hZFZhbHVlcyA9IHVwbG9hZFZhbHVlcwogICAgICB0aGlzLnBvcHVwVmFsdWVzID0gcG9wdXBWYWx1ZXMKICAgICAgdGhpcy5yYWRpb1ZhbHVlcyA9IHJhZGlvVmFsdWVzCiAgICAgIHRoaXMubXVsdGlTZWxlY3RWYWx1ZXMgPSBtdWx0aVNlbGVjdFZhbHVlcwogICAgICB0aGlzLnNlYXJjaFNlbGVjdFZhbHVlcyA9IHNlYXJjaFNlbGVjdFZhbHVlcwogICAgICAvLyDph43mlrDorqHnrpfmiYDmnInnu5/orqHliJcKICAgICAgdGhpcy5yZWNhbGNBbGxTdGF0aXN0aWNzQ29sdW1ucygpCiAgICAgIC8vIOabtOaWsOWIsCBkb20KICAgICAgaWYgKHVwZGF0ZSkgewogICAgICAgIHRoaXMucm93cyA9IHJvd3MKCiAgICAgICAgLy8g5pu05pawZm9ybeihqOWNleeahOWAvAogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgIHRoaXMuZm9yY2VVcGRhdGVGb3JtVmFsdWVzKCkKICAgICAgICB9KQogICAgICB9CiAgICAgIHJldHVybiByb3dzCiAgICB9LAoKICAgIC8qKiDojrflj5bmn5DkuIDmlbDlrZfovpPlhaXmoYbliJfkuK3nmoTmnIDlpKfnmoTlgLwgKi8KICAgIGdldElucHV0TnVtYmVyTWF4VmFsdWUoY29sdW1uKSB7CiAgICAgIGxldCBtYXhOdW0gPSAwCiAgICAgIHRoaXMuaW5wdXRWYWx1ZXMuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHsKICAgICAgICBsZXQgdmFsID0gaXRlbVtjb2x1bW4ua2V5XSwgbnVtCiAgICAgICAgdHJ5IHsKICAgICAgICAgIG51bSA9IHBhcnNlSW50KHZhbCkKICAgICAgICB9IGNhdGNoIHsKICAgICAgICAgIG51bSA9IDAKICAgICAgICB9CiAgICAgICAgLy8g5oqK6aaW5qyh5b6q546v55qE57uT5p6c5b2T5oiQ5pyA5aSn5YC8CiAgICAgICAgaWYgKGluZGV4ID09PSAwKSB7CiAgICAgICAgICBtYXhOdW0gPSBudW0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgbWF4TnVtID0gKG51bSA+IG1heE51bSkgPyBudW0gOiBtYXhOdW0KICAgICAgICB9CiAgICAgIH0pCiAgICAgIHJldHVybiBtYXhOdW0KICAgIH0sCiAgICAvKiog5re75Yqg5LiA6KGMICovCiAgICBhZGQobnVtID0gMSwgZm9yY2VTY3JvbGxUb0JvdHRvbSA9IGZhbHNlKSB7CiAgICAgIGlmIChudW0gPCAxKSByZXR1cm4KICAgICAgLy8gbGV0IHRpbWVzdGFtcCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpCiAgICAgIGxldCByb3dzID0gdGhpcy5yb3dzCiAgICAgIGxldCByb3cKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW07IGkrKykgewogICAgICAgIHJvd3MgPSB0aGlzLnB1c2goe30sIGZhbHNlLCByb3dzKQogICAgICAgIHJvdyA9IHJvd3Nbcm93cy5sZW5ndGggLSAxXQogICAgICB9CiAgICAgIHRoaXMucm93cyA9IHJvd3MKCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICB0aGlzLnVwZGF0ZUZvcm1WYWx1ZXMoKQogICAgICB9KQogICAgICAvLyDop6blj5FhZGTkuovku7YKICAgICAgdGhpcy4kZW1pdCgnYWRkZWQnLCB7CiAgICAgICAgcm93OiAoKCkgPT4gewogICAgICAgICAgbGV0IHIgPSBPYmplY3QuYXNzaWduKHt9LCByb3cpCiAgICAgICAgICByLmlkID0gdGhpcy5nZXRDbGVhbklkKHIuaWQpCiAgICAgICAgICByZXR1cm4gcgogICAgICAgIH0pKCksCiAgICAgICAgdGFyZ2V0OiB0aGlzCiAgICAgIH0pCiAgICAgIC8vIOiuvue9rua7muWKqOadoeS9jee9rgogICAgICBsZXQgdGJvZHkgPSB0aGlzLmdldEVsZW1lbnQoJ3Rib2R5JykKICAgICAgbGV0IG9mZnNldEhlaWdodCA9IHRib2R5Lm9mZnNldEhlaWdodAogICAgICBsZXQgcmVhbFNjcm9sbFRvcCA9IHRib2R5LnNjcm9sbFRvcCArIG9mZnNldEhlaWdodAogICAgICBpZiAoZm9yY2VTY3JvbGxUb0JvdHRvbSA9PT0gZmFsc2UpIHsKICAgICAgICAvLyDlj6rmnInmu5rliqjmnaHlnKjlupXpg6jnmoTml7blgJnmiY3oh6rliqjmu5rliqgKICAgICAgICBpZiAoISgodGJvZHkuc2Nyb2xsSGVpZ2h0IC0gcmVhbFNjcm9sbFRvcCkgPD0gMTApKSB7CiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIHRib2R5LnNjcm9sbFRvcCA9IHRib2R5LnNjcm9sbEhlaWdodAogICAgICB9KQogICAgfSwKICAgIC8qKgogICAgICog5Zyo5oyH5a6a5L2N572u5re75Yqg5LiA6KGMCiAgICAgKiBAcGFyYW0gaW5zZXJ0SW5kZXgg5re75Yqg5L2N572u5LiL5qCHCiAgICAgKiBAcGFyYW0gbnVtIOa3u+WKoOeahOihjOaVsO+8jOm7mOiupDEKICAgICAqLwogICAgaW5zZXJ0KGluc2VydEluZGV4LCBudW0gPSAxKSB7CiAgICAgIGlmICh0aGlzLmNoZWNrVG9vRmFzdENsaWNrKCdpbnNlcnQnLCAxNTAwKSkgewogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIGlmICghaW5zZXJ0SW5kZXggJiYgbnVtIDwgMSkgcmV0dXJuCiAgICAgIGxldCByb3dzID0gdGhpcy5yb3dzCiAgICAgIGxldCBuZXdSb3dzID0gW10KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW07IGkrKykgewogICAgICAgIGxldCByb3cgPSB7IGlkOiB0aGlzLmdlbmVyYXRlSWQocm93cykgfQogICAgICAgIHJvd3MgPSB0aGlzLnB1c2gocm93LCBmYWxzZSwgcm93cywgaW5zZXJ0SW5kZXgpCiAgICAgICAgbmV3Um93cy5wdXNoKHJvdykKICAgICAgfQogICAgICAvLyDlkIzmraXmm7TmlLkKICAgICAgdGhpcy5yb3dzID0gcm93cwogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy5yZWNhbGNTb3J0TnVtYmVyKCkKICAgICAgICB0aGlzLmZvcmNlVXBkYXRlRm9ybVZhbHVlcygpCiAgICAgIH0pCiAgICAgIC8vIOinpuWPkSBpbnNlcnQg5LqL5Lu2CiAgICAgIHRoaXMuJGVtaXQoJ2luc2VydGVkJywgewogICAgICAgIHJvd3M6IG5ld1Jvd3MubWFwKHJvdyA9PiB7CiAgICAgICAgICBsZXQgciA9IGNsb25lT2JqZWN0KHJvdykKICAgICAgICAgIHIuaWQgPSB0aGlzLmdldENsZWFuSWQoci5pZCkKICAgICAgICAgIHJldHVybiByCiAgICAgICAgfSksCiAgICAgICAgbnVtLCBpbnNlcnRJbmRleCwKICAgICAgICB0YXJnZXQ6IHRoaXMKICAgICAgfSkKICAgIH0sCiAgICAvKiog5Yig6Zmk6KKr6YCJ5Lit55qE6KGMICovCiAgICByZW1vdmVTZWxlY3RlZFJvd3MoKSB7CiAgICAgIHRoaXMucmVtb3ZlUm93cyh0aGlzLnNlbGVjdGVkUm93SWRzKQogICAgICB0aGlzLnNlbGVjdGVkUm93SWRzID0gW10KICAgIH0sCiAgICAvKiog5Yig6Zmk5LiA6KGM5oiW5aSa6KGMICovCiAgICByZW1vdmVSb3dzKGlkKSB7CiAgICAgIGxldCBpZHMgPSBpZAogICAgICBpZiAoIShpZCBpbnN0YW5jZW9mIEFycmF5KSkgewogICAgICAgIGlmICh0eXBlb2YgaWQgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgICBpZHMgPSBbaWRdCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRocm93ICBgSkVkaXRhYmxlVGFibGUucmVtb3ZlUm93cygpIOWHveaVsOmcgOimgeeahOWPguaVsOWPr+S7peaYr3N0cmluZ+aIlkFycmF557G75Z6L77yM5L2G5o+Q5L6b55qE5Y205pivJHt0eXBlb2YgaWR9YAogICAgICAgIH0KICAgICAgfQoKICAgICAgbGV0IHJvd3MgPSBjbG9uZU9iamVjdCh0aGlzLnJvd3MpCiAgICAgIGlkcy5mb3JFYWNoKHJlbW92ZUlkID0+IHsKICAgICAgICByZW1vdmVJZCA9IHRoaXMuZ2V0Q2xlYW5JZChyZW1vdmVJZCkKICAgICAgICAvLyDmib7liLDmr4/kuKppZOWvueW6lOeahOecn+WunmluZGV45bm25Yig6ZmkCiAgICAgICAgY29uc3QgZmluZEFuZERlbGV0ZSA9IChhcnIpID0+IHsKICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIGxldCBjdXJyZW50SWQgPSB0aGlzLmdldENsZWFuSWQoYXJyW2ldLmlkKQogICAgICAgICAgICBpZiAoY3VycmVudElkID09PSByZW1vdmVJZCkgewogICAgICAgICAgICAgIGFyci5zcGxpY2UoaSwgMSkKICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIC8vIOaJvuWIsHJvd3Plr7nlupTnmoRpbmRleO+8jOW5tuWIoOmZpAogICAgICAgIGlmIChmaW5kQW5kRGVsZXRlKHJvd3MpKSB7CiAgICAgICAgICAvLyDmib7liLB2YWx1ZXPlr7nlupTnmoRpbmRleO+8jOW5tuWIoOmZpAogICAgICAgICAgZmluZEFuZERlbGV0ZSh0aGlzLmlucHV0VmFsdWVzKQogICAgICAgICAgLy8g5bCGY2FzZUlk5Y676ZmkCiAgICAgICAgICBsZXQgaWQgPSB0aGlzLmdldENsZWFuSWQocmVtb3ZlSWQpCiAgICAgICAgICB0aGlzLmRlbGV0ZUlkcy5wdXNoKGlkKQogICAgICAgIH0KICAgICAgfSkKICAgICAgdGhpcy5yb3dzID0gcm93cwogICAgICB0aGlzLiRlbWl0KCdkZWxldGVkJywgdGhpcy5nZXREZWxldGVJZHMoKSwgdGhpcykKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIC8vIOabtOaWsGZvcm1WYWx1ZXMKICAgICAgICB0aGlzLnVwZGF0ZUZvcm1WYWx1ZXMoKQogICAgICAgIC8vIOmHjeaWsOiuoeeul+e7n+iuoQogICAgICAgIHRoaXMucmVjYWxjQWxsU3RhdGlzdGljc0NvbHVtbnMoKQogICAgICB9KQogICAgICByZXR1cm4gdHJ1ZQogICAgfSwKCiAgICAvKiog6I635Y+W6KGo5qC86KGo5Y2V6YeM55qE5YC877yI5byC5q2l54mI77yJICovCiAgICBnZXRWYWx1ZXNBc3luYyhvcHRpb25zID0ge30sIGNhbGxiYWNrKSB7CiAgICAgIGxldCB7IHZhbGlkYXRlLCByb3dJZHMsIGRlbGV0ZVRlbXBJZCB9ID0gb3B0aW9ucwogICAgICBpZiAodHlwZW9mIHZhbGlkYXRlICE9PSAnYm9vbGVhbicpIHZhbGlkYXRlID0gdHJ1ZQogICAgICBpZiAoIShyb3dJZHMgaW5zdGFuY2VvZiBBcnJheSkpIHJvd0lkcyA9IG51bGwKICAgICAgLy8g5piv5ZCm5Yig6Zmk5Li05pe2SUTvvIzpu5jorqTkuLogZmFsc2UKICAgICAgaWYgKHR5cGVvZiBkZWxldGVUZW1wSWQgIT09ICdib29sZWFuJykgZGVsZXRlVGVtcElkID0gZmFsc2UKICAgICAgLy8gY29uc29sZS5sb2coJ29wdGlvbnM6JywgeyB2YWxpZGF0ZSwgcm93SWRzIH0pCgogICAgICBsZXQgYXN5bmNDb3VudCA9IDAKICAgICAgbGV0IGVycm9yID0gMAogICAgICBsZXQgaW5wdXRWYWx1ZXMgPSBjbG9uZU9iamVjdCh0aGlzLmlucHV0VmFsdWVzKQogICAgICBsZXQgdG9vbHRpcHMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnRvb2x0aXBzKQogICAgICBsZXQgbm90UGFzc2VkSWRzID0gY2xvbmVPYmplY3QodGhpcy5ub3RQYXNzZWRJZHMpCiAgICAgIC8vIOeUqOS6juWtmOWCqOWQiOW5tuWQjueahOWAvAogICAgICBsZXQgdmFsdWVzID0gW10KICAgICAgLy8g6YGN5Y6GaW5wdXRWYWx1ZXPmnaXojrflj5bmr4/ooYznmoTlgLwKICAgICAgZm9yIChsZXQgdmFsdWUgb2YgaW5wdXRWYWx1ZXMpIHsKICAgICAgICBsZXQgcm93SWRzRmxhZyA9IGZhbHNlCiAgICAgICAgLy8g5aaC5p6c5bim5pyJcm93SWRz77yM6YKj5LmI5bCx5Y+q5a2Y6L+Z5Yeg6KGM55qE5pWw5o2uCiAgICAgICAgaWYgKHJvd0lkcyA9PSBudWxsKSB7CiAgICAgICAgICByb3dJZHNGbGFnID0gdHJ1ZQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBmb3IgKGxldCByb3dJZCBvZiByb3dJZHMpIHsKICAgICAgICAgICAgaWYgKHRoaXMuZ2V0Q2xlYW5JZChyb3dJZCkgPT09IHRoaXMuZ2V0Q2xlYW5JZCh2YWx1ZS5pZCkpIHsKICAgICAgICAgICAgICByb3dJZHNGbGFnID0gdHJ1ZQogICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmICghcm93SWRzRmxhZykgY29udGludWUKCiAgICAgICAgdGhpcy5jb2x1bW5zLmZvckVhY2goY29sdW1uID0+IHsKICAgICAgICAgIGxldCBpbnB1dElkID0gY29sdW1uLmtleSArIHZhbHVlLmlkCiAgICAgICAgICBpZiAoY29sdW1uLnR5cGUgPT09IEZvcm1UeXBlcy5jaGVja2JveCkgewogICAgICAgICAgICBsZXQgY2hlY2tlZCA9IHRoaXMuY2hlY2tib3hWYWx1ZXNbaW5wdXRJZF0KICAgICAgICAgICAgaWYgKGNvbHVtbi5jdXN0b21WYWx1ZSBpbnN0YW5jZW9mIEFycmF5KSB7CiAgICAgICAgICAgICAgdmFsdWVbY29sdW1uLmtleV0gPSBjaGVja2VkID8gY29sdW1uLmN1c3RvbVZhbHVlWzBdIDogY29sdW1uLmN1c3RvbVZhbHVlWzFdCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgdmFsdWVbY29sdW1uLmtleV0gPSBjaGVja2VkCiAgICAgICAgICAgIH0KCiAgICAgICAgICB9IGVsc2UgaWYgKGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMuc2VsZWN0KSB7CiAgICAgICAgICAgIGxldCBzZWxlY3RlZCA9IHRoaXMuc2VsZWN0VmFsdWVzW2lucHV0SWRdCiAgICAgICAgICAgIGlmIChzZWxlY3RlZCBpbnN0YW5jZW9mIEFycmF5KSB7CiAgICAgICAgICAgICAgdmFsdWVbY29sdW1uLmtleV0gPSBjbG9uZU9iamVjdChzZWxlY3RlZCkKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB2YWx1ZVtjb2x1bW4ua2V5XSA9IHNlbGVjdGVkCiAgICAgICAgICAgIH0KCiAgICAgICAgICB9IGVsc2UgaWYgKGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMuZGF0ZSB8fCBjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLmRhdGV0aW1lKSB7CiAgICAgICAgICAgIHZhbHVlW2NvbHVtbi5rZXldID0gdGhpcy5qZGF0ZVZhbHVlc1tpbnB1dElkXQoKICAgICAgICAgIH0gZWxzZSBpZiAoY29sdW1uLnR5cGUgPT09IEZvcm1UeXBlcy5pbnB1dF9wb3ApIHsKICAgICAgICAgICAgdmFsdWVbY29sdW1uLmtleV0gPSB0aGlzLmpJbnB1dFBvcFZhbHVlc1tpbnB1dElkXQoKICAgICAgICAgIH0gZWxzZSBpZiAoY29sdW1uLnR5cGUgPT09IEZvcm1UeXBlcy51cGxvYWQpIHsKICAgICAgICAgICAgdmFsdWVbY29sdW1uLmtleV0gPSBjbG9uZU9iamVjdCh0aGlzLnVwbG9hZFZhbHVlc1tpbnB1dElkXSB8fCBudWxsKQoKICAgICAgICAgIH0gZWxzZSBpZiAoY29sdW1uLnR5cGUgPT09IEZvcm1UeXBlcy5pbWFnZSB8fCBjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLmZpbGUpIHsKICAgICAgICAgICAgbGV0IGN1cnJVcGxvYWRPYmogPSBjbG9uZU9iamVjdCh0aGlzLnVwbG9hZFZhbHVlc1tpbnB1dElkXSB8fCBudWxsKQogICAgICAgICAgICBpZiAoY3VyclVwbG9hZE9iaikgewogICAgICAgICAgICAgIHZhbHVlW2NvbHVtbi5rZXldID0gY3VyclVwbG9hZE9ialsncGF0aCddIHx8IG51bGwKICAgICAgICAgICAgfQoKICAgICAgICAgIH0gZWxzZSBpZiAoY29sdW1uLnR5cGUgPT09IEZvcm1UeXBlcy5wb3B1cCkgewogICAgICAgICAgICBpZiAoIXZhbHVlW2NvbHVtbi5rZXldKSB7CiAgICAgICAgICAgICAgdmFsdWVbY29sdW1uLmtleV0gPSB0aGlzLnBvcHVwVmFsdWVzW2lucHV0SWRdIHx8IG51bGwKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIGlmIChjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLnJhZGlvKSB7CiAgICAgICAgICAgIHZhbHVlW2NvbHVtbi5rZXldID0gdGhpcy5yYWRpb1ZhbHVlc1tpbnB1dElkXQogICAgICAgICAgfSBlbHNlIGlmIChjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLnNlbF9zZWFyY2gpIHsKICAgICAgICAgICAgdmFsdWVbY29sdW1uLmtleV0gPSB0aGlzLnNlYXJjaFNlbGVjdFZhbHVlc1tpbnB1dElkXQogICAgICAgICAgfSBlbHNlIGlmIChjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLmxpc3RfbXVsdGkpIHsKICAgICAgICAgICAgaWYgKCF0aGlzLm11bHRpU2VsZWN0VmFsdWVzW2lucHV0SWRdIHx8IHRoaXMubXVsdGlTZWxlY3RWYWx1ZXNbaW5wdXRJZF0ubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICAgICAgdmFsdWVbY29sdW1uLmtleV0gPSAnJwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHZhbHVlW2NvbHVtbi5rZXldID0gdGhpcy5tdWx0aVNlbGVjdFZhbHVlc1tpbnB1dElkXS5qb2luKCcsJykKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIGlmIChjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLnNsb3QpIHsKICAgICAgICAgICAgdmFsdWVbY29sdW1uLmtleV0gPSB0aGlzLnNsb3RWYWx1ZXNbaW5wdXRJZF0KICAgICAgICAgIH0KCgogICAgICAgICAgLy8g5qOA5p+l6KGo5Y2V6aqM6K+BCiAgICAgICAgICBpZiAodmFsaWRhdGUgPT09IHRydWUpIHsKICAgICAgICAgICAgY29uc3QgaGFuZGxlVmFsaWRhdGVPbmVJbnB1dCA9IChyZXN1bHRzKSA9PiB7CiAgICAgICAgICAgICAgdG9vbHRpcHNbaW5wdXRJZF0gPSByZXN1bHRzWzBdCiAgICAgICAgICAgICAgaWYgKHRvb2x0aXBzW2lucHV0SWRdLnBhc3NlZCA9PT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgIGVycm9yKysKICAgICAgICAgICAgICAgIC8vIGlmIChlcnJvcisrID09PSAwKSB7CiAgICAgICAgICAgICAgICAvLyBsZXQgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpCiAgICAgICAgICAgICAgICAvLyB3aGlsZSAoZWxlbWVudC5jbGFzc05hbWUgIT09ICd0cicpIHsKICAgICAgICAgICAgICAgIC8vICAgZWxlbWVudCA9IGVsZW1lbnQucGFyZW50RWxlbWVudAogICAgICAgICAgICAgICAgLy8gfQogICAgICAgICAgICAgICAgLy8gdGhpcy5qdW1wVG9JZChpbnB1dElkLCBlbGVtZW50KQogICAgICAgICAgICAgICAgLy8gfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB0b29sdGlwc1tpbnB1dElkXS52aXNpYmxlID0gZmFsc2UKICAgICAgICAgICAgICBub3RQYXNzZWRJZHMgPSByZXN1bHRzWzFdCiAgICAgICAgICAgIH0KICAgICAgICAgICAgYXN5bmNDb3VudCsrCiAgICAgICAgICAgIGxldCByZXN1bHRzID0gdGhpcy52YWxpZGF0ZU9uZUlucHV0QXN5bmModmFsdWVbY29sdW1uLmtleV0sIHZhbHVlLCBjb2x1bW4sIG5vdFBhc3NlZElkcywgZmFsc2UsICdnZXRWYWx1ZXMnLCAocmVzdWx0cykgPT4gewogICAgICAgICAgICAgIGhhbmRsZVZhbGlkYXRlT25lSW5wdXQocmVzdWx0cykKICAgICAgICAgICAgICBhc3luY0NvdW50LS0KICAgICAgICAgICAgfSkKICAgICAgICAgICAgaGFuZGxlVmFsaWRhdGVPbmVJbnB1dChyZXN1bHRzKQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgICAgLy8g5Yig6ZmkIHRlbXBJZAogICAgICAgIGlmIChkZWxldGVUZW1wSWQgJiYgdGhpcy5pc1RlbXBJZCh2YWx1ZS5pZCkpIHsKICAgICAgICAgIGRlbGV0ZSB2YWx1ZS5pZAogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB2YWx1ZS5pZCA9IHRoaXMuZ2V0Q2xlYW5JZCh2YWx1ZS5pZCkKICAgICAgICB9CgogICAgICAgIHZhbHVlcy5wdXNoKHZhbHVlKQogICAgICB9CgogICAgICBpZiAodmFsaWRhdGUgPT09IHRydWUpIHsKICAgICAgICB0aGlzLnRvb2x0aXBzID0gdG9vbHRpcHMKICAgICAgICB0aGlzLm5vdFBhc3NlZElkcyA9IG5vdFBhc3NlZElkcwogICAgICB9CgogICAgICBjb25zdCB0aW1lciA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgICBpZiAoYXN5bmNDb3VudCA9PT0gMCkgewogICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcikKICAgICAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICAgICAgY2FsbGJhY2soeyBlcnJvciwgdmFsdWVzIH0pCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCAxMCkKCiAgICAgIHJldHVybiB7IGVycm9yLCB2YWx1ZXMgfQogICAgfSwKCiAgICAvKiog6I635Y+W6KGo5qC86KGo5Y2V6YeM55qE5YC877yI5ZCM5q2l54mI77yJICovCiAgICBnZXRWYWx1ZXNTeW5jKG9wdGlvbnMgPSB7fSkgewogICAgICByZXR1cm4gdGhpcy5nZXRWYWx1ZXNBc3luYyhvcHRpb25zKQogICAgfSwKCiAgICAvKiog6I635Y+W6KGo5qC86KGo5Y2V6YeM55qE5YC8ICovCiAgICBnZXRWYWx1ZXMoY2FsbGJhY2ssIHZhbGlkYXRlID0gdHJ1ZSwgcm93SWRzKSB7CiAgICAgIHRoaXMuZ2V0VmFsdWVzQXN5bmMoeyB2YWxpZGF0ZSwgcm93SWRzIH0sICh7IGVycm9yLCB2YWx1ZXMgfSkgPT4gewogICAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICAgIGNhbGxiYWNrKGVycm9yLCB2YWx1ZXMpCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIC8qKiBnZXRWYWx1ZXPnmoRQcm9taXNl54mIICovCiAgICBnZXRWYWx1ZXNQcm9taXNlKHZhbGlkYXRlID0gdHJ1ZSwgcm93SWRzLCBkZWxldGVUZW1wSWQpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICB0aGlzLmdldFZhbHVlc0FzeW5jKHsgdmFsaWRhdGUsIHJvd0lkcywgZGVsZXRlVGVtcElkIH0sICh7IGVycm9yLCB2YWx1ZXMgfSkgPT4gewogICAgICAgICAgaWYgKGVycm9yID09PSAwKSB7CiAgICAgICAgICAgIHJlc29sdmUodmFsdWVzKQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmVqZWN0KFZBTElEQVRFX05PX1BBU1NFRCkKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9KQogICAgfSwKICAgIC8qKiDojrflj5booqvliKDpmaTpobnnmoRpZCAqLwogICAgZ2V0RGVsZXRlSWRzKCkgewogICAgICByZXR1cm4gY2xvbmVPYmplY3QodGhpcy5kZWxldGVJZHMpCiAgICB9LAogICAgLyoqIOiOt+WPluaJgOacieeahOaVsOaNru+8jOWMheaLrHZhbHVlc+OAgWRlbGV0ZUlkcyAqLwogICAgZ2V0QWxsKHZhbGlkYXRlLCBkZWxldGVUZW1wSWQpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICBsZXQgZGVsZXRlSWRzID0gdGhpcy5nZXREZWxldGVJZHMoKQogICAgICAgIHRoaXMuZ2V0VmFsdWVzUHJvbWlzZSh2YWxpZGF0ZSwgbnVsbCwgZGVsZXRlVGVtcElkKS50aGVuKCh2YWx1ZXMpID0+IHsKICAgICAgICAgIHJlc29sdmUoeyB2YWx1ZXMsIGRlbGV0ZUlkcyB9KQogICAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICAgIHJlamVjdChlcnJvcikKICAgICAgICB9KQogICAgICB9KQogICAgfSwKICAgIC8qKiBTeW5jIOiOt+WPluaJgOacieeahOaVsOaNru+8jOWMheaLrHZhbHVlc+OAgWRlbGV0ZUlkcyAqLwogICAgZ2V0QWxsU3luYyh2YWxpZGF0ZSwgcm93SWRzLCBkZWxldGVUZW1wSWQpIHsKICAgICAgbGV0IHJlc3VsdCA9IHRoaXMuZ2V0VmFsdWVzU3luYyh7IHZhbGlkYXRlLCByb3dJZHMsIGRlbGV0ZVRlbXBJZCB9KQogICAgICByZXN1bHQuZGVsZXRlSWRzID0gdGhpcy5nZXREZWxldGVJZHMoKQogICAgICByZXR1cm4gcmVzdWx0CiAgICB9LAogICAgLy8gc2xvdCDojrflj5blgLwKICAgIF9nZXRWYWx1ZUZvclNsb3Qocm93SWQpIHsKICAgICAgcmV0dXJuIHRoaXMuZ2V0VmFsdWVzU3luYyh7IHJvd0lkczogW3Jvd0lkXSB9KS52YWx1ZXNbMF0KICAgIH0sCiAgICBfZ2V0QWxsVmFsdWVzRm9yU2xvdCgpIHsKICAgICAgcmV0dXJuIGNsb25lT2JqZWN0KHsKICAgICAgICBpbnB1dFZhbHVlczogdGhpcy5pbnB1dFZhbHVlcywKICAgICAgICBzZWxlY3RWYWx1ZXM6IHRoaXMuc2VsZWN0VmFsdWVzLAogICAgICAgIGNoZWNrYm94VmFsdWVzOiB0aGlzLmNoZWNrYm94VmFsdWVzLAogICAgICAgIGpkYXRlVmFsdWVzOiB0aGlzLmpkYXRlVmFsdWVzLAogICAgICAgIGpJbnB1dFBvcFZhbHVlczogdGhpcy5qSW5wdXRQb3BWYWx1ZXMsCiAgICAgICAgc2xvdFZhbHVlczogdGhpcy5zbG90VmFsdWVzLAogICAgICAgIHVwbG9hZFZhbHVlczogdGhpcy51cGxvYWRWYWx1ZXMsCiAgICAgICAgcG9wdXBWYWx1ZXM6IHRoaXMucG9wdXBWYWx1ZXMsCiAgICAgICAgcmFkaW9WYWx1ZXM6IHRoaXMucmFkaW9WYWx1ZXMsCiAgICAgICAgbXVsdGlTZWxlY3RWYWx1ZXM6IHRoaXMubXVsdGlTZWxlY3RWYWx1ZXMsCiAgICAgICAgc2VhcmNoU2VsZWN0VmFsdWVzOiB0aGlzLnNlYXJjaFNlbGVjdFZhbHVlcywKICAgICAgfSkKICAgIH0sCiAgICAvKiog6K6+572u5p+Q6KGM5p+Q5YiX55qE5YC8ICovCiAgICBzZXRWYWx1ZXModmFsdWVzKSB7CgogICAgICB2YWx1ZXMuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICBsZXQgeyByb3dLZXksIHZhbHVlczogbmV3VmFsdWVzIH0gPSBpdGVtCiAgICAgICAgcm93S2V5ID0gdGhpcy5nZXRDbGVhbklkKHJvd0tleSkKICAgICAgICBmb3IgKGxldCBuZXdWYWx1ZUtleSBpbiBuZXdWYWx1ZXMpIHsKICAgICAgICAgIGlmIChuZXdWYWx1ZXMuaGFzT3duUHJvcGVydHkobmV3VmFsdWVLZXkpKSB7CiAgICAgICAgICAgIGxldCBlZGl0ZWQgPSBmYWxzZSAvLyDlt7Looqvkv67mlLkKICAgICAgICAgICAgZm9yIChsZXQgY29sdW1uIG9mIHRoaXMuY29sdW1ucykgewogICAgICAgICAgICAgIGlmIChjb2x1bW4ua2V5ID09PSBuZXdWYWx1ZUtleSkgewogICAgICAgICAgICAgICAgbGV0IG5ld1ZhbHVlID0gbmV3VmFsdWVzW25ld1ZhbHVlS2V5XQogICAgICAgICAgICAgICAgdGhpcy5pbnB1dFZhbHVlcy5mb3JFYWNoKHZhbHVlID0+IHsKICAgICAgICAgICAgICAgICAgLy8g5ZyoaW5wdXRWYWx1ZXPkuK3mib7liLDkuobor6XlrZfmrrUKICAgICAgICAgICAgICAgICAgaWYgKHJvd0tleSA9PT0gdGhpcy5nZXRDbGVhbklkKHZhbHVlLmlkKSkgewogICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZS5oYXNPd25Qcm9wZXJ0eShuZXdWYWx1ZUtleSkpIHsKICAgICAgICAgICAgICAgICAgICAgIGVkaXRlZCA9IHRydWUKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlW25ld1ZhbHVlS2V5XSA9IG5ld1ZhbHVlCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgaWYgKCFlZGl0ZWQpIHsKICAgICAgICAgICAgICAgICAgbGV0IG1vZGVsS2V5ID0gYCR7bmV3VmFsdWVLZXl9JHt0aGlzLmNhc2VJZH0ke3Jvd0tleX1gCiAgICAgICAgICAgICAgICAgIGlmIChjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLnNlbGVjdCkgewogICAgICAgICAgICAgICAgICAgIGlmIChuZXdWYWx1ZSAhPT0gMCAmJiAhbmV3VmFsdWUpIHsKICAgICAgICAgICAgICAgICAgICAgIGVkaXRlZCA9IHRoaXMuc2V0T25lVmFsdWUodGhpcy5zZWxlY3RWYWx1ZXMsIG1vZGVsS2V5LCB1bmRlZmluZWQpCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgIGVkaXRlZCA9IHRoaXMuc2V0T25lVmFsdWUodGhpcy5zZWxlY3RWYWx1ZXMsIG1vZGVsS2V5LCBuZXdWYWx1ZSkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY29sdW1uLnR5cGUgPT09IEZvcm1UeXBlcy5jaGVja2JveCkgewogICAgICAgICAgICAgICAgICAgIC8vIGNoZWNrYm94IOeJueauiuWkhOeQhiBDdXN0b21WYWx1ZQogICAgICAgICAgICAgICAgICAgIGxldCBrZXkgPSB0aGlzLnZhbHVlc0hhc093blByb3BlcnR5KHRoaXMuY2hlY2tib3hWYWx1ZXMsIG1vZGVsS2V5KQogICAgICAgICAgICAgICAgICAgIC8vIOaJvuWIsOWvueW6lOeahGNvbHVtbgogICAgICAgICAgICAgICAgICAgIGxldCBzb3VyY2VWYWx1ZQogICAgICAgICAgICAgICAgICAgIC8vIOWIpOaWreaYr+WQpuiuvuWumuS6hmN1c3RvbVZhbHVl77yI6Ieq5a6a5LmJ5YC877yJCiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbHVtbi5jdXN0b21WYWx1ZSBpbnN0YW5jZW9mIEFycmF5KSB7CiAgICAgICAgICAgICAgICAgICAgICBsZXQgY3VzdG9tVmFsdWUgPSAoY29sdW1uLmN1c3RvbVZhbHVlWzBdIHx8ICcnKS50b1N0cmluZygpCiAgICAgICAgICAgICAgICAgICAgICBzb3VyY2VWYWx1ZSA9IChuZXdWYWx1ZSA9PT0gY3VzdG9tVmFsdWUpCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZVZhbHVlID0gISFuZXdWYWx1ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB0aGlzLiRzZXQodGhpcy5jaGVja2JveFZhbHVlcywga2V5LCBzb3VyY2VWYWx1ZSkKICAgICAgICAgICAgICAgICAgICBlZGl0ZWQgPSB0cnVlCiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY29sdW1uLnR5cGUgPT09IEZvcm1UeXBlcy5kYXRlIHx8IGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMuZGF0ZXRpbWUpIHsKICAgICAgICAgICAgICAgICAgICBlZGl0ZWQgPSB0aGlzLnNldE9uZVZhbHVlKHRoaXMuamRhdGVWYWx1ZXMsIG1vZGVsS2V5LCBuZXdWYWx1ZSkKICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLmlucHV0X3BvcCkgewogICAgICAgICAgICAgICAgICAgIGVkaXRlZCA9IHRoaXMuc2V0T25lVmFsdWUodGhpcy5qSW5wdXRQb3BWYWx1ZXMsIG1vZGVsS2V5LCBuZXdWYWx1ZSkKICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLnNsb3QpIHsKICAgICAgICAgICAgICAgICAgICBlZGl0ZWQgPSB0aGlzLnNldE9uZVZhbHVlKHRoaXMuc2xvdFZhbHVlcywgbW9kZWxLZXksIG5ld1ZhbHVlKQogICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMudXBsb2FkIHx8IGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMuaW1hZ2UgfHwgY29sdW1uLnR5cGUgPT09IEZvcm1UeXBlcy5maWxlKSB7CiAgICAgICAgICAgICAgICAgICAgZWRpdGVkID0gdGhpcy5zZXRPbmVWYWx1ZSh0aGlzLnVwbG9hZFZhbHVlcywgbW9kZWxLZXksIG5ld1ZhbHVlKQogICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMucG9wdXApIHsKICAgICAgICAgICAgICAgICAgICBlZGl0ZWQgPSB0aGlzLnNldE9uZVZhbHVlKHRoaXMucG9wdXBWYWx1ZXMsIG1vZGVsS2V5LCBuZXdWYWx1ZSkKICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChjb2x1bW4udHlwZSA9PT0gRm9ybVR5cGVzLnJhZGlvKSB7CiAgICAgICAgICAgICAgICAgICAgZWRpdGVkID0gdGhpcy5zZXRPbmVWYWx1ZSh0aGlzLnJhZGlvVmFsdWVzLCBtb2RlbEtleSwgbmV3VmFsdWUpCiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY29sdW1uLnR5cGUgPT09IEZvcm1UeXBlcy5saXN0X211bHRpKSB7CiAgICAgICAgICAgICAgICAgICAgZWRpdGVkID0gdGhpcy5zZXRPbmVWYWx1ZSh0aGlzLm11bHRpU2VsZWN0VmFsdWVzLCBtb2RlbEtleSwgbmV3VmFsdWUsIHRydWUpCiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY29sdW1uLnR5cGUgPT09IEZvcm1UeXBlcy5zZWxfc2VhcmNoKSB7CiAgICAgICAgICAgICAgICAgICAgZWRpdGVkID0gdGhpcy5zZXRPbmVWYWx1ZSh0aGlzLnNlYXJjaFNlbGVjdFZhbHVlcywgbW9kZWxLZXksIG5ld1ZhbHVlKQogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGVkaXRlZCA9IGZhbHNlCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIChlZGl0ZWQpIHsKICAgICAgICAgICAgICAgICAgdGhpcy5lbGVtVmFsdWVDaGFuZ2UoY29sdW1uLnR5cGUsIHtbbmV3VmFsdWVLZXldOiBuZXdWYWx1ZX0sIGNvbHVtbiwgbmV3VmFsdWUpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICghZWRpdGVkKSB7CiAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBKRWRpdGFibGVUYWJsZS5zZXRWYWx1ZXPvvJrmsqHmnInmib7liLAiJHtuZXdWYWx1ZUtleX0i5YiXYCkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSkKICAgICAgLy8g5by65Yi25pu05pawZm9ybVZhbHVlcwogICAgICB0aGlzLmZvcmNlVXBkYXRlRm9ybVZhbHVlcygpCiAgICB9LAogICAgLyoqCiAgICAgKiDorr7nva7ljZXkuKrnu4Tku7bnmoTlgLwKICAgICAqIEBwYXJhbSB2YWx1ZXNPYmplY3Qg57uE5Lu25a2Y5YKo5YC855qE5a+56LGhCiAgICAgKiBAcGFyYW0gbW9kZWxLZXkg57uE5Lu25a2Y5YKo5YC855qE5a+56LGh6YeM55qEa2V5CiAgICAgKiBAcGFyYW0gdmFsdWUg5paw5YC8CiAgICAgKiBAcGFyYW0gaXNNdWx0aXBsZSDmmK/lkKblpJrpgInvvIzlpoLmnpzmmK/lsLHkvJrlr7kgdmFsdWUg6L+b6KGM5LiA5LiqIHNwbGl0KCcsJykg55qE5pON5L2cCiAgICAgKi8KICAgIHNldE9uZVZhbHVlKHZhbHVlc09iamVjdCwgbW9kZWxLZXksIHZhbHVlLCBpc011bHRpcGxlID0gZmFsc2UpIHsKICAgICAgbGV0IGtleSA9IHRoaXMudmFsdWVzSGFzT3duUHJvcGVydHkodmFsdWVzT2JqZWN0LCBtb2RlbEtleSkKICAgICAgaWYgKGtleSkgewogICAgICAgIC8vIOWkhOeQhuWkmumAieaVsOe7hAogICAgICAgIGlmIChpc011bHRpcGxlICYmICFBcnJheS5pc0FycmF5KHZhbHVlKSkgewogICAgICAgICAgdmFsdWUgPSAodmFsdWUgfHwgJycpLnRvU3RyaW5nKCkudHJpbSgpCiAgICAgICAgICB2YWx1ZSA9IHZhbHVlID09PSAnJyA/IFtdIDogdmFsdWUuc3BsaXQoJywnKQogICAgICAgIH0KICAgICAgICB0aGlzLiRzZXQodmFsdWVzT2JqZWN0LCBrZXksIHZhbHVlKQogICAgICAgIHJldHVybiB0cnVlCiAgICAgIH0KICAgICAgcmV0dXJuIGZhbHNlCiAgICB9LAogICAgdmFsdWVzSGFzT3duUHJvcGVydHkodmFsdWVzLCBvd25Qcm9wZXJ0eSkgewogICAgICBsZXQga2V5ID0gb3duUHJvcGVydHkKICAgICAgaWYgKHZhbHVlcy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7CiAgICAgICAgcmV0dXJuIGtleQogICAgICB9CiAgICAgIGlmICh2YWx1ZXMuaGFzT3duUHJvcGVydHkoa2V5ICsgdGhpcy50ZW1wSWQpKSB7CiAgICAgICAgcmV0dXJuIGtleSArIHRoaXMudGVtcElkCiAgICAgIH0KICAgICAgcmV0dXJuIG51bGwKICAgIH0sCgogICAgLyoqIOi3s+i9rOWIsOaMh+WumuS9jee9riAqLwogICAgLy8ganVtcFRvSWQoaWQsIGVsZW1lbnQpIHsKICAgIC8vICAgaWYgKGVsZW1lbnQgPT0gbnVsbCkgewogICAgLy8gICAgIGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCkKICAgIC8vICAgfQogICAgLy8gICBpZiAoZWxlbWVudCAhPSBudWxsKSB7CiAgICAvLyAgICAgY29uc29sZS5sb2codGhpcy5nZXRFbGVtZW50KCd0Ym9keScpLnNjcm9sbFRvcCwgZWxlbWVudC5vZmZzZXRUb3ApCiAgICAvLyAgICAgdGhpcy5nZXRFbGVtZW50KCd0Ym9keScpLnNjcm9sbFRvcCA9IGVsZW1lbnQub2Zmc2V0VG9wCiAgICAvLyAgICAgY29uc29sZS5sb2codGhpcy5nZXRFbGVtZW50KCd0Ym9keScpLnNjcm9sbFRvcCwgZWxlbWVudC5vZmZzZXRUb3ApCiAgICAvLyAgIH0KICAgIC8vIH0sCgogICAgLyoqCiAgICAgKiDpqozor4HljZXkuKrooajljZXvvIzlvILmraXniYgKICAgICAqCiAgICAgKiBAcGFyYW0gdmFsdWUg5qCh6aqM55qE5YC8CiAgICAgKiBAcGFyYW0gcm93IOagoemqjOeahOihjAogICAgICogQHBhcmFtIGNvbHVtbiDmoKHpqoznmoTliJcKICAgICAqIEBwYXJhbSBub3RQYXNzZWRJZHMg5rKh5pyJ6YCa6L+H5qCh6aqM55qEIGlkCiAgICAgKiBAcGFyYW0gdXBkYXRlIOaYr+WQpuabtOaWsOWIsHZ1ZeS4rQogICAgICogQHBhcmFtIHZhbGlkVHlwZSDmoKHpqozop6blj5HnmoTmlrnlvI/vvIhpbnB1dOOAgWJsdXLnrYnvvIkKICAgICAqIEBwYXJhbSBjYWxsYmFjawogICAgICovCiAgICB2YWxpZGF0ZU9uZUlucHV0QXN5bmModmFsdWUsIHJvdywgY29sdW1uLCBub3RQYXNzZWRJZHMsIHVwZGF0ZSA9IGZhbHNlLCB2YWxpZFR5cGUgPSAnaW5wdXQnLCBjYWxsYmFjaykgewogICAgICBsZXQgdG9vbHRpcHMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnRvb2x0aXBzKQogICAgICAvLyBsZXQgbm90UGFzc2VkSWRzID0gY2xvbmVPYmplY3QodGhpcy5ub3RQYXNzZWRJZHMpCiAgICAgIGxldCBpbnB1dElkID0gY29sdW1uLmtleSArIHJvdy5pZAogICAgICB0b29sdGlwc1tpbnB1dElkXSA9IHRvb2x0aXBzW2lucHV0SWRdID8gdG9vbHRpcHNbaW5wdXRJZF0gOiB7fQoKICAgICAgbGV0IFtwYXNzZWQsIG1lc3NhZ2VdID0gdGhpcy52YWxpZGF0ZVZhbHVlKGNvbHVtbiwgdmFsdWUpCgogICAgICBjb25zdCBuZXh0VGhlbiA9IHJlcyA9PiB7CiAgICAgICAgbGV0IFtwYXNzZWQsIG1lc3NhZ2VdID0gcmVzCiAgICAgICAgLy8gIShwYXNzZWQgPT0gbnVsbCAmJiB0b29sdGlwc1tpbnB1dElkXS52aXNpYmxlICE9IG51bGwpCiAgICAgICAgaWYgKHBhc3NlZCAhPSBudWxsKSB7CiAgICAgICAgICB0b29sdGlwc1tpbnB1dElkXS52aXNpYmxlID0gIXBhc3NlZAogICAgICAgICAgdG9vbHRpcHNbaW5wdXRJZF0ucGFzc2VkID0gcGFzc2VkCiAgICAgICAgICBsZXQgaW5kZXggPSBub3RQYXNzZWRJZHMuaW5kZXhPZihpbnB1dElkKQogICAgICAgICAgaWYgKCFwYXNzZWQpIHsKICAgICAgICAgICAgdG9vbHRpcHNbaW5wdXRJZF0udGl0bGUgPSB0aGlzLnJlcGxhY2VQcm9wcyhjb2x1bW4sIG1lc3NhZ2UpCiAgICAgICAgICAgIGlmIChpbmRleCA9PT0gLTEpIG5vdFBhc3NlZElkcy5wdXNoKGlucHV0SWQpCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBpZiAoaW5kZXggIT09IC0xKSBub3RQYXNzZWRJZHMuc3BsaWNlKGluZGV4LCAxKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAvLyDmmK/lkKbmm7TmlrDliLBkYXRhCiAgICAgICAgaWYgKHVwZGF0ZSkgewogICAgICAgICAgdGhpcy50b29sdGlwcyA9IHRvb2x0aXBzCiAgICAgICAgICB0aGlzLm5vdFBhc3NlZElkcyA9IG5vdFBhc3NlZElkcwogICAgICAgIH0KCiAgICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgY2FsbGJhY2soW3Rvb2x0aXBzW2lucHV0SWRdLCBub3RQYXNzZWRJZHNdKQogICAgICAgIH0KCiAgICAgIH0KCiAgICAgIGlmICh0eXBlb2YgcGFzc2VkID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgbGV0IGV4ZWN1dGVkID0gZmFsc2UKICAgICAgICBwYXNzZWQodmFsaWRUeXBlLCB2YWx1ZSwgeyBpZDogdGhpcy5nZXRDbGVhbklkKHJvdy5pZCkgfSwgeyAuLi5jb2x1bW4gfSwgKGZsYWcsIG1zZykgPT4gewogICAgICAgICAgaWYgKGV4ZWN1dGVkKSByZXR1cm4KICAgICAgICAgIGV4ZWN1dGVkID0gdHJ1ZQogICAgICAgICAgaWYgKHR5cGVvZiBtc2cgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgICAgIG1lc3NhZ2UgPSBtc2cKICAgICAgICAgIH0KICAgICAgICAgIGlmIChmbGFnID09IG51bGwpIHsKICAgICAgICAgICAgbmV4dFRoZW4oW3RydWUsIG1lc3NhZ2VdKQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV4dFRoZW4oWyEhZmxhZywgbWVzc2FnZV0pCiAgICAgICAgICB9CiAgICAgICAgfSwgdGhpcykKICAgICAgfSBlbHNlIHsKICAgICAgICBuZXh0VGhlbihbcGFzc2VkLCBtZXNzYWdlXSkKICAgICAgfQoKICAgICAgcmV0dXJuIFt0b29sdGlwc1tpbnB1dElkXSwgbm90UGFzc2VkSWRzXQogICAgfSwKCiAgICAvKiog6aqM6K+B5Y2V5Liq6KGo5Y2VICovCiAgICB2YWxpZGF0ZU9uZUlucHV0KHZhbHVlLCByb3csIGNvbHVtbiwgbm90UGFzc2VkSWRzLCB1cGRhdGUgPSBmYWxzZSwgdmFsaWRUeXBlID0gJ2lucHV0JykgewogICAgICByZXR1cm4gdGhpcy52YWxpZGF0ZU9uZUlucHV0QXN5bmModmFsdWUsIHJvdywgY29sdW1uLCBub3RQYXNzZWRJZHMsIHVwZGF0ZSwgdmFsaWRUeXBlKQogICAgfSwKICAgIC8qKiDpgJrov4fop4TliJnpqozor4HlgLzmmK/lkKbmraPnoa4gKi8KICAgIHZhbGlkYXRlVmFsdWUoY29sdW1uLCB2YWx1ZSkgewogICAgICBsZXQgcnVsZXMgPSBjb2x1bW4udmFsaWRhdGVSdWxlcwogICAgICBsZXQgcGFzc2VkID0gdHJ1ZSwgbWVzc2FnZSA9ICcnCiAgICAgIC8vIOWIpOaWreacieayoeaciemqjOivgeinhOWImeaIlumqjOivgeinhOWImeagvOW8j+ato+S4jeato+ehru+8jOiLpeadoeS7tuS4jeespuWQiOWImem7mOiupOmAmui/hwogICAgICBpZiAocnVsZXMgaW5zdGFuY2VvZiBBcnJheSkgewogICAgICAgIGZvciAobGV0IHJ1bGUgb2YgcnVsZXMpIHsKICAgICAgICAgIC8vIOW9k+WJjeWAvOaYr+WQpuS4uuepugogICAgICAgICAgbGV0IGlzTnVsbCA9ICh2YWx1ZSA9PSBudWxsIHx8IHZhbHVlID09PSAnJykKICAgICAgICAgIC8vIOmqjOivgeinhOWIme+8mumdnuepugogICAgICAgICAgaWYgKHJ1bGUucmVxdWlyZWQgPT09IHRydWUgJiYgaXNOdWxsKSB7CiAgICAgICAgICAgIHBhc3NlZCA9IGZhbHNlCiAgICAgICAgICB9IGVsc2UgLy8g5L2/55SoIGVsc2UtaWYg5piv5Li65LqG6Ziy5q2i5LiA5LiqIHJ1bGUg5Lit5Ye6546w5Lik5Liq6KeE5YiZCiAgICAgICAgICAvLyDpqozor4Hop4TliJnvvJrllK/kuIDmoKHpqowKICAgICAgICAgIGlmIChydWxlLnVuaXF1ZSA9PT0gdHJ1ZSB8fCBydWxlLnBhdHRlcm4gPT09ICdvbmx5JykgewogICAgICAgICAgICBsZXQgeyB2YWx1ZXMgfSA9IHRoaXMuZ2V0VmFsdWVzU3luYyh7IHZhbGlkYXRlOiBmYWxzZSB9KQogICAgICAgICAgICBsZXQgZmluZENvdW50ID0gMAogICAgICAgICAgICBmb3IgKGxldCB2YWwgb2YgdmFsdWVzKSB7CiAgICAgICAgICAgICAgaWYgKHZhbFtjb2x1bW4ua2V5XSA9PT0gdmFsdWUpIHsKICAgICAgICAgICAgICAgIGlmICgrK2ZpbmRDb3VudCA+PSAyKSB7CiAgICAgICAgICAgICAgICAgIHBhc3NlZCA9IGZhbHNlCiAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UKICAgICAgICAgIC8vIOmqjOivgeinhOWIme+8muato+WImeihqOi+vuW8jwogICAgICAgICAgaWYgKCEhcnVsZS5wYXR0ZXJuICYmICFpc051bGwpIHsKCiAgICAgICAgICAgIC8vIOWFvOWuuSBvbmxpbmUg55qE6KeE5YiZCiAgICAgICAgICAgIGxldCBmb28gPSBbCiAgICAgICAgICAgICAgeyB0aXRsZTogJzbliLAxNuS9jeaVsOWtlycsIHZhbHVlOiAnbjYtMTYnLCBwYXR0ZXJuOiAvXlxkezYsMTh9JC8gfSwKICAgICAgICAgICAgICB7IHRpdGxlOiAnNuWIsDE25L2N5Lu75oSP5a2X56ymJywgdmFsdWU6ICcqNi0xNicsIHBhdHRlcm46IC9eLns2LDE2fSQvIH0sCiAgICAgICAgICAgICAgeyB0aXRsZTogJzbliLAxOOS9jeWtl+avjScsIHZhbHVlOiAnczYtMTgnLCBwYXR0ZXJuOiAvXlthLXp8QS1aXXs2LDE4fSQvIH0sCiAgICAgICAgICAgICAgeyB0aXRsZTogJ+e9keWdgCcsIHZhbHVlOiAndXJsJywgcGF0dGVybjogL14oPzooW0EtWmEtel0rKTopPyhcL3swLDN9KShbMC05LlwtQS1aYS16XSspKD86OihcZCspKT8oPzpcLyhbXj8jXSopKT8oPzpcPyhbXiNdKikpPyg/OiMoLiopKT8kLyB9LAogICAgICAgICAgICAgIHsgdGl0bGU6ICfnlLXlrZDpgq7ku7YnLCB2YWx1ZTogJ2UnLCBwYXR0ZXJuOiAvXihbXHddK1wuKikoW1x3XSspQFtcd10rXC5cd3szfShcLlx3ezJ9fCkkLyB9LAogICAgICAgICAgICAgIHsgdGl0bGU6ICfmiYvmnLrlj7fnoIEnLCB2YWx1ZTogJ20nLCBwYXR0ZXJuOiAvXjFbMzQ1Njc4OV1cZHs5fSQvIH0sCiAgICAgICAgICAgICAgeyB0aXRsZTogJ+mCruaUv+e8lueggScsIHZhbHVlOiAncCcsIHBhdHRlcm46IC9eWzEtOV1cZHs1fSQvIH0sCiAgICAgICAgICAgICAgeyB0aXRsZTogJ+Wtl+avjScsIHZhbHVlOiAncycsIHBhdHRlcm46IC9eW0EtWnxhLXpdKyQvIH0sCiAgICAgICAgICAgICAgeyB0aXRsZTogJ+aVsOWtlycsIHZhbHVlOiAnbicsIHBhdHRlcm46IC9eLT9cZCsoXC4/XGQrfFxkPykkLyB9LAogICAgICAgICAgICAgIHsgdGl0bGU6ICfmlbTmlbAnLCB2YWx1ZTogJ3onLCBwYXR0ZXJuOiAvXi0/XGQrJC8gfSwKICAgICAgICAgICAgICB7IHRpdGxlOiAn6Z2e56m6JywgdmFsdWU6ICcqJywgcGF0dGVybjogL14uKyQvIH0sCiAgICAgICAgICAgICAgeyB0aXRsZTogJ+mHkeminScsIHZhbHVlOiAnbW9uZXknLCBwYXR0ZXJuOiAvXigoWzEtOV1bMC05XSopfChbMF1cLlxkezAsMn18WzEtOV1bMC05XSpcLlxkezAsMn0pKSQvIH0sCiAgICAgICAgICAgIF0KICAgICAgICAgICAgbGV0IGZsYWcgPSBmYWxzZQogICAgICAgICAgICBmb3IgKGxldCBpdGVtIG9mIGZvbykgewogICAgICAgICAgICAgIGlmIChydWxlLnBhdHRlcm4gPT09IGl0ZW0udmFsdWUgJiYgaXRlbS5wYXR0ZXJuKSB7CiAgICAgICAgICAgICAgICBwYXNzZWQgPSBuZXcgUmVnRXhwKGl0ZW0ucGF0dGVybikudGVzdCh2YWx1ZSkKICAgICAgICAgICAgICAgIGZsYWcgPSB0cnVlCiAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoIWZsYWcpIHBhc3NlZCA9IG5ldyBSZWdFeHAocnVsZS5wYXR0ZXJuKS50ZXN0KHZhbHVlKQogICAgICAgICAgfSBlbHNlCiAgICAgICAgICAvLyDmoKHpqozop4TliJnvvJroh6rlrprkuYnlh73mlbDmoKHpqowKICAgICAgICAgIGlmICh0eXBlb2YgcnVsZS5oYW5kbGVyID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICAgIHJldHVybiBbcnVsZS5oYW5kbGVyLCBydWxlLm1lc3NhZ2VdCiAgICAgICAgICB9CiAgICAgICAgICAvLyDlpoLmnpzmsqHmnInpgJrov4fpqozor4HvvIzliJnot7Plh7rlvqrnjq/jgILlpoLmnpzpgJrov4fkuobpqozor4HvvIzliJnnu6fnu63pqozor4HkuIvkuIDmnaHop4TliJkKICAgICAgICAgIGlmICghcGFzc2VkKSB7CiAgICAgICAgICAgIG1lc3NhZ2UgPSBydWxlLm1lc3NhZ2UKICAgICAgICAgICAgYnJlYWsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIFtwYXNzZWQsIG1lc3NhZ2VdCiAgICB9LAoKICAgIC8qKiDliqjmgIHmm7TmlrDooajljZXnmoTlgLwgKi8KICAgIHVwZGF0ZUZvcm1WYWx1ZXMoKSB7CiAgICAgIGxldCB0cnMgPSB0aGlzLmdldEVsZW1lbnQoJ3Rib2R5JykuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgndHInKQogICAgICBsZXQgdHJFbHMgPSBbXQogICAgICBmb3IgKGxldCB0ciBvZiB0cnMpIHsKICAgICAgICB0ckVscy5wdXNoKHRyKQogICAgICB9CiAgICAgIC8vIOiOt+WPluaWsOWinueahCB0cgogICAgICBsZXQgbmV3VHJFbHMgPSB0ckVscwogICAgICBpZiAodGhpcy52aXNpYmxlVHJFbHMubGVuZ3RoID4gMCkgewogICAgICAgIG5ld1RyRWxzID0gW10KICAgICAgICBmb3IgKGxldCB0ciBvZiB0ckVscykgewogICAgICAgICAgbGV0IGlzTmV3ZXN0ID0gdHJ1ZQogICAgICAgICAgZm9yIChsZXQgdnRyIG9mIHRoaXMudmlzaWJsZVRyRWxzKSB7CiAgICAgICAgICAgIGlmICh2dHIuaWQgPT09IHRyLmlkKSB7CiAgICAgICAgICAgICAgaXNOZXdlc3QgPSBmYWxzZQogICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIGlmIChpc05ld2VzdCkgewogICAgICAgICAgICBuZXdUckVscy5wdXNoKHRyKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICB0aGlzLnZpc2libGVUckVscyA9IHRyRWxzCiAgICAgIC8vIOWQkeaWsOWinueahHRy5Lit6LWL5YC8CiAgICAgIG5ld1RyRWxzLmZvckVhY2godHIgPT4gewogICAgICAgIGxldCB7IGlkeCB9ID0gdHIuZGF0YXNldAogICAgICAgIGxldCB2YWx1ZSA9IHRoaXMuaW5wdXRWYWx1ZXNbaWR4XQogICAgICAgIGZvciAobGV0IGtleSBpbiB2YWx1ZSkgewogICAgICAgICAgaWYgKHZhbHVlLmhhc093blByb3BlcnR5KGtleSkpIHsKICAgICAgICAgICAgbGV0IGVsaWQgPSBgJHtrZXl9JHt2YWx1ZS5pZH1gCiAgICAgICAgICAgIGxldCBlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVsaWQpCiAgICAgICAgICAgIGlmIChlbCkgewogICAgICAgICAgICAgIGVsLnZhbHVlID0gdmFsdWVba2V5XQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIC8qKiDlvLrliLbmm7TmlrBGb3JtVmFsdWVzICovCiAgICBmb3JjZVVwZGF0ZUZvcm1WYWx1ZXMoKSB7CiAgICAgIHRoaXMudmlzaWJsZVRyRWxzID0gW10KICAgICAgdGhpcy4kZm9yY2VVcGRhdGUoKQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB0aGlzLnVwZGF0ZUZvcm1WYWx1ZXMoKSkKICAgIH0sCgogICAgLy8g6YeN5paw6K6h566X5omA5pyJ57uf6K6h5YiXCiAgICByZWNhbGNBbGxTdGF0aXN0aWNzQ29sdW1ucygpIHsKICAgICAgaWYgKHRoaXMuaGFzU3RhdGlzdGljc0NvbHVtbikgewogICAgICAgIE9iamVjdC5rZXlzKHRoaXMuc3RhdGlzdGljc0NvbHVtbnMpLmZvckVhY2goa2V5ID0+IHRoaXMucmVjYWxjT25lU3RhdGlzdGljc0NvbHVtbihrZXkpKQogICAgICB9CiAgICB9LAogICAgLy8g6YeN5paw6K6h566X5Y2V5Liq57uf6K6h5YiXCiAgICByZWNhbGNPbmVTdGF0aXN0aWNzQ29sdW1uKGtleSkgewogICAgICBpZiAodGhpcy5oYXNTdGF0aXN0aWNzQ29sdW1uKSB7CiAgICAgICAgaWYgKHRoaXMuc3RhdGlzdGljc0NvbHVtbnMuaGFzT3duUHJvcGVydHkoa2V5KSkgewogICAgICAgICAgLy8g6K6h566X5ZCI6K6h5YC8CiAgICAgICAgICBsZXQgY291bnQgPSAwCiAgICAgICAgICB0aGlzLmlucHV0VmFsdWVzLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICAgIGxldCB2YWx1ZSA9IGl0ZW1ba2V5XQogICAgICAgICAgICBpZiAodmFsdWUgJiYgY291bnQgIT09ICctJykgewogICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICBjb3VudCArPSBOdW1iZXIucGFyc2VJbnQodmFsdWUpCiAgICAgICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICAgICAgY291bnQgPSAnLScKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgICB0aGlzLnN0YXRpc3RpY3NDb2x1bW5zW2tleV0gPSBjb3VudAogICAgICAgIH0KICAgICAgfQogICAgfSwKCiAgICAvKiog6I635Y+W5p+Q5Liq57uf6K6h5a2X5q6155qE5YC8ICovCiAgICBnZXRTdGF0aXN0aWNzVmFsdWUoa2V5KSB7CiAgICAgIGlmICh0aGlzLmhhc1N0YXRpc3RpY3NDb2x1bW4pIHsKICAgICAgICBpZiAodGhpcy5zdGF0aXN0aWNzQ29sdW1ucy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy5zdGF0aXN0aWNzQ29sdW1uc1trZXldCiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiBudWxsCiAgICB9LAoKICAgIC8qKiDlhajpgInmiJblj5bmtojlhajpgIkgKi8KICAgIGhhbmRsZUNoYW5nZUNoZWNrZWRBbGwoKSB7CiAgICAgIGxldCBzZWxlY3RlZFJvd0lkcyA9IFtdCiAgICAgIGlmICghdGhpcy5nZXRTZWxlY3RBbGwpIHsKICAgICAgICB0aGlzLnJvd3MuZm9yRWFjaChyb3cgPT4gewogICAgICAgICAgaWYgKCh0aGlzLmRpc2FibGVkUm93SWRzIHx8IFtdKS5pbmRleE9mKHJvdy5pZCkgPT09IC0xKSB7CiAgICAgICAgICAgIHNlbGVjdGVkUm93SWRzLnB1c2gocm93LmlkKQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIH0KICAgICAgdGhpcy5zZWxlY3RlZFJvd0lkcyA9IHNlbGVjdGVkUm93SWRzCiAgICB9LAogICAgLyoqIOW3puS+p+ihjOmAieaLqeahhmNoYW5nZeS6i+S7tiAqLwogICAgaGFuZGxlQ2hhbmdlTGVmdENoZWNrYm94KGV2ZW50KSB7CiAgICAgIGxldCB7IGlkIH0gPSBldmVudC50YXJnZXQKCiAgICAgIGlmICgodGhpcy5kaXNhYmxlZFJvd0lkcyB8fCBbXSkuaW5kZXhPZihpZCkgIT09IC0xKSB7CiAgICAgICAgcmV0dXJuCiAgICAgIH0KCiAgICAgIGxldCBpbmRleCA9IHRoaXMuc2VsZWN0ZWRSb3dJZHMuaW5kZXhPZihpZCkKICAgICAgaWYgKGluZGV4ICE9PSAtMSkgewogICAgICAgIHRoaXMuc2VsZWN0ZWRSb3dJZHMuc3BsaWNlKGluZGV4LCAxKQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuc2VsZWN0ZWRSb3dJZHMucHVzaChpZCkKICAgICAgfQoKICAgIH0sCiAgICBoYW5kbGVDbGlja0FkZCgpIHsKICAgICAgdGhpcy5hZGQoKQogICAgICAvLyB0aGlzLiRlbWl0KCdhZGQnKQogICAgfSwKICAgIGhhbmRsZUNvbmZpcm1EZWxldGUoKSB7CiAgICAgIHRoaXMucmVtb3ZlU2VsZWN0ZWRSb3dzKCkKICAgIH0sCiAgICBoYW5kbGVDbGlja0NsZWFyU2VsZWN0aW9uKCkgewogICAgICB0aGlzLmNsZWFyU2VsZWN0aW9uKCkKICAgIH0sCiAgICBjbGVhclNlbGVjdGlvbigpIHsKICAgICAgdGhpcy5zZWxlY3RlZFJvd0lkcyA9IFtdCiAgICB9LAogICAgLyoqIOeUqOS6juaQnOe0ouS4i+aLieahhuS4reeahOWGheWuuSAqLwogICAgaGFuZGxlU2VsZWN0RmlsdGVyT3B0aW9uKGlucHV0LCBvcHRpb24sIGNvbHVtbikgewogICAgICBpZiAoY29sdW1uLmFsbG93U2VhcmNoID09PSB0cnVlIHx8IGNvbHVtbi5hbGxvd0lucHV0ID09PSB0cnVlKSB7CiAgICAgICAgcmV0dXJuIG9wdGlvbi5jb21wb25lbnRPcHRpb25zLmNoaWxkcmVuWzBdLnRleHQudG9Mb3dlckNhc2UoKS5pbmRleE9mKGlucHV0LnRvTG93ZXJDYXNlKCkpID49IDAKICAgICAgfQogICAgICByZXR1cm4gdHJ1ZQogICAgfSwKICAgIC8qKiBzZWxlY3Qg5pCc57Si5pe255qE5LqL5Lu277yM55So5LqO5Yqo5oCB5re75Yqgb3B0aW9ucyAqLwogICAgaGFuZGxlU2VhcmNoU2VsZWN0KHZhbHVlLCBpZCwgcm93LCBjb2wpIHsKICAgICAgaWYgKGNvbC5hbGxvd1NlYXJjaCAhPT0gdHJ1ZSAmJiBjb2wuYWxsb3dJbnB1dCA9PT0gdHJ1ZSkgewogICAgICAgIC8vIOaYr+WQpuaJvuWIsOS6huWvueW6lOeahOmhue+8jOaJvuS4jeWIsOWImea3u+WKoOi/meS4gOmhuQogICAgICAgIGxldCBmbGFnID0gZmFsc2UKICAgICAgICBmb3IgKGxldCBvcHRpb24gb2YgY29sLm9wdGlvbnMpIHsKICAgICAgICAgIGlmIChvcHRpb24udmFsdWUudG9Mb2NhbGVTdHJpbmcoKSA9PT0gdmFsdWUudG9Mb2NhbGVTdHJpbmcoKSkgewogICAgICAgICAgICBmbGFnID0gdHJ1ZQogICAgICAgICAgICBicmVhawogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAvLyAhIXZhbHVlIO+8muS4jea3u+WKoOepuuWAvAogICAgICAgIGlmICghZmxhZyAmJiAhIXZhbHVlKSB7CiAgICAgICAgICAvLyBzZWFyY2hBZGQg5piv5ZCm5piv6YCa6L+H5pCc57Si5re75Yqg55qECiAgICAgICAgICBjb2wub3B0aW9ucy5wdXNoKHsgdGl0bGU6IHZhbHVlLCB2YWx1ZTogdmFsdWUsIHNlYXJjaEFkZDogdHJ1ZSB9KQogICAgICAgIH0KCiAgICAgIH0KICAgIH0sCiAgICAvLyBibHVyIOWkseWOu+eEpueCuQogICAgaGFuZGxlQmx1clNlYXJjaCh2YWx1ZSwgaWQsIHJvdywgY29sKSB7CiAgICAgIGlmIChjb2wuYWxsb3dJbnB1dCA9PT0gdHJ1ZSkgewogICAgICAgIC8vIOWIoOmZpOaXoOeUqOeahOWboOaQnOe0ou+8iOeUqOaIt+i+k+WFpe+8ieiAjOWIm+W7uueahOmhuQogICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgICBsZXQgaW5kZXhzID0gW10KICAgICAgICAgIGNvbC5vcHRpb25zLmZvckVhY2goKG9wdGlvbiwgaW5kZXgpID0+IHsKICAgICAgICAgICAgaWYgKG9wdGlvbi52YWx1ZS50b0xvY2FsZVN0cmluZygpID09PSB2YWx1ZS50b0xvY2FsZVN0cmluZygpKSB7CiAgICAgICAgICAgICAgZGVsZXRlIG9wdGlvbi5zZWFyY2hBZGQKICAgICAgICAgICAgfSBlbHNlIGlmIChvcHRpb24uc2VhcmNoQWRkID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgaW5kZXhzLnB1c2goaW5kZXgpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgICAvLyDnv7vovazliKDpmaTmlbDnu4TkuK3nmoTpobkKICAgICAgICAgIGZvciAobGV0IGluZGV4IG9mIGluZGV4cy5yZXZlcnNlKCkpIHsKICAgICAgICAgICAgY29sLm9wdGlvbnMuc3BsaWNlKGluZGV4LCAxKQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgIH0KICAgICAgLy8g5YGa5Y2V5Liq6KGo5Y2V6aqM6K+BCiAgICAgIHRoaXMudmFsaWRhdGVPbmVJbnB1dCh2YWx1ZSwgcm93LCBjb2wsIHRoaXMubm90UGFzc2VkSWRzLCB0cnVlLCAnYmx1cicpCiAgICB9LAoKICAgIC8qKiDop6blj5Hlt7Lmi5bliqjkuovku7YgKi8KICAgIGVtaXREcmFnZ2VkKG9sZEluZGV4LCBuZXdJbmRleCkgewogICAgICB0aGlzLiRlbWl0KCdkcmFnZ2VkJywgeyBvbGRJbmRleCwgbmV3SW5kZXgsIHRhcmdldDogdGhpcyB9KQogICAgfSwKCiAgICBoYW5kbGVEcmFnTW92ZVN0YXJ0KGV2ZW50KSB7CiAgICAgIHRoaXMuZHJhZ2dpbmcgPSB0cnVlCiAgICAgIHRoaXMuJHJlZnMuc2Nyb2xsVmlldy5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nCiAgICB9LAoKICAgIC8qKiDmi5bliqjnu5PmnZ/vvIzkuqTmjaJpbnB1dFZhbHVl5Lit55qE5YC8ICovCiAgICBoYW5kbGVEcmFnTW92ZUVuZChldmVudCkgewogICAgICB0aGlzLmRyYWdnaW5nID0gZmFsc2UKICAgICAgdGhpcy4kcmVmcy5zY3JvbGxWaWV3LnN0eWxlLm92ZXJmbG93ID0gJ2F1dG8nCgogICAgICBsZXQgeyBvbGRJbmRleCwgbmV3SW5kZXgsIGl0ZW06IHsgZGF0YXNldDogeyBpZHg6IGRhdGFJZHggfSB9IH0gPSBldmVudAoKICAgICAgLy8g55Sx5LqO5Yqo5oCB5pi+56S66ZqQ6JeP6KGM5a+86Ie0aW5kZXjmnInor6/lt67vvIzpnIDopoHnrpflh7rnnJ/lrp7nmoRpbmRleAogICAgICBsZXQgZGlmZiA9IE51bWJlci5wYXJzZUludChkYXRhSWR4KSAtIG9sZEluZGV4CiAgICAgIG9sZEluZGV4ICs9IGRpZmYKICAgICAgbmV3SW5kZXggKz0gZGlmZgoKICAgICAgdGhpcy5yb3dSZXNvcnQob2xkSW5kZXgsIG5ld0luZGV4KQogICAgICB0aGlzLmVtaXREcmFnZ2VkKG9sZEluZGV4LCBuZXdJbmRleCkKICAgIH0sCgogICAgLyoqIOihjOmHjeaWsOaOkuW6jyAqLwogICAgcm93UmVzb3J0KG9sZEluZGV4LCBuZXdJbmRleCkgewogICAgICBjb25zdCBzb3J0ID0gKGFycmF5KSA9PiB7CiAgICAgICAgLy8g5a2Y5YKo5pen5pWw5o2u77yM5bm25Yig6Zmk5pen6aG555uuCiAgICAgICAgbGV0IHRlbXAgPSBhcnJheVtvbGRJbmRleF0KICAgICAgICBhcnJheS5zcGxpY2Uob2xkSW5kZXgsIDEpCiAgICAgICAgLy8g5ZCR5paw6aG555uu6YeM5re75Yqg5pen5pWw5o2uCiAgICAgICAgYXJyYXkuc3BsaWNlKG5ld0luZGV4LCAwLCB0ZW1wKQogICAgICB9CgogICAgICBzb3J0KHRoaXMucm93cykKICAgICAgc29ydCh0aGlzLmlucHV0VmFsdWVzKQoKICAgICAgdGhpcy5yZWNhbGNTb3J0TnVtYmVyKCkKCiAgICAgIHRoaXMuZm9yY2VVcGRhdGVGb3JtVmFsdWVzKCkKICAgIH0sCgogICAgLyoqIOmHjeaWsOiuoeeul+aOkuW6j+Wtl+auteeahOaVsOWAvCAqLwogICAgcmVjYWxjU29ydE51bWJlcigpIHsKICAgICAgaWYgKHRoaXMuZHJhZ1NvcnQpIHsKICAgICAgICAvLyDph43nva7mjpLluo/lrZfmrrUKICAgICAgICB0aGlzLmlucHV0VmFsdWVzLmZvckVhY2goKHZhbCwgaWR4KSA9PiB2YWxbdGhpcy5kcmFnU29ydEtleV0gPSAoaWR4ICsgMSkpCiAgICAgIH0KICAgIH0sCgogICAgLyoqIOW9k+WJjeihjOWQkeS4iuenu+S4gOS9jSAqLwogICAgX2hhbmRsZVJvd01vdmVVcChyb3dJbmRleCkgewogICAgICBpZiAocm93SW5kZXggPiAwKSB7CiAgICAgICAgbGV0IG5ld0luZGV4ID0gcm93SW5kZXggLSAxCiAgICAgICAgdGhpcy5yb3dSZXNvcnQocm93SW5kZXgsIG5ld0luZGV4KQogICAgICAgIHRoaXMuZW1pdERyYWdnZWQocm93SW5kZXgsIG5ld0luZGV4KQogICAgICB9CiAgICB9LAoKICAgIC8qKiDlvZPliY3ooYzlkJHkuIvnp7vkuIDkvY0gKi8KICAgIF9oYW5kbGVSb3dNb3ZlRG93bihyb3dJbmRleCkgewogICAgICBpZiAocm93SW5kZXggPCAodGhpcy5yb3dzLmxlbmd0aCAtIDEpKSB7CiAgICAgICAgbGV0IG5ld0luZGV4ID0gcm93SW5kZXggKyAxCiAgICAgICAgdGhpcy5yb3dSZXNvcnQocm93SW5kZXgsIG5ld0luZGV4KQogICAgICAgIHRoaXMuZW1pdERyYWdnZWQocm93SW5kZXgsIG5ld0luZGV4KQogICAgICB9CiAgICB9LAoKICAgIC8qKiDlnKjlvZPliY3ooYzkuIvpnaLmj5LlhaXkuIDooYwgKi8KICAgIF9oYW5kbGVSb3dJbnNlcnREb3duKHJvd0luZGV4KSB7CiAgICAgIGxldCBpbnNlcnRJbmRleCA9IChyb3dJbmRleCArIDEpCiAgICAgIHRoaXMuaW5zZXJ0KGluc2VydEluZGV4KQogICAgfSwKCiAgICAvKiAtLS0gY29tbW9uIGZ1bmN0aW9uIGJlZ2luIC0tLSAqLwoKICAgIC8qKiBpbnB1dOS6i+S7tiAqLwogICAgaGFuZGxlSW5wdXRDb21tb25vKHRhcmdldCwgaW5kZXgsIHJvdywgY29sdW1uKSB7CiAgICAgIGxldCBvbGRWYWx1ZSA9IHRoaXMuaW5wdXRWYWx1ZXNbaW5kZXhdW2NvbHVtbi5rZXldIHx8ICcnCiAgICAgIGxldCB7IHZhbHVlLCBkYXRhc2V0LCBzZWxlY3Rpb25TdGFydCB9ID0gdGFyZ2V0CiAgICAgIGxldCB0eXBlID0gRm9ybVR5cGVzLmlucHV0CiAgICAgIGxldCBjaGFuZ2UgPSB0cnVlCiAgICAgIGlmIChgJHtkYXRhc2V0LmlucHV0TnVtYmVyfWAgPT09ICd0cnVlJykgewogICAgICAgIHR5cGUgPSBGb3JtVHlwZXMuaW5wdXROdW1iZXIKICAgICAgICAvLyDliKTmlq3ovpPlhaXnmoTlgLzmmK/lkKbljLnphY3mlbDlrZfmraPliJnooajovr7lvI/vvIzkuI3ljLnphY3lsLHov5jljp8KICAgICAgICBpZiAoIS9eLT9cZCtcLj9cZCokLy50ZXN0KHZhbHVlKSAmJiAodmFsdWUgIT09ICcnICYmIHZhbHVlICE9PSAnLScpKSB7CiAgICAgICAgICBjaGFuZ2UgPSBmYWxzZQogICAgICAgICAgdmFsdWUgPSBvbGRWYWx1ZQogICAgICAgICAgdGFyZ2V0LnZhbHVlID0gdmFsdWUKICAgICAgICAgIGlmICh0eXBlb2Ygc2VsZWN0aW9uU3RhcnQgPT09ICdudW1iZXInKSB7CiAgICAgICAgICAgIHRhcmdldC5zZWxlY3Rpb25TdGFydCA9IHNlbGVjdGlvblN0YXJ0IC0gMQogICAgICAgICAgICB0YXJnZXQuc2VsZWN0aW9uRW5kID0gc2VsZWN0aW9uU3RhcnQgLSAxCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICAgIC8vIOWtmOWCqOi+k+WFpeeahOWAvAogICAgICB0aGlzLmlucHV0VmFsdWVzW2luZGV4XVtjb2x1bW4ua2V5XSA9IHZhbHVlCiAgICAgIC8vIOWBmuWNleS4quihqOWNlemqjOivgQogICAgICB0aGlzLnZhbGlkYXRlT25lSW5wdXQodmFsdWUsIHJvdywgY29sdW1uLCB0aGlzLm5vdFBhc3NlZElkcywgdHJ1ZSwgJ2lucHV0JykKCiAgICAgIGlmICh0eXBlID09PSBGb3JtVHlwZXMuaW5wdXROdW1iZXIpIHsKICAgICAgICB0aGlzLnJlY2FsY09uZVN0YXRpc3RpY3NDb2x1bW4oY29sdW1uLmtleSkKICAgICAgfQoKICAgICAgLy8g6Kem5Y+RdmFsdWVDaGFuZ2Ug5LqL5Lu2CiAgICAgIGlmIChjaGFuZ2UpIHsKICAgICAgICB0aGlzLmVsZW1WYWx1ZUNoYW5nZSh0eXBlLCByb3csIGNvbHVtbiwgdmFsdWUpCiAgICAgIH0KICAgIH0sCiAgICAvKiogc2xvdCBDaGFuZ2UgKi8KICAgIGhhbmRsZUNoYW5nZVNsb3RDb21tb24odmFsdWUsIGlkLCByb3csIGNvbHVtbikgewogICAgICB0aGlzLnNsb3RWYWx1ZXMgPSB0aGlzLmJpbmRWYWx1ZXNDaGFuZ2UodmFsdWUsIGlkLCAnc2xvdFZhbHVlcycpCiAgICAgIC8vIOWBmuWNleS4quihqOWNlemqjOivgQogICAgICB0aGlzLnZhbGlkYXRlT25lSW5wdXQodmFsdWUsIHJvdywgY29sdW1uLCB0aGlzLm5vdFBhc3NlZElkcywgdHJ1ZSwgJ2NoYW5nZScpCiAgICAgIC8vIOinpuWPkXZhbHVlQ2hhbmdlIOS6i+S7tgogICAgICB0aGlzLmVsZW1WYWx1ZUNoYW5nZShGb3JtVHlwZXMuc2xvdCwgcm93LCBjb2x1bW4sIHZhbHVlKQogICAgfSwKICAgIGhhbmRsZUJsdXJDb21tb25vKHRhcmdldCwgaW5kZXgsIHJvdywgY29sdW1uKSB7CiAgICAgIGxldCB7IHZhbHVlLCBkYXRhc2V0IH0gPSB0YXJnZXQKICAgICAgaWYgKGRhdGFzZXQgJiYgYCR7ZGF0YXNldC5pbnB1dE51bWJlcn1gID09PSAndHJ1ZScpIHsKICAgICAgICAvLyDliKTmlq3ovpPlhaXnmoTlgLzmmK/lkKbljLnphY3mlbDlrZfmraPliJnooajovr7lvI/vvIzkuI3ljLnphY3lsLHnva7nqboKICAgICAgICBpZiAoIS9eLT9cZCtcLj9cZCokLy50ZXN0KHZhbHVlKSkgewogICAgICAgICAgdmFsdWUgPSAnJwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB2YWx1ZSA9IE51bWJlci5wYXJzZUZsb2F0KHZhbHVlKQogICAgICAgIH0KICAgICAgICB0YXJnZXQudmFsdWUgPSB2YWx1ZQogICAgICB9CiAgICAgIC8vdXBkYXRlLS1iZWdpbi0tYXV0b3I6bHZkYW5kYW4tLS0tLWRhdGU6MjAyMDExMjYtLS0tLS1mb3LvvJpMT1dDT0QtMTA4OCBKRWRpdGFibGVUYWJsZei+k+WFpeagoemqjOaPkOekuuahhuS9jee9ruWBj+enuyAjMjAwNQogICAgICBzZXRUaW1lb3V0KCgpPT57CiAgICAgICAgLy8g5YGa5Y2V5Liq6KGo5Y2V6aqM6K+BCiAgICAgICAgdGhpcy52YWxpZGF0ZU9uZUlucHV0KHZhbHVlLCByb3csIGNvbHVtbiwgdGhpcy5ub3RQYXNzZWRJZHMsIHRydWUsICdibHVyJykKICAgICAgfSwgMTAwKQogICAgICAvL3VwZGF0ZS0tZW5kLS1hdXRvcjpsdmRhbmRhbi0tLS0tZGF0ZToyMDIwMTEyNi0tLS0tLWZvcu+8mkxPV0NPRC0xMDg4IEpFZGl0YWJsZVRhYmxl6L6T5YWl5qCh6aqM5o+Q56S65qGG5L2N572u5YGP56e7ICMyMDA1CiAgICB9LAogICAgaGFuZGxlQ2hhbmdlQ2hlY2tib3hDb21tb24oZXZlbnQsIHJvdywgY29sdW1uKSB7CiAgICAgIGxldCB7IGlkLCBjaGVja2VkIH0gPSBldmVudC50YXJnZXQKICAgICAgdGhpcy5jaGVja2JveFZhbHVlcyA9IHRoaXMuYmluZFZhbHVlc0NoYW5nZShjaGVja2VkLCBpZCwgJ2NoZWNrYm94VmFsdWVzJykKCiAgICAgIC8vIOinpuWPkXZhbHVlQ2hhbmdlIOS6i+S7tgogICAgICB0aGlzLmVsZW1WYWx1ZUNoYW5nZShGb3JtVHlwZXMuY2hlY2tib3gsIHJvdywgY29sdW1uLCBjaGVja2VkKQogICAgfSwKICAgIGhhbmRsZUNoYW5nZVNlbGVjdENvbW1vbih2YWx1ZSwgaWQsIHJvdywgY29sdW1uKSB7CiAgICAgIHRoaXMuc2VsZWN0VmFsdWVzID0gdGhpcy5iaW5kVmFsdWVzQ2hhbmdlKHZhbHVlLCBpZCwgJ3NlbGVjdFZhbHVlcycpCiAgICAgIC8vIOWBmuWNleS4quihqOWNlemqjOivgQogICAgICB0aGlzLnZhbGlkYXRlT25lSW5wdXQodmFsdWUsIHJvdywgY29sdW1uLCB0aGlzLm5vdFBhc3NlZElkcywgdHJ1ZSwgJ2NoYW5nZScpCgogICAgICAvLyDop6blj5F2YWx1ZUNoYW5nZSDkuovku7YKICAgICAgdGhpcy5lbGVtVmFsdWVDaGFuZ2UoRm9ybVR5cGVzLnNlbGVjdCwgcm93LCBjb2x1bW4sIHZhbHVlKQogICAgfSwKICAgIGhhbmRsZUNoYW5nZUpEYXRlQ29tbW9uKHZhbHVlLCBpZCwgcm93LCBjb2x1bW4sIHNob3dUaW1lKSB7CiAgICAgIHRoaXMuamRhdGVWYWx1ZXMgPSB0aGlzLmJpbmRWYWx1ZXNDaGFuZ2UodmFsdWUsIGlkLCAnamRhdGVWYWx1ZXMnKQogICAgICB0aGlzLnZhbGlkYXRlT25lSW5wdXQodmFsdWUsIHJvdywgY29sdW1uLCB0aGlzLm5vdFBhc3NlZElkcywgdHJ1ZSwgJ2NoYW5nZScpCgogICAgICAvLyDop6blj5F2YWx1ZUNoYW5nZSDkuovku7YKICAgICAgaWYgKHNob3dUaW1lKSB7CiAgICAgICAgdGhpcy5lbGVtVmFsdWVDaGFuZ2UoRm9ybVR5cGVzLmRhdGV0aW1lLCByb3csIGNvbHVtbiwgdmFsdWUpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5lbGVtVmFsdWVDaGFuZ2UoRm9ybVR5cGVzLmRhdGUsIHJvdywgY29sdW1uLCB2YWx1ZSkKICAgICAgfQogICAgfSwKICAgIGhhbmRsZUNoYW5nZUpJbnB1dFBvcENvbW1vbih2YWx1ZSwgaWQsIHJvdywgY29sdW1uKXsKICAgICAgdGhpcy5qSW5wdXRQb3BWYWx1ZXMgPSB0aGlzLmJpbmRWYWx1ZXNDaGFuZ2UodmFsdWUsIGlkLCAnaklucHV0UG9wVmFsdWVzJykKICAgICAgLy8g5YGa5Y2V5Liq6KGo5Y2V6aqM6K+BCiAgICAgIHRoaXMudmFsaWRhdGVPbmVJbnB1dCh2YWx1ZSwgcm93LCBjb2x1bW4sIHRoaXMubm90UGFzc2VkSWRzLCB0cnVlLCAnY2hhbmdlJykKICAgICAgLy8g6Kem5Y+RdmFsdWVDaGFuZ2Ug5LqL5Lu2CiAgICAgIHRoaXMuZWxlbVZhbHVlQ2hhbmdlKEZvcm1UeXBlcy5pbnB1dF9wb3AsIHJvdywgY29sdW1uLCB2YWx1ZSkKICAgIH0sCiAgICBoYW5kbGVDaGFuZ2VVcGxvYWQoaW5mbywgaWQsIHJvdywgY29sdW1uKSB7CiAgICAgIGxldCB7IGZpbGUgfSA9IGluZm8KICAgICAgbGV0IHZhbHVlID0gewogICAgICAgIG5hbWU6IGZpbGUubmFtZSwKICAgICAgICB0eXBlOiBmaWxlLnR5cGUsCiAgICAgICAgc2l6ZTogZmlsZS5zaXplLAogICAgICAgIHN0YXR1czogZmlsZS5zdGF0dXMsCiAgICAgICAgcGVyY2VudDogZmlsZS5wZXJjZW50CiAgICAgIH0KICAgICAgaWYgKGNvbHVtbi5yZXNwb25zZU5hbWUgJiYgZmlsZS5yZXNwb25zZSkgewogICAgICAgIHZhbHVlWydyZXNwb25zZU5hbWUnXSA9IGZpbGUucmVzcG9uc2VbY29sdW1uLnJlc3BvbnNlTmFtZV0KICAgICAgfQogICAgICBpZiAoZmlsZS5zdGF0dXMgPT09ICdkb25lJykgewogICAgICAgIHZhbHVlWydwYXRoJ10gPSBmaWxlLnJlc3BvbnNlW2NvbHVtbi5yZXNwb25zZU5hbWVdCiAgICAgIH0gZWxzZSBpZiAoZmlsZS5zdGF0dXMgPT09ICdlcnJvcicpIHsKICAgICAgICB2YWx1ZVsnbWVzc2FnZSddID0gZmlsZS5yZXNwb25zZS5tZXNzYWdlIHx8ICfmnKrnn6XplJnor68nCiAgICAgIH0KICAgICAgdGhpcy51cGxvYWRWYWx1ZXMgPSB0aGlzLmJpbmRWYWx1ZXNDaGFuZ2UodmFsdWUsIGlkLCAndXBsb2FkVmFsdWVzJykKCiAgICAgIC8vIOinpuWPkXZhbHVlQ2hhbmdlIOS6i+S7tgogICAgICB0aGlzLmVsZW1WYWx1ZUNoYW5nZShjb2x1bW4udHlwZSwgcm93LCBjb2x1bW4sIHZhbHVlKQogICAgfSwKICAgIGhhbmRsZU1vcmVPcGVyYXRpb24oaWQsZmxhZyxjb2x1bW4pewogICAgICAvL3VwZGF0ZS1iZWdpbi1hdXRob3I6d2FuZ3NodWFpIGRhdGU6MjAyMDEwMjEgZm9yOkxPV0NPRC05Njkg5Yik5pat5Lyg6L+H5p2l55qE5a2X5q615piv5ZCm5a2Y5ZyobnVtYmVy77yM55So5LqO5o6n5Yi25LiK5Lyg5paH5Lu2CiAgICAgIGlmKGNvbHVtbi5udW1iZXIpewogICAgICAgIHRoaXMubnVtYmVyID0gY29sdW1uLm51bWJlcjsKICAgICAgfWVsc2V7CiAgICAgICAgdGhpcy5udW1iZXIgPSAwOwogICAgICB9CiAgICAgIC8vdXBkYXRlLWVuZC1hdXRob3I6d2FuZ3NodWFpIGRhdGU6MjAyMDEwMjEgZm9yOkxPV0NPRC05Njkg5Yik5pat5Lyg6L+H5p2l55qE5a2X5q615piv5ZCm5a2Y5ZyobnVtYmVy77yM55So5LqO5o6n5Yi25LiK5Lyg5paH5Lu2CiAgICAgIGlmKGNvbHVtbiAmJiBjb2x1bW4uZmllbGRFeHRlbmRKc29uKXsKICAgICAgICBsZXQganNvbiA9IEpTT04ucGFyc2UoY29sdW1uLmZpZWxkRXh0ZW5kSnNvbik7CiAgICAgICAgdGhpcy5udW1iZXIgPSBqc29uLnVwbG9hZG51bT9qc29uLnVwbG9hZG51bTowOwogICAgICB9CiAgICAgIC8vY29uc29sZS5sb2coInRoaXMudXBsb2FkVmFsdWVzW2lkXSIsdGhpcy51cGxvYWRWYWx1ZXNbaWRdKQogICAgICBsZXQgcGF0aCA9ICcnCiAgICAgIGlmKHRoaXMudXBsb2FkVmFsdWVzICYmIHRoaXMudXBsb2FkVmFsdWVzW2lkXSl7CiAgICAgICAgcGF0aCA9IHRoaXMudXBsb2FkVmFsdWVzW2lkXS5wYXRoCiAgICAgIH0KICAgICAgdGhpcy4kcmVmcy5maWxlUG9wLnNob3coaWQscGF0aCxmbGFnKQogICAgfSwKICAgIGhhbmRsZUZpbGVTdWNjZXNzKG9iail7CiAgICAgIGlmKG9iai5pZCl7CiAgICAgICAgdGhpcy51cGxvYWRWYWx1ZXMgPSB0aGlzLmJpbmRWYWx1ZXNDaGFuZ2Uob2JqLCBvYmouaWQsICd1cGxvYWRWYWx1ZXMnKQogICAgICB9CiAgICB9LAogICAgaGFuZGxlQ2xpY2tUYWJsZVJvdyhldmVudCkgewogICAgICBsZXQge3RhcmdldH0gPSBldmVudAogICAgICBpZiAodGFyZ2V0LmNsYXNzTmFtZSA9PT0gJ3RkJyB8fCB0YXJnZXQuY2xhc3NOYW1lID09PSAndHInKSB7CiAgICAgICAgLy8g5riF56m657yW6L6R54q25oCBCiAgICAgICAgdGhpcy5jdXJyZW50RWRpdFJvd3MgPSB7fQogICAgICB9CiAgICB9LAogICAgLy8g54K55Ye75ZCO57yW6L6R5b2T5YmN6KGMCiAgICBoYW5kbGVFZGl0Um93KHJvdywgY29sKSB7CiAgICAgIGlmICh0aGlzLmFsd2F5c0VkaXQpIHsKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICAvLyDlsIbngrnlh7vnmoTnu4Tku7bnva7kuLrlj6/nvJbovpHlubbov5jljp/lhbbku5bnu4Tku7bnmoTnvJbovpHnirbmgIEKICAgICAgdGhpcy5jdXJyZW50RWRpdFJvd3MgPSB7CiAgICAgICAgW3Jvdy5pZF06IHsKICAgICAgICAgIFtjb2wua2V5XTogdHJ1ZQogICAgICAgIH0KICAgICAgfQogICAgICBpZiAoY29sLnR5cGUgPT09IEZvcm1UeXBlcy5pbnB1dCB8fCBjb2wudHlwZSA9PT0gRm9ybVR5cGVzLmlucHV0TnVtYmVyKSB7CiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgdGhpcy5mb3JjZVVwZGF0ZUZvcm1WYWx1ZXMoKQogICAgICAgICAgLy8g6Ieq5Yqo6I635Y+W54Sm54K5CiAgICAgICAgICBsZXQgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHtjb2wua2V5fSR7cm93LmlkfWApCiAgICAgICAgICBpZiAoZWwpIHsKICAgICAgICAgICAgZWwuZm9jdXMoKQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIH0KICAgIH0sCiAgICAvKiog6K6w5b2V55So5Yiw5pWw5o2u57uR5a6a55qE57uE5Lu255qE5YC8ICovCiAgICBiaW5kVmFsdWVzQ2hhbmdlKHZhbHVlLCBpZCwga2V5KSB7CiAgICAgIHRoaXMuJHNldCh0aGlzW2tleV0sIGlkLCB2YWx1ZSkKICAgICAgcmV0dXJuIHRoaXNba2V5XQogICAgfSwKCiAgICAvKiogdmFsdWUg6Kem5Y+RdmFsdWVDaGFuZ2Xkuovku7YgKi8KICAgIGVsZW1WYWx1ZUNoYW5nZSh0eXBlLCByb3dTb3VyY2UsIGNvbHVtblNvdXJjZSwgdmFsdWUpIHsKICAgICAgbGV0IGNvbHVtbiA9IE9iamVjdC5hc3NpZ24oe30sIGNvbHVtblNvdXJjZSkKICAgICAgLy8g5bCGY2FzZUlk5Y676ZmkCiAgICAgIGxldCByb3cgPSBPYmplY3QuYXNzaWduKHt9LCByb3dTb3VyY2UpCiAgICAgIHJvdy5pZCA9IHRoaXMuZ2V0Q2xlYW5JZChyb3cuaWQpCiAgICAgIC8vIOiOt+WPluaVtOihjOeahOaVsOaNrgogICAgICBsZXQgeyB2YWx1ZXMgfSA9IHRoaXMuZ2V0VmFsdWVzU3luYyh7IHZhbGlkYXRlOiBmYWxzZSwgcm93SWRzOiBbcm93LmlkXSB9KQogICAgICBpZiAodmFsdWVzLmxlbmd0aCA+IDApIHsKICAgICAgICBPYmplY3QuYXNzaWduKHJvdywgdmFsdWVzWzBdKQogICAgICB9CiAgICAgIHRoaXMuJGVtaXQoJ3ZhbHVlQ2hhbmdlJywgeyB0eXBlLCByb3csIGNvbHVtbiwgdmFsdWUsIHRhcmdldDogdGhpcyB9KQogICAgfSwKCiAgICAvKiog6I635Y+W5bmy5YeA55qESUTvvIjkuI3ljIXlkKvku7vkvZXmnYLotKjnmoRJRO+8iSAqLwogICAgZ2V0Q2xlYW5JZChpZCkgewogICAgICBpZCA9IHRoaXMucmVtb3ZlQ2FzZUlkKGlkKQogICAgICBpZCA9IHRoaXMucmVtb3ZlVGVtcElkKGlkKQogICAgICByZXR1cm4gaWQKICAgIH0sCgogICAgLyoqIOWIpOaWreafkOS4qklE5piv5ZCm5YyF5ZCr5LqGY2FzZUlkICovCiAgICBoYXNDYXNlSWQoaWQpIHsKICAgICAgcmV0dXJuIGlkICYmIGlkLnN0YXJ0c1dpdGgodGhpcy5jYXNlSWQpCiAgICB9LAoKICAgIC8qKiDlsIZjYXNlSWTljrvpmaQgKi8KICAgIHJlbW92ZUNhc2VJZChpZCkgewogICAgICBpZiAodGhpcy5oYXNDYXNlSWQoaWQpKSB7CiAgICAgICAgcmV0dXJuIGlkLnN1YnN0cmluZyh0aGlzLmNhc2VJZC5sZW5ndGgsIGlkLmxlbmd0aCkKICAgICAgfQogICAgICByZXR1cm4gaWQKICAgIH0sCgogICAgLy8g5Yik5patIGlkIOaYr+WQpuaYr+S4tOaXtklkCiAgICBpc1RlbXBJZChpZCkgewogICAgICByZXR1cm4gKGlkIHx8ICcnKS5lbmRzV2l0aCh0aGlzLnRlbXBJZCkKICAgIH0sCgogICAgLyoqIOWwhnRlbXBJZOWOu+mZpCAqLwogICAgcmVtb3ZlVGVtcElkKGlkKSB7CiAgICAgIGlmICh0aGlzLmlzVGVtcElkKGlkKSkgewogICAgICAgIHJldHVybiBpZC5zdWJzdHJpbmcoMCwgaWQubGVuZ3RoIC0gdGhpcy50ZW1wSWQubGVuZ3RoKQogICAgICB9CiAgICAgIHJldHVybiBpZDsKICAgIH0sCgogICAgaGFuZGxlQ2xpY2tEZWxGaWxlKGlkKSB7CiAgICAgIHRoaXMudXBsb2FkVmFsdWVzW2lkXSA9IG51bGwKICAgIH0sCiAgICBoYW5kbGVDbGlja0Rvd25sb2FkRmlsZShpZCkgewogICAgICBsZXQgeyBwYXRoIH0gPSB0aGlzLnVwbG9hZFZhbHVlc1tpZF0gfHwge30KICAgICAgaWYgKHBhdGgpIHsKICAgICAgICBsZXQgdXJsID0gZ2V0RmlsZUFjY2Vzc0h0dHBVcmwocGF0aCkKICAgICAgICB3aW5kb3cub3Blbih1cmwpCiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVDbGlja0Rvd25GaWxlQnlVcmwoaWQpewogICAgICBsZXQgeyB1cmwscGF0aCB9ID0gdGhpcy51cGxvYWRWYWx1ZXNbaWRdIHx8IHt9CiAgICAgIGlmICghdXJsIHx8IHVybC5sZW5ndGg9PT0wKSB7CiAgICAgICAgaWYocGF0aCAmJiBwYXRoLmxlbmd0aD4wKXsKICAgICAgICAgIHVybCA9IGdldEZpbGVBY2Nlc3NIdHRwVXJsKHBhdGguc3BsaXQoJywnKVswXSkKICAgICAgICB9CiAgICAgIH0KICAgICAgaWYodXJsKXsKICAgICAgICB3aW5kb3cub3Blbih1cmwpCiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVDbGlja1Nob3dJbWFnZUVycm9yKGlkKSB7CiAgICAgIGxldCBjdXJyVXBsb2FkT2JqID0gdGhpcy51cGxvYWRWYWx1ZXNbaWRdIHx8IG51bGwKICAgICAgaWYgKGN1cnJVcGxvYWRPYmogJiYgY3VyclVwbG9hZE9ialsnbWVzc2FnZSddKSB7CiAgICAgICAgdGhpcy4kZXJyb3IoeyB0aXRsZTogJ+S4iuS8oOWHuumUmScsIGNvbnRlbnQ6ICfplJnor6/kv6Hmga/vvJonICsgY3VyclVwbG9hZE9ialsnbWVzc2FnZSddLCBtYXNrQ2xvc2FibGU6IHRydWUgfSkKICAgICAgfQogICAgfSwKCiAgICAvKiog5Yqg6L295pWw5o2u5a2X5YW45bm25ZCI5bm25YiwIG9wdGlvbnMgKi8KICAgIF9sb2FkRGljdENvbmNhdFRvT3B0aW9ucyhjb2x1bW4pIHsKICAgICAgaW5pdERpY3RPcHRpb25zKGNvbHVtbi5kaWN0Q29kZSkudGhlbigocmVzKSA9PiB7CiAgICAgICAgaWYgKHJlcy5zdWNjZXNzKSB7CiAgICAgICAgICBsZXQgbmV3T3B0aW9ucyA9IChjb2x1bW4ub3B0aW9ucyB8fCBbXSkvLyAuY29uY2F0KHJlcy5yZXN1bHQpCiAgICAgICAgICByZXMucmVzdWx0LmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICAgIC8vIOi/h+a7pOmHjeWkjeaVsOaNrgogICAgICAgICAgICBmb3IgKGxldCBvcHRpb24gb2YgbmV3T3B0aW9ucykgaWYgKG9wdGlvbi52YWx1ZSA9PT0gaXRlbS52YWx1ZSkgcmV0dXJuCiAgICAgICAgICAgIG5ld09wdGlvbnMucHVzaChpdGVtKQogICAgICAgICAgfSkKICAgICAgICAgIHRoaXMuJHNldChjb2x1bW4sICdvcHRpb25zJywgbmV3T3B0aW9ucykKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29uc29sZS5ncm91cChgSkVkaXRhYmxlVGFibGUg5p+l6K+i5a2X5YW4KCR7Y29sdW1uLmRpY3RDb2RlfSnlj5HnlJ/lvILluLhgKQogICAgICAgICAgY29uc29sZS5sb2cocmVzLm1lc3NhZ2UpCiAgICAgICAgICBjb25zb2xlLmdyb3VwRW5kKCkKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAoKICAgIC8qIC0tLSBjb21tb24gZnVuY3Rpb24gZW5kIC0tLSAqLwoKICAgIC8qIC0tLSDku6XkuIvmmK/ovoXliqnmlrnms5XvvIzlpJrnlKjkuo7liqjmgIHmnoTpgKDpobXpnaLkuK3nmoTmlbDmja4gLS0tICovCgogICAgLyoqIOi+heWKqeaWueazle+8muaJk+WNsOaXpeW/lyAqLwogICAgbG9nKCkgewogICAgICBpZiAodGhpcy4kYXR0cnMubG9nZ2VyKSB7CiAgICAgICAgY29uc29sZS5sb2cuYXBwbHkobnVsbCwgYXJndW1lbnRzKQogICAgICB9CiAgICB9LAoKICAgIGdldFZNKCkgewogICAgICByZXR1cm4gdGhpcwogICAgfSwKCiAgICAvKiog6L6F5Yqp5pa55rOV77ya5Yqo5oCB5p6E6YCgVG9vbHRpcOeahFByb3Bz77yM6Ziy5q2i5Ye6546w5LiN5raI5aSx55qE5oOF5Ya1ICovCiAgICBidWlsZFRvb2x0aXBQcm9wcyhyb3csIGNvbCwgaWQpIHsKICAgICAgbGV0IHtub3RQYXNzZWRJZHMsIHRvb2x0aXBzfSA9IHRoaXMKICAgICAgbGV0IHByb3BzID0gewogICAgICAgIHRpdGxlOiAodG9vbHRpcHNbaWRdIHx8IHt9KS50aXRsZSwKICAgICAgICBwbGFjZW1lbnQ6ICd0b3AnLAogICAgICAgIGF1dG9BZGp1c3RPdmVyZmxvdzogdHJ1ZSwKICAgICAgICBnZXRQb3B1cENvbnRhaW5lcjogdGhpcy5nZXRQYXJlbnRDb250YWluZXIsCiAgICAgICAgY2xhc3M6IHsKICAgICAgICAgICdqLWNoZWNrLWZhaWxlZCc6IGZhbHNlCiAgICAgICAgfSwKICAgICAgfQogICAgICBsZXQgaXNDaGVja0ZhaWxlZCA9IG5vdFBhc3NlZElkcy5pbmNsdWRlcyhpZCkKICAgICAgaWYgKGlzQ2hlY2tGYWlsZWQpIHsKICAgICAgICBwcm9wcy5jbGFzc1snai1jaGVjay1mYWlsZWQnXSA9IHRydWUKICAgICAgfSBlbHNlIHsKICAgICAgICBwcm9wc1sndmlzaWJsZSddID0gZmFsc2UKICAgICAgfQogICAgICByZXR1cm4gcHJvcHMKICAgIH0sCgogICAgLyoqIOi+heWKqeaWueazle+8muaMh+WummEtc2VsZWN0IOWSjCBqLWRhdGEg55qE54i25a655ZmoICovCiAgICBnZXRQYXJlbnRDb250YWluZXIobm9kZSkgewogICAgICBsZXQgZWxlbWVudCA9ICgoKSA9PiB7CiAgICAgICAgLy8gbm9kZVR5cGUgOAk6IENvbW1lbnQJOiDms6jph4oKICAgICAgICBpZiAodGhpcy4kZWwgJiYgdGhpcy4kZWwubm9kZVR5cGUgIT09IDgpIHsKICAgICAgICAgIHJldHVybiB0aGlzLiRlbAogICAgICAgIH0KICAgICAgICBsZXQgZG9jID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5jYXNlSWQgKyAnaW5wdXRUYWJsZScpCiAgICAgICAgaWYgKGRvYyAhPSBudWxsKSB7CiAgICAgICAgICByZXR1cm4gZG9jCiAgICAgICAgfQogICAgICAgIHJldHVybiBub2RlLnBhcmVudE5vZGUucGFyZW50Tm9kZS5wYXJlbnROb2RlLnBhcmVudE5vZGUucGFyZW50Tm9kZS5wYXJlbnROb2RlCiAgICAgIH0pKCkKCiAgICAgIC8vIOmAkuW9kuWIpOaWreaYr+WQpuW4puaciSBvdmVyZmxvdzogaGlkZGVu77yb55qE54i25YWD57SgCiAgICAgIGNvbnN0IGlmUGFyZW50ID0gKGNoaWxkKSA9PiB7CiAgICAgICAgbGV0IGN1cnJlbnRPdmVyZmxvdyA9IG51bGwKICAgICAgICBpZiAoY2hpbGRbJ2N1cnJlbnRTdHlsZSddKSB7CiAgICAgICAgICBjdXJyZW50T3ZlcmZsb3cgPSBjaGlsZFsnY3VycmVudFN0eWxlJ11bJ292ZXJmbG93J10KICAgICAgICB9IGVsc2UgaWYgKHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKSB7CiAgICAgICAgICBjdXJyZW50T3ZlcmZsb3cgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShjaGlsZClbJ292ZXJmbG93J10KICAgICAgICB9CiAgICAgICAgaWYgKGN1cnJlbnRPdmVyZmxvdyAhPSBudWxsKSB7CiAgICAgICAgICBpZiAoY3VycmVudE92ZXJmbG93ID09PSAnaGlkZGVuJykgewogICAgICAgICAgICAvLyDmib7liLDkuobluKbmnIkgaGlkZGVuIOeahOagh+etvu+8jOWIpOaWreWug+eahOeItue6p+aYr+WQpui/mOaciSBoaWRkZW7vvIznm7TliLDpgYfliLDlrozlhajmsqHmnIkgaGlkZGVuIOaIliBib2R5IOeahOaXtuWAmeaJjeWBnOatoumAkuW9kgogICAgICAgICAgICBsZXQgdGVtcCA9IGlmUGFyZW50KGNoaWxkLnBhcmVudE5vZGUpCiAgICAgICAgICAgIHJldHVybiB0ZW1wICE9IG51bGwgPyB0ZW1wIDogY2hpbGQucGFyZW50Tm9kZQogICAgICAgICAgfSBlbHNlCiAgICAgICAgICAvLyDlvZPliY3moIfnrb7msqHmnIkgaGlkZGVuIO+8jOWmguaenOacieeItue6p+W5tuS4lOeItue6p+S4jeaYryBib2R5IOeahOivneWwsee7p+e7remAkuW9kuWIpOaWreeItue6pwogICAgICAgICAgaWYgKGNoaWxkLnBhcmVudE5vZGUgJiYgY2hpbGQucGFyZW50Tm9kZS50YWdOYW1lLnRvTG9jYWxlTG93ZXJDYXNlKCkgIT09ICdib2R5JykgewogICAgICAgICAgICByZXR1cm4gaWZQYXJlbnQoY2hpbGQucGFyZW50Tm9kZSkKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIOebtOWIsCBib2R5IOmDveayoeaciemBh+WIsOaciSBoaWRkZW4g55qE5qCH562+CiAgICAgICAgICAgIHJldHVybiBudWxsCiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiBjaGlsZAogICAgICAgIH0KICAgICAgfQoKICAgICAgbGV0IHRlbXAgPSBpZlBhcmVudChlbGVtZW50KQogICAgICByZXR1cm4gKHRlbXAgIT0gbnVsbCkgPyB0ZW1wIDogZWxlbWVudAogICAgfSwKCiAgICAvKiog6L6F5Yqp5pa55rOV77ya5pu/5o2iJHsuLi595Y+Y6YePICovCiAgICByZXBsYWNlUHJvcHMoY29sLCB2YWx1ZSkgewogICAgICBpZiAodmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykgewogICAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZSgvXCR7dGl0bGV9L2csIGNvbC50aXRsZSkKICAgICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL1wke2tleX0vZywgY29sLmtleSkKICAgICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL1wke2RlZmF1bHRWYWx1ZX0vZywgY29sLmRlZmF1bHRWYWx1ZSkKICAgICAgfQogICAgICByZXR1cm4gdmFsdWUKICAgIH0sCgogICAgLyoqIHZpZXfovoXliqnmlrnms5XvvJrmnoTlu7ogdHIgc3R5bGUgKi8KICAgIGJ1aWxkVHJTdHlsZShpbmRleCkgewogICAgICByZXR1cm4gewogICAgICAgICd0b3AnOiBgJHtyb3dIZWlnaHQgKiBpbmRleH1weGAKICAgICAgfQogICAgfSwKICAgIC8qKiB2aWV36L6F5Yqp5pa55rOV77ya5p6E5bu6IHRkIHN0eWxlICovCiAgICBidWlsZFRkU3R5bGUoY29sLGlzVGl0bGUpIHsKICAgICAgY29uc3QgaXNFbXB0eVdpZHRoID0gKGNvbHVtbikgPT4gKGNvbHVtbi50eXBlID09PSBGb3JtVHlwZXMuaGlkZGVuIHx8IGNvbHVtbi53aWR0aCA9PT0gJzBweCcgfHwgY29sdW1uLndpZHRoID09PSAnMCcgfHwgY29sdW1uLndpZHRoID09PSAwKQoKICAgICAgbGV0IHN0eWxlID0ge30KICAgICAgLy8g6K6h566X5a695bqmCiAgICAgIGlmIChjb2wud2lkdGgpIHsKICAgICAgICBzdHlsZVsnd2lkdGgnXSA9IGNvbC53aWR0aAogICAgICB9IGVsc2UgaWYgKHRoaXMuY29sdW1ucykgewogICAgICAgIHN0eWxlWyd3aWR0aCddID0gYCR7KDEwMCAtIDQgKiAyKSAvICh0aGlzLmNvbHVtbnMuZmlsdGVyKGNvbHVtbiA9PiAhaXNFbXB0eVdpZHRoKGNvbHVtbikpKS5sZW5ndGh9JWAKICAgICAgfSBlbHNlIHsKICAgICAgICBzdHlsZVsnd2lkdGgnXSA9ICcxMjBweCcKICAgICAgfQogICAgICAvL3VwZGF0ZS1iZWdpbi1hdXRob3I6bHZkYW5kYW4gZGF0ZToyMDIwMTExNiBmb3I6TE9XQ09ELTk4NCDpu5jorqTpo47moLzlip/og73mtYvor5XpmYTooajmoLflvI/pl67popgg5pel5pyf5pe26Ze05o6n5Lu26ZW/5bqm5aSq5aSnCiAgICAgIC8v5piv5ZCm5Li65qCH6aKY77yM5aaC5p6c5piv5pe26Ze05o6n5Lu26K6+5Li6MjAw77yM5pe26Ze05o6n5Lu255qE5qCH6aKY6K6+5Li6MjQwIOaXtumXtAogICAgICBpZihjb2wudHlwZSA9PT0gRm9ybVR5cGVzLmRhdGV0aW1lKXsKICAgICAgICBpZih0cnVlID09PSBpc1RpdGxlKXsKICAgICAgICAgIHN0eWxlWyd3aWR0aCddID0gJzI0MHB4JwogICAgICAgIH1lbHNlewogICAgICAgICAgc3R5bGVbJ3dpZHRoJ10gPSAnMjAwcHgnCiAgICAgICAgfQogICAgICB9CiAgICAgIC8vdXBkYXRlLWVuZC1hdXRob3I6bHZkYW5kYW4gZGF0ZToyMDIwMTExNiBmb3I6TE9XQ09ELTk4NCDpu5jorqTpo47moLzlip/og73mtYvor5XpmYTooajmoLflvI/pl67popgg5pel5pyf5pe26Ze05o6n5Lu26ZW/5bqm5aSq5aSnCgogICAgICAvLyBjaGVja2JveCDlsYXkuK3mmL7npLoKICAgICAgbGV0IGlzQ2hlY2tib3ggPSBjb2wudHlwZSA9PT0gRm9ybVR5cGVzLmNoZWNrYm94CiAgICAgIGlmIChpc0NoZWNrYm94KSB7CiAgICAgICAgc3R5bGVbJ2FsaWduLWl0ZW1zJ10gPSAnY2VudGVyJwogICAgICAgIHN0eWxlWyd0ZXh0LWFsaWduJ10gPSAnY2VudGVyJwogICAgICAgIHN0eWxlWydwYWRkaW5nLWxlZnQnXSA9ICcwJwogICAgICAgIHN0eWxlWydwYWRkaW5nLXJpZ2h0J10gPSAnMCcKICAgICAgfQogICAgICBpZiAoaXNFbXB0eVdpZHRoKGNvbCkpIHsKICAgICAgICBzdHlsZVsncGFkZGluZy1sZWZ0J10gPSAnMCcKICAgICAgICBzdHlsZVsncGFkZGluZy1yaWdodCddID0gJzAnCiAgICAgIH0KICAgICAgcmV0dXJuIHN0eWxlCiAgICB9LAogICAgLyoqIHZpZXfovoXliqnmlrnms5XvvJrmnoTpgKBwcm9wcyAqLwogICAgYnVpbGRQcm9wcyhyb3csIGNvbCkgewogICAgICBsZXQgcHJvcHMgPSB7fQogICAgICAvLyDop6PmnpBwcm9wcwogICAgICBpZiAodHlwZW9mIGNvbC5wcm9wcyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBmb3IgKGxldCBwcm9wIGluIGNvbC5wcm9wcykgewogICAgICAgICAgaWYgKGNvbC5wcm9wcy5oYXNPd25Qcm9wZXJ0eShwcm9wKSkgewogICAgICAgICAgICBwcm9wc1twcm9wXSA9IHRoaXMucmVwbGFjZVByb3BzKGNvbCwgY29sLnByb3BzW3Byb3BdKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICAvLyDliKTmlq1zZWxlY3TmmK/lkKblhYHorrjovpPlhaUKICAgICAgaWYgKGNvbC50eXBlID09PSBGb3JtVHlwZXMuc2VsZWN0ICYmIChjb2wuYWxsb3dJbnB1dCA9PT0gdHJ1ZSB8fCBjb2wuYWxsb3dTZWFyY2ggPT09IHRydWUpKSB7CiAgICAgICAgcHJvcHNbJ3Nob3dTZWFyY2gnXSA9IHRydWUKICAgICAgfQoKICAgICAgLy8g5Yik5pat5piv5ZCm5piv56aB55So55qE5YiXCiAgICAgIHByb3BzWydkaXNhYmxlZCddID0gKHR5cGVvZiBjb2xbJ2Rpc2FibGVkJ10gPT09ICdib29sZWFuJyA/IGNvbFsnZGlzYWJsZWQnXSA6IHByb3BzWydkaXNhYmxlZCddKQoKICAgICAgLy8g5Yik5pat5piv5ZCm5Li656aB55So55qE6KGMCiAgICAgIGlmIChwcm9wc1snZGlzYWJsZWQnXSAhPT0gdHJ1ZSkgewogICAgICAgIHByb3BzWydkaXNhYmxlZCddID0gKCh0aGlzLmRpc2FibGVkUm93SWRzIHx8IFtdKS5pbmRleE9mKHJvdy5pZCkgIT09IC0xKQogICAgICB9CgogICAgICAvLyDliKTmlq3mmK/lkKbnpoHnlKjlhajpg6jnu4Tku7YKICAgICAgaWYgKHRoaXMuZGlzYWJsZWQgPT09IHRydWUpIHsKICAgICAgICBwcm9wc1snZGlzYWJsZWQnXSA9IHRydWUKICAgICAgfQoKICAgICAgcmV0dXJuIHByb3BzCiAgICB9LAoKICAgIC8qKiDovoXliqnmlrnms5XvvJrpmLLmraLov4flv6vngrnlh7vvvIzlpoLmnpzngrnlh7vov4flv6vnmoTor53lsLHov5Tlm54gdHJ1ZSAqLwogICAgY2hlY2tUb29GYXN0Q2xpY2soa2V5ID0gJ2RlZmF1bHQnLCBtcyA9IDMwMCkgewogICAgICBsZXQgbm93VGltZSA9IERhdGUubm93KCkKICAgICAgbGV0IGxhc3RUaW1lID0gdGhpcy5sYXN0UHVzaFRpbWVNYXAuZ2V0KGtleSkKICAgICAgaWYgKCFsYXN0VGltZSkgewogICAgICAgIGxhc3RUaW1lID0gbm93VGltZQogICAgICAgIHRoaXMubGFzdFB1c2hUaW1lTWFwLnNldChrZXksIG5vd1RpbWUpCiAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgIH0KICAgICAgbGV0IGRpZmZUaW1lID0gbm93VGltZSAtIGxhc3RUaW1lCiAgICAgIGlmIChkaWZmVGltZSA8PSBtcykgewogICAgICAgIHRoaXMuJG1lc3NhZ2Uud2Fybign5L2g54K55Ye755qE5aSq5b+r5LqG77yM6K+35oWi54K554K55Ye7IScpCiAgICAgICAgcmV0dXJuIHRydWUKICAgICAgfQogICAgICB0aGlzLmxhc3RQdXNoVGltZU1hcC5zZXQoa2V5LCBub3dUaW1lKQogICAgICByZXR1cm4gZmFsc2UKICAgIH0sCgogICAgLyoqIHVwbG9hZCDovoXliqnmlrnms5XvvJrojrflj5YgaGVhZGVycyAqLwogICAgdXBsb2FkR2V0SGVhZGVycyhyb3csIGNvbHVtbikgewogICAgICBsZXQgaGVhZGVycyA9IHt9CiAgICAgIGlmIChjb2x1bW4udG9rZW4gPT09IHRydWUpIHsKICAgICAgICBoZWFkZXJzWydYLUFjY2Vzcy1Ub2tlbiddID0gdGhpcy5hY2Nlc3NUb2tlbgogICAgICB9CiAgICAgIHJldHVybiBoZWFkZXJzCiAgICB9LAogICAgLyoqIOS4iuS8oOivt+axguWcsOWdgCAqLwogICAgZ2V0VXBsb2FkQWN0aW9uKHZhbHVlKSB7CiAgICAgIGlmICghdmFsdWUpIHsKICAgICAgICByZXR1cm4gd2luZG93Ll9DT05GSUdbJ2RvbWlhblVSTCddICsgJy9zeXMvY29tbW9uL3VwbG9hZCcKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdmFsdWUKICAgICAgfQogICAgfSwKICAgIC8qKiDpooTop4jlm77niYflnLDlnYAgKi8KICAgIGdldENlbGxJbWFnZVZpZXcoaWQpIHsKICAgICAgbGV0IGN1cnJVcGxvYWRPYmogPSB0aGlzLnVwbG9hZFZhbHVlc1tpZF0gfHwgbnVsbAogICAgICBpZiAoY3VyclVwbG9hZE9iaikgewogICAgICAgIGlmKGN1cnJVcGxvYWRPYmpbJ3VybCddKXsKICAgICAgICAgIHJldHVybiBjdXJyVXBsb2FkT2JqWyd1cmwnXTsKICAgICAgICB9ZWxzZSBpZihjdXJyVXBsb2FkT2JqWydwYXRoJ10pewogICAgICAgICAgbGV0IHJlYWRwYXRoID0gY3VyclVwbG9hZE9ialsncGF0aCddLnNwbGl0KCcsJylbMF0KICAgICAgICAgIHJldHVybiBnZXRGaWxlQWNjZXNzSHR0cFVybChyZWFkcGF0aCkKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuICcnCiAgICB9LAogICAgLyoqIHBvcHVw5Zue6LCDICovCiAgICBwb3B1cENhbGxiYWNrKHZhbHVlLCBvdGhlcnMsIGlkLCByb3csIGNvbHVtbiwgaW5kZXgpIHsKICAgICAgLy8g5a2Y5YKo6L6T5YWl55qE5YC8CiAgICAgIGxldCBwb3B1cFZhbHVlID0gdmFsdWUKICAgICAgaWYgKG90aGVycykgewogICAgICAgIGxldCByb3dLZXkgPSB0aGlzLmdldENsZWFuSWQocm93LmlkKQogICAgICAgIGxldCBzZXRWYWx1ZUl0ZW0gPSB7cm93S2V5LCB2YWx1ZXM6IHt9fQogICAgICAgIE9iamVjdC5rZXlzKG90aGVycykuZm9yRWFjaChrZXkgPT4gewogICAgICAgICAgLy8g5b2T5YmN5YiX55u05o6l6LWL5YC877yM5YW25LuW5YiX6YCa6L+Hc2V0VmFsdWVz6LWL5YC8CiAgICAgICAgICBpZiAoa2V5ID09PSBjb2x1bW4ua2V5KSB7CiAgICAgICAgICAgIHBvcHVwVmFsdWUgPSBvdGhlcnNba2V5XQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgc2V0VmFsdWVJdGVtLnZhbHVlc1trZXldID0gb3RoZXJzW2tleV0KICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIGlmIChPYmplY3Qua2V5cyhzZXRWYWx1ZUl0ZW0pLmxlbmd0aCA+IDApIHsKICAgICAgICAgIHRoaXMuc2V0VmFsdWVzKFtzZXRWYWx1ZUl0ZW1dKQogICAgICAgIH0KICAgICAgfQogICAgICB0aGlzLnNldE9uZVZhbHVlKHRoaXMucG9wdXBWYWx1ZXMsIGlkLCBwb3B1cFZhbHVlKQogICAgICAvLyDlgZrljZXkuKrooajljZXpqozor4EKICAgICAgdGhpcy52YWxpZGF0ZU9uZUlucHV0KHZhbHVlLCByb3csIGNvbHVtbiwgdGhpcy5ub3RQYXNzZWRJZHMsIHRydWUsICdjaGFuZ2UnKQogICAgICAvLyDop6blj5F2YWx1ZUNoYW5nZSDkuovku7YKICAgICAgdGhpcy5lbGVtVmFsdWVDaGFuZ2UoJ2lucHV0Jywgcm93LCBjb2x1bW4sIHZhbHVlKQogICAgfSwKICAgIC8qKiBwb3B1cOi+k+WFpeahhuWbnuaYviAqLwogICAgZ2V0UG9wdXBWYWx1ZShpZCkgewogICAgICByZXR1cm4gdGhpcy5wb3B1cFZhbHVlc1tpZF0KICAgIH0sCiAgICBoYW5kbGVSYWRpb0NoYW5nZSh2YWx1ZSwgaWQsIHJvdywgY29sdW1uKSB7CiAgICAgIHRoaXMucmFkaW9WYWx1ZXMgPSB0aGlzLmJpbmRWYWx1ZXNDaGFuZ2UodmFsdWUsIGlkLCAncmFkaW9WYWx1ZXMnKQogICAgICAvLyDlgZrljZXkuKrooajljZXpqozor4EKICAgICAgdGhpcy52YWxpZGF0ZU9uZUlucHV0KHZhbHVlLCByb3csIGNvbHVtbiwgdGhpcy5ub3RQYXNzZWRJZHMsIHRydWUsICdjaGFuZ2UnKQogICAgICAvLyDop6blj5F2YWx1ZUNoYW5nZSDkuovku7YKICAgICAgdGhpcy5lbGVtVmFsdWVDaGFuZ2UoRm9ybVR5cGVzLnJhZGlvLCByb3csIGNvbHVtbiwgdmFsdWUpCiAgICB9LAogICAgaGFuZGxlTXVsdGlTZWxlY3RDaGFuZ2UodmFsdWUsIGlkLCByb3csIGNvbHVtbikgewogICAgICB0aGlzLm11bHRpU2VsZWN0VmFsdWVzID0gdGhpcy5iaW5kVmFsdWVzQ2hhbmdlKHZhbHVlLCBpZCwgJ211bHRpU2VsZWN0VmFsdWVzJykKICAgICAgLy8g5YGa5Y2V5Liq6KGo5Y2V6aqM6K+BCiAgICAgIHRoaXMudmFsaWRhdGVPbmVJbnB1dCh2YWx1ZSwgcm93LCBjb2x1bW4sIHRoaXMubm90UGFzc2VkSWRzLCB0cnVlLCAnY2hhbmdlJykKICAgICAgLy8g6Kem5Y+RdmFsdWVDaGFuZ2Ug5LqL5Lu2CiAgICAgIHRoaXMuZWxlbVZhbHVlQ2hhbmdlKEZvcm1UeXBlcy5saXN0X211bHRpLCByb3csIGNvbHVtbiwgdmFsdWUpCiAgICB9LAogICAgaGFuZGxlU2VhcmNoU2VsZWN0Q2hhbmdlKHZhbHVlLCBpZCwgcm93LCBjb2x1bW4pIHsKICAgICAgdGhpcy5zZWFyY2hTZWxlY3RWYWx1ZXMgPSB0aGlzLmJpbmRWYWx1ZXNDaGFuZ2UodmFsdWUsIGlkLCAnc2VhcmNoU2VsZWN0VmFsdWVzJykKICAgICAgdGhpcy52YWxpZGF0ZU9uZUlucHV0KHZhbHVlLCByb3csIGNvbHVtbiwgdGhpcy5ub3RQYXNzZWRJZHMsIHRydWUsICdjaGFuZ2UnKQogICAgICB0aGlzLmVsZW1WYWx1ZUNoYW5nZShGb3JtVHlwZXMuc2VsX3NlYXJjaCwgcm93LCBjb2x1bW4sIHZhbHVlKQogICAgfSwKICAgIGZpbHRlck9wdGlvbihpbnB1dCwgb3B0aW9uKSB7CiAgICAgIHJldHVybiBvcHRpb24uY29tcG9uZW50T3B0aW9ucy5jaGlsZHJlblswXS50ZXh0LnRvTG93ZXJDYXNlKCkuaW5kZXhPZihpbnB1dC50b0xvd2VyQ2FzZSgpKSA+PSAwCiAgICB9LAogICAgZ2V0RWxsaXBzaXNXb3JkKGNvbnRlbnQsIGxlbil7CiAgICAgIGlmKCFjb250ZW50IHx8IGNvbnRlbnQubGVuZ3RoID09PSAwKXsKICAgICAgICByZXR1cm4gJycKICAgICAgfQogICAgICBpZihjb250ZW50Lmxlbmd0aD5sZW4pewogICAgICAgIHJldHVybiBjb250ZW50LnN1YnN0cigwLGxlbikKICAgICAgfQogICAgICByZXR1cm4gY29udGVudDsKICAgIH0sCgogICAgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIDIwMjDlubQ15pyIMTjml6Ug6buY6K6kc3BhbuaooeW8jyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KCiAgICAvKiog6I635Y+WU2VsZWN0562J57uE5Lu257+76K+R5ZCO55qE5paH5pysICovCiAgICBnZXRTZWxlY3RUcmFuc2xhdGVUZXh0KHZhbHVlLCByb3csIGNvbCkgewogICAgICAvLyDnv7vor5HmlK/mjIHljZXpgInlkozlpJrpgInvvIjmlbDnu4TjgIHpgJflj7fliIblibLvvIkKICAgICAgcmV0dXJuIGZpbHRlckRpY3RUZXh0KGNvbC5vcHRpb25zLCB2YWx1ZSkKICAgIH0sCgogICAgLy8g5Yik5a6a5b2T5YmN6KGM5piv5ZCm5piv5q2j5Zyo57yW6L6R55qECiAgICBpc0VkaXRSb3cocm93LCBjb2wpIHsKICAgICAgaWYgKHRoaXMuYWx3YXlzRWRpdCkgewogICAgICAgIHJldHVybiB0cnVlCiAgICAgIH0KICAgICAgbGV0IGN1cnJlbnQgPSB0aGlzLmN1cnJlbnRFZGl0Um93c1tyb3cuaWRdCiAgICAgIHJldHVybiAhIShjdXJyZW50ICYmIGN1cnJlbnRbY29sLmtleV0gPT09IHRydWUpCiAgICB9LAoKICAgIC8qIC0tLS0g5LqL5Lu255uR5ZCsIC0tLS0gKi8KCiAgICAvLyDpvKDmoIflvLnotbfkuovku7bvvIznlKjkuo7muIXnqbrovpPlhaXnirbmgIEKICAgIGhhbmRsZU1vdXNldXAoZXZlbnQpIHsKICAgICAgaWYgKHRoaXMuYWx3YXlzRWRpdCB8fCBPYmplY3Qua2V5cyh0aGlzLmN1cnJlbnRFZGl0Um93cykubGVuZ3RoID09PSAwKSB7CiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgLy8gY29uc29sZS5sb2codGhpcy5jYXNlSWQgKyAnaGFuZGxlTW91c2V1cDogJywgZXZlbnQpCiAgICAgIGxldCB7dGFyZ2V0fSA9IGV2ZW50CiAgICAgIGlmICghdGFyZ2V0KXsKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICBsZXQgY2xhc3NOYW1lID0gdGFyZ2V0LmNsYXNzTmFtZSB8fCAnJwogICAgICBpZiAodHlwZW9mIGNsYXNzTmFtZSA9PT0gJ3N0cmluZycpIHsKICAgICAgICAvLyDngrnlh7vnmoTmoIfnrb7mmK9zcGFuCiAgICAgICAgaWYgKGNsYXNzTmFtZS5pbmNsdWRlcygnai10ZC1zcGFuJykgJiYgY2xhc3NOYW1lLmluY2x1ZGVzKCduby1lZGl0JykpIHsKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICAvLyDngrnlh7vnmoTmoIfnrb7mmK/kuIvmi4kKICAgICAgICBpZiAoY2xhc3NOYW1lLmluY2x1ZGVzKCdhbnQtc2VsZWN0LWRyb3Bkb3duLW1lbnUtaXRlbScpKSB7CiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgIH0KCiAgICAgIC8vIOS6i+S7tuWGkuazoei3r+W+hAogICAgICBsZXQgcGF0aCA9IGdldEV2ZW50UGF0aChldmVudCkKICAgICAgZm9yIChsZXQgcCBvZiBwYXRoKSB7CiAgICAgICAgLy8g5aaC5p6c54K55Ye755qE5pivIHRyIOWwseS4jeWkhOeQhu+8iHRy5Y2V54us5aSE55CG77yJCiAgICAgICAgaWYgKChwLmlkIHx8ICcnKS5zdGFydHNXaXRoKGAke3RoaXMuY2FzZUlkfXRib2R5LXRyYCkpIHsKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICBsZXQgcENsYXNzTmFtZSA9IHAuY2xhc3NOYW1lIHx8ICcnCiAgICAgICAgcENsYXNzTmFtZSA9IHR5cGVvZiBwQ2xhc3NOYW1lID09PSAnc3RyaW5nJyA/IHBDbGFzc05hbWUgOiBwQ2xhc3NOYW1lLnRvU3RyaW5nKCkKCiAgICAgICAgLyogLS0tIOeJueauiuWkhOeQhuS7peS4i+e7hOS7tu+8jOeCueWHu+S7peS4i+agh+etvuaXtuS4jea4heepuue8lui+keeKtuaAgSAtLS0gKi8KCiAgICAgICAgLy8g54K55Ye755qE5qCH562+5pivSklucHV0UG9wCiAgICAgICAgaWYgKHBDbGFzc05hbWUuaW5jbHVkZXMoJ2otaW5wdXQtcG9wJykpIHsKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICAvLyDngrnlh7vnmoTmoIfnrb7mmK9KUG9wdXDnmoTlvLnlh7rlsYIKICAgICAgICBpZiAocENsYXNzTmFtZS5pbmNsdWRlcygnai1wb3B1cC1tb2RhbCcpKSB7CiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgLy8g54K55Ye755qE5qCH562+5piv5pel5pyf6YCJ5oup5Zmo55qE5by55Ye65bGCCiAgICAgICAgaWYgKHBDbGFzc05hbWUuaW5jbHVkZXMoJ2otZGF0ZS1waWNrZXInKSB8fCBwQ2xhc3NOYW1lLmluY2x1ZGVzKCdhbnQtY2FsZW5kYXItcGlja2VyLWNvbnRhaW5lcicpKSB7CiAgICAgICAgICByZXR1cm4KICAgICAgICB9CgogICAgICB9CiAgICAgIC8vIOa4heepuue8lui+keeKtuaAgQogICAgICB0aGlzLmN1cnJlbnRFZGl0Um93cyA9IHt9CiAgICB9LAoKICAgIC8vIOa3u+WKoOS6i+S7tuebkeWQrAogICAgYWRkRXZlbnRMaXN0ZW5lcigpIHsKICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLmhhbmRsZU1vdXNldXApCiAgICB9LAogICAgLy8g56e76Zmk5LqL5Lu255uR5ZCsCiAgICByZW1vdmVFdmVudExpc3RlbmVyKCkgewogICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuaGFuZGxlTW91c2V1cCkKICAgIH0sCgogICAgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIDIwMjDlubQ15pyIMTjml6Ug6buY6K6kc3BhbuaooeW8jyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KCgogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigpCiAgICB0aGlzLmRlc3Ryb3lDbGVhbkdyb3VwUmVxdWVzdCA9IHRydWUKICB9LAp9Cg=="},{"version":3,"sources":["JEditableTable.vue"],"names":[],"mappingsmfile":"JEditableTable.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<!-- JEditableTable -->\r\n<!-- @version 1.6.1 -->\r\n<!-- @author sjlei -->\r\n<template>\r\n  <a-spin :spinning=\"loading\">\r\n\r\n    <a-row type=\"flex\">\r\n      <a-col>\r\n        <slot name=\"buttonBefore\" :target=\"getVM()\"/>\r\n      </a-col>\r\n      <a-col>\r\n        <!-- 操作按钮 -->\r\n        <div v-if=\"actionButton\" class=\"action-button\">\r\n          <a-button type=\"primary\" icon=\"plus\" @click=\"handleClickAdd\" :disabled=\"disabled\">新增</a-button>\r\n          <span class=\"gap\"></span>\r\n          <template v-if=\"selectedRowIds.length>0\">\r\n            <a-popconfirm\r\n              :title=\"`确定要删除这 ${selectedRowIds.length} 项吗?`\"\r\n              @confirm=\"handleConfirmDelete\">\r\n              <a-button type=\"primary\" icon=\"minus\" :disabled=\"disabled\">删除</a-button>\r\n              <span class=\"gap\"></span>\r\n            </a-popconfirm>\r\n            <template v-if=\"showClearSelectButton\">\r\n              <a-button icon=\"delete\" @click=\"handleClickClearSelection\">清空选择</a-button>\r\n              <span class=\"gap\"></span>\r\n            </template>\r\n          </template>\r\n        </div>\r\n      </a-col>\r\n      <a-col>\r\n        <slot name=\"buttonAfter\" :target=\"getVM()\"/>\r\n      </a-col>\r\n    </a-row>\r\n\r\n    <slot name=\"actionButtonAfter\" :target=\"getVM()\"/>\r\n\r\n    <div :id=\"`${caseId}inputTable`\" class=\"input-table\">\r\n      <!-- 渲染表头 -->\r\n      <div class=\"thead\" ref=\"thead\">\r\n        <div class=\"tr\" :style=\"{width: this.realTrWidth}\">\r\n          <!-- 左侧固定td  -->\r\n          <div v-if=\"dragSort\" class=\"td td-ds\" :style=\"style.tdLeft\">\r\n            <span></span>\r\n          </div>\r\n          <div v-if=\"rowSelection\" class=\"td td-cb\" :style=\"style.tdLeft\">\r\n            <!--:indeterminate=\"true\"-->\r\n            <a-checkbox\r\n              :checked=\"getSelectAll\"\r\n              :indeterminate=\"getSelectIndeterminate\"\r\n              @change=\"handleChangeCheckedAll\"\r\n            />\r\n          </div>\r\n          <div v-if=\"rowNumber\" class=\"td td-num\" :style=\"style.tdLeft\">\r\n            <span>#</span>\r\n          </div>\r\n          <!-- 右侧动态生成td -->\r\n          <template v-for=\"col in columns\">\r\n            <div\r\n              v-show=\"col.type !== formTypes.hidden\"\r\n              class=\"td\"\r\n              :key=\"col.key\"\r\n              :style=\"buildTdStyle(col,true)\">\r\n\r\n              <span>{{ col.title }}</span>\r\n            </div>\r\n          </template>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"scroll-view\" ref=\"scrollView\" :style=\"{'max-height':maxHeight+'px'}\">\r\n\r\n\r\n        <!-- 渲染主体 body -->\r\n        <div :id=\"`${caseId}tbody`\" class=\"tbody\" :style=\"tbodyStyle\">\r\n          <!-- 扩展高度 -->\r\n          <div class=\"tr-expand\" :style=\"`height:${getExpandHeight}px; z-index:${loading?'11':'9'};`\"></div>\r\n          <!-- 无数据时显示 -->\r\n          <div v-if=\"rows.length===0\" class=\"tr-nodata\">\r\n            <span>暂无数据</span>\r\n          </div>\r\n          <!-- v-model=\"rows\"-->\r\n          <draggable\r\n            :value=\"rows\"\r\n            handle=\".td-ds-icons\"\r\n            @start=\"handleDragMoveStart\"\r\n            @end=\"handleDragMoveEnd\"\r\n          >\r\n\r\n            <!-- 动态生成tr -->\r\n            <template v-for=\"(row,rowIndex) in rows\">\r\n              <!-- tr 只加载可见的和预加载的总共十条数据 -->\r\n              <div\r\n                v-if=\"\r\n                rowIndex >= parseInt(`${(scrollTop-rowHeight) / rowHeight}`) &&\r\n                  (parseInt(`${scrollTop / rowHeight}`) + 9) > rowIndex\r\n              \"\r\n                :id=\"`${caseId}tbody-tr-${rowIndex}`\"\r\n                :data-idx=\"rowIndex\"\r\n                class=\"tr\"\r\n                :class=\"selectedRowIds.indexOf(row.id) !== -1 ? 'tr-checked' : ''\"\r\n                :style=\"buildTrStyle(rowIndex)\"\r\n                :key=\"row.id\"\r\n                @click=\"handleClickTableRow\"\r\n              >\r\n                <!-- 左侧固定td  -->\r\n\r\n                <div v-if=\"dragSort\" class=\"td td-ds\" :style=\"style.tdLeft\" @dblclick=\"_handleRowInsertDown(rowIndex)\" >\r\n                  <a-dropdown :trigger=\"['click']\" :getPopupContainer=\"getParentContainer\">\r\n                    <div class=\"td-ds-icons\">\r\n                      <a-icon type=\"align-left\"/>\r\n                      <a-icon type=\"align-right\"/>\r\n                    </div>\r\n\r\n                    <a-menu slot=\"overlay\">\r\n                      <a-menu-item key=\"0\" :disabled=\"rowIndex===0\" @click=\"_handleRowMoveUp(rowIndex)\">向上移</a-menu-item>\r\n                      <a-menu-item key=\"1\" :disabled=\"rowIndex===(rows.length-1)\" @click=\"_handleRowMoveDown(rowIndex)\">向下移</a-menu-item>\r\n                      <a-menu-divider/>\r\n                      <a-menu-item key=\"3\" @click=\"_handleRowInsertDown(rowIndex)\">插入一行</a-menu-item>\r\n                    </a-menu>\r\n                  </a-dropdown>\r\n                </div>\r\n\r\n                <div v-if=\"rowSelection\" class=\"td td-cb\" :style=\"style.tdLeft\">\r\n                  <!-- 此 v-for 只是为了拼接 id 字符串 -->\r\n                  <template v-for=\"(id,i) in [`${row.id}`]\">\r\n                    <a-checkbox\r\n                      :id=\"id\"\r\n                      :key=\"i\"\r\n                      :checked=\"selectedRowIds.indexOf(id) !== -1\"\r\n                      @change=\"handleChangeLeftCheckbox\"/>\r\n                  </template>\r\n                </div>\r\n                <div v-if=\"rowNumber\" class=\"td td-num\" :style=\"style.tdLeft\">\r\n                  <span>{{ rowIndex+1 }}</span>\r\n                </div>\r\n                <!-- 右侧动态生成td -->\r\n                <div\r\n                  class=\"td\"\r\n                  v-for=\"col in columns\"\r\n                  v-show=\"col.type !== formTypes.hidden\"\r\n                  :key=\"col.key\"\r\n                  :style=\"buildTdStyle(col)\">\r\n\r\n                  <!-- 此 v-for 只是为了拼接 id 字符串 -->\r\n                  <template v-for=\"(id,i) in [`${col.key}${row.id}`]\">\r\n\r\n                    <!-- native input -->\r\n                    <label :key=\"i\" v-if=\"col.type === formTypes.input || col.type === formTypes.inputNumber\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <input\r\n                          v-if=\"isEditRow(row, col)\"\r\n                          :id=\"id\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          :data-input-number=\"col.type === formTypes.inputNumber\"\r\n                          :placeholder=\"replaceProps(col, col.placeholder)\"\r\n                          @blur=\"(e)=>{handleBlurCommono(e.target,rowIndex,row,col)}\"\r\n                          @input=\"(e)=>{handleInputCommono(e.target,rowIndex,row,col)}\"\r\n                        />\r\n                        <span\r\n                          v-else\r\n                          class=\"j-td-span no-edit\"\r\n                          :class=\"{disabled: buildProps(row,col).disabled}\"\r\n                          @click=\"handleEditRow(row, col)\"\r\n                        >{{ inputValues[rowIndex][col.key] }}</span>\r\n                      </a-tooltip>\r\n                    </label>\r\n                    <!-- checkbox -->\r\n                    <template v-else-if=\"col.type === formTypes.checkbox\">\r\n                      <a-checkbox\r\n                        :key=\"i\"\r\n                        :id=\"id\"\r\n                        v-bind=\"buildProps(row,col)\"\r\n                        :checked=\"checkboxValues[id]\"\r\n                        @change=\"(e)=>handleChangeCheckboxCommon(e,row,col)\"\r\n                      />\r\n                    </template>\r\n                    <!-- select -->\r\n                    <template v-else-if=\"col.type === formTypes.select\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <a-select\r\n                          v-if=\"isEditRow(row, col)\"\r\n                          :id=\"id\"\r\n                          :key=\"i\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          style=\"width: 100%;\"\r\n                          :value=\"selectValues[id]\"\r\n                          :options=\"col.options\"\r\n                          :getPopupContainer=\"getParentContainer\"\r\n                          :placeholder=\"replaceProps(col, col.placeholder)\"\r\n                          :filterOption=\"(i,o)=>handleSelectFilterOption(i,o,col)\"\r\n                          @change=\"(v)=>handleChangeSelectCommon(v,id,row,col)\"\r\n                          @search=\"(v)=>handleSearchSelect(v,id,row,col)\"\r\n                          @blur=\"(v)=>handleBlurSearch(v,id,row,col)\"\r\n                          allowClear\r\n                        />\r\n                        <span\r\n                          v-else\r\n                          class=\"j-td-span no-edit\"\r\n                          :class=\"{disabled: buildProps(row,col).disabled}\"\r\n                          @click.stop=\"handleEditRow(row, col)\"\r\n                        >{{ getSelectTranslateText(selectValues[id], row, col) }}</span>\r\n                      </a-tooltip>\r\n                    </template>\r\n                    <!-- date -->\r\n                    <template v-else-if=\"col.type === formTypes.date || col.type === formTypes.datetime\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <j-date\r\n                          v-if=\"isEditRow(row, col)\"\r\n                          :id=\"id\"\r\n                          :key=\"i\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          style=\"width: 100%;\"\r\n                          :value=\"jdateValues[id]\"\r\n                          :getCalendarContainer=\"getParentContainer\"\r\n                          :placeholder=\"replaceProps(col, col.placeholder)\"\r\n                          :trigger-change=\"true\"\r\n                          :showTime=\"col.type === formTypes.datetime\"\r\n                          :dateFormat=\"col.type === formTypes.date? 'YYYY-MM-DD':'YYYY-MM-DD HH:mm:ss'\"\r\n                          allowClear\r\n                          @change=\"(v)=>handleChangeJDateCommon(v,id,row,col,col.type === formTypes.datetime)\"\r\n                        />\r\n                        <span\r\n                          v-else\r\n                          class=\"j-td-span no-edit\"\r\n                          :class=\"{disabled: buildProps(row,col).disabled}\"\r\n                          @click=\"handleEditRow(row, col)\"\r\n                        >{{ jdateValues[id] }}</span>\r\n                      </a-tooltip>\r\n                    </template>\r\n                    <!-- input_pop -->\r\n                    <template v-else-if=\"col.type === formTypes.input_pop\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <j-input-pop\r\n                          v-if=\"isEditRow(row, col)\"\r\n                          :id=\"id\"\r\n                          :key=\"i\"\r\n                          :width=\"300\"\r\n                          :height=\"210\"\r\n                          :pop-container=\"`${caseId}tbody`\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          style=\"width: 100%;\"\r\n                          :value=\"jInputPopValues[id]\"\r\n                          :getCalendarContainer=\"getParentContainer\"\r\n                          :placeholder=\"replaceProps(col, col.placeholder)\"\r\n                          @change=\"(v)=>handleChangeJInputPopCommon(v,id,row,col)\"\r\n                        />\r\n                        <span\r\n                          v-else\r\n                          class=\"j-td-span no-edit\"\r\n                          :class=\"{disabled: buildProps(row,col).disabled}\"\r\n                          @click=\"handleEditRow(row, col)\"\r\n                        >{{ jInputPopValues[id] }}</span>\r\n                      </a-tooltip>\r\n                    </template>\r\n                    <!-- upload -->\r\n                    <div v-else-if=\"col.type === formTypes.upload\" :key=\"i\">\r\n                      <template v-if=\"uploadValues[id] != null\" v-for=\"(file,fileKey) of [(uploadValues[id]||{})]\">\r\n                        <a-input\r\n                          :key=\"fileKey\"\r\n                          :readOnly=\"true\"\r\n                          :value=\"file.name\"\r\n                        >\r\n\r\n                          <template slot=\"addonBefore\" style=\"width: 30px\">\r\n                            <a-tooltip v-if=\"file.status==='uploading'\" :title=\"`上传中(${Math.floor(file.percent)}%)`\">\r\n                              <a-icon type=\"loading\"/>\r\n                            </a-tooltip>\r\n                            <a-tooltip v-else-if=\"file.status==='done'\" title=\"上传完成\">\r\n                              <a-icon type=\"check-circle\" style=\"color:#00DB00;\"/>\r\n                            </a-tooltip>\r\n                            <a-tooltip v-else title=\"上传失败\">\r\n                              <a-icon type=\"exclamation-circle\" style=\"color:red;\"/>\r\n                            </a-tooltip>\r\n                          </template>\r\n\r\n                          <template v-if=\"col.allowDownload!==false || col.allowRemove!==false\" slot=\"addonAfter\" style=\"width: 30px\">\r\n                            <a-dropdown :trigger=\"['click']\" placement=\"bottomRight\" :getPopupContainer=\"getParentContainer\">\r\n                              <a-tooltip title=\"操作\" :getPopupContainer=\"getParentContainer\">\r\n                                <a-icon\r\n                                  v-if=\"file.status!=='uploading'\"\r\n                                  type=\"setting\"\r\n                                  style=\"cursor: pointer;\"/>\r\n                              </a-tooltip>\r\n\r\n                              <a-menu slot=\"overlay\">\r\n                                <a-menu-item v-if=\"col.allowDownload!==false\" @click=\"handleClickDownloadFile(id)\">\r\n                                  <span><a-icon type=\"download\"/>&nbsp;下载</span>\r\n                                </a-menu-item>\r\n                                <a-menu-item v-if=\"col.allowRemove!==false\" @click=\"handleClickDelFile(id)\">\r\n                                  <span><a-icon type=\"delete\"/>&nbsp;删除</span>\r\n                                </a-menu-item>\r\n                              </a-menu>\r\n                            </a-dropdown>\r\n                          </template>\r\n\r\n                        </a-input>\r\n                      </template>\r\n\r\n                      <div :hidden=\"uploadValues[id] != null\">\r\n                        <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                          <a-upload\r\n                            name=\"file\"\r\n                            :data=\"{'isup':1}\"\r\n                            :multiple=\"false\"\r\n                            :action=\"col.action\"\r\n                            :headers=\"uploadGetHeaders(row,col)\"\r\n                            :showUploadList=\"false\"\r\n                            v-bind=\"buildProps(row,col)\"\r\n                            @change=\"(v)=>handleChangeUpload(v,id,row,col)\"\r\n                          >\r\n                            <a-button icon=\"upload\">{{ col.placeholder }}</a-button>\r\n                          </a-upload>\r\n                        </a-tooltip>\r\n                      </div>\r\n\r\n                    </div>\r\n\r\n                    <!-- update-begin-author:taoyan date:0827 for：popup -->\r\n                    <template v-else-if=\"col.type === formTypes.popup\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <j-popup\r\n                          v-if=\"isEditRow(row, col)\"\r\n                          :id=\"id\"\r\n                          :key=\"i\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          :placeholder=\"replaceProps(col, col.placeholder)\"\r\n                          style=\"width: 100%;\"\r\n                          :value=\"getPopupValue(id)\"\r\n                          :field=\"col.field || col.key\"\r\n                          :org-fields=\"col.orgFields\"\r\n                          :dest-fields=\"col.destFields\"\r\n                          :code=\"col.popupCode\"\r\n                          :groupId=\"caseId\"\r\n                          @input=\"(value,others)=>popupCallback(value,others,id,row,col,rowIndex)\"\r\n                        />\r\n                        <span\r\n                          v-else\r\n                          class=\"j-td-span no-edit\"\r\n                          :class=\"{disabled: buildProps(row,col).disabled}\"\r\n                          @click=\"handleEditRow(row, col)\"\r\n                        >{{ getPopupValue(id) }}</span>\r\n                      </a-tooltip>\r\n                    </template>\r\n                    <!-- update-end-author:taoyan date:0827 for：popup -->\r\n\r\n                    <!-- update-beign-author:taoyan date:0827 for：文件/图片逻辑新增 -->\r\n                    <div v-else-if=\"col.type === formTypes.file\" :key=\"i\">\r\n                      <template v-if=\"uploadValues[id] != null\" v-for=\"(file,fileKey) of [(uploadValues[id]||{})]\">\r\n                        <div :key=\"fileKey\" style=\"position: relative;\">\r\n                          <a-tooltip v-if=\"file.status==='uploading'\" :title=\"`上传中(${Math.floor(file.percent)}%)`\">\r\n                            <a-icon type=\"loading\" style=\"color:red;\"/>\r\n                            <span style=\"color:red;margin-left:5px\">{{  file.status }}</span>\r\n                          </a-tooltip>\r\n\r\n                          <a-tooltip v-else-if=\"file.status==='done'\" :title=\"file.name\">\r\n                            <a-icon type=\"paper-clip\" />\r\n                            <span style=\"margin-left:5px\">{{ getEllipsisWord(file.name,5) }}</span>\r\n                          </a-tooltip>\r\n\r\n                          <a-tooltip v-else :title=\"file.name\">\r\n                            <a-icon type=\"paper-clip\" style=\"color:red;\"/>\r\n                            <span style=\"color:red;margin-left:5px\">{{ getEllipsisWord(file.name,5) }}</span>\r\n                          </a-tooltip>\r\n\r\n                          <template style=\"width: 30px\">\r\n                            <a-dropdown :trigger=\"['click']\" placement=\"bottomRight\" :getPopupContainer=\"getParentContainer\" style=\"margin-left: 10px;\">\r\n                              <a-tooltip title=\"操作\" :getPopupContainer=\"getParentContainer\">\r\n                                <a-icon v-if=\"file.status!=='uploading'\" type=\"setting\" style=\"cursor: pointer;\"/>\r\n                              </a-tooltip>\r\n\r\n                              <a-menu slot=\"overlay\">\r\n                                <a-menu-item v-if=\"col.allowDownload!==false\" @click=\"handleClickDownFileByUrl(id)\">\r\n                                  <span><a-icon type=\"download\"/>&nbsp;下载</span>\r\n                                </a-menu-item>\r\n                                <a-menu-item @click=\"handleClickDelFile(id)\">\r\n                                  <span><a-icon type=\"delete\"/>&nbsp;删除</span>\r\n                                </a-menu-item>\r\n                                <a-menu-item @click=\"handleMoreOperation(id,col,col)\">\r\n                                  <span><a-icon type=\"bars\" /> 更多</span>\r\n                                </a-menu-item>\r\n                              </a-menu>\r\n                            </a-dropdown>\r\n                          </template>\r\n                        </div>\r\n                      </template>\r\n\r\n                      <div :hidden=\"uploadValues[id] != null\">\r\n                        <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                          <a-upload\r\n                            name=\"file\"\r\n                            :data=\"{'isup':1}\"\r\n                            :multiple=\"false\"\r\n                            :action=\"getUploadAction(col.action)\"\r\n                            :headers=\"uploadGetHeaders(row,col)\"\r\n                            :showUploadList=\"false\"\r\n                            v-bind=\"buildProps(row,col)\"\r\n                            @change=\"(v)=>handleChangeUpload(v,id,row,col)\"\r\n                          >\r\n                            <a-button icon=\"upload\">上传文件</a-button>\r\n                          </a-upload>\r\n                        </a-tooltip>\r\n                      </div>\r\n\r\n                    </div>\r\n\r\n                    <div v-else-if=\"col.type === formTypes.image\" :key=\"i\">\r\n                      <template v-if=\"uploadValues[id] != null\" v-for=\"(file,fileKey) of [(uploadValues[id]||{})]\">\r\n                        <div :key=\"fileKey\" style=\"position: relative;\">\r\n                          <template v-if=\"!uploadValues[id] || !(uploadValues[id]['url'] || uploadValues[id]['path'] || uploadValues[id]['message'])\">\r\n                            <a-icon type=\"loading\"/>\r\n                          </template>\r\n                          <template v-else-if=\"uploadValues[id]['path']\">\r\n                            <img class=\"j-editable-image\" :src=\"getCellImageView(id)\" alt=\"无图片\" @click=\"handleMoreOperation(id,'img',col)\"/>\r\n                          </template>\r\n                          <template v-else>\r\n                            <a-icon type=\"exclamation-circle\" style=\"color: red;\" @click=\"handleClickShowImageError(id)\"/>\r\n                          </template>\r\n                          <template slot=\"addonBefore\" style=\"width: 30px\">\r\n                            <a-tooltip v-if=\"file.status==='uploading'\" :title=\"`上传中(${Math.floor(file.percent)}%)`\">\r\n                              <a-icon type=\"loading\"/>\r\n                            </a-tooltip>\r\n                            <a-tooltip v-else-if=\"file.status==='done'\" title=\"上传完成\">\r\n                              <a-icon type=\"check-circle\" style=\"color:#00DB00;\"/>\r\n                            </a-tooltip>\r\n                            <a-tooltip v-else title=\"上传失败\">\r\n                              <a-icon type=\"exclamation-circle\" style=\"color:red;\"/>\r\n                            </a-tooltip>\r\n                          </template>\r\n\r\n                          <template style=\"width: 30px\">\r\n                            <a-dropdown :trigger=\"['click']\" placement=\"bottomRight\" :getPopupContainer=\"getParentContainer\" style=\"margin-left: 10px;\">\r\n                              <a-tooltip title=\"操作\" :getPopupContainer=\"getParentContainer\">\r\n                                <a-icon\r\n                                  v-if=\"file.status!=='uploading'\"\r\n                                  type=\"setting\"\r\n                                  style=\"cursor: pointer;\"/>\r\n                              </a-tooltip>\r\n\r\n                              <a-menu slot=\"overlay\">\r\n                                <a-menu-item v-if=\"col.allowDownload!==false\" @click=\"handleClickDownFileByUrl(id)\">\r\n                                  <span><a-icon type=\"download\"/>&nbsp;下载</span>\r\n                                </a-menu-item>\r\n                                <a-menu-item @click=\"handleClickDelFile(id)\">\r\n                                  <span><a-icon type=\"delete\"/>&nbsp;删除</span>\r\n                                </a-menu-item>\r\n                                <a-menu-item @click=\"handleMoreOperation(id,'img',col)\">\r\n                                  <span><a-icon type=\"bars\" /> 更多</span>\r\n                                </a-menu-item>\r\n                              </a-menu>\r\n                            </a-dropdown>\r\n                          </template>\r\n\r\n                        </div>\r\n                      </template>\r\n\r\n                      <div :hidden=\"uploadValues[id] != null\">\r\n                        <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                          <a-upload\r\n                            name=\"file\"\r\n                            :data=\"{'isup':1}\"\r\n                            :multiple=\"false\"\r\n                            :action=\"getUploadAction(col.action)\"\r\n                            :headers=\"uploadGetHeaders(row,col)\"\r\n                            :showUploadList=\"false\"\r\n                            v-bind=\"buildProps(row,col)\"\r\n                            @change=\"(v)=>handleChangeUpload(v,id,row,col)\"\r\n                          >\r\n                            <a-button icon=\"upload\">上传图片</a-button>\r\n                          </a-upload>\r\n                        </a-tooltip>\r\n                      </div>\r\n\r\n                    </div>\r\n                    <!-- update-end-author:taoyan date:0827 for：图片逻辑新增 -->\r\n\r\n                    <!-- radio-begin -->\r\n                    <template v-else-if=\"col.type === formTypes.radio\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <a-radio-group\r\n                          :id=\"id\"\r\n                          :key=\"i\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          :value=\"radioValues[id]\"\r\n                          @change=\"(e)=>handleRadioChange(e.target.value,id,row,col)\">\r\n                          <a-radio v-for=\"(item, key) in col.options\" :key=\"key\" :value=\"item.value\">{{ item.text }}</a-radio>\r\n                        </a-radio-group>\r\n                      </a-tooltip>\r\n                    </template>\r\n                    <!-- radio-end -->\r\n\r\n                    <!-- select多选 -begin -->\r\n                    <template v-else-if=\"col.type === formTypes.list_multi\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <a-select\r\n                          v-if=\"isEditRow(row, col)\"\r\n                          :id=\"id\"\r\n                          :key=\"i\"\r\n                          mode=\"multiple\"\r\n                          :maxTagCount=\"1\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          style=\"width: 100%;\"\r\n                          :value=\"multiSelectValues[id]\"\r\n                          :options=\"col.options\"\r\n                          :getPopupContainer=\"getParentContainer\"\r\n                          :placeholder=\"replaceProps(col, col.placeholder)\"\r\n                          @change=\"(v)=>handleMultiSelectChange(v,id,row,col)\"\r\n                          allowClear\r\n                        />\r\n                        <span\r\n                          v-else\r\n                          class=\"j-td-span no-edit\"\r\n                          :class=\"{disabled: buildProps(row,col).disabled}\"\r\n                          @click=\"handleEditRow(row, col)\"\r\n                        >{{ getSelectTranslateText(multiSelectValues[id], row, col) }} </span>\r\n                      </a-tooltip>\r\n                    </template>\r\n                    <!-- select多选 -end -->\r\n\r\n                    <!-- select搜索 -begin -->\r\n                    <template v-else-if=\"col.type === formTypes.sel_search\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <a-select\r\n                          v-if=\"isEditRow(row, col)\"\r\n                          :id=\"id\"\r\n                          :key=\"i\"\r\n                          showSearch\r\n                          optionFilterProp=\"children\"\r\n                          :filterOption=\"filterOption\"\r\n                          v-bind=\"buildProps(row,col)\"\r\n                          style=\"width: 100%;\"\r\n                          :value=\"searchSelectValues[id]\"\r\n                          :options=\"col.options\"\r\n                          :getPopupContainer=\"getParentContainer\"\r\n                          :placeholder=\"replaceProps(col, col.placeholder)\"\r\n                          @change=\"(v)=>handleSearchSelectChange(v,id,row,col)\"\r\n                          allowClear\r\n                        />\r\n                        <span\r\n                          v-else\r\n                          class=\"j-td-span no-edit\"\r\n                          :class=\"{disabled: buildProps(row,col).disabled}\"\r\n                          @click=\"handleEditRow(row, col)\"\r\n                        >{{ getSelectTranslateText(searchSelectValues[id], row, col) }}</span>\r\n                      </a-tooltip>\r\n                    </template>\r\n                    <!-- select搜索 -end -->\r\n\r\n                    <div v-else-if=\"col.type === formTypes.slot\" :key=\"i\">\r\n                      <a-tooltip v-bind=\"buildTooltipProps(row, col, id)\">\r\n                        <slot\r\n                          :name=\"(col.slot || col.slotName) || col.key\"\r\n                          :index=\"rowIndex\"\r\n                          :text=\"slotValues[id]\"\r\n                          :value=\"slotValues[id]\"\r\n                          :column=\"col\"\r\n                          :rowId=\"getCleanId(row.id)\"\r\n                          :getValue=\"()=>_getValueForSlot(row.id)\"\r\n                          :caseId=\"caseId\"\r\n                          :allValues=\"_getAllValuesForSlot()\"\r\n                          :target=\"getVM()\"\r\n                          :handleChange=\"(v)=>handleChangeSlotCommon(v,id,row,col)\"\r\n                          :isNotPass=\"notPassedIds.includes(col.key+row.id)\"\r\n                        />\r\n                      </a-tooltip>\r\n                    </div>\r\n\r\n                    <!-- else (normal) -->\r\n                    <span v-else :key=\"i\" v-bind=\"buildProps(row,col)\">{{ inputValues[rowIndex][col.key] }}</span>\r\n                  </template>\r\n                </div>\r\n              </div>\r\n              <!-- -- tr end -- -->\r\n\r\n            </template>\r\n          </draggable>\r\n\r\n\r\n          <!-- 统计行 -->\r\n          <div\r\n            v-if=\"showStatisticsRow\"\r\n            class=\"tr\"\r\n            :style=\"{\r\n              ...buildTrStyle(rows.length),\r\n              height: '32px'\r\n            }\"\r\n          >\r\n            <div v-if=\"dragSort\" class=\"td td-ds\" :style=\"style.tdLeft\">\r\n            </div>\r\n            <div v-if=\"rowSelection\" class=\"td td-cb\" :style=\"style.tdLeft\">\r\n              统计\r\n            </div>\r\n            <div v-if=\"rowNumber\" class=\"td td-num\" :style=\"style.tdLeft\">\r\n              <span v-if=\"!rowSelection\">统计</span>\r\n            </div>\r\n\r\n            <!-- 右侧动态生成td -->\r\n            <template v-for=\"col in columns\">\r\n              <div\r\n                :key=\"col.key\"\r\n                class=\"td\"\r\n                v-show=\"col.type !== formTypes.hidden\"\r\n                :style=\"buildTdStyle(col)\"\r\n              >\r\n                <span\r\n                  v-show=\"col.type === formTypes.inputNumber\"\r\n                  style=\"padding: 0 5px;\"\r\n                >{{statisticsColumns[col.key]}}</span>\r\n              </div>\r\n            </template>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <j-file-pop ref=\"filePop\" @ok=\"handleFileSuccess\" :number=\"number\"></j-file-pop>\r\n    </div>\r\n  </a-spin>\r\n</template>\r\n\r\n<script>\r\n  import Vue from 'vue'\r\n  import Draggable from 'vuedraggable'\r\n  import { ACCESS_TOKEN } from '@/store/mutation-types'\r\n  import { FormTypes, VALIDATE_NO_PASSED } from '@/utils/JEditableTableUtil'\r\n  import { cloneObject, randomString, randomNumber, getEventPath } from '@/utils/util'\r\n  import JDate from '@/components/jeecg/JDate'\r\n  import { filterDictText, initDictOptions } from '@/components/dict/JDictSelectUtil'\r\n  import { getFileAccessHttpUrl } from '@/api/manage';\r\n  import JInputPop from '@/components/jeecg/minipop/JInputPop'\r\n  import JFilePop from '@/components/jeecg/minipop/JFilePop'\r\n\r\n  // 行高，需要在实例加载完成前用到\r\n  let rowHeight = 61\r\n\r\n  export default {\r\n    name: 'JEditableTable',\r\n    components: { JDate, Draggable, JInputPop, JFilePop },\r\n    provide() {\r\n      return {\r\n        parentIsJEditableTable: true,\r\n        getDestroyCleanGroupRequest: () => this.destroyCleanGroupRequest,\r\n      }\r\n    },\r\n    props: {\r\n      // 列信息\r\n      columns: {\r\n        type: Array,\r\n        required: true\r\n      },\r\n      // 数据源\r\n      dataSource: {\r\n        type: Array,\r\n        required: true,\r\n        default: () => []\r\n      },\r\n      // 是否显示操作按钮\r\n      actionButton: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      // 是否显示行号\r\n      rowNumber: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      // 是否可选择行\r\n      rowSelection: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      // 页面是否在加载中\r\n      loading: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      // 表格内容区域最大高度\r\n      maxHeight: {\r\n        type: Number,\r\n        default: 400\r\n      },\r\n      // 要禁用的行\r\n      disabledRows: {\r\n        type: Object,\r\n        default() {\r\n          return {}\r\n        }\r\n      },\r\n      // 是否禁用全部组件\r\n      disabled: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      // 是否可拖拽排序\r\n      dragSort: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      dragSortKey: {\r\n        type: String,\r\n        default: 'orderNum'\r\n      },\r\n      // 是否一直显示编辑框，如果为false则只有点击的时候才出现输入框\r\n      alwaysEdit: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        // 是否首次运行\r\n        isFirst: true,\r\n        // 当前实例是否是行编辑\r\n        isJEditableTable: true,\r\n        // caseId，用于防止有多个实例的时候会冲突\r\n        caseId: `_jet-${randomString(6)}-`,\r\n        // 临时ID标识，凡是以该标识结尾的ID都是临时ID，不添加到数据库中\r\n        tempId: `_tid-${randomString(6)}`,\r\n        // 存储document element 对象\r\n        el: {\r\n          inputTable: null,\r\n          tbody: null\r\n        },\r\n        // 存储各个div的style\r\n        style: {\r\n          // 'max-height': '400px'\r\n          tbody: { left: '0px' },\r\n          // 左侧固定td的style\r\n          tdLeft: {},\r\n        },\r\n        // 表单的类型\r\n        formTypes: FormTypes,\r\n        // 行数据\r\n        rows: [],\r\n        // 行高，height + padding + border\r\n        rowHeight,\r\n        // 滚动条顶部距离\r\n        scrollTop: 0,\r\n        // 绑定 select 的值\r\n        selectValues: {},\r\n        // 绑定 checkbox 的值\r\n        checkboxValues: {},\r\n        // 绑定 jdate 的值\r\n        jdateValues: {},\r\n        // 绑定jinputpop\r\n        jInputPopValues:{},\r\n        // 绑定插槽数据\r\n        slotValues: {},\r\n        // file 信息\r\n        uploadValues: {},\r\n        //popup信息\r\n        popupValues: {},\r\n\r\n        radioValues: {},\r\n        metaCheckboxValues: {},\r\n        multiSelectValues: {},\r\n        searchSelectValues: {},\r\n        // 绑定左侧选择框已选择的id\r\n        selectedRowIds: [],\r\n        // 存储被删除行的id\r\n        deleteIds: [],\r\n        // 存储显示tooltip的信息\r\n        tooltips: {},\r\n        // 存储没有通过验证的inputId\r\n        notPassedIds: [],\r\n\r\n        // 当前是否正在拖拽排序\r\n        dragging: false,\r\n        // 是否有统计列\r\n        hasStatisticsColumn: false,\r\n        statisticsColumns: {},\r\n        // 只有在行编辑被销毁时才主动清空GroupRequest的内存\r\n        destroyCleanGroupRequest: false,\r\n        // 当前正在编辑的行的id\r\n        currentEditRows: {},\r\n        // 上次push数据的事件，用于判断是否点击过快\r\n        lastPushTimeMap: new Map(),\r\n        number:0,\r\n      }\r\n    },\r\n    created() {\r\n      this.inputValues = []\r\n      // 当前显示的tr\r\n      this.visibleTrEls = []\r\n      this.disabledRowIds = (this.disabledRowIds || [])\r\n      // 解决火狐浏览器下拖拽会打开新的Tab的问题\r\n      document.body.ondrop = (event) => {\r\n        if (this.dragging) {\r\n          event.preventDefault()\r\n          event.stopPropagation()\r\n        }\r\n      }\r\n    },\r\n    // 计算属性\r\n    computed: {\r\n      // expandHeight = rows.length * rowHeight\r\n      getExpandHeight() {\r\n        let length = this.rows.length * this.rowHeight\r\n        if (this.showStatisticsRow) {\r\n          length += 34\r\n        }\r\n        return length\r\n      },\r\n      // 是否显示统计行\r\n      showStatisticsRow() {\r\n        return this.hasStatisticsColumn && this.rows.length > 0\r\n      },\r\n      // 获取是否选择了部分\r\n      getSelectIndeterminate() {\r\n        return (this.selectedRowIds.length > 0 &&\r\n          this.selectedRowIds.length < this.rows.length)\r\n      },\r\n      // 获取是否选择了全部\r\n      getSelectAll() {\r\n        return (this.selectedRowIds.length === this.rows.length) && this.rows.length > 0\r\n      },\r\n      tbodyStyle() {\r\n        let style = Object.assign({}, this.style.tbody)\r\n        // style['max-height'] = `${this.maxHeight}px`\r\n        style['width'] = this.realTrWidth\r\n        return style\r\n      },\r\n      showClearSelectButton() {\r\n        let count = 0\r\n        for (let key in this.disabledRows) {\r\n          if (this.disabledRows.hasOwnProperty(key)) count++\r\n        }\r\n        return count > 0\r\n      },\r\n      accessToken() {\r\n        return Vue.ls.get(ACCESS_TOKEN)\r\n      },\r\n      realTrWidth() {\r\n        let splice = ' + '\r\n        let calcWidth = 'calc('\r\n        this.columns.forEach((column, i) => {\r\n          let { type, width } = column\r\n          // 隐藏字段不参与计算\r\n          if (type !== FormTypes.hidden) {\r\n            if (typeof width === 'number') {\r\n              calcWidth += width + 'px'\r\n            } else if (typeof width === 'string') {\r\n              calcWidth += width\r\n            } else {\r\n              calcWidth += '120px'\r\n            }\r\n            calcWidth += splice\r\n          }\r\n        })\r\n        if (calcWidth.endsWith(splice)) {\r\n          calcWidth = calcWidth.substring(0, calcWidth.length - splice.length)\r\n        }\r\n        calcWidth += ')'\r\n        // console.log('calcWidth: ', calcWidth)\r\n        return calcWidth\r\n      }\r\n    },\r\n    // 侦听器\r\n    watch: {\r\n      rows: {\r\n        immediate: true,\r\n        handler(val, old) {\r\n          // val.forEach(item => {\r\n          //   for (let inputValue of  this.inputValues) {\r\n          //     if (inputValue.id === item.id) {\r\n          //       item['dbFieldName'] = inputValue['dbFieldName']\r\n          //       break\r\n          //     }\r\n          //   }\r\n          // })\r\n          // console.log('watch.rows:', cloneObject({ val, old }))\r\n        }\r\n      },\r\n      dataSource: {\r\n        immediate: true,\r\n        handler: function (newValue) {\r\n          // 兼容IE\r\n          this.getElementPromise('tbody').then(() => {\r\n            this.initialize()\r\n            this._pushByDataSource(newValue)\r\n          })\r\n        }\r\n      },\r\n      columns: {\r\n        immediate: true,\r\n        handler(columns) {\r\n          // 兼容IE\r\n          this.getElementPromise('tbody').then(() => {\r\n            columns.forEach(column => {\r\n              if (column.type === FormTypes.select || column.type === FormTypes.list_multi || column.type === FormTypes.sel_search) {\r\n                // 兼容 旧版本 options\r\n                if (column.options instanceof Array) {\r\n                  column.options = column.options.map(item => {\r\n                    if (item) {\r\n                      return {\r\n                        ...item,\r\n                        text: item.text || item.title,\r\n                        title: item.text || item.title\r\n                      }\r\n                    }\r\n                    return {}\r\n                  })\r\n                }\r\n                if (column.dictCode) {\r\n                  this._loadDictConcatToOptions(column)\r\n                }\r\n              }\r\n            })\r\n          })\r\n        }\r\n      },\r\n      // 当selectRowIds改变时触发事件\r\n      selectedRowIds(newValue) {\r\n        this.$emit('selectRowChange', cloneObject(newValue).map(i => this.getCleanId(i)))\r\n      }\r\n    },\r\n    mounted() {\r\n      let vm = this\r\n      /** 监听滚动条事件 */\r\n      this.getElement('inputTable').onscroll = function (event) {\r\n        vm.syncScrollBar(event.target.scrollLeft)\r\n      }\r\n      this.getElement('tbody').onscroll = function (event) {\r\n        // vm.recalcTrHiddenItem(event.target.scrollTop)\r\n      }\r\n\r\n      let { thead, scrollView } = this.$refs\r\n      scrollView.onscroll = function (event) {\r\n\r\n        // console.log(event.target.scrollTop, ' - ', event.target.scrollLeft)\r\n\r\n        thead.scrollLeft = event.target.scrollLeft\r\n\r\n        vm.recalcTrHiddenItem(event.target.scrollTop)\r\n\r\n      }\r\n\r\n      // 添加事件监听\r\n      this.addEventListener()\r\n\r\n    },\r\n    methods: {\r\n\r\n      getElement(id, noCaseId = false) {\r\n        if (!this.el[id]) {\r\n          this.el[id] = document.getElementById((noCaseId ? '' : this.caseId) + id)\r\n        }\r\n        return this.el[id]\r\n      },\r\n\r\n      getElementPromise(id, noCaseId = false) {\r\n        return new Promise((resolve) => {\r\n          let timer = setInterval(() => {\r\n            let element = this.getElement(id, noCaseId)\r\n            if (element) {\r\n              clearInterval(timer)\r\n              resolve(element)\r\n            }\r\n          }, 10)\r\n        })\r\n      },\r\n\r\n      /** 初始化列表 */\r\n      initialize() {\r\n        this.visibleTrEls = []\r\n        // 判断是否是首次进入该方法，如果是就不清空行，防止删除了预添加的数据\r\n        if (!this.isFirst) {\r\n          // inputValues：用来存储input表单的值\r\n          // 数组里的每项都是一个对象，对象里每个key都是input的rowKey，值就是input的值，其中有个id的字段来区分\r\n          // 示例：\r\n          // [{\r\n          //    id: \"_jet-4sp0iu-15541771111770\"\r\n          //    dbDefaultVal: \"aaa\",\r\n          //    dbFieldName: \"bbb\",\r\n          //    dbFieldTxt: \"ccc\",\r\n          //    dbLength: 32\r\n          // }]\r\n          this.inputValues = []\r\n          this.rows = []\r\n          this.deleteIds = []\r\n          this.selectValues = {}\r\n          this.checkboxValues = {}\r\n          this.jdateValues = {}\r\n          this.jInputPopValues = {}\r\n          this.slotValues = {}\r\n          this.selectedRowIds = []\r\n          this.tooltips = {}\r\n          this.notPassedIds = []\r\n          this.uploadValues = []\r\n          this.popupValues = []\r\n          this.radioValues = []\r\n          this.multiSelectValues = []\r\n          this.searchSelectValues = []\r\n          this.scrollTop = 0\r\n          this.$nextTick(() => {\r\n            this.getElement('tbody').scrollTop = 0\r\n          })\r\n        } else {\r\n          this.isFirst = false\r\n        }\r\n      },\r\n\r\n      /** 同步滚动条状态 */\r\n      syncScrollBar(scrollLeft) {\r\n        // this.style.tbody.left = `${scrollLeft}px`\r\n        // this.getElement('tbody').scrollLeft = scrollLeft\r\n      },\r\n      /** 重置滚动条位置，参数留空则滚动到上次记录的位置 */\r\n      resetScrollTop(top) {\r\n        let { scrollView } = this.$refs\r\n        if (top != null && typeof top === 'number') {\r\n          scrollView.scrollTop = top\r\n        } else {\r\n          scrollView.scrollTop = this.scrollTop\r\n        }\r\n      },\r\n      /** 重新计算需要隐藏或显示的tr */\r\n      recalcTrHiddenItem(top) {\r\n        let diff = top - this.scrollTop\r\n        if (diff < 0) {\r\n          diff = this.scrollTop - top\r\n        }\r\n        // 只有在滚动了百分之三十的行高的距离时才进行更新\r\n        if (diff >= this.rowHeight * 0.3) {\r\n          this.scrollTop = top\r\n          // 更新form表单的值\r\n          this.$nextTick(() => {\r\n            this.updateFormValues()\r\n          })\r\n        }\r\n      },\r\n      /** 生成id */\r\n      generateId(rows) {\r\n        if (!(rows instanceof Array)) {\r\n          rows = this.rows || []\r\n        }\r\n        let timestamp = new Date().getTime()\r\n        return `${this.caseId}${timestamp}${rows.length}${randomNumber(6)}${this.tempId}`\r\n      },\r\n      /** push 一条数据 */\r\n      push(record, update = true, rows, insertIndex = null, setDefaultValue = true) {\r\n        return this._pushByDataSource([record], [insertIndex], update, rows, setDefaultValue)\r\n      },\r\n\r\n      /**\r\n       * push 数据\r\n       *\r\n       * @param dataSource 数据源\r\n       * @param insertIndexes 行插入位置，和dataSource的下标一一对应\r\n       * @param update 是否更新\r\n       * @param rows 若不传就使用 this.rows\r\n       * @param setDefaultValue 是否填充默认值\r\n       *\r\n       */\r\n      _pushByDataSource(dataSource, insertIndexes = null, update = true, rows = null, setDefaultValue = false) {\r\n        if (!(rows instanceof Array)) {\r\n          rows = [...this.rows] || []\r\n        }\r\n        let checkboxValues = { ...this.checkboxValues }\r\n        let selectValues = { ...this.selectValues }\r\n        let jdateValues = { ...this.jdateValues }\r\n        let jInputPopValues = { ...this.jInputPopValues }\r\n        let slotValues = { ...this.slotValues }\r\n        let uploadValues = { ...this.uploadValues }\r\n        let popupValues = { ...this.popupValues }\r\n        let radioValues = { ...this.radioValues }\r\n        let multiSelectValues = { ...this.multiSelectValues }\r\n        let searchSelectValues = { ...this.searchSelectValues }\r\n        // 禁用行的id\r\n        let disabledRowIds = (this.disabledRowIds || [])\r\n        dataSource.forEach((data, newValueIndex) => {\r\n          // 不能直接更改数据源的id\r\n          let dataId = data.id\r\n          // 判断源数据是否带有id\r\n          if (dataId == null || dataId === '') {\r\n            dataId = this.generateId(rows)\r\n          } else if(!this.hasCaseId(dataId)) {\r\n            dataId = this.caseId + dataId\r\n          }\r\n          let row = { id: dataId }\r\n          let value = { id: dataId }\r\n          let disabled = false\r\n          this.columns.forEach(column => {\r\n            let inputId = column.key + value.id\r\n            let sourceValue = (data[column.key] == null ? '' : data[column.key]).toString()\r\n\r\n            let defaultValue = null;\r\n            if (setDefaultValue) {\r\n              defaultValue = column.defaultValue || (column.defaultValue === 0 ? 0 : '')\r\n              if (defaultValue instanceof Array) {\r\n                defaultValue = defaultValue.join(',')\r\n              }\r\n\r\n              sourceValue = (typeof sourceValue === 'number' || sourceValue) ? sourceValue : defaultValue\r\n            }\r\n            let sourceValueIsEmpty = (sourceValue == null || sourceValue === '')\r\n\r\n            if (column.type === FormTypes.inputNumber) {\r\n              // 判断是否是排序字段，如果是就赋最大值\r\n              if (column.isOrder === true) {\r\n                value[column.key] = this.getInputNumberMaxValue(column) + 1\r\n              } else {\r\n                value[column.key] = sourceValue\r\n              }\r\n              // 判断是否是统计列\r\n              if (column.statistics) {\r\n                this.hasStatisticsColumn = true\r\n                if (!this.statisticsColumns[column.key]) {\r\n                  this.$set(this.statisticsColumns, column.key, 0)\r\n                }\r\n              }\r\n\r\n            } else if (column.type === FormTypes.checkbox) {\r\n              // 判断是否设定了customValue（自定义值）\r\n              if (column.customValue instanceof Array) {\r\n                let customValue = (column.customValue[0] || '').toString()\r\n                if (sourceValueIsEmpty && setDefaultValue) {\r\n                  sourceValue = column.defaultChecked ? customValue : sourceValue\r\n                }\r\n                checkboxValues[inputId] = (sourceValue === customValue)\r\n              } else {\r\n                if (sourceValueIsEmpty && setDefaultValue) {\r\n                  checkboxValues[inputId] = !!column.defaultChecked\r\n                } else {\r\n                  checkboxValues[inputId] = sourceValue\r\n                }\r\n              }\r\n\r\n            } else if (column.type === FormTypes.select) {\r\n              if (!sourceValueIsEmpty) {\r\n                // 判断是否是多选\r\n                if (typeof sourceValue === 'string' && (column.props || {})['mode'] === 'multiple') {\r\n                  sourceValue = sourceValue === '' ? [] : sourceValue.split(',')\r\n                }\r\n                selectValues[inputId] = sourceValue\r\n              } else {\r\n                selectValues[inputId] = undefined\r\n              }\r\n\r\n            } else if (column.type === FormTypes.date || column.type === FormTypes.datetime) {\r\n              jdateValues[inputId] = sourceValue\r\n\r\n            } else if (column.type === FormTypes.slot) {\r\n              slotValues[inputId] = sourceValue\r\n\r\n            } else if (column.type === FormTypes.popup) {\r\n              popupValues[inputId] = sourceValue\r\n            } else if (column.type === FormTypes.input_pop) {\r\n              jInputPopValues[inputId] = sourceValue\r\n            } else if (column.type === FormTypes.radio) {\r\n              radioValues[inputId] = sourceValue\r\n            } else if (column.type === FormTypes.sel_search) {\r\n              searchSelectValues[inputId] = sourceValue\r\n            } else if (column.type === FormTypes.list_multi) {\r\n              if (typeof sourceValue === 'string' && sourceValue.length > 0) {\r\n                multiSelectValues[inputId] = sourceValue.split(',')\r\n              } else {\r\n                multiSelectValues[inputId] = []\r\n              }\r\n            } else if (column.type === FormTypes.upload || column.type === FormTypes.file || column.type === FormTypes.image) {\r\n              if (sourceValue) {\r\n                let fileName = ''\r\n                if (sourceValue.indexOf(',') > 0) {\r\n                  let sourceValue2 = sourceValue.split(',')[0]\r\n                  fileName = sourceValue2.substring(sourceValue2.lastIndexOf('/') + 1)\r\n                } else {\r\n                  fileName = sourceValue.substring(sourceValue.lastIndexOf('/') + 1)\r\n                }\r\n                uploadValues[inputId] = {\r\n                  name: fileName,\r\n                  status: 'done',\r\n                  path: sourceValue\r\n                }\r\n              }\r\n            } else {\r\n              value[column.key] = sourceValue\r\n            }\r\n\r\n            // 解析disabledRows\r\n            for (let columnKey in this.disabledRows) {\r\n              // 判断是否有该属性\r\n              if (this.disabledRows.hasOwnProperty(columnKey) && data.hasOwnProperty(columnKey)) {\r\n                if (disabled !== true) {\r\n                  let temp = this.disabledRows[columnKey]\r\n                  // 禁用规则可以是一个数组\r\n                  if (temp instanceof Array) {\r\n                    disabled = temp.includes(data[columnKey])\r\n                  } else {\r\n                    disabled = (temp === data[columnKey])\r\n                  }\r\n                  if (disabled) {\r\n                    disabledRowIds.push(row.id)\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          })\r\n          // 插入行而不是添加到最后\r\n          let added = false\r\n          if (insertIndexes instanceof Array) {\r\n            let insertIndex = insertIndexes[newValueIndex]\r\n            if (typeof insertIndex === 'number') {\r\n              added = true\r\n              rows.splice(insertIndex, 0, row)\r\n              this.inputValues.splice(insertIndex, 0, value)\r\n            }\r\n          }\r\n          //update-begin-author:lvdandan date:20201105 for:LOWCOD-987 【online】js增强的问题--数据对象带有id，且和现有数据一致时，替换患有数据\r\n          if(-1 !== rows.findIndex(item => item.id === row.id)){\r\n            added = true\r\n            this.inputValues = this.inputValues.map(item => item.id === row.id ? value : item)\r\n          }\r\n          //update-begin-author:lvdandan date:20201105 for:LOWCOD-987 【online】js增强的问题--数据对象带有id，且和现有数据一致时，替换患有数据\r\n          if (!added) {\r\n            rows.push(row)\r\n            this.inputValues.push(value)\r\n          }\r\n        })\r\n        // 启用了拖动排序，就重新计算排序编号\r\n        if (this.dragSort) {\r\n          this.inputValues.forEach((item, index) => {\r\n            item[this.dragSortKey] = (index + 1)\r\n          })\r\n        }\r\n        this.disabledRowIds = disabledRowIds\r\n        this.checkboxValues = checkboxValues\r\n        this.selectValues = selectValues\r\n        this.jdateValues = jdateValues\r\n        this.jInputPopValues = jInputPopValues\r\n        this.slotValues = slotValues\r\n        this.uploadValues = uploadValues\r\n        this.popupValues = popupValues\r\n        this.radioValues = radioValues\r\n        this.multiSelectValues = multiSelectValues\r\n        this.searchSelectValues = searchSelectValues\r\n        // 重新计算所有统计列\r\n        this.recalcAllStatisticsColumns()\r\n        // 更新到 dom\r\n        if (update) {\r\n          this.rows = rows\r\n\r\n          // 更新form表单的值\r\n          this.$nextTick(() => {\r\n            this.forceUpdateFormValues()\r\n          })\r\n        }\r\n        return rows\r\n      },\r\n\r\n      /** 获取某一数字输入框列中的最大的值 */\r\n      getInputNumberMaxValue(column) {\r\n        let maxNum = 0\r\n        this.inputValues.forEach((item, index) => {\r\n          let val = item[column.key], num\r\n          try {\r\n            num = parseInt(val)\r\n          } catch {\r\n            num = 0\r\n          }\r\n          // 把首次循环的结果当成最大值\r\n          if (index === 0) {\r\n            maxNum = num\r\n          } else {\r\n            maxNum = (num > maxNum) ? num : maxNum\r\n          }\r\n        })\r\n        return maxNum\r\n      },\r\n      /** 添加一行 */\r\n      add(num = 1, forceScrollToBottom = false) {\r\n        if (num < 1) return\r\n        // let timestamp = new Date().getTime()\r\n        let rows = this.rows\r\n        let row\r\n        for (let i = 0; i < num; i++) {\r\n          rows = this.push({}, false, rows)\r\n          row = rows[rows.length - 1]\r\n        }\r\n        this.rows = rows\r\n\r\n        this.$nextTick(() => {\r\n          this.updateFormValues()\r\n        })\r\n        // 触发add事件\r\n        this.$emit('added', {\r\n          row: (() => {\r\n            let r = Object.assign({}, row)\r\n            r.id = this.getCleanId(r.id)\r\n            return r\r\n          })(),\r\n          target: this\r\n        })\r\n        // 设置滚动条位置\r\n        let tbody = this.getElement('tbody')\r\n        let offsetHeight = tbody.offsetHeight\r\n        let realScrollTop = tbody.scrollTop + offsetHeight\r\n        if (forceScrollToBottom === false) {\r\n          // 只有滚动条在底部的时候才自动滚动\r\n          if (!((tbody.scrollHeight - realScrollTop) <= 10)) {\r\n            return\r\n          }\r\n        }\r\n        this.$nextTick(() => {\r\n          tbody.scrollTop = tbody.scrollHeight\r\n        })\r\n      },\r\n      /**\r\n       * 在指定位置添加一行\r\n       * @param insertIndex 添加位置下标\r\n       * @param num 添加的行数，默认1\r\n       */\r\n      insert(insertIndex, num = 1) {\r\n        if (this.checkTooFastClick('insert', 1500)) {\r\n          return\r\n        }\r\n        if (!insertIndex && num < 1) return\r\n        let rows = this.rows\r\n        let newRows = []\r\n        for (let i = 0; i < num; i++) {\r\n          let row = { id: this.generateId(rows) }\r\n          rows = this.push(row, false, rows, insertIndex)\r\n          newRows.push(row)\r\n        }\r\n        // 同步更改\r\n        this.rows = rows\r\n        this.$nextTick(() => {\r\n          this.recalcSortNumber()\r\n          this.forceUpdateFormValues()\r\n        })\r\n        // 触发 insert 事件\r\n        this.$emit('inserted', {\r\n          rows: newRows.map(row => {\r\n            let r = cloneObject(row)\r\n            r.id = this.getCleanId(r.id)\r\n            return r\r\n          }),\r\n          num, insertIndex,\r\n          target: this\r\n        })\r\n      },\r\n      /** 删除被选中的行 */\r\n      removeSelectedRows() {\r\n        this.removeRows(this.selectedRowIds)\r\n        this.selectedRowIds = []\r\n      },\r\n      /** 删除一行或多行 */\r\n      removeRows(id) {\r\n        let ids = id\r\n        if (!(id instanceof Array)) {\r\n          if (typeof id === 'string') {\r\n            ids = [id]\r\n          } else {\r\n            throw  `JEditableTable.removeRows() 函数需要的参数可以是string或Array类型，但提供的却是${typeof id}`\r\n          }\r\n        }\r\n\r\n        let rows = cloneObject(this.rows)\r\n        ids.forEach(removeId => {\r\n          removeId = this.getCleanId(removeId)\r\n          // 找到每个id对应的真实index并删除\r\n          const findAndDelete = (arr) => {\r\n            for (let i = 0; i < arr.length; i++) {\r\n              let currentId = this.getCleanId(arr[i].id)\r\n              if (currentId === removeId) {\r\n                arr.splice(i, 1)\r\n                return true\r\n              }\r\n            }\r\n          }\r\n          // 找到rows对应的index，并删除\r\n          if (findAndDelete(rows)) {\r\n            // 找到values对应的index，并删除\r\n            findAndDelete(this.inputValues)\r\n            // 将caseId去除\r\n            let id = this.getCleanId(removeId)\r\n            this.deleteIds.push(id)\r\n          }\r\n        })\r\n        this.rows = rows\r\n        this.$emit('deleted', this.getDeleteIds(), this)\r\n        this.$nextTick(() => {\r\n          // 更新formValues\r\n          this.updateFormValues()\r\n          // 重新计算统计\r\n          this.recalcAllStatisticsColumns()\r\n        })\r\n        return true\r\n      },\r\n\r\n      /** 获取表格表单里的值（异步版） */\r\n      getValuesAsync(options = {}, callback) {\r\n        let { validate, rowIds, deleteTempId } = options\r\n        if (typeof validate !== 'boolean') validate = true\r\n        if (!(rowIds instanceof Array)) rowIds = null\r\n        // 是否删除临时ID，默认为 false\r\n        if (typeof deleteTempId !== 'boolean') deleteTempId = false\r\n        // console.log('options:', { validate, rowIds })\r\n\r\n        let asyncCount = 0\r\n        let error = 0\r\n        let inputValues = cloneObject(this.inputValues)\r\n        let tooltips = Object.assign({}, this.tooltips)\r\n        let notPassedIds = cloneObject(this.notPassedIds)\r\n        // 用于存储合并后的值\r\n        let values = []\r\n        // 遍历inputValues来获取每行的值\r\n        for (let value of inputValues) {\r\n          let rowIdsFlag = false\r\n          // 如果带有rowIds，那么就只存这几行的数据\r\n          if (rowIds == null) {\r\n            rowIdsFlag = true\r\n          } else {\r\n            for (let rowId of rowIds) {\r\n              if (this.getCleanId(rowId) === this.getCleanId(value.id)) {\r\n                rowIdsFlag = true\r\n                break\r\n              }\r\n            }\r\n          }\r\n\r\n          if (!rowIdsFlag) continue\r\n\r\n          this.columns.forEach(column => {\r\n            let inputId = column.key + value.id\r\n            if (column.type === FormTypes.checkbox) {\r\n              let checked = this.checkboxValues[inputId]\r\n              if (column.customValue instanceof Array) {\r\n                value[column.key] = checked ? column.customValue[0] : column.customValue[1]\r\n              } else {\r\n                value[column.key] = checked\r\n              }\r\n\r\n            } else if (column.type === FormTypes.select) {\r\n              let selected = this.selectValues[inputId]\r\n              if (selected instanceof Array) {\r\n                value[column.key] = cloneObject(selected)\r\n              } else {\r\n                value[column.key] = selected\r\n              }\r\n\r\n            } else if (column.type === FormTypes.date || column.type === FormTypes.datetime) {\r\n              value[column.key] = this.jdateValues[inputId]\r\n\r\n            } else if (column.type === FormTypes.input_pop) {\r\n              value[column.key] = this.jInputPopValues[inputId]\r\n\r\n            } else if (column.type === FormTypes.upload) {\r\n              value[column.key] = cloneObject(this.uploadValues[inputId] || null)\r\n\r\n            } else if (column.type === FormTypes.image || column.type === FormTypes.file) {\r\n              let currUploadObj = cloneObject(this.uploadValues[inputId] || null)\r\n              if (currUploadObj) {\r\n                value[column.key] = currUploadObj['path'] || null\r\n              }\r\n\r\n            } else if (column.type === FormTypes.popup) {\r\n              if (!value[column.key]) {\r\n                value[column.key] = this.popupValues[inputId] || null\r\n              }\r\n            } else if (column.type === FormTypes.radio) {\r\n              value[column.key] = this.radioValues[inputId]\r\n            } else if (column.type === FormTypes.sel_search) {\r\n              value[column.key] = this.searchSelectValues[inputId]\r\n            } else if (column.type === FormTypes.list_multi) {\r\n              if (!this.multiSelectValues[inputId] || this.multiSelectValues[inputId].length === 0) {\r\n                value[column.key] = ''\r\n              } else {\r\n                value[column.key] = this.multiSelectValues[inputId].join(',')\r\n              }\r\n            } else if (column.type === FormTypes.slot) {\r\n              value[column.key] = this.slotValues[inputId]\r\n            }\r\n\r\n\r\n            // 检查表单验证\r\n            if (validate === true) {\r\n              const handleValidateOneInput = (results) => {\r\n                tooltips[inputId] = results[0]\r\n                if (tooltips[inputId].passed === false) {\r\n                  error++\r\n                  // if (error++ === 0) {\r\n                  // let element = document.getElementById(inputId)\r\n                  // while (element.className !== 'tr') {\r\n                  //   element = element.parentElement\r\n                  // }\r\n                  // this.jumpToId(inputId, element)\r\n                  // }\r\n                }\r\n                tooltips[inputId].visible = false\r\n                notPassedIds = results[1]\r\n              }\r\n              asyncCount++\r\n              let results = this.validateOneInputAsync(value[column.key], value, column, notPassedIds, false, 'getValues', (results) => {\r\n                handleValidateOneInput(results)\r\n                asyncCount--\r\n              })\r\n              handleValidateOneInput(results)\r\n            }\r\n          })\r\n          // 删除 tempId\r\n          if (deleteTempId && this.isTempId(value.id)) {\r\n            delete value.id\r\n          } else {\r\n            value.id = this.getCleanId(value.id)\r\n          }\r\n\r\n          values.push(value)\r\n        }\r\n\r\n        if (validate === true) {\r\n          this.tooltips = tooltips\r\n          this.notPassedIds = notPassedIds\r\n        }\r\n\r\n        const timer = setInterval(() => {\r\n          if (asyncCount === 0) {\r\n            clearInterval(timer)\r\n            if (typeof callback === 'function') {\r\n              callback({ error, values })\r\n            }\r\n          }\r\n        }, 10)\r\n\r\n        return { error, values }\r\n      },\r\n\r\n      /** 获取表格表单里的值（同步版） */\r\n      getValuesSync(options = {}) {\r\n        return this.getValuesAsync(options)\r\n      },\r\n\r\n      /** 获取表格表单里的值 */\r\n      getValues(callback, validate = true, rowIds) {\r\n        this.getValuesAsync({ validate, rowIds }, ({ error, values }) => {\r\n          if (typeof callback === 'function') {\r\n            callback(error, values)\r\n          }\r\n        })\r\n      },\r\n      /** getValues的Promise版 */\r\n      getValuesPromise(validate = true, rowIds, deleteTempId) {\r\n        return new Promise((resolve, reject) => {\r\n          this.getValuesAsync({ validate, rowIds, deleteTempId }, ({ error, values }) => {\r\n            if (error === 0) {\r\n              resolve(values)\r\n            } else {\r\n              reject(VALIDATE_NO_PASSED)\r\n            }\r\n          })\r\n        })\r\n      },\r\n      /** 获取被删除项的id */\r\n      getDeleteIds() {\r\n        return cloneObject(this.deleteIds)\r\n      },\r\n      /** 获取所有的数据，包括values、deleteIds */\r\n      getAll(validate, deleteTempId) {\r\n        return new Promise((resolve, reject) => {\r\n          let deleteIds = this.getDeleteIds()\r\n          this.getValuesPromise(validate, null, deleteTempId).then((values) => {\r\n            resolve({ values, deleteIds })\r\n          }).catch(error => {\r\n            reject(error)\r\n          })\r\n        })\r\n      },\r\n      /** Sync 获取所有的数据，包括values、deleteIds */\r\n      getAllSync(validate, rowIds, deleteTempId) {\r\n        let result = this.getValuesSync({ validate, rowIds, deleteTempId })\r\n        result.deleteIds = this.getDeleteIds()\r\n        return result\r\n      },\r\n      // slot 获取值\r\n      _getValueForSlot(rowId) {\r\n        return this.getValuesSync({ rowIds: [rowId] }).values[0]\r\n      },\r\n      _getAllValuesForSlot() {\r\n        return cloneObject({\r\n          inputValues: this.inputValues,\r\n          selectValues: this.selectValues,\r\n          checkboxValues: this.checkboxValues,\r\n          jdateValues: this.jdateValues,\r\n          jInputPopValues: this.jInputPopValues,\r\n          slotValues: this.slotValues,\r\n          uploadValues: this.uploadValues,\r\n          popupValues: this.popupValues,\r\n          radioValues: this.radioValues,\r\n          multiSelectValues: this.multiSelectValues,\r\n          searchSelectValues: this.searchSelectValues,\r\n        })\r\n      },\r\n      /** 设置某行某列的值 */\r\n      setValues(values) {\r\n\r\n        values.forEach(item => {\r\n          let { rowKey, values: newValues } = item\r\n          rowKey = this.getCleanId(rowKey)\r\n          for (let newValueKey in newValues) {\r\n            if (newValues.hasOwnProperty(newValueKey)) {\r\n              let edited = false // 已被修改\r\n              for (let column of this.columns) {\r\n                if (column.key === newValueKey) {\r\n                  let newValue = newValues[newValueKey]\r\n                  this.inputValues.forEach(value => {\r\n                    // 在inputValues中找到了该字段\r\n                    if (rowKey === this.getCleanId(value.id)) {\r\n                      if (value.hasOwnProperty(newValueKey)) {\r\n                        edited = true\r\n                        value[newValueKey] = newValue\r\n                      }\r\n                    }\r\n                  })\r\n                  if (!edited) {\r\n                    let modelKey = `${newValueKey}${this.caseId}${rowKey}`\r\n                    if (column.type === FormTypes.select) {\r\n                      if (newValue !== 0 && !newValue) {\r\n                        edited = this.setOneValue(this.selectValues, modelKey, undefined)\r\n                      } else {\r\n                        edited = this.setOneValue(this.selectValues, modelKey, newValue)\r\n                      }\r\n                    } else if (column.type === FormTypes.checkbox) {\r\n                      // checkbox 特殊处理 CustomValue\r\n                      let key = this.valuesHasOwnProperty(this.checkboxValues, modelKey)\r\n                      // 找到对应的column\r\n                      let sourceValue\r\n                      // 判断是否设定了customValue（自定义值）\r\n                      if (column.customValue instanceof Array) {\r\n                        let customValue = (column.customValue[0] || '').toString()\r\n                        sourceValue = (newValue === customValue)\r\n                      } else {\r\n                        sourceValue = !!newValue\r\n                      }\r\n                      this.$set(this.checkboxValues, key, sourceValue)\r\n                      edited = true\r\n                    } else if (column.type === FormTypes.date || column.type === FormTypes.datetime) {\r\n                      edited = this.setOneValue(this.jdateValues, modelKey, newValue)\r\n                    } else if (column.type === FormTypes.input_pop) {\r\n                      edited = this.setOneValue(this.jInputPopValues, modelKey, newValue)\r\n                    } else if (column.type === FormTypes.slot) {\r\n                      edited = this.setOneValue(this.slotValues, modelKey, newValue)\r\n                    } else if (column.type === FormTypes.upload || column.type === FormTypes.image || column.type === FormTypes.file) {\r\n                      edited = this.setOneValue(this.uploadValues, modelKey, newValue)\r\n                    } else if (column.type === FormTypes.popup) {\r\n                      edited = this.setOneValue(this.popupValues, modelKey, newValue)\r\n                    } else if (column.type === FormTypes.radio) {\r\n                      edited = this.setOneValue(this.radioValues, modelKey, newValue)\r\n                    } else if (column.type === FormTypes.list_multi) {\r\n                      edited = this.setOneValue(this.multiSelectValues, modelKey, newValue, true)\r\n                    } else if (column.type === FormTypes.sel_search) {\r\n                      edited = this.setOneValue(this.searchSelectValues, modelKey, newValue)\r\n                    } else {\r\n                      edited = false\r\n                    }\r\n                  }\r\n                  if (edited) {\r\n                    this.elemValueChange(column.type, {[newValueKey]: newValue}, column, newValue)\r\n                  }\r\n                }\r\n              }\r\n              if (!edited) {\r\n                console.warn(`JEditableTable.setValues：没有找到\"${newValueKey}\"列`)\r\n              }\r\n            }\r\n          }\r\n        })\r\n        // 强制更新formValues\r\n        this.forceUpdateFormValues()\r\n      },\r\n      /**\r\n       * 设置单个组件的值\r\n       * @param valuesObject 组件存储值的对象\r\n       * @param modelKey 组件存储值的对象里的key\r\n       * @param value 新值\r\n       * @param isMultiple 是否多选，如果是就会对 value 进行一个 split(',') 的操作\r\n       */\r\n      setOneValue(valuesObject, modelKey, value, isMultiple = false) {\r\n        let key = this.valuesHasOwnProperty(valuesObject, modelKey)\r\n        if (key) {\r\n          // 处理多选数组\r\n          if (isMultiple && !Array.isArray(value)) {\r\n            value = (value || '').toString().trim()\r\n            value = value === '' ? [] : value.split(',')\r\n          }\r\n          this.$set(valuesObject, key, value)\r\n          return true\r\n        }\r\n        return false\r\n      },\r\n      valuesHasOwnProperty(values, ownProperty) {\r\n        let key = ownProperty\r\n        if (values.hasOwnProperty(key)) {\r\n          return key\r\n        }\r\n        if (values.hasOwnProperty(key + this.tempId)) {\r\n          return key + this.tempId\r\n        }\r\n        return null\r\n      },\r\n\r\n      /** 跳转到指定位置 */\r\n      // jumpToId(id, element) {\r\n      //   if (element == null) {\r\n      //     element = document.getElementById(id)\r\n      //   }\r\n      //   if (element != null) {\r\n      //     console.log(this.getElement('tbody').scrollTop, element.offsetTop)\r\n      //     this.getElement('tbody').scrollTop = element.offsetTop\r\n      //     console.log(this.getElement('tbody').scrollTop, element.offsetTop)\r\n      //   }\r\n      // },\r\n\r\n      /**\r\n       * 验证单个表单，异步版\r\n       *\r\n       * @param value 校验的值\r\n       * @param row 校验的行\r\n       * @param column 校验的列\r\n       * @param notPassedIds 没有通过校验的 id\r\n       * @param update 是否更新到vue中\r\n       * @param validType 校验触发的方式（input、blur等）\r\n       * @param callback\r\n       */\r\n      validateOneInputAsync(value, row, column, notPassedIds, update = false, validType = 'input', callback) {\r\n        let tooltips = Object.assign({}, this.tooltips)\r\n        // let notPassedIds = cloneObject(this.notPassedIds)\r\n        let inputId = column.key + row.id\r\n        tooltips[inputId] = tooltips[inputId] ? tooltips[inputId] : {}\r\n\r\n        let [passed, message] = this.validateValue(column, value)\r\n\r\n        const nextThen = res => {\r\n          let [passed, message] = res\r\n          // !(passed == null && tooltips[inputId].visible != null)\r\n          if (passed != null) {\r\n            tooltips[inputId].visible = !passed\r\n            tooltips[inputId].passed = passed\r\n            let index = notPassedIds.indexOf(inputId)\r\n            if (!passed) {\r\n              tooltips[inputId].title = this.replaceProps(column, message)\r\n              if (index === -1) notPassedIds.push(inputId)\r\n            } else {\r\n              if (index !== -1) notPassedIds.splice(index, 1)\r\n            }\r\n          }\r\n          // 是否更新到data\r\n          if (update) {\r\n            this.tooltips = tooltips\r\n            this.notPassedIds = notPassedIds\r\n          }\r\n\r\n          if (typeof callback === 'function') {\r\n            callback([tooltips[inputId], notPassedIds])\r\n          }\r\n\r\n        }\r\n\r\n        if (typeof passed === 'function') {\r\n          let executed = false\r\n          passed(validType, value, { id: this.getCleanId(row.id) }, { ...column }, (flag, msg) => {\r\n            if (executed) return\r\n            executed = true\r\n            if (typeof msg === 'string') {\r\n              message = msg\r\n            }\r\n            if (flag == null) {\r\n              nextThen([true, message])\r\n            } else {\r\n              nextThen([!!flag, message])\r\n            }\r\n          }, this)\r\n        } else {\r\n          nextThen([passed, message])\r\n        }\r\n\r\n        return [tooltips[inputId], notPassedIds]\r\n      },\r\n\r\n      /** 验证单个表单 */\r\n      validateOneInput(value, row, column, notPassedIds, update = false, validType = 'input') {\r\n        return this.validateOneInputAsync(value, row, column, notPassedIds, update, validType)\r\n      },\r\n      /** 通过规则验证值是否正确 */\r\n      validateValue(column, value) {\r\n        let rules = column.validateRules\r\n        let passed = true, message = ''\r\n        // 判断有没有验证规则或验证规则格式正不正确，若条件不符合则默认通过\r\n        if (rules instanceof Array) {\r\n          for (let rule of rules) {\r\n            // 当前值是否为空\r\n            let isNull = (value == null || value === '')\r\n            // 验证规则：非空\r\n            if (rule.required === true && isNull) {\r\n              passed = false\r\n            } else // 使用 else-if 是为了防止一个 rule 中出现两个规则\r\n            // 验证规则：唯一校验\r\n            if (rule.unique === true || rule.pattern === 'only') {\r\n              let { values } = this.getValuesSync({ validate: false })\r\n              let findCount = 0\r\n              for (let val of values) {\r\n                if (val[column.key] === value) {\r\n                  if (++findCount >= 2) {\r\n                    passed = false\r\n                    break\r\n                  }\r\n                }\r\n              }\r\n            } else\r\n            // 验证规则：正则表达式\r\n            if (!!rule.pattern && !isNull) {\r\n\r\n              // 兼容 online 的规则\r\n              let foo = [\r\n                { title: '6到16位数字', value: 'n6-16', pattern: /^\\d{6,18}$/ },\r\n                { title: '6到16位任意字符', value: '*6-16', pattern: /^.{6,16}$/ },\r\n                { title: '6到18位字母', value: 's6-18', pattern: /^[a-z|A-Z]{6,18}$/ },\r\n                { title: '网址', value: 'url', pattern: /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/ },\r\n                { title: '电子邮件', value: 'e', pattern: /^([\\w]+\\.*)([\\w]+)@[\\w]+\\.\\w{3}(\\.\\w{2}|)$/ },\r\n                { title: '手机号码', value: 'm', pattern: /^1[3456789]\\d{9}$/ },\r\n                { title: '邮政编码', value: 'p', pattern: /^[1-9]\\d{5}$/ },\r\n                { title: '字母', value: 's', pattern: /^[A-Z|a-z]+$/ },\r\n                { title: '数字', value: 'n', pattern: /^-?\\d+(\\.?\\d+|\\d?)$/ },\r\n                { title: '整数', value: 'z', pattern: /^-?\\d+$/ },\r\n                { title: '非空', value: '*', pattern: /^.+$/ },\r\n                { title: '金额', value: 'money', pattern: /^(([1-9][0-9]*)|([0]\\.\\d{0,2}|[1-9][0-9]*\\.\\d{0,2}))$/ },\r\n              ]\r\n              let flag = false\r\n              for (let item of foo) {\r\n                if (rule.pattern === item.value && item.pattern) {\r\n                  passed = new RegExp(item.pattern).test(value)\r\n                  flag = true\r\n                  break\r\n                }\r\n              }\r\n              if (!flag) passed = new RegExp(rule.pattern).test(value)\r\n            } else\r\n            // 校验规则：自定义函数校验\r\n            if (typeof rule.handler === 'function') {\r\n              return [rule.handler, rule.message]\r\n            }\r\n            // 如果没有通过验证，则跳出循环。如果通过了验证，则继续验证下一条规则\r\n            if (!passed) {\r\n              message = rule.message\r\n              break\r\n            }\r\n          }\r\n        }\r\n        return [passed, message]\r\n      },\r\n\r\n      /** 动态更新表单的值 */\r\n      updateFormValues() {\r\n        let trs = this.getElement('tbody').getElementsByClassName('tr')\r\n        let trEls = []\r\n        for (let tr of trs) {\r\n          trEls.push(tr)\r\n        }\r\n        // 获取新增的 tr\r\n        let newTrEls = trEls\r\n        if (this.visibleTrEls.length > 0) {\r\n          newTrEls = []\r\n          for (let tr of trEls) {\r\n            let isNewest = true\r\n            for (let vtr of this.visibleTrEls) {\r\n              if (vtr.id === tr.id) {\r\n                isNewest = false\r\n                break\r\n              }\r\n            }\r\n            if (isNewest) {\r\n              newTrEls.push(tr)\r\n            }\r\n          }\r\n        }\r\n        this.visibleTrEls = trEls\r\n        // 向新增的tr中赋值\r\n        newTrEls.forEach(tr => {\r\n          let { idx } = tr.dataset\r\n          let value = this.inputValues[idx]\r\n          for (let key in value) {\r\n            if (value.hasOwnProperty(key)) {\r\n              let elid = `${key}${value.id}`\r\n              let el = document.getElementById(elid)\r\n              if (el) {\r\n                el.value = value[key]\r\n              }\r\n            }\r\n          }\r\n        })\r\n      },\r\n      /** 强制更新FormValues */\r\n      forceUpdateFormValues() {\r\n        this.visibleTrEls = []\r\n        this.$forceUpdate()\r\n        this.$nextTick(() => this.updateFormValues())\r\n      },\r\n\r\n      // 重新计算所有统计列\r\n      recalcAllStatisticsColumns() {\r\n        if (this.hasStatisticsColumn) {\r\n          Object.keys(this.statisticsColumns).forEach(key => this.recalcOneStatisticsColumn(key))\r\n        }\r\n      },\r\n      // 重新计算单个统计列\r\n      recalcOneStatisticsColumn(key) {\r\n        if (this.hasStatisticsColumn) {\r\n          if (this.statisticsColumns.hasOwnProperty(key)) {\r\n            // 计算合计值\r\n            let count = 0\r\n            this.inputValues.forEach(item => {\r\n              let value = item[key]\r\n              if (value && count !== '-') {\r\n                try {\r\n                  count += Number.parseInt(value)\r\n                } catch (e) {\r\n                  count = '-'\r\n                }\r\n              }\r\n            })\r\n            this.statisticsColumns[key] = count\r\n          }\r\n        }\r\n      },\r\n\r\n      /** 获取某个统计字段的值 */\r\n      getStatisticsValue(key) {\r\n        if (this.hasStatisticsColumn) {\r\n          if (this.statisticsColumns.hasOwnProperty(key)) {\r\n            return this.statisticsColumns[key]\r\n          }\r\n        }\r\n        return null\r\n      },\r\n\r\n      /** 全选或取消全选 */\r\n      handleChangeCheckedAll() {\r\n        let selectedRowIds = []\r\n        if (!this.getSelectAll) {\r\n          this.rows.forEach(row => {\r\n            if ((this.disabledRowIds || []).indexOf(row.id) === -1) {\r\n              selectedRowIds.push(row.id)\r\n            }\r\n          })\r\n        }\r\n        this.selectedRowIds = selectedRowIds\r\n      },\r\n      /** 左侧行选择框change事件 */\r\n      handleChangeLeftCheckbox(event) {\r\n        let { id } = event.target\r\n\r\n        if ((this.disabledRowIds || []).indexOf(id) !== -1) {\r\n          return\r\n        }\r\n\r\n        let index = this.selectedRowIds.indexOf(id)\r\n        if (index !== -1) {\r\n          this.selectedRowIds.splice(index, 1)\r\n        } else {\r\n          this.selectedRowIds.push(id)\r\n        }\r\n\r\n      },\r\n      handleClickAdd() {\r\n        this.add()\r\n        // this.$emit('add')\r\n      },\r\n      handleConfirmDelete() {\r\n        this.removeSelectedRows()\r\n      },\r\n      handleClickClearSelection() {\r\n        this.clearSelection()\r\n      },\r\n      clearSelection() {\r\n        this.selectedRowIds = []\r\n      },\r\n      /** 用于搜索下拉框中的内容 */\r\n      handleSelectFilterOption(input, option, column) {\r\n        if (column.allowSearch === true || column.allowInput === true) {\r\n          return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n        }\r\n        return true\r\n      },\r\n      /** select 搜索时的事件，用于动态添加options */\r\n      handleSearchSelect(value, id, row, col) {\r\n        if (col.allowSearch !== true && col.allowInput === true) {\r\n          // 是否找到了对应的项，找不到则添加这一项\r\n          let flag = false\r\n          for (let option of col.options) {\r\n            if (option.value.toLocaleString() === value.toLocaleString()) {\r\n              flag = true\r\n              break\r\n            }\r\n          }\r\n          // !!value ：不添加空值\r\n          if (!flag && !!value) {\r\n            // searchAdd 是否是通过搜索添加的\r\n            col.options.push({ title: value, value: value, searchAdd: true })\r\n          }\r\n\r\n        }\r\n      },\r\n      // blur 失去焦点\r\n      handleBlurSearch(value, id, row, col) {\r\n        if (col.allowInput === true) {\r\n          // 删除无用的因搜索（用户输入）而创建的项\r\n          if (typeof value === 'string') {\r\n            let indexs = []\r\n            col.options.forEach((option, index) => {\r\n              if (option.value.toLocaleString() === value.toLocaleString()) {\r\n                delete option.searchAdd\r\n              } else if (option.searchAdd === true) {\r\n                indexs.push(index)\r\n              }\r\n            })\r\n            // 翻转删除数组中的项\r\n            for (let index of indexs.reverse()) {\r\n              col.options.splice(index, 1)\r\n            }\r\n          }\r\n\r\n        }\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, col, this.notPassedIds, true, 'blur')\r\n      },\r\n\r\n      /** 触发已拖动事件 */\r\n      emitDragged(oldIndex, newIndex) {\r\n        this.$emit('dragged', { oldIndex, newIndex, target: this })\r\n      },\r\n\r\n      handleDragMoveStart(event) {\r\n        this.dragging = true\r\n        this.$refs.scrollView.style.overflow = 'hidden'\r\n      },\r\n\r\n      /** 拖动结束，交换inputValue中的值 */\r\n      handleDragMoveEnd(event) {\r\n        this.dragging = false\r\n        this.$refs.scrollView.style.overflow = 'auto'\r\n\r\n        let { oldIndex, newIndex, item: { dataset: { idx: dataIdx } } } = event\r\n\r\n        // 由于动态显示隐藏行导致index有误差，需要算出真实的index\r\n        let diff = Number.parseInt(dataIdx) - oldIndex\r\n        oldIndex += diff\r\n        newIndex += diff\r\n\r\n        this.rowResort(oldIndex, newIndex)\r\n        this.emitDragged(oldIndex, newIndex)\r\n      },\r\n\r\n      /** 行重新排序 */\r\n      rowResort(oldIndex, newIndex) {\r\n        const sort = (array) => {\r\n          // 存储旧数据，并删除旧项目\r\n          let temp = array[oldIndex]\r\n          array.splice(oldIndex, 1)\r\n          // 向新项目里添加旧数据\r\n          array.splice(newIndex, 0, temp)\r\n        }\r\n\r\n        sort(this.rows)\r\n        sort(this.inputValues)\r\n\r\n        this.recalcSortNumber()\r\n\r\n        this.forceUpdateFormValues()\r\n      },\r\n\r\n      /** 重新计算排序字段的数值 */\r\n      recalcSortNumber() {\r\n        if (this.dragSort) {\r\n          // 重置排序字段\r\n          this.inputValues.forEach((val, idx) => val[this.dragSortKey] = (idx + 1))\r\n        }\r\n      },\r\n\r\n      /** 当前行向上移一位 */\r\n      _handleRowMoveUp(rowIndex) {\r\n        if (rowIndex > 0) {\r\n          let newIndex = rowIndex - 1\r\n          this.rowResort(rowIndex, newIndex)\r\n          this.emitDragged(rowIndex, newIndex)\r\n        }\r\n      },\r\n\r\n      /** 当前行向下移一位 */\r\n      _handleRowMoveDown(rowIndex) {\r\n        if (rowIndex < (this.rows.length - 1)) {\r\n          let newIndex = rowIndex + 1\r\n          this.rowResort(rowIndex, newIndex)\r\n          this.emitDragged(rowIndex, newIndex)\r\n        }\r\n      },\r\n\r\n      /** 在当前行下面插入一行 */\r\n      _handleRowInsertDown(rowIndex) {\r\n        let insertIndex = (rowIndex + 1)\r\n        this.insert(insertIndex)\r\n      },\r\n\r\n      /* --- common function begin --- */\r\n\r\n      /** input事件 */\r\n      handleInputCommono(target, index, row, column) {\r\n        let oldValue = this.inputValues[index][column.key] || ''\r\n        let { value, dataset, selectionStart } = target\r\n        let type = FormTypes.input\r\n        let change = true\r\n        if (`${dataset.inputNumber}` === 'true') {\r\n          type = FormTypes.inputNumber\r\n          // 判断输入的值是否匹配数字正则表达式，不匹配就还原\r\n          if (!/^-?\\d+\\.?\\d*$/.test(value) && (value !== '' && value !== '-')) {\r\n            change = false\r\n            value = oldValue\r\n            target.value = value\r\n            if (typeof selectionStart === 'number') {\r\n              target.selectionStart = selectionStart - 1\r\n              target.selectionEnd = selectionStart - 1\r\n            }\r\n          }\r\n        }\r\n        // 存储输入的值\r\n        this.inputValues[index][column.key] = value\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'input')\r\n\r\n        if (type === FormTypes.inputNumber) {\r\n          this.recalcOneStatisticsColumn(column.key)\r\n        }\r\n\r\n        // 触发valueChange 事件\r\n        if (change) {\r\n          this.elemValueChange(type, row, column, value)\r\n        }\r\n      },\r\n      /** slot Change */\r\n      handleChangeSlotCommon(value, id, row, column) {\r\n        this.slotValues = this.bindValuesChange(value, id, 'slotValues')\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n        // 触发valueChange 事件\r\n        this.elemValueChange(FormTypes.slot, row, column, value)\r\n      },\r\n      handleBlurCommono(target, index, row, column) {\r\n        let { value, dataset } = target\r\n        if (dataset && `${dataset.inputNumber}` === 'true') {\r\n          // 判断输入的值是否匹配数字正则表达式，不匹配就置空\r\n          if (!/^-?\\d+\\.?\\d*$/.test(value)) {\r\n            value = ''\r\n          } else {\r\n            value = Number.parseFloat(value)\r\n          }\r\n          target.value = value\r\n        }\r\n        //update--begin--autor:lvdandan-----date:20201126------for：LOWCOD-1088 JEditableTable输入校验提示框位置偏移 #2005\r\n        setTimeout(()=>{\r\n          // 做单个表单验证\r\n          this.validateOneInput(value, row, column, this.notPassedIds, true, 'blur')\r\n        }, 100)\r\n        //update--end--autor:lvdandan-----date:20201126------for：LOWCOD-1088 JEditableTable输入校验提示框位置偏移 #2005\r\n      },\r\n      handleChangeCheckboxCommon(event, row, column) {\r\n        let { id, checked } = event.target\r\n        this.checkboxValues = this.bindValuesChange(checked, id, 'checkboxValues')\r\n\r\n        // 触发valueChange 事件\r\n        this.elemValueChange(FormTypes.checkbox, row, column, checked)\r\n      },\r\n      handleChangeSelectCommon(value, id, row, column) {\r\n        this.selectValues = this.bindValuesChange(value, id, 'selectValues')\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n\r\n        // 触发valueChange 事件\r\n        this.elemValueChange(FormTypes.select, row, column, value)\r\n      },\r\n      handleChangeJDateCommon(value, id, row, column, showTime) {\r\n        this.jdateValues = this.bindValuesChange(value, id, 'jdateValues')\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n\r\n        // 触发valueChange 事件\r\n        if (showTime) {\r\n          this.elemValueChange(FormTypes.datetime, row, column, value)\r\n        } else {\r\n          this.elemValueChange(FormTypes.date, row, column, value)\r\n        }\r\n      },\r\n      handleChangeJInputPopCommon(value, id, row, column){\r\n        this.jInputPopValues = this.bindValuesChange(value, id, 'jInputPopValues')\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n        // 触发valueChange 事件\r\n        this.elemValueChange(FormTypes.input_pop, row, column, value)\r\n      },\r\n      handleChangeUpload(info, id, row, column) {\r\n        let { file } = info\r\n        let value = {\r\n          name: file.name,\r\n          type: file.type,\r\n          size: file.size,\r\n          status: file.status,\r\n          percent: file.percent\r\n        }\r\n        if (column.responseName && file.response) {\r\n          value['responseName'] = file.response[column.responseName]\r\n        }\r\n        if (file.status === 'done') {\r\n          value['path'] = file.response[column.responseName]\r\n        } else if (file.status === 'error') {\r\n          value['message'] = file.response.message || '未知错误'\r\n        }\r\n        this.uploadValues = this.bindValuesChange(value, id, 'uploadValues')\r\n\r\n        // 触发valueChange 事件\r\n        this.elemValueChange(column.type, row, column, value)\r\n      },\r\n      handleMoreOperation(id,flag,column){\r\n        //update-begin-author:wangshuai date:20201021 for:LOWCOD-969 判断传过来的字段是否存在number，用于控制上传文件\r\n        if(column.number){\r\n          this.number = column.number;\r\n        }else{\r\n          this.number = 0;\r\n        }\r\n        //update-end-author:wangshuai date:20201021 for:LOWCOD-969 判断传过来的字段是否存在number，用于控制上传文件\r\n        if(column && column.fieldExtendJson){\r\n          let json = JSON.parse(column.fieldExtendJson);\r\n          this.number = json.uploadnum?json.uploadnum:0;\r\n        }\r\n        //console.log(\"this.uploadValues[id]\",this.uploadValues[id])\r\n        let path = ''\r\n        if(this.uploadValues && this.uploadValues[id]){\r\n          path = this.uploadValues[id].path\r\n        }\r\n        this.$refs.filePop.show(id,path,flag)\r\n      },\r\n      handleFileSuccess(obj){\r\n        if(obj.id){\r\n          this.uploadValues = this.bindValuesChange(obj, obj.id, 'uploadValues')\r\n        }\r\n      },\r\n      handleClickTableRow(event) {\r\n        let {target} = event\r\n        if (target.className === 'td' || target.className === 'tr') {\r\n          // 清空编辑状态\r\n          this.currentEditRows = {}\r\n        }\r\n      },\r\n      // 点击后编辑当前行\r\n      handleEditRow(row, col) {\r\n        if (this.alwaysEdit) {\r\n          return\r\n        }\r\n        // 将点击的组件置为可编辑并还原其他组件的编辑状态\r\n        this.currentEditRows = {\r\n          [row.id]: {\r\n            [col.key]: true\r\n          }\r\n        }\r\n        if (col.type === FormTypes.input || col.type === FormTypes.inputNumber) {\r\n          this.$nextTick(() => {\r\n            this.forceUpdateFormValues()\r\n            // 自动获取焦点\r\n            let el = document.getElementById(`${col.key}${row.id}`)\r\n            if (el) {\r\n              el.focus()\r\n            }\r\n          })\r\n        }\r\n      },\r\n      /** 记录用到数据绑定的组件的值 */\r\n      bindValuesChange(value, id, key) {\r\n        this.$set(this[key], id, value)\r\n        return this[key]\r\n      },\r\n\r\n      /** value 触发valueChange事件 */\r\n      elemValueChange(type, rowSource, columnSource, value) {\r\n        let column = Object.assign({}, columnSource)\r\n        // 将caseId去除\r\n        let row = Object.assign({}, rowSource)\r\n        row.id = this.getCleanId(row.id)\r\n        // 获取整行的数据\r\n        let { values } = this.getValuesSync({ validate: false, rowIds: [row.id] })\r\n        if (values.length > 0) {\r\n          Object.assign(row, values[0])\r\n        }\r\n        this.$emit('valueChange', { type, row, column, value, target: this })\r\n      },\r\n\r\n      /** 获取干净的ID（不包含任何杂质的ID） */\r\n      getCleanId(id) {\r\n        id = this.removeCaseId(id)\r\n        id = this.removeTempId(id)\r\n        return id\r\n      },\r\n\r\n      /** 判断某个ID是否包含了caseId */\r\n      hasCaseId(id) {\r\n        return id && id.startsWith(this.caseId)\r\n      },\r\n\r\n      /** 将caseId去除 */\r\n      removeCaseId(id) {\r\n        if (this.hasCaseId(id)) {\r\n          return id.substring(this.caseId.length, id.length)\r\n        }\r\n        return id\r\n      },\r\n\r\n      // 判断 id 是否是临时Id\r\n      isTempId(id) {\r\n        return (id || '').endsWith(this.tempId)\r\n      },\r\n\r\n      /** 将tempId去除 */\r\n      removeTempId(id) {\r\n        if (this.isTempId(id)) {\r\n          return id.substring(0, id.length - this.tempId.length)\r\n        }\r\n        return id;\r\n      },\r\n\r\n      handleClickDelFile(id) {\r\n        this.uploadValues[id] = null\r\n      },\r\n      handleClickDownloadFile(id) {\r\n        let { path } = this.uploadValues[id] || {}\r\n        if (path) {\r\n          let url = getFileAccessHttpUrl(path)\r\n          window.open(url)\r\n        }\r\n      },\r\n      handleClickDownFileByUrl(id){\r\n        let { url,path } = this.uploadValues[id] || {}\r\n        if (!url || url.length===0) {\r\n          if(path && path.length>0){\r\n            url = getFileAccessHttpUrl(path.split(',')[0])\r\n          }\r\n        }\r\n        if(url){\r\n          window.open(url)\r\n        }\r\n      },\r\n      handleClickShowImageError(id) {\r\n        let currUploadObj = this.uploadValues[id] || null\r\n        if (currUploadObj && currUploadObj['message']) {\r\n          this.$error({ title: '上传出错', content: '错误信息：' + currUploadObj['message'], maskClosable: true })\r\n        }\r\n      },\r\n\r\n      /** 加载数据字典并合并到 options */\r\n      _loadDictConcatToOptions(column) {\r\n        initDictOptions(column.dictCode).then((res) => {\r\n          if (res.success) {\r\n            let newOptions = (column.options || [])// .concat(res.result)\r\n            res.result.forEach(item => {\r\n              // 过滤重复数据\r\n              for (let option of newOptions) if (option.value === item.value) return\r\n              newOptions.push(item)\r\n            })\r\n            this.$set(column, 'options', newOptions)\r\n          } else {\r\n            console.group(`JEditableTable 查询字典(${column.dictCode})发生异常`)\r\n            console.log(res.message)\r\n            console.groupEnd()\r\n          }\r\n        })\r\n      },\r\n\r\n      /* --- common function end --- */\r\n\r\n      /* --- 以下是辅助方法，多用于动态构造页面中的数据 --- */\r\n\r\n      /** 辅助方法：打印日志 */\r\n      log() {\r\n        if (this.$attrs.logger) {\r\n          console.log.apply(null, arguments)\r\n        }\r\n      },\r\n\r\n      getVM() {\r\n        return this\r\n      },\r\n\r\n      /** 辅助方法：动态构造Tooltip的Props，防止出现不消失的情况 */\r\n      buildTooltipProps(row, col, id) {\r\n        let {notPassedIds, tooltips} = this\r\n        let props = {\r\n          title: (tooltips[id] || {}).title,\r\n          placement: 'top',\r\n          autoAdjustOverflow: true,\r\n          getPopupContainer: this.getParentContainer,\r\n          class: {\r\n            'j-check-failed': false\r\n          },\r\n        }\r\n        let isCheckFailed = notPassedIds.includes(id)\r\n        if (isCheckFailed) {\r\n          props.class['j-check-failed'] = true\r\n        } else {\r\n          props['visible'] = false\r\n        }\r\n        return props\r\n      },\r\n\r\n      /** 辅助方法：指定a-select 和 j-data 的父容器 */\r\n      getParentContainer(node) {\r\n        let element = (() => {\r\n          // nodeType 8\t: Comment\t: 注释\r\n          if (this.$el && this.$el.nodeType !== 8) {\r\n            return this.$el\r\n          }\r\n          let doc = document.getElementById(this.caseId + 'inputTable')\r\n          if (doc != null) {\r\n            return doc\r\n          }\r\n          return node.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode\r\n        })()\r\n\r\n        // 递归判断是否带有 overflow: hidden；的父元素\r\n        const ifParent = (child) => {\r\n          let currentOverflow = null\r\n          if (child['currentStyle']) {\r\n            currentOverflow = child['currentStyle']['overflow']\r\n          } else if (window.getComputedStyle) {\r\n            currentOverflow = window.getComputedStyle(child)['overflow']\r\n          }\r\n          if (currentOverflow != null) {\r\n            if (currentOverflow === 'hidden') {\r\n              // 找到了带有 hidden 的标签，判断它的父级是否还有 hidden，直到遇到完全没有 hidden 或 body 的时候才停止递归\r\n              let temp = ifParent(child.parentNode)\r\n              return temp != null ? temp : child.parentNode\r\n            } else\r\n            // 当前标签没有 hidden ，如果有父级并且父级不是 body 的话就继续递归判断父级\r\n            if (child.parentNode && child.parentNode.tagName.toLocaleLowerCase() !== 'body') {\r\n              return ifParent(child.parentNode)\r\n            } else {\r\n              // 直到 body 都没有遇到有 hidden 的标签\r\n              return null\r\n            }\r\n          } else {\r\n            return child\r\n          }\r\n        }\r\n\r\n        let temp = ifParent(element)\r\n        return (temp != null) ? temp : element\r\n      },\r\n\r\n      /** 辅助方法：替换${...}变量 */\r\n      replaceProps(col, value) {\r\n        if (value && typeof value === 'string') {\r\n          value = value.replace(/\\${title}/g, col.title)\r\n          value = value.replace(/\\${key}/g, col.key)\r\n          value = value.replace(/\\${defaultValue}/g, col.defaultValue)\r\n        }\r\n        return value\r\n      },\r\n\r\n      /** view辅助方法：构建 tr style */\r\n      buildTrStyle(index) {\r\n        return {\r\n          'top': `${rowHeight * index}px`\r\n        }\r\n      },\r\n      /** view辅助方法：构建 td style */\r\n      buildTdStyle(col,isTitle) {\r\n        const isEmptyWidth = (column) => (column.type === FormTypes.hidden || column.width === '0px' || column.width === '0' || column.width === 0)\r\n\r\n        let style = {}\r\n        // 计算宽度\r\n        if (col.width) {\r\n          style['width'] = col.width\r\n        } else if (this.columns) {\r\n          style['width'] = `${(100 - 4 * 2) / (this.columns.filter(column => !isEmptyWidth(column))).length}%`\r\n        } else {\r\n          style['width'] = '120px'\r\n        }\r\n        //update-begin-author:lvdandan date:20201116 for:LOWCOD-984 默认风格功能测试附表样式问题 日期时间控件长度太大\r\n        //是否为标题，如果是时间控件设为200，时间控件的标题设为240 时间\r\n        if(col.type === FormTypes.datetime){\r\n          if(true === isTitle){\r\n            style['width'] = '240px'\r\n          }else{\r\n            style['width'] = '200px'\r\n          }\r\n        }\r\n        //update-end-author:lvdandan date:20201116 for:LOWCOD-984 默认风格功能测试附表样式问题 日期时间控件长度太大\r\n\r\n        // checkbox 居中显示\r\n        let isCheckbox = col.type === FormTypes.checkbox\r\n        if (isCheckbox) {\r\n          style['align-items'] = 'center'\r\n          style['text-align'] = 'center'\r\n          style['padding-left'] = '0'\r\n          style['padding-right'] = '0'\r\n        }\r\n        if (isEmptyWidth(col)) {\r\n          style['padding-left'] = '0'\r\n          style['padding-right'] = '0'\r\n        }\r\n        return style\r\n      },\r\n      /** view辅助方法：构造props */\r\n      buildProps(row, col) {\r\n        let props = {}\r\n        // 解析props\r\n        if (typeof col.props === 'object') {\r\n          for (let prop in col.props) {\r\n            if (col.props.hasOwnProperty(prop)) {\r\n              props[prop] = this.replaceProps(col, col.props[prop])\r\n            }\r\n          }\r\n        }\r\n        // 判断select是否允许输入\r\n        if (col.type === FormTypes.select && (col.allowInput === true || col.allowSearch === true)) {\r\n          props['showSearch'] = true\r\n        }\r\n\r\n        // 判断是否是禁用的列\r\n        props['disabled'] = (typeof col['disabled'] === 'boolean' ? col['disabled'] : props['disabled'])\r\n\r\n        // 判断是否为禁用的行\r\n        if (props['disabled'] !== true) {\r\n          props['disabled'] = ((this.disabledRowIds || []).indexOf(row.id) !== -1)\r\n        }\r\n\r\n        // 判断是否禁用全部组件\r\n        if (this.disabled === true) {\r\n          props['disabled'] = true\r\n        }\r\n\r\n        return props\r\n      },\r\n\r\n      /** 辅助方法：防止过快点击，如果点击过快的话就返回 true */\r\n      checkTooFastClick(key = 'default', ms = 300) {\r\n        let nowTime = Date.now()\r\n        let lastTime = this.lastPushTimeMap.get(key)\r\n        if (!lastTime) {\r\n          lastTime = nowTime\r\n          this.lastPushTimeMap.set(key, nowTime)\r\n          return false\r\n        }\r\n        let diffTime = nowTime - lastTime\r\n        if (diffTime <= ms) {\r\n          this.$message.warn('你点击的太快了，请慢点点击!')\r\n          return true\r\n        }\r\n        this.lastPushTimeMap.set(key, nowTime)\r\n        return false\r\n      },\r\n\r\n      /** upload 辅助方法：获取 headers */\r\n      uploadGetHeaders(row, column) {\r\n        let headers = {}\r\n        if (column.token === true) {\r\n          headers['X-Access-Token'] = this.accessToken\r\n        }\r\n        return headers\r\n      },\r\n      /** 上传请求地址 */\r\n      getUploadAction(value) {\r\n        if (!value) {\r\n          return window._CONFIG['domianURL'] + '/sys/common/upload'\r\n        } else {\r\n          return value\r\n        }\r\n      },\r\n      /** 预览图片地址 */\r\n      getCellImageView(id) {\r\n        let currUploadObj = this.uploadValues[id] || null\r\n        if (currUploadObj) {\r\n          if(currUploadObj['url']){\r\n            return currUploadObj['url'];\r\n          }else if(currUploadObj['path']){\r\n            let readpath = currUploadObj['path'].split(',')[0]\r\n            return getFileAccessHttpUrl(readpath)\r\n          }\r\n        }\r\n        return ''\r\n      },\r\n      /** popup回调 */\r\n      popupCallback(value, others, id, row, column, index) {\r\n        // 存储输入的值\r\n        let popupValue = value\r\n        if (others) {\r\n          let rowKey = this.getCleanId(row.id)\r\n          let setValueItem = {rowKey, values: {}}\r\n          Object.keys(others).forEach(key => {\r\n            // 当前列直接赋值，其他列通过setValues赋值\r\n            if (key === column.key) {\r\n              popupValue = others[key]\r\n            } else {\r\n              setValueItem.values[key] = others[key]\r\n            }\r\n          })\r\n          if (Object.keys(setValueItem).length > 0) {\r\n            this.setValues([setValueItem])\r\n          }\r\n        }\r\n        this.setOneValue(this.popupValues, id, popupValue)\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n        // 触发valueChange 事件\r\n        this.elemValueChange('input', row, column, value)\r\n      },\r\n      /** popup输入框回显 */\r\n      getPopupValue(id) {\r\n        return this.popupValues[id]\r\n      },\r\n      handleRadioChange(value, id, row, column) {\r\n        this.radioValues = this.bindValuesChange(value, id, 'radioValues')\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n        // 触发valueChange 事件\r\n        this.elemValueChange(FormTypes.radio, row, column, value)\r\n      },\r\n      handleMultiSelectChange(value, id, row, column) {\r\n        this.multiSelectValues = this.bindValuesChange(value, id, 'multiSelectValues')\r\n        // 做单个表单验证\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n        // 触发valueChange 事件\r\n        this.elemValueChange(FormTypes.list_multi, row, column, value)\r\n      },\r\n      handleSearchSelectChange(value, id, row, column) {\r\n        this.searchSelectValues = this.bindValuesChange(value, id, 'searchSelectValues')\r\n        this.validateOneInput(value, row, column, this.notPassedIds, true, 'change')\r\n        this.elemValueChange(FormTypes.sel_search, row, column, value)\r\n      },\r\n      filterOption(input, option) {\r\n        return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      },\r\n      getEllipsisWord(content, len){\r\n        if(!content || content.length === 0){\r\n          return ''\r\n        }\r\n        if(content.length>len){\r\n          return content.substr(0,len)\r\n        }\r\n        return content;\r\n      },\r\n\r\n      /* --------------------------- 2020年5月18日 默认span模式 ------------------------------ */\r\n\r\n      /** 获取Select等组件翻译后的文本 */\r\n      getSelectTranslateText(value, row, col) {\r\n        // 翻译支持单选和多选（数组、逗号分割）\r\n        return filterDictText(col.options, value)\r\n      },\r\n\r\n      // 判定当前行是否是正在编辑的\r\n      isEditRow(row, col) {\r\n        if (this.alwaysEdit) {\r\n          return true\r\n        }\r\n        let current = this.currentEditRows[row.id]\r\n        return !!(current && current[col.key] === true)\r\n      },\r\n\r\n      /* ---- 事件监听 ---- */\r\n\r\n      // 鼠标弹起事件，用于清空输入状态\r\n      handleMouseup(event) {\r\n        if (this.alwaysEdit || Object.keys(this.currentEditRows).length === 0) {\r\n          return\r\n        }\r\n        // console.log(this.caseId + 'handleMouseup: ', event)\r\n        let {target} = event\r\n        if (!target){\r\n          return\r\n        }\r\n        let className = target.className || ''\r\n        if (typeof className === 'string') {\r\n          // 点击的标签是span\r\n          if (className.includes('j-td-span') && className.includes('no-edit')) {\r\n            return\r\n          }\r\n          // 点击的标签是下拉\r\n          if (className.includes('ant-select-dropdown-menu-item')) {\r\n            return\r\n          }\r\n        }\r\n\r\n        // 事件冒泡路径\r\n        let path = getEventPath(event)\r\n        for (let p of path) {\r\n          // 如果点击的是 tr 就不处理（tr单独处理）\r\n          if ((p.id || '').startsWith(`${this.caseId}tbody-tr`)) {\r\n            return\r\n          }\r\n          let pClassName = p.className || ''\r\n          pClassName = typeof pClassName === 'string' ? pClassName : pClassName.toString()\r\n\r\n          /* --- 特殊处理以下组件，点击以下标签时不清空编辑状态 --- */\r\n\r\n          // 点击的标签是JInputPop\r\n          if (pClassName.includes('j-input-pop')) {\r\n            return\r\n          }\r\n          // 点击的标签是JPopup的弹出层\r\n          if (pClassName.includes('j-popup-modal')) {\r\n            return\r\n          }\r\n          // 点击的标签是日期选择器的弹出层\r\n          if (pClassName.includes('j-date-picker') || pClassName.includes('ant-calendar-picker-container')) {\r\n            return\r\n          }\r\n\r\n        }\r\n        // 清空编辑状态\r\n        this.currentEditRows = {}\r\n      },\r\n\r\n      // 添加事件监听\r\n      addEventListener() {\r\n        window.addEventListener('mouseup', this.handleMouseup)\r\n      },\r\n      // 移除事件监听\r\n      removeEventListener() {\r\n        window.removeEventListener('mouseup', this.handleMouseup)\r\n      },\r\n\r\n      /* --------------------------- 2020年5月18日 默认span模式 ------------------------------ */\r\n\r\n\r\n    },\r\n    beforeDestroy() {\r\n      this.removeEventListener()\r\n      this.destroyCleanGroupRequest = true\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n  .action-button {\r\n    margin-bottom: 8px;\r\n\r\n    .gap {\r\n      padding-left: 8px;\r\n    }\r\n\r\n  }\r\n\r\n  /* 设定边框参数 */\r\n  @borderColor: #e8e8e8;\r\n  @border: 1px solid @borderColor;\r\n  /* tr & td 之间的间距 */\r\n  @spacing: 8px;\r\n\r\n  .input-table {\r\n    max-width: 100%;\r\n    overflow-x: hidden;\r\n    overflow-y: hidden;\r\n    position: relative;\r\n    border: @border;\r\n\r\n    .thead, .tbody {\r\n\r\n      .tr, .td {\r\n        display: flex;\r\n      }\r\n\r\n      .td {\r\n\r\n        /*border-right: 1px solid red;*/\r\n        /*color: white;*/\r\n        /*background-color: black;*/\r\n        /*margin-right: @spacing !important;*/\r\n\r\n        padding-left: @spacing;\r\n        flex-direction: column;\r\n\r\n        &.td-cb, &.td-num {\r\n          width: 45px;\r\n          min-width: 45px;\r\n          max-width: 50px;\r\n          margin-right: 0;\r\n          padding-left: 0;\r\n          padding-right: 0;\r\n          justify-content: center;\r\n          align-items: center;\r\n        }\r\n\r\n        &.td-ds {\r\n          width: 30px;\r\n          min-width: 30px;\r\n          max-width: 35px;\r\n          margin-right: 0;\r\n          padding-left: 0;\r\n          padding-right: 0;\r\n          justify-content: center;\r\n          align-items: center;\r\n\r\n          .td-ds-icons {\r\n            position: relative;\r\n            cursor: move;\r\n            width: 100%;\r\n            /*padding: 25% 0;*/\r\n            height: 100%;\r\n\r\n            .anticon-align-left,\r\n            .anticon-align-right {\r\n              position: absolute;\r\n              top: 30%;\r\n            }\r\n\r\n            .anticon-align-left {\r\n              left: 25%;\r\n            }\r\n\r\n            .anticon-align-right {\r\n              right: 25%;\r\n            }\r\n          }\r\n\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    .thead {\r\n      overflow-y: scroll;\r\n      overflow-x: hidden;\r\n      border-bottom: @border;\r\n\r\n      /** 隐藏thead的滑块   */\r\n\r\n      &::-webkit-scrollbar-thumb {\r\n        box-shadow: none !important;\r\n        background-color: transparent !important;\r\n      }\r\n\r\n      .tr {\r\n        min-width: 100%;\r\n        overflow-y: scroll;\r\n      }\r\n\r\n      .td {\r\n        /*flex: 1;*/\r\n        padding: 8px @spacing;\r\n        justify-content: center;\r\n      }\r\n\r\n    }\r\n\r\n    .tbody {\r\n      position: relative;\r\n      top: 0;\r\n      left: 0;\r\n      overflow-x: hidden;\r\n      overflow-y: hidden;\r\n      min-height: 61px;\r\n      /*max-height: 400px;*/\r\n      min-width: 100%;\r\n\r\n      .tr-nodata {\r\n        color: #999;\r\n        line-height: 61px;\r\n        text-align: center;\r\n      }\r\n\r\n      .tr {\r\n        /*line-height: 50px;*/\r\n\r\n        border-bottom: @border;\r\n        transition: background-color 300ms;\r\n        width: 100%;\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 10;\r\n\r\n        &.tr-checked {\r\n          background-color: #fafafa;\r\n        }\r\n\r\n        &:hover {\r\n          background-color: #E6F7FF;\r\n        }\r\n\r\n      }\r\n\r\n      .tr-expand {\r\n        position: relative;\r\n        z-index: 9;\r\n        background-color: white;\r\n      }\r\n\r\n      .td {\r\n        /*flex: 1;*/\r\n        padding: 14px @spacing 14px 0;\r\n        justify-content: center;\r\n\r\n        &:last-child {\r\n          padding-right: @spacing;\r\n        }\r\n\r\n        input {\r\n          font-variant: tabular-nums;\r\n          box-sizing: border-box;\r\n          margin: 0;\r\n          list-style: none;\r\n          position: relative;\r\n          display: inline-block;\r\n          padding: 4px 11px;\r\n          width: 100%;\r\n          height: 32px;\r\n          font-size: 14px;\r\n          line-height: 1.5;\r\n          color: rgba(0, 0, 0, 0.65);\r\n          background-color: #fff;\r\n          border: 1px solid #d9d9d9;\r\n          border-radius: 4px;\r\n          transition: all 0.3s;\r\n          outline: none;\r\n\r\n          &:hover {\r\n            border-color: #4D90FE\r\n          }\r\n\r\n          &:focus {\r\n            border-color: #40a9ff;\r\n            box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\r\n            border-right-width: 1px !important;\r\n          }\r\n\r\n          &:disabled {\r\n            color: rgba(0, 0, 0, 0.25);\r\n            background: #f5f5f5;\r\n            cursor: not-allowed;\r\n          }\r\n\r\n          /* 设置placeholder的颜色 */\r\n\r\n          &::-webkit-input-placeholder { /* WebKit browsers */\r\n            color: #ccc;\r\n          }\r\n\r\n          &:-moz-placeholder { /* Mozilla Firefox 4 to 18 */\r\n            color: #ccc;\r\n          }\r\n\r\n          &::-moz-placeholder { /* Mozilla Firefox 19+ */\r\n            color: #ccc;\r\n          }\r\n\r\n          &:-ms-input-placeholder { /* Internet Explorer 10+ */\r\n            color: #ccc;\r\n          }\r\n\r\n        }\r\n\r\n        .j-editable-image {\r\n          height: 32px;\r\n          max-width: 100px !important;\r\n          cursor: pointer;\r\n\r\n          &:hover {\r\n            opacity: 0.8;\r\n          }\r\n\r\n          &:active {\r\n            opacity: 0.6;\r\n          }\r\n\r\n        }\r\n\r\n        /* --------------------------- 2020年5月18日 begin 默认span模式 ------------------------------ */\r\n\r\n        label {\r\n          height: 32px;\r\n\r\n          &.ant-checkbox-wrapper {\r\n            height: auto;\r\n          }\r\n        }\r\n\r\n        .j-td-span {\r\n          position: relative;\r\n          padding: 4px 11px;\r\n          border: 1px solid transparent;\r\n          display: inline-block;\r\n          width: 100%;\r\n          max-width: 100%;\r\n          height: 32px;\r\n          cursor: text;\r\n          transition: all 0.3s;\r\n          box-sizing: border-box;\r\n          font-size: 14px;\r\n          line-height: 1.5;\r\n          color: rgba(0, 0, 0, 0.65);\r\n          border-radius: 4px;\r\n          overflow: hidden;\r\n          white-space: nowrap;\r\n          text-overflow: ellipsis;\r\n\r\n          &:hover {\r\n            background-color: white;\r\n          }\r\n\r\n          &.disabled {\r\n            cursor: not-allowed;\r\n\r\n            &:hover {\r\n              color: rgba(0, 0, 0, 0.25);\r\n              background-color: #F5F5F5;\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n        /* --------------------------- 2020年5月18日 end 默认span模式 ------------------------------ */\r\n\r\n        /* --------------------------- 2020年5月28日 begin 新增校验未通过的样式 ------------------------------ */\r\n\r\n        .j-check-failed.j-td-span {\r\n          background-color: rgba(255, 0, 0, 0.05);\r\n\r\n          &:hover {\r\n            background-color: rgba(255, 0, 0, 0.1);\r\n          }\r\n        }\r\n\r\n        .j-check-failed.j-td-span,\r\n        input.j-check-failed,\r\n        .j-check-failed /deep/ input,\r\n        .ant-select.j-check-failed /deep/ .ant-select-selection,\r\n        .ant-upload.j-check-failed /deep/ .ant-btn {\r\n          border-color: red;\r\n          box-shadow: 0 0 0 2px rgba(255, 0, 0, 0.2);\r\n        }\r\n\r\n        /* --------------------------- 2020年5月28日 end 新增校验未通过的样式 ------------------------------ */\r\n\r\n      }\r\n\r\n    }\r\n\r\n    .scroll-view {\r\n      overflow: auto;\r\n      overflow-y: scroll;\r\n    }\r\n\r\n    .thead, .thead .tr, .scroll-view {\r\n      @scrollBarSize: 6px;\r\n      /* 定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/\r\n\r\n      &::-webkit-scrollbar {\r\n        width: @scrollBarSize;\r\n        height: @scrollBarSize;\r\n        background-color: transparent;\r\n      }\r\n\r\n      /* 定义滚动条轨道 */\r\n\r\n      &::-webkit-scrollbar-track {\r\n        background-color: #f0f0f0;\r\n      }\r\n\r\n      /* 定义滑块 */\r\n\r\n      &::-webkit-scrollbar-thumb {\r\n        background-color: #eee;\r\n        box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n\r\n        &:hover {\r\n          background-color: #bbb;\r\n        }\r\n\r\n        &:active {\r\n          background-color: #888;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    .thead .tr {\r\n\r\n      &::-webkit-scrollbar-track {\r\n        background-color: transparent;\r\n      }\r\n\r\n      /* IE模式下隐藏 */\r\n      -ms-overflow-style: none;\r\n      -ms-scroll-chaining: chained;\r\n      -ms-content-zooming: zoom;\r\n      -ms-scroll-rails: none;\r\n      -ms-content-zoom-limit-min: 100%;\r\n      -ms-content-zoom-limit-max: 500%;\r\n      -ms-scroll-snap-type: proximity;\r\n      -ms-scroll-snap-points-x: snapList(100%, 200%, 300%, 400%, 500%);\r\n    }\r\n\r\n  }\r\n\r\n</style>\r\n"]}]}