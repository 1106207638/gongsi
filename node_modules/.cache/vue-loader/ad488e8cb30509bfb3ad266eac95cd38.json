{"remainingRequest":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\src\\components\\jeecg\\dynamic\\JMdEditorDyn.vue?vue&type=style&index=0&id=ad609ba8&scoped=true&lang=less&","dependencies":[{"path":"D:\\vue\\src\\components\\jeecg\\dynamic\\JMdEditorDyn.vue","mtime":1615948814835},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\dist\\cjs.js","mtime":1615952641773},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1615952643260},{"path":"D:\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1615952643158},{"path":"D:\\vue\\node_modules\\less-loader\\dist\\cjs.js","mtime":1615952670554},{"path":"D:\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615952641464},{"path":"D:\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1615952643260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouai1tYXJrZG93bi1lZGl0b3IgewogIC9kZWVwLyAudHVpLWVkaXRvci1kZWZhdWx0VUkgewogICAgLnRlLW1vZGUtc3dpdGNoLAogICAgLnR1aS1zY3JvbGxzeW5jCiAgICB7CiAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7CiAgICB9CiAgfQp9Cgo="},{"version":3,"sources":["JMdEditorDyn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JMdEditorDyn.vue","sourceRoot":"src/components/jeecg/dynamic","sourcesContent":["<template>\r\n  <div class=\"j-markdown-editor\" :id=\"dynamicId\"/>\r\n</template>\r\n\r\n<script>\r\n  import load from './load'\r\n  import { md_js, md_zh_cn_js } from './Resource'\r\n  import defaultOptions from '@/components/jeecg/JMarkdownEditor/default-options.js'\r\n\r\n  export default {\r\n    name: 'JMdEditorDyn',\r\n    props: {\r\n      value: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      id: {\r\n        type: String,\r\n        required: false,\r\n        default() {\r\n          return 'markdown-editor-' + +new Date() + ((Math.random() * 1000).toFixed(0) + '')\r\n        }\r\n      },\r\n      options: {\r\n        type: Object,\r\n        default() {\r\n          return defaultOptions\r\n        }\r\n      },\r\n      mode: {\r\n        type: String,\r\n        default: 'markdown'\r\n      },\r\n      height: {\r\n        type: String,\r\n        required: false,\r\n        default: '300px'\r\n      },\r\n      language: {\r\n        type: String,\r\n        required: false,\r\n        default: 'zh-CN'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        editor: null,\r\n        dynamicId: this.id\r\n      }\r\n    },\r\n    computed: {\r\n      editorOptions() {\r\n        const options = Object.assign({}, defaultOptions, this.options)\r\n        options.initialEditType = this.mode\r\n        options.height = this.height\r\n        options.language = this.language\r\n        return options\r\n      }\r\n    },\r\n    watch: {\r\n      value(newValue, preValue) {\r\n        if (newValue !== preValue && newValue !== this.editor.getMarkdown()) {\r\n          this.editor.setMarkdown(newValue)\r\n        }\r\n      },\r\n      language(val) {\r\n        this.destroyEditor()\r\n        this.initEditor()\r\n      },\r\n      height(newValue) {\r\n        this.editor.height(newValue)\r\n      },\r\n      mode(newValue) {\r\n        this.editor.changeMode(newValue)\r\n      }\r\n    },\r\n    mounted() {\r\n      this.init()\r\n    },\r\n    destroyed() {\r\n      this.destroyEditor()\r\n    },\r\n    methods: {\r\n      init(){\r\n\r\n        this.initEditor()\r\n       /* load(md_js,'',()=>{\r\n          load(md_zh_cn_js,'',()=>{\r\n\r\n          })\r\n        })*/\r\n      },\r\n      initEditor() {\r\n        const Editor = toastui.Editor\r\n        this.editor = new Editor({\r\n          el: document.getElementById(this.dynamicId),\r\n          ...this.editorOptions\r\n        })\r\n        if (this.value) {\r\n          this.editor.setMarkdown(this.value)\r\n        }\r\n        this.editor.on('change', () => {\r\n          this.$emit('change', this.editor.getMarkdown())\r\n        })\r\n      },\r\n      destroyEditor() {\r\n        if (!this.editor) return\r\n        this.editor.off('change')\r\n        this.editor.remove()\r\n      },\r\n      setMarkdown(value) {\r\n        this.editor.setMarkdown(value)\r\n      },\r\n      getMarkdown() {\r\n        return this.editor.getMarkdown()\r\n      },\r\n      setHtml(value) {\r\n        this.editor.setHtml(value)\r\n      },\r\n      getHtml() {\r\n        return this.editor.getHtml()\r\n      }\r\n    },\r\n    model: {\r\n      prop: 'value',\r\n      event: 'change'\r\n    }\r\n  }\r\n</script>\r\n<style scoped lang=\"less\">\r\n\r\n  .j-markdown-editor {\r\n    /deep/ .tui-editor-defaultUI {\r\n      .te-mode-switch,\r\n      .tui-scrollsync\r\n      {\r\n        line-height: 1.5;\r\n      }\r\n    }\r\n  }\r\n\r\n</style>"]}]}